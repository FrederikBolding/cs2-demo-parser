/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("protobufjs/minimal"));

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots["default"] || ($protobuf.roots["default"] = {});
    
    /**
     * EGCBaseMsg enum.
     * @exports EGCBaseMsg
     * @enum {number}
     * @property {number} k_EMsgGCSystemMessage=4001 k_EMsgGCSystemMessage value
     * @property {number} k_EMsgGCReplicateConVars=4002 k_EMsgGCReplicateConVars value
     * @property {number} k_EMsgGCConVarUpdated=4003 k_EMsgGCConVarUpdated value
     * @property {number} k_EMsgGCInQueue=4008 k_EMsgGCInQueue value
     * @property {number} k_EMsgGCInviteToParty=4501 k_EMsgGCInviteToParty value
     * @property {number} k_EMsgGCInvitationCreated=4502 k_EMsgGCInvitationCreated value
     * @property {number} k_EMsgGCPartyInviteResponse=4503 k_EMsgGCPartyInviteResponse value
     * @property {number} k_EMsgGCKickFromParty=4504 k_EMsgGCKickFromParty value
     * @property {number} k_EMsgGCLeaveParty=4505 k_EMsgGCLeaveParty value
     * @property {number} k_EMsgGCServerAvailable=4506 k_EMsgGCServerAvailable value
     * @property {number} k_EMsgGCClientConnectToServer=4507 k_EMsgGCClientConnectToServer value
     * @property {number} k_EMsgGCGameServerInfo=4508 k_EMsgGCGameServerInfo value
     * @property {number} k_EMsgGCError=4509 k_EMsgGCError value
     * @property {number} k_EMsgGCReplay_UploadedToYouTube=4510 k_EMsgGCReplay_UploadedToYouTube value
     * @property {number} k_EMsgGCLANServerAvailable=4511 k_EMsgGCLANServerAvailable value
     */
    $root.EGCBaseMsg = (function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[4001] = "k_EMsgGCSystemMessage"] = 4001;
        values[valuesById[4002] = "k_EMsgGCReplicateConVars"] = 4002;
        values[valuesById[4003] = "k_EMsgGCConVarUpdated"] = 4003;
        values[valuesById[4008] = "k_EMsgGCInQueue"] = 4008;
        values[valuesById[4501] = "k_EMsgGCInviteToParty"] = 4501;
        values[valuesById[4502] = "k_EMsgGCInvitationCreated"] = 4502;
        values[valuesById[4503] = "k_EMsgGCPartyInviteResponse"] = 4503;
        values[valuesById[4504] = "k_EMsgGCKickFromParty"] = 4504;
        values[valuesById[4505] = "k_EMsgGCLeaveParty"] = 4505;
        values[valuesById[4506] = "k_EMsgGCServerAvailable"] = 4506;
        values[valuesById[4507] = "k_EMsgGCClientConnectToServer"] = 4507;
        values[valuesById[4508] = "k_EMsgGCGameServerInfo"] = 4508;
        values[valuesById[4509] = "k_EMsgGCError"] = 4509;
        values[valuesById[4510] = "k_EMsgGCReplay_UploadedToYouTube"] = 4510;
        values[valuesById[4511] = "k_EMsgGCLANServerAvailable"] = 4511;
        return values;
    })();
    
    /**
     * EGCBaseProtoObjectTypes enum.
     * @exports EGCBaseProtoObjectTypes
     * @enum {number}
     * @property {number} k_EProtoObjectPartyInvite=1001 k_EProtoObjectPartyInvite value
     * @property {number} k_EProtoObjectLobbyInvite=1002 k_EProtoObjectLobbyInvite value
     */
    $root.EGCBaseProtoObjectTypes = (function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[1001] = "k_EProtoObjectPartyInvite"] = 1001;
        values[valuesById[1002] = "k_EProtoObjectLobbyInvite"] = 1002;
        return values;
    })();
    
    /**
     * GC_BannedWordType enum.
     * @exports GC_BannedWordType
     * @enum {number}
     * @property {number} GC_BANNED_WORD_DISABLE_WORD=0 GC_BANNED_WORD_DISABLE_WORD value
     * @property {number} GC_BANNED_WORD_ENABLE_WORD=1 GC_BANNED_WORD_ENABLE_WORD value
     */
    $root.GC_BannedWordType = (function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[0] = "GC_BANNED_WORD_DISABLE_WORD"] = 0;
        values[valuesById[1] = "GC_BANNED_WORD_ENABLE_WORD"] = 1;
        return values;
    })();
    
    $root.CGCStorePurchaseInit_LineItem = (function() {
    
        /**
         * Properties of a CGCStorePurchaseInit_LineItem.
         * @exports ICGCStorePurchaseInit_LineItem
         * @interface ICGCStorePurchaseInit_LineItem
         * @property {number|null} [itemDefId] CGCStorePurchaseInit_LineItem itemDefId
         * @property {number|null} [quantity] CGCStorePurchaseInit_LineItem quantity
         * @property {number|null} [costInLocalCurrency] CGCStorePurchaseInit_LineItem costInLocalCurrency
         * @property {number|null} [purchaseType] CGCStorePurchaseInit_LineItem purchaseType
         */
    
        /**
         * Constructs a new CGCStorePurchaseInit_LineItem.
         * @exports CGCStorePurchaseInit_LineItem
         * @classdesc Represents a CGCStorePurchaseInit_LineItem.
         * @implements ICGCStorePurchaseInit_LineItem
         * @constructor
         * @param {ICGCStorePurchaseInit_LineItem=} [properties] Properties to set
         */
        function CGCStorePurchaseInit_LineItem(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCStorePurchaseInit_LineItem itemDefId.
         * @member {number} itemDefId
         * @memberof CGCStorePurchaseInit_LineItem
         * @instance
         */
        CGCStorePurchaseInit_LineItem.prototype.itemDefId = 0;
    
        /**
         * CGCStorePurchaseInit_LineItem quantity.
         * @member {number} quantity
         * @memberof CGCStorePurchaseInit_LineItem
         * @instance
         */
        CGCStorePurchaseInit_LineItem.prototype.quantity = 0;
    
        /**
         * CGCStorePurchaseInit_LineItem costInLocalCurrency.
         * @member {number} costInLocalCurrency
         * @memberof CGCStorePurchaseInit_LineItem
         * @instance
         */
        CGCStorePurchaseInit_LineItem.prototype.costInLocalCurrency = 0;
    
        /**
         * CGCStorePurchaseInit_LineItem purchaseType.
         * @member {number} purchaseType
         * @memberof CGCStorePurchaseInit_LineItem
         * @instance
         */
        CGCStorePurchaseInit_LineItem.prototype.purchaseType = 0;
    
        /**
         * Creates a new CGCStorePurchaseInit_LineItem instance using the specified properties.
         * @function create
         * @memberof CGCStorePurchaseInit_LineItem
         * @static
         * @param {ICGCStorePurchaseInit_LineItem=} [properties] Properties to set
         * @returns {CGCStorePurchaseInit_LineItem} CGCStorePurchaseInit_LineItem instance
         */
        CGCStorePurchaseInit_LineItem.create = function create(properties) {
            return new CGCStorePurchaseInit_LineItem(properties);
        };
    
        /**
         * Encodes the specified CGCStorePurchaseInit_LineItem message. Does not implicitly {@link CGCStorePurchaseInit_LineItem.verify|verify} messages.
         * @function encode
         * @memberof CGCStorePurchaseInit_LineItem
         * @static
         * @param {ICGCStorePurchaseInit_LineItem} message CGCStorePurchaseInit_LineItem message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCStorePurchaseInit_LineItem.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.itemDefId != null && Object.hasOwnProperty.call(message, "itemDefId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.itemDefId);
            if (message.quantity != null && Object.hasOwnProperty.call(message, "quantity"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.quantity);
            if (message.costInLocalCurrency != null && Object.hasOwnProperty.call(message, "costInLocalCurrency"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.costInLocalCurrency);
            if (message.purchaseType != null && Object.hasOwnProperty.call(message, "purchaseType"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.purchaseType);
            return writer;
        };
    
        /**
         * Encodes the specified CGCStorePurchaseInit_LineItem message, length delimited. Does not implicitly {@link CGCStorePurchaseInit_LineItem.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCStorePurchaseInit_LineItem
         * @static
         * @param {ICGCStorePurchaseInit_LineItem} message CGCStorePurchaseInit_LineItem message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCStorePurchaseInit_LineItem.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCStorePurchaseInit_LineItem message from the specified reader or buffer.
         * @function decode
         * @memberof CGCStorePurchaseInit_LineItem
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCStorePurchaseInit_LineItem} CGCStorePurchaseInit_LineItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCStorePurchaseInit_LineItem.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCStorePurchaseInit_LineItem();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.itemDefId = reader.uint32();
                        break;
                    }
                case 2: {
                        message.quantity = reader.uint32();
                        break;
                    }
                case 3: {
                        message.costInLocalCurrency = reader.uint32();
                        break;
                    }
                case 4: {
                        message.purchaseType = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCStorePurchaseInit_LineItem message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCStorePurchaseInit_LineItem
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCStorePurchaseInit_LineItem} CGCStorePurchaseInit_LineItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCStorePurchaseInit_LineItem.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCStorePurchaseInit_LineItem message.
         * @function verify
         * @memberof CGCStorePurchaseInit_LineItem
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCStorePurchaseInit_LineItem.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.itemDefId != null && message.hasOwnProperty("itemDefId"))
                if (!$util.isInteger(message.itemDefId))
                    return "itemDefId: integer expected";
            if (message.quantity != null && message.hasOwnProperty("quantity"))
                if (!$util.isInteger(message.quantity))
                    return "quantity: integer expected";
            if (message.costInLocalCurrency != null && message.hasOwnProperty("costInLocalCurrency"))
                if (!$util.isInteger(message.costInLocalCurrency))
                    return "costInLocalCurrency: integer expected";
            if (message.purchaseType != null && message.hasOwnProperty("purchaseType"))
                if (!$util.isInteger(message.purchaseType))
                    return "purchaseType: integer expected";
            return null;
        };
    
        /**
         * Creates a CGCStorePurchaseInit_LineItem message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCStorePurchaseInit_LineItem
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCStorePurchaseInit_LineItem} CGCStorePurchaseInit_LineItem
         */
        CGCStorePurchaseInit_LineItem.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCStorePurchaseInit_LineItem)
                return object;
            var message = new $root.CGCStorePurchaseInit_LineItem();
            if (object.itemDefId != null)
                message.itemDefId = object.itemDefId >>> 0;
            if (object.quantity != null)
                message.quantity = object.quantity >>> 0;
            if (object.costInLocalCurrency != null)
                message.costInLocalCurrency = object.costInLocalCurrency >>> 0;
            if (object.purchaseType != null)
                message.purchaseType = object.purchaseType >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CGCStorePurchaseInit_LineItem message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCStorePurchaseInit_LineItem
         * @static
         * @param {CGCStorePurchaseInit_LineItem} message CGCStorePurchaseInit_LineItem
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCStorePurchaseInit_LineItem.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.itemDefId = 0;
                object.quantity = 0;
                object.costInLocalCurrency = 0;
                object.purchaseType = 0;
            }
            if (message.itemDefId != null && message.hasOwnProperty("itemDefId"))
                object.itemDefId = message.itemDefId;
            if (message.quantity != null && message.hasOwnProperty("quantity"))
                object.quantity = message.quantity;
            if (message.costInLocalCurrency != null && message.hasOwnProperty("costInLocalCurrency"))
                object.costInLocalCurrency = message.costInLocalCurrency;
            if (message.purchaseType != null && message.hasOwnProperty("purchaseType"))
                object.purchaseType = message.purchaseType;
            return object;
        };
    
        /**
         * Converts this CGCStorePurchaseInit_LineItem to JSON.
         * @function toJSON
         * @memberof CGCStorePurchaseInit_LineItem
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCStorePurchaseInit_LineItem.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCStorePurchaseInit_LineItem
         * @function getTypeUrl
         * @memberof CGCStorePurchaseInit_LineItem
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCStorePurchaseInit_LineItem.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCStorePurchaseInit_LineItem";
        };
    
        return CGCStorePurchaseInit_LineItem;
    })();
    
    $root.CMsgGCStorePurchaseInit = (function() {
    
        /**
         * Properties of a CMsgGCStorePurchaseInit.
         * @exports ICMsgGCStorePurchaseInit
         * @interface ICMsgGCStorePurchaseInit
         * @property {string|null} [country] CMsgGCStorePurchaseInit country
         * @property {number|null} [language] CMsgGCStorePurchaseInit language
         * @property {number|null} [currency] CMsgGCStorePurchaseInit currency
         * @property {Array.<ICGCStorePurchaseInit_LineItem>|null} [lineItems] CMsgGCStorePurchaseInit lineItems
         */
    
        /**
         * Constructs a new CMsgGCStorePurchaseInit.
         * @exports CMsgGCStorePurchaseInit
         * @classdesc Represents a CMsgGCStorePurchaseInit.
         * @implements ICMsgGCStorePurchaseInit
         * @constructor
         * @param {ICMsgGCStorePurchaseInit=} [properties] Properties to set
         */
        function CMsgGCStorePurchaseInit(properties) {
            this.lineItems = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCStorePurchaseInit country.
         * @member {string} country
         * @memberof CMsgGCStorePurchaseInit
         * @instance
         */
        CMsgGCStorePurchaseInit.prototype.country = "";
    
        /**
         * CMsgGCStorePurchaseInit language.
         * @member {number} language
         * @memberof CMsgGCStorePurchaseInit
         * @instance
         */
        CMsgGCStorePurchaseInit.prototype.language = 0;
    
        /**
         * CMsgGCStorePurchaseInit currency.
         * @member {number} currency
         * @memberof CMsgGCStorePurchaseInit
         * @instance
         */
        CMsgGCStorePurchaseInit.prototype.currency = 0;
    
        /**
         * CMsgGCStorePurchaseInit lineItems.
         * @member {Array.<ICGCStorePurchaseInit_LineItem>} lineItems
         * @memberof CMsgGCStorePurchaseInit
         * @instance
         */
        CMsgGCStorePurchaseInit.prototype.lineItems = $util.emptyArray;
    
        /**
         * Creates a new CMsgGCStorePurchaseInit instance using the specified properties.
         * @function create
         * @memberof CMsgGCStorePurchaseInit
         * @static
         * @param {ICMsgGCStorePurchaseInit=} [properties] Properties to set
         * @returns {CMsgGCStorePurchaseInit} CMsgGCStorePurchaseInit instance
         */
        CMsgGCStorePurchaseInit.create = function create(properties) {
            return new CMsgGCStorePurchaseInit(properties);
        };
    
        /**
         * Encodes the specified CMsgGCStorePurchaseInit message. Does not implicitly {@link CMsgGCStorePurchaseInit.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCStorePurchaseInit
         * @static
         * @param {ICMsgGCStorePurchaseInit} message CMsgGCStorePurchaseInit message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCStorePurchaseInit.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.country != null && Object.hasOwnProperty.call(message, "country"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.country);
            if (message.language != null && Object.hasOwnProperty.call(message, "language"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.language);
            if (message.currency != null && Object.hasOwnProperty.call(message, "currency"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.currency);
            if (message.lineItems != null && message.lineItems.length)
                for (var i = 0; i < message.lineItems.length; ++i)
                    $root.CGCStorePurchaseInit_LineItem.encode(message.lineItems[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCStorePurchaseInit message, length delimited. Does not implicitly {@link CMsgGCStorePurchaseInit.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCStorePurchaseInit
         * @static
         * @param {ICMsgGCStorePurchaseInit} message CMsgGCStorePurchaseInit message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCStorePurchaseInit.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCStorePurchaseInit message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCStorePurchaseInit
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCStorePurchaseInit} CMsgGCStorePurchaseInit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCStorePurchaseInit.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCStorePurchaseInit();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.country = reader.string();
                        break;
                    }
                case 2: {
                        message.language = reader.int32();
                        break;
                    }
                case 3: {
                        message.currency = reader.int32();
                        break;
                    }
                case 4: {
                        if (!(message.lineItems && message.lineItems.length))
                            message.lineItems = [];
                        message.lineItems.push($root.CGCStorePurchaseInit_LineItem.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCStorePurchaseInit message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCStorePurchaseInit
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCStorePurchaseInit} CMsgGCStorePurchaseInit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCStorePurchaseInit.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCStorePurchaseInit message.
         * @function verify
         * @memberof CMsgGCStorePurchaseInit
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCStorePurchaseInit.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.country != null && message.hasOwnProperty("country"))
                if (!$util.isString(message.country))
                    return "country: string expected";
            if (message.language != null && message.hasOwnProperty("language"))
                if (!$util.isInteger(message.language))
                    return "language: integer expected";
            if (message.currency != null && message.hasOwnProperty("currency"))
                if (!$util.isInteger(message.currency))
                    return "currency: integer expected";
            if (message.lineItems != null && message.hasOwnProperty("lineItems")) {
                if (!Array.isArray(message.lineItems))
                    return "lineItems: array expected";
                for (var i = 0; i < message.lineItems.length; ++i) {
                    var error = $root.CGCStorePurchaseInit_LineItem.verify(message.lineItems[i]);
                    if (error)
                        return "lineItems." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCStorePurchaseInit message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCStorePurchaseInit
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCStorePurchaseInit} CMsgGCStorePurchaseInit
         */
        CMsgGCStorePurchaseInit.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCStorePurchaseInit)
                return object;
            var message = new $root.CMsgGCStorePurchaseInit();
            if (object.country != null)
                message.country = String(object.country);
            if (object.language != null)
                message.language = object.language | 0;
            if (object.currency != null)
                message.currency = object.currency | 0;
            if (object.lineItems) {
                if (!Array.isArray(object.lineItems))
                    throw TypeError(".CMsgGCStorePurchaseInit.lineItems: array expected");
                message.lineItems = [];
                for (var i = 0; i < object.lineItems.length; ++i) {
                    if (typeof object.lineItems[i] !== "object")
                        throw TypeError(".CMsgGCStorePurchaseInit.lineItems: object expected");
                    message.lineItems[i] = $root.CGCStorePurchaseInit_LineItem.fromObject(object.lineItems[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCStorePurchaseInit message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCStorePurchaseInit
         * @static
         * @param {CMsgGCStorePurchaseInit} message CMsgGCStorePurchaseInit
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCStorePurchaseInit.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.lineItems = [];
            if (options.defaults) {
                object.country = "";
                object.language = 0;
                object.currency = 0;
            }
            if (message.country != null && message.hasOwnProperty("country"))
                object.country = message.country;
            if (message.language != null && message.hasOwnProperty("language"))
                object.language = message.language;
            if (message.currency != null && message.hasOwnProperty("currency"))
                object.currency = message.currency;
            if (message.lineItems && message.lineItems.length) {
                object.lineItems = [];
                for (var j = 0; j < message.lineItems.length; ++j)
                    object.lineItems[j] = $root.CGCStorePurchaseInit_LineItem.toObject(message.lineItems[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgGCStorePurchaseInit to JSON.
         * @function toJSON
         * @memberof CMsgGCStorePurchaseInit
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCStorePurchaseInit.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCStorePurchaseInit
         * @function getTypeUrl
         * @memberof CMsgGCStorePurchaseInit
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCStorePurchaseInit.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCStorePurchaseInit";
        };
    
        return CMsgGCStorePurchaseInit;
    })();
    
    $root.CMsgGCStorePurchaseInitResponse = (function() {
    
        /**
         * Properties of a CMsgGCStorePurchaseInitResponse.
         * @exports ICMsgGCStorePurchaseInitResponse
         * @interface ICMsgGCStorePurchaseInitResponse
         * @property {number|null} [result] CMsgGCStorePurchaseInitResponse result
         * @property {number|Long|null} [txnId] CMsgGCStorePurchaseInitResponse txnId
         * @property {string|null} [url] CMsgGCStorePurchaseInitResponse url
         * @property {Array.<number|Long>|null} [itemIds] CMsgGCStorePurchaseInitResponse itemIds
         */
    
        /**
         * Constructs a new CMsgGCStorePurchaseInitResponse.
         * @exports CMsgGCStorePurchaseInitResponse
         * @classdesc Represents a CMsgGCStorePurchaseInitResponse.
         * @implements ICMsgGCStorePurchaseInitResponse
         * @constructor
         * @param {ICMsgGCStorePurchaseInitResponse=} [properties] Properties to set
         */
        function CMsgGCStorePurchaseInitResponse(properties) {
            this.itemIds = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCStorePurchaseInitResponse result.
         * @member {number} result
         * @memberof CMsgGCStorePurchaseInitResponse
         * @instance
         */
        CMsgGCStorePurchaseInitResponse.prototype.result = 0;
    
        /**
         * CMsgGCStorePurchaseInitResponse txnId.
         * @member {number|Long} txnId
         * @memberof CMsgGCStorePurchaseInitResponse
         * @instance
         */
        CMsgGCStorePurchaseInitResponse.prototype.txnId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgGCStorePurchaseInitResponse url.
         * @member {string} url
         * @memberof CMsgGCStorePurchaseInitResponse
         * @instance
         */
        CMsgGCStorePurchaseInitResponse.prototype.url = "";
    
        /**
         * CMsgGCStorePurchaseInitResponse itemIds.
         * @member {Array.<number|Long>} itemIds
         * @memberof CMsgGCStorePurchaseInitResponse
         * @instance
         */
        CMsgGCStorePurchaseInitResponse.prototype.itemIds = $util.emptyArray;
    
        /**
         * Creates a new CMsgGCStorePurchaseInitResponse instance using the specified properties.
         * @function create
         * @memberof CMsgGCStorePurchaseInitResponse
         * @static
         * @param {ICMsgGCStorePurchaseInitResponse=} [properties] Properties to set
         * @returns {CMsgGCStorePurchaseInitResponse} CMsgGCStorePurchaseInitResponse instance
         */
        CMsgGCStorePurchaseInitResponse.create = function create(properties) {
            return new CMsgGCStorePurchaseInitResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgGCStorePurchaseInitResponse message. Does not implicitly {@link CMsgGCStorePurchaseInitResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCStorePurchaseInitResponse
         * @static
         * @param {ICMsgGCStorePurchaseInitResponse} message CMsgGCStorePurchaseInitResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCStorePurchaseInitResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.result != null && Object.hasOwnProperty.call(message, "result"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.result);
            if (message.txnId != null && Object.hasOwnProperty.call(message, "txnId"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.txnId);
            if (message.url != null && Object.hasOwnProperty.call(message, "url"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.url);
            if (message.itemIds != null && message.itemIds.length)
                for (var i = 0; i < message.itemIds.length; ++i)
                    writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.itemIds[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCStorePurchaseInitResponse message, length delimited. Does not implicitly {@link CMsgGCStorePurchaseInitResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCStorePurchaseInitResponse
         * @static
         * @param {ICMsgGCStorePurchaseInitResponse} message CMsgGCStorePurchaseInitResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCStorePurchaseInitResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCStorePurchaseInitResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCStorePurchaseInitResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCStorePurchaseInitResponse} CMsgGCStorePurchaseInitResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCStorePurchaseInitResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCStorePurchaseInitResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.result = reader.int32();
                        break;
                    }
                case 2: {
                        message.txnId = reader.uint64();
                        break;
                    }
                case 3: {
                        message.url = reader.string();
                        break;
                    }
                case 4: {
                        if (!(message.itemIds && message.itemIds.length))
                            message.itemIds = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.itemIds.push(reader.uint64());
                        } else
                            message.itemIds.push(reader.uint64());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCStorePurchaseInitResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCStorePurchaseInitResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCStorePurchaseInitResponse} CMsgGCStorePurchaseInitResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCStorePurchaseInitResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCStorePurchaseInitResponse message.
         * @function verify
         * @memberof CMsgGCStorePurchaseInitResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCStorePurchaseInitResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.result != null && message.hasOwnProperty("result"))
                if (!$util.isInteger(message.result))
                    return "result: integer expected";
            if (message.txnId != null && message.hasOwnProperty("txnId"))
                if (!$util.isInteger(message.txnId) && !(message.txnId && $util.isInteger(message.txnId.low) && $util.isInteger(message.txnId.high)))
                    return "txnId: integer|Long expected";
            if (message.url != null && message.hasOwnProperty("url"))
                if (!$util.isString(message.url))
                    return "url: string expected";
            if (message.itemIds != null && message.hasOwnProperty("itemIds")) {
                if (!Array.isArray(message.itemIds))
                    return "itemIds: array expected";
                for (var i = 0; i < message.itemIds.length; ++i)
                    if (!$util.isInteger(message.itemIds[i]) && !(message.itemIds[i] && $util.isInteger(message.itemIds[i].low) && $util.isInteger(message.itemIds[i].high)))
                        return "itemIds: integer|Long[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCStorePurchaseInitResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCStorePurchaseInitResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCStorePurchaseInitResponse} CMsgGCStorePurchaseInitResponse
         */
        CMsgGCStorePurchaseInitResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCStorePurchaseInitResponse)
                return object;
            var message = new $root.CMsgGCStorePurchaseInitResponse();
            if (object.result != null)
                message.result = object.result | 0;
            if (object.txnId != null)
                if ($util.Long)
                    (message.txnId = $util.Long.fromValue(object.txnId)).unsigned = true;
                else if (typeof object.txnId === "string")
                    message.txnId = parseInt(object.txnId, 10);
                else if (typeof object.txnId === "number")
                    message.txnId = object.txnId;
                else if (typeof object.txnId === "object")
                    message.txnId = new $util.LongBits(object.txnId.low >>> 0, object.txnId.high >>> 0).toNumber(true);
            if (object.url != null)
                message.url = String(object.url);
            if (object.itemIds) {
                if (!Array.isArray(object.itemIds))
                    throw TypeError(".CMsgGCStorePurchaseInitResponse.itemIds: array expected");
                message.itemIds = [];
                for (var i = 0; i < object.itemIds.length; ++i)
                    if ($util.Long)
                        (message.itemIds[i] = $util.Long.fromValue(object.itemIds[i])).unsigned = true;
                    else if (typeof object.itemIds[i] === "string")
                        message.itemIds[i] = parseInt(object.itemIds[i], 10);
                    else if (typeof object.itemIds[i] === "number")
                        message.itemIds[i] = object.itemIds[i];
                    else if (typeof object.itemIds[i] === "object")
                        message.itemIds[i] = new $util.LongBits(object.itemIds[i].low >>> 0, object.itemIds[i].high >>> 0).toNumber(true);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCStorePurchaseInitResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCStorePurchaseInitResponse
         * @static
         * @param {CMsgGCStorePurchaseInitResponse} message CMsgGCStorePurchaseInitResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCStorePurchaseInitResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.itemIds = [];
            if (options.defaults) {
                object.result = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.txnId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.txnId = options.longs === String ? "0" : 0;
                object.url = "";
            }
            if (message.result != null && message.hasOwnProperty("result"))
                object.result = message.result;
            if (message.txnId != null && message.hasOwnProperty("txnId"))
                if (typeof message.txnId === "number")
                    object.txnId = options.longs === String ? String(message.txnId) : message.txnId;
                else
                    object.txnId = options.longs === String ? $util.Long.prototype.toString.call(message.txnId) : options.longs === Number ? new $util.LongBits(message.txnId.low >>> 0, message.txnId.high >>> 0).toNumber(true) : message.txnId;
            if (message.url != null && message.hasOwnProperty("url"))
                object.url = message.url;
            if (message.itemIds && message.itemIds.length) {
                object.itemIds = [];
                for (var j = 0; j < message.itemIds.length; ++j)
                    if (typeof message.itemIds[j] === "number")
                        object.itemIds[j] = options.longs === String ? String(message.itemIds[j]) : message.itemIds[j];
                    else
                        object.itemIds[j] = options.longs === String ? $util.Long.prototype.toString.call(message.itemIds[j]) : options.longs === Number ? new $util.LongBits(message.itemIds[j].low >>> 0, message.itemIds[j].high >>> 0).toNumber(true) : message.itemIds[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgGCStorePurchaseInitResponse to JSON.
         * @function toJSON
         * @memberof CMsgGCStorePurchaseInitResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCStorePurchaseInitResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCStorePurchaseInitResponse
         * @function getTypeUrl
         * @memberof CMsgGCStorePurchaseInitResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCStorePurchaseInitResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCStorePurchaseInitResponse";
        };
    
        return CMsgGCStorePurchaseInitResponse;
    })();
    
    $root.CSOPartyInvite = (function() {
    
        /**
         * Properties of a CSOPartyInvite.
         * @exports ICSOPartyInvite
         * @interface ICSOPartyInvite
         * @property {number|Long|null} [groupId] CSOPartyInvite groupId
         * @property {number|Long|null} [senderId] CSOPartyInvite senderId
         * @property {string|null} [senderName] CSOPartyInvite senderName
         */
    
        /**
         * Constructs a new CSOPartyInvite.
         * @exports CSOPartyInvite
         * @classdesc Represents a CSOPartyInvite.
         * @implements ICSOPartyInvite
         * @constructor
         * @param {ICSOPartyInvite=} [properties] Properties to set
         */
        function CSOPartyInvite(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOPartyInvite groupId.
         * @member {number|Long} groupId
         * @memberof CSOPartyInvite
         * @instance
         */
        CSOPartyInvite.prototype.groupId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CSOPartyInvite senderId.
         * @member {number|Long} senderId
         * @memberof CSOPartyInvite
         * @instance
         */
        CSOPartyInvite.prototype.senderId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CSOPartyInvite senderName.
         * @member {string} senderName
         * @memberof CSOPartyInvite
         * @instance
         */
        CSOPartyInvite.prototype.senderName = "";
    
        /**
         * Creates a new CSOPartyInvite instance using the specified properties.
         * @function create
         * @memberof CSOPartyInvite
         * @static
         * @param {ICSOPartyInvite=} [properties] Properties to set
         * @returns {CSOPartyInvite} CSOPartyInvite instance
         */
        CSOPartyInvite.create = function create(properties) {
            return new CSOPartyInvite(properties);
        };
    
        /**
         * Encodes the specified CSOPartyInvite message. Does not implicitly {@link CSOPartyInvite.verify|verify} messages.
         * @function encode
         * @memberof CSOPartyInvite
         * @static
         * @param {ICSOPartyInvite} message CSOPartyInvite message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOPartyInvite.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.groupId != null && Object.hasOwnProperty.call(message, "groupId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.groupId);
            if (message.senderId != null && Object.hasOwnProperty.call(message, "senderId"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.senderId);
            if (message.senderName != null && Object.hasOwnProperty.call(message, "senderName"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.senderName);
            return writer;
        };
    
        /**
         * Encodes the specified CSOPartyInvite message, length delimited. Does not implicitly {@link CSOPartyInvite.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOPartyInvite
         * @static
         * @param {ICSOPartyInvite} message CSOPartyInvite message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOPartyInvite.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOPartyInvite message from the specified reader or buffer.
         * @function decode
         * @memberof CSOPartyInvite
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOPartyInvite} CSOPartyInvite
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOPartyInvite.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOPartyInvite();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.groupId = reader.uint64();
                        break;
                    }
                case 2: {
                        message.senderId = reader.fixed64();
                        break;
                    }
                case 3: {
                        message.senderName = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOPartyInvite message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOPartyInvite
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOPartyInvite} CSOPartyInvite
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOPartyInvite.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOPartyInvite message.
         * @function verify
         * @memberof CSOPartyInvite
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOPartyInvite.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.groupId != null && message.hasOwnProperty("groupId"))
                if (!$util.isInteger(message.groupId) && !(message.groupId && $util.isInteger(message.groupId.low) && $util.isInteger(message.groupId.high)))
                    return "groupId: integer|Long expected";
            if (message.senderId != null && message.hasOwnProperty("senderId"))
                if (!$util.isInteger(message.senderId) && !(message.senderId && $util.isInteger(message.senderId.low) && $util.isInteger(message.senderId.high)))
                    return "senderId: integer|Long expected";
            if (message.senderName != null && message.hasOwnProperty("senderName"))
                if (!$util.isString(message.senderName))
                    return "senderName: string expected";
            return null;
        };
    
        /**
         * Creates a CSOPartyInvite message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOPartyInvite
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOPartyInvite} CSOPartyInvite
         */
        CSOPartyInvite.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOPartyInvite)
                return object;
            var message = new $root.CSOPartyInvite();
            if (object.groupId != null)
                if ($util.Long)
                    (message.groupId = $util.Long.fromValue(object.groupId)).unsigned = true;
                else if (typeof object.groupId === "string")
                    message.groupId = parseInt(object.groupId, 10);
                else if (typeof object.groupId === "number")
                    message.groupId = object.groupId;
                else if (typeof object.groupId === "object")
                    message.groupId = new $util.LongBits(object.groupId.low >>> 0, object.groupId.high >>> 0).toNumber(true);
            if (object.senderId != null)
                if ($util.Long)
                    (message.senderId = $util.Long.fromValue(object.senderId)).unsigned = false;
                else if (typeof object.senderId === "string")
                    message.senderId = parseInt(object.senderId, 10);
                else if (typeof object.senderId === "number")
                    message.senderId = object.senderId;
                else if (typeof object.senderId === "object")
                    message.senderId = new $util.LongBits(object.senderId.low >>> 0, object.senderId.high >>> 0).toNumber();
            if (object.senderName != null)
                message.senderName = String(object.senderName);
            return message;
        };
    
        /**
         * Creates a plain object from a CSOPartyInvite message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOPartyInvite
         * @static
         * @param {CSOPartyInvite} message CSOPartyInvite
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOPartyInvite.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.groupId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.groupId = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.senderId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.senderId = options.longs === String ? "0" : 0;
                object.senderName = "";
            }
            if (message.groupId != null && message.hasOwnProperty("groupId"))
                if (typeof message.groupId === "number")
                    object.groupId = options.longs === String ? String(message.groupId) : message.groupId;
                else
                    object.groupId = options.longs === String ? $util.Long.prototype.toString.call(message.groupId) : options.longs === Number ? new $util.LongBits(message.groupId.low >>> 0, message.groupId.high >>> 0).toNumber(true) : message.groupId;
            if (message.senderId != null && message.hasOwnProperty("senderId"))
                if (typeof message.senderId === "number")
                    object.senderId = options.longs === String ? String(message.senderId) : message.senderId;
                else
                    object.senderId = options.longs === String ? $util.Long.prototype.toString.call(message.senderId) : options.longs === Number ? new $util.LongBits(message.senderId.low >>> 0, message.senderId.high >>> 0).toNumber() : message.senderId;
            if (message.senderName != null && message.hasOwnProperty("senderName"))
                object.senderName = message.senderName;
            return object;
        };
    
        /**
         * Converts this CSOPartyInvite to JSON.
         * @function toJSON
         * @memberof CSOPartyInvite
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOPartyInvite.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOPartyInvite
         * @function getTypeUrl
         * @memberof CSOPartyInvite
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOPartyInvite.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOPartyInvite";
        };
    
        return CSOPartyInvite;
    })();
    
    $root.CSOLobbyInvite = (function() {
    
        /**
         * Properties of a CSOLobbyInvite.
         * @exports ICSOLobbyInvite
         * @interface ICSOLobbyInvite
         * @property {number|Long|null} [groupId] CSOLobbyInvite groupId
         * @property {number|Long|null} [senderId] CSOLobbyInvite senderId
         * @property {string|null} [senderName] CSOLobbyInvite senderName
         */
    
        /**
         * Constructs a new CSOLobbyInvite.
         * @exports CSOLobbyInvite
         * @classdesc Represents a CSOLobbyInvite.
         * @implements ICSOLobbyInvite
         * @constructor
         * @param {ICSOLobbyInvite=} [properties] Properties to set
         */
        function CSOLobbyInvite(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOLobbyInvite groupId.
         * @member {number|Long} groupId
         * @memberof CSOLobbyInvite
         * @instance
         */
        CSOLobbyInvite.prototype.groupId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CSOLobbyInvite senderId.
         * @member {number|Long} senderId
         * @memberof CSOLobbyInvite
         * @instance
         */
        CSOLobbyInvite.prototype.senderId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CSOLobbyInvite senderName.
         * @member {string} senderName
         * @memberof CSOLobbyInvite
         * @instance
         */
        CSOLobbyInvite.prototype.senderName = "";
    
        /**
         * Creates a new CSOLobbyInvite instance using the specified properties.
         * @function create
         * @memberof CSOLobbyInvite
         * @static
         * @param {ICSOLobbyInvite=} [properties] Properties to set
         * @returns {CSOLobbyInvite} CSOLobbyInvite instance
         */
        CSOLobbyInvite.create = function create(properties) {
            return new CSOLobbyInvite(properties);
        };
    
        /**
         * Encodes the specified CSOLobbyInvite message. Does not implicitly {@link CSOLobbyInvite.verify|verify} messages.
         * @function encode
         * @memberof CSOLobbyInvite
         * @static
         * @param {ICSOLobbyInvite} message CSOLobbyInvite message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOLobbyInvite.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.groupId != null && Object.hasOwnProperty.call(message, "groupId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.groupId);
            if (message.senderId != null && Object.hasOwnProperty.call(message, "senderId"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.senderId);
            if (message.senderName != null && Object.hasOwnProperty.call(message, "senderName"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.senderName);
            return writer;
        };
    
        /**
         * Encodes the specified CSOLobbyInvite message, length delimited. Does not implicitly {@link CSOLobbyInvite.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOLobbyInvite
         * @static
         * @param {ICSOLobbyInvite} message CSOLobbyInvite message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOLobbyInvite.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOLobbyInvite message from the specified reader or buffer.
         * @function decode
         * @memberof CSOLobbyInvite
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOLobbyInvite} CSOLobbyInvite
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOLobbyInvite.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOLobbyInvite();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.groupId = reader.uint64();
                        break;
                    }
                case 2: {
                        message.senderId = reader.fixed64();
                        break;
                    }
                case 3: {
                        message.senderName = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOLobbyInvite message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOLobbyInvite
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOLobbyInvite} CSOLobbyInvite
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOLobbyInvite.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOLobbyInvite message.
         * @function verify
         * @memberof CSOLobbyInvite
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOLobbyInvite.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.groupId != null && message.hasOwnProperty("groupId"))
                if (!$util.isInteger(message.groupId) && !(message.groupId && $util.isInteger(message.groupId.low) && $util.isInteger(message.groupId.high)))
                    return "groupId: integer|Long expected";
            if (message.senderId != null && message.hasOwnProperty("senderId"))
                if (!$util.isInteger(message.senderId) && !(message.senderId && $util.isInteger(message.senderId.low) && $util.isInteger(message.senderId.high)))
                    return "senderId: integer|Long expected";
            if (message.senderName != null && message.hasOwnProperty("senderName"))
                if (!$util.isString(message.senderName))
                    return "senderName: string expected";
            return null;
        };
    
        /**
         * Creates a CSOLobbyInvite message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOLobbyInvite
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOLobbyInvite} CSOLobbyInvite
         */
        CSOLobbyInvite.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOLobbyInvite)
                return object;
            var message = new $root.CSOLobbyInvite();
            if (object.groupId != null)
                if ($util.Long)
                    (message.groupId = $util.Long.fromValue(object.groupId)).unsigned = true;
                else if (typeof object.groupId === "string")
                    message.groupId = parseInt(object.groupId, 10);
                else if (typeof object.groupId === "number")
                    message.groupId = object.groupId;
                else if (typeof object.groupId === "object")
                    message.groupId = new $util.LongBits(object.groupId.low >>> 0, object.groupId.high >>> 0).toNumber(true);
            if (object.senderId != null)
                if ($util.Long)
                    (message.senderId = $util.Long.fromValue(object.senderId)).unsigned = false;
                else if (typeof object.senderId === "string")
                    message.senderId = parseInt(object.senderId, 10);
                else if (typeof object.senderId === "number")
                    message.senderId = object.senderId;
                else if (typeof object.senderId === "object")
                    message.senderId = new $util.LongBits(object.senderId.low >>> 0, object.senderId.high >>> 0).toNumber();
            if (object.senderName != null)
                message.senderName = String(object.senderName);
            return message;
        };
    
        /**
         * Creates a plain object from a CSOLobbyInvite message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOLobbyInvite
         * @static
         * @param {CSOLobbyInvite} message CSOLobbyInvite
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOLobbyInvite.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.groupId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.groupId = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.senderId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.senderId = options.longs === String ? "0" : 0;
                object.senderName = "";
            }
            if (message.groupId != null && message.hasOwnProperty("groupId"))
                if (typeof message.groupId === "number")
                    object.groupId = options.longs === String ? String(message.groupId) : message.groupId;
                else
                    object.groupId = options.longs === String ? $util.Long.prototype.toString.call(message.groupId) : options.longs === Number ? new $util.LongBits(message.groupId.low >>> 0, message.groupId.high >>> 0).toNumber(true) : message.groupId;
            if (message.senderId != null && message.hasOwnProperty("senderId"))
                if (typeof message.senderId === "number")
                    object.senderId = options.longs === String ? String(message.senderId) : message.senderId;
                else
                    object.senderId = options.longs === String ? $util.Long.prototype.toString.call(message.senderId) : options.longs === Number ? new $util.LongBits(message.senderId.low >>> 0, message.senderId.high >>> 0).toNumber() : message.senderId;
            if (message.senderName != null && message.hasOwnProperty("senderName"))
                object.senderName = message.senderName;
            return object;
        };
    
        /**
         * Converts this CSOLobbyInvite to JSON.
         * @function toJSON
         * @memberof CSOLobbyInvite
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOLobbyInvite.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOLobbyInvite
         * @function getTypeUrl
         * @memberof CSOLobbyInvite
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOLobbyInvite.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOLobbyInvite";
        };
    
        return CSOLobbyInvite;
    })();
    
    $root.CMsgSystemBroadcast = (function() {
    
        /**
         * Properties of a CMsgSystemBroadcast.
         * @exports ICMsgSystemBroadcast
         * @interface ICMsgSystemBroadcast
         * @property {string|null} [message] CMsgSystemBroadcast message
         */
    
        /**
         * Constructs a new CMsgSystemBroadcast.
         * @exports CMsgSystemBroadcast
         * @classdesc Represents a CMsgSystemBroadcast.
         * @implements ICMsgSystemBroadcast
         * @constructor
         * @param {ICMsgSystemBroadcast=} [properties] Properties to set
         */
        function CMsgSystemBroadcast(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgSystemBroadcast message.
         * @member {string} message
         * @memberof CMsgSystemBroadcast
         * @instance
         */
        CMsgSystemBroadcast.prototype.message = "";
    
        /**
         * Creates a new CMsgSystemBroadcast instance using the specified properties.
         * @function create
         * @memberof CMsgSystemBroadcast
         * @static
         * @param {ICMsgSystemBroadcast=} [properties] Properties to set
         * @returns {CMsgSystemBroadcast} CMsgSystemBroadcast instance
         */
        CMsgSystemBroadcast.create = function create(properties) {
            return new CMsgSystemBroadcast(properties);
        };
    
        /**
         * Encodes the specified CMsgSystemBroadcast message. Does not implicitly {@link CMsgSystemBroadcast.verify|verify} messages.
         * @function encode
         * @memberof CMsgSystemBroadcast
         * @static
         * @param {ICMsgSystemBroadcast} message CMsgSystemBroadcast message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSystemBroadcast.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.message);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgSystemBroadcast message, length delimited. Does not implicitly {@link CMsgSystemBroadcast.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgSystemBroadcast
         * @static
         * @param {ICMsgSystemBroadcast} message CMsgSystemBroadcast message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSystemBroadcast.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgSystemBroadcast message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgSystemBroadcast
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgSystemBroadcast} CMsgSystemBroadcast
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSystemBroadcast.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSystemBroadcast();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.message = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgSystemBroadcast message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgSystemBroadcast
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgSystemBroadcast} CMsgSystemBroadcast
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSystemBroadcast.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgSystemBroadcast message.
         * @function verify
         * @memberof CMsgSystemBroadcast
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgSystemBroadcast.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.message != null && message.hasOwnProperty("message"))
                if (!$util.isString(message.message))
                    return "message: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgSystemBroadcast message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgSystemBroadcast
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgSystemBroadcast} CMsgSystemBroadcast
         */
        CMsgSystemBroadcast.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgSystemBroadcast)
                return object;
            var message = new $root.CMsgSystemBroadcast();
            if (object.message != null)
                message.message = String(object.message);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgSystemBroadcast message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgSystemBroadcast
         * @static
         * @param {CMsgSystemBroadcast} message CMsgSystemBroadcast
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgSystemBroadcast.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.message = "";
            if (message.message != null && message.hasOwnProperty("message"))
                object.message = message.message;
            return object;
        };
    
        /**
         * Converts this CMsgSystemBroadcast to JSON.
         * @function toJSON
         * @memberof CMsgSystemBroadcast
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgSystemBroadcast.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgSystemBroadcast
         * @function getTypeUrl
         * @memberof CMsgSystemBroadcast
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgSystemBroadcast.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgSystemBroadcast";
        };
    
        return CMsgSystemBroadcast;
    })();
    
    $root.CMsgInviteToParty = (function() {
    
        /**
         * Properties of a CMsgInviteToParty.
         * @exports ICMsgInviteToParty
         * @interface ICMsgInviteToParty
         * @property {number|Long|null} [steamId] CMsgInviteToParty steamId
         * @property {number|null} [clientVersion] CMsgInviteToParty clientVersion
         * @property {number|null} [teamInvite] CMsgInviteToParty teamInvite
         */
    
        /**
         * Constructs a new CMsgInviteToParty.
         * @exports CMsgInviteToParty
         * @classdesc Represents a CMsgInviteToParty.
         * @implements ICMsgInviteToParty
         * @constructor
         * @param {ICMsgInviteToParty=} [properties] Properties to set
         */
        function CMsgInviteToParty(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgInviteToParty steamId.
         * @member {number|Long} steamId
         * @memberof CMsgInviteToParty
         * @instance
         */
        CMsgInviteToParty.prototype.steamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgInviteToParty clientVersion.
         * @member {number} clientVersion
         * @memberof CMsgInviteToParty
         * @instance
         */
        CMsgInviteToParty.prototype.clientVersion = 0;
    
        /**
         * CMsgInviteToParty teamInvite.
         * @member {number} teamInvite
         * @memberof CMsgInviteToParty
         * @instance
         */
        CMsgInviteToParty.prototype.teamInvite = 0;
    
        /**
         * Creates a new CMsgInviteToParty instance using the specified properties.
         * @function create
         * @memberof CMsgInviteToParty
         * @static
         * @param {ICMsgInviteToParty=} [properties] Properties to set
         * @returns {CMsgInviteToParty} CMsgInviteToParty instance
         */
        CMsgInviteToParty.create = function create(properties) {
            return new CMsgInviteToParty(properties);
        };
    
        /**
         * Encodes the specified CMsgInviteToParty message. Does not implicitly {@link CMsgInviteToParty.verify|verify} messages.
         * @function encode
         * @memberof CMsgInviteToParty
         * @static
         * @param {ICMsgInviteToParty} message CMsgInviteToParty message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgInviteToParty.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamId != null && Object.hasOwnProperty.call(message, "steamId"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamId);
            if (message.clientVersion != null && Object.hasOwnProperty.call(message, "clientVersion"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.clientVersion);
            if (message.teamInvite != null && Object.hasOwnProperty.call(message, "teamInvite"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.teamInvite);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgInviteToParty message, length delimited. Does not implicitly {@link CMsgInviteToParty.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgInviteToParty
         * @static
         * @param {ICMsgInviteToParty} message CMsgInviteToParty message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgInviteToParty.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgInviteToParty message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgInviteToParty
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgInviteToParty} CMsgInviteToParty
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgInviteToParty.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgInviteToParty();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamId = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.clientVersion = reader.uint32();
                        break;
                    }
                case 3: {
                        message.teamInvite = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgInviteToParty message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgInviteToParty
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgInviteToParty} CMsgInviteToParty
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgInviteToParty.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgInviteToParty message.
         * @function verify
         * @memberof CMsgInviteToParty
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgInviteToParty.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (!$util.isInteger(message.steamId) && !(message.steamId && $util.isInteger(message.steamId.low) && $util.isInteger(message.steamId.high)))
                    return "steamId: integer|Long expected";
            if (message.clientVersion != null && message.hasOwnProperty("clientVersion"))
                if (!$util.isInteger(message.clientVersion))
                    return "clientVersion: integer expected";
            if (message.teamInvite != null && message.hasOwnProperty("teamInvite"))
                if (!$util.isInteger(message.teamInvite))
                    return "teamInvite: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgInviteToParty message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgInviteToParty
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgInviteToParty} CMsgInviteToParty
         */
        CMsgInviteToParty.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgInviteToParty)
                return object;
            var message = new $root.CMsgInviteToParty();
            if (object.steamId != null)
                if ($util.Long)
                    (message.steamId = $util.Long.fromValue(object.steamId)).unsigned = false;
                else if (typeof object.steamId === "string")
                    message.steamId = parseInt(object.steamId, 10);
                else if (typeof object.steamId === "number")
                    message.steamId = object.steamId;
                else if (typeof object.steamId === "object")
                    message.steamId = new $util.LongBits(object.steamId.low >>> 0, object.steamId.high >>> 0).toNumber();
            if (object.clientVersion != null)
                message.clientVersion = object.clientVersion >>> 0;
            if (object.teamInvite != null)
                message.teamInvite = object.teamInvite >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgInviteToParty message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgInviteToParty
         * @static
         * @param {CMsgInviteToParty} message CMsgInviteToParty
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgInviteToParty.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamId = options.longs === String ? "0" : 0;
                object.clientVersion = 0;
                object.teamInvite = 0;
            }
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (typeof message.steamId === "number")
                    object.steamId = options.longs === String ? String(message.steamId) : message.steamId;
                else
                    object.steamId = options.longs === String ? $util.Long.prototype.toString.call(message.steamId) : options.longs === Number ? new $util.LongBits(message.steamId.low >>> 0, message.steamId.high >>> 0).toNumber() : message.steamId;
            if (message.clientVersion != null && message.hasOwnProperty("clientVersion"))
                object.clientVersion = message.clientVersion;
            if (message.teamInvite != null && message.hasOwnProperty("teamInvite"))
                object.teamInvite = message.teamInvite;
            return object;
        };
    
        /**
         * Converts this CMsgInviteToParty to JSON.
         * @function toJSON
         * @memberof CMsgInviteToParty
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgInviteToParty.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgInviteToParty
         * @function getTypeUrl
         * @memberof CMsgInviteToParty
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgInviteToParty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgInviteToParty";
        };
    
        return CMsgInviteToParty;
    })();
    
    $root.CMsgInvitationCreated = (function() {
    
        /**
         * Properties of a CMsgInvitationCreated.
         * @exports ICMsgInvitationCreated
         * @interface ICMsgInvitationCreated
         * @property {number|Long|null} [groupId] CMsgInvitationCreated groupId
         * @property {number|Long|null} [steamId] CMsgInvitationCreated steamId
         */
    
        /**
         * Constructs a new CMsgInvitationCreated.
         * @exports CMsgInvitationCreated
         * @classdesc Represents a CMsgInvitationCreated.
         * @implements ICMsgInvitationCreated
         * @constructor
         * @param {ICMsgInvitationCreated=} [properties] Properties to set
         */
        function CMsgInvitationCreated(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgInvitationCreated groupId.
         * @member {number|Long} groupId
         * @memberof CMsgInvitationCreated
         * @instance
         */
        CMsgInvitationCreated.prototype.groupId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgInvitationCreated steamId.
         * @member {number|Long} steamId
         * @memberof CMsgInvitationCreated
         * @instance
         */
        CMsgInvitationCreated.prototype.steamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgInvitationCreated instance using the specified properties.
         * @function create
         * @memberof CMsgInvitationCreated
         * @static
         * @param {ICMsgInvitationCreated=} [properties] Properties to set
         * @returns {CMsgInvitationCreated} CMsgInvitationCreated instance
         */
        CMsgInvitationCreated.create = function create(properties) {
            return new CMsgInvitationCreated(properties);
        };
    
        /**
         * Encodes the specified CMsgInvitationCreated message. Does not implicitly {@link CMsgInvitationCreated.verify|verify} messages.
         * @function encode
         * @memberof CMsgInvitationCreated
         * @static
         * @param {ICMsgInvitationCreated} message CMsgInvitationCreated message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgInvitationCreated.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.groupId != null && Object.hasOwnProperty.call(message, "groupId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.groupId);
            if (message.steamId != null && Object.hasOwnProperty.call(message, "steamId"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steamId);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgInvitationCreated message, length delimited. Does not implicitly {@link CMsgInvitationCreated.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgInvitationCreated
         * @static
         * @param {ICMsgInvitationCreated} message CMsgInvitationCreated message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgInvitationCreated.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgInvitationCreated message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgInvitationCreated
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgInvitationCreated} CMsgInvitationCreated
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgInvitationCreated.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgInvitationCreated();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.groupId = reader.uint64();
                        break;
                    }
                case 2: {
                        message.steamId = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgInvitationCreated message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgInvitationCreated
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgInvitationCreated} CMsgInvitationCreated
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgInvitationCreated.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgInvitationCreated message.
         * @function verify
         * @memberof CMsgInvitationCreated
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgInvitationCreated.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.groupId != null && message.hasOwnProperty("groupId"))
                if (!$util.isInteger(message.groupId) && !(message.groupId && $util.isInteger(message.groupId.low) && $util.isInteger(message.groupId.high)))
                    return "groupId: integer|Long expected";
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (!$util.isInteger(message.steamId) && !(message.steamId && $util.isInteger(message.steamId.low) && $util.isInteger(message.steamId.high)))
                    return "steamId: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgInvitationCreated message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgInvitationCreated
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgInvitationCreated} CMsgInvitationCreated
         */
        CMsgInvitationCreated.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgInvitationCreated)
                return object;
            var message = new $root.CMsgInvitationCreated();
            if (object.groupId != null)
                if ($util.Long)
                    (message.groupId = $util.Long.fromValue(object.groupId)).unsigned = true;
                else if (typeof object.groupId === "string")
                    message.groupId = parseInt(object.groupId, 10);
                else if (typeof object.groupId === "number")
                    message.groupId = object.groupId;
                else if (typeof object.groupId === "object")
                    message.groupId = new $util.LongBits(object.groupId.low >>> 0, object.groupId.high >>> 0).toNumber(true);
            if (object.steamId != null)
                if ($util.Long)
                    (message.steamId = $util.Long.fromValue(object.steamId)).unsigned = false;
                else if (typeof object.steamId === "string")
                    message.steamId = parseInt(object.steamId, 10);
                else if (typeof object.steamId === "number")
                    message.steamId = object.steamId;
                else if (typeof object.steamId === "object")
                    message.steamId = new $util.LongBits(object.steamId.low >>> 0, object.steamId.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgInvitationCreated message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgInvitationCreated
         * @static
         * @param {CMsgInvitationCreated} message CMsgInvitationCreated
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgInvitationCreated.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.groupId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.groupId = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamId = options.longs === String ? "0" : 0;
            }
            if (message.groupId != null && message.hasOwnProperty("groupId"))
                if (typeof message.groupId === "number")
                    object.groupId = options.longs === String ? String(message.groupId) : message.groupId;
                else
                    object.groupId = options.longs === String ? $util.Long.prototype.toString.call(message.groupId) : options.longs === Number ? new $util.LongBits(message.groupId.low >>> 0, message.groupId.high >>> 0).toNumber(true) : message.groupId;
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (typeof message.steamId === "number")
                    object.steamId = options.longs === String ? String(message.steamId) : message.steamId;
                else
                    object.steamId = options.longs === String ? $util.Long.prototype.toString.call(message.steamId) : options.longs === Number ? new $util.LongBits(message.steamId.low >>> 0, message.steamId.high >>> 0).toNumber() : message.steamId;
            return object;
        };
    
        /**
         * Converts this CMsgInvitationCreated to JSON.
         * @function toJSON
         * @memberof CMsgInvitationCreated
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgInvitationCreated.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgInvitationCreated
         * @function getTypeUrl
         * @memberof CMsgInvitationCreated
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgInvitationCreated.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgInvitationCreated";
        };
    
        return CMsgInvitationCreated;
    })();
    
    $root.CMsgPartyInviteResponse = (function() {
    
        /**
         * Properties of a CMsgPartyInviteResponse.
         * @exports ICMsgPartyInviteResponse
         * @interface ICMsgPartyInviteResponse
         * @property {number|Long|null} [partyId] CMsgPartyInviteResponse partyId
         * @property {boolean|null} [accept] CMsgPartyInviteResponse accept
         * @property {number|null} [clientVersion] CMsgPartyInviteResponse clientVersion
         * @property {number|null} [teamInvite] CMsgPartyInviteResponse teamInvite
         */
    
        /**
         * Constructs a new CMsgPartyInviteResponse.
         * @exports CMsgPartyInviteResponse
         * @classdesc Represents a CMsgPartyInviteResponse.
         * @implements ICMsgPartyInviteResponse
         * @constructor
         * @param {ICMsgPartyInviteResponse=} [properties] Properties to set
         */
        function CMsgPartyInviteResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgPartyInviteResponse partyId.
         * @member {number|Long} partyId
         * @memberof CMsgPartyInviteResponse
         * @instance
         */
        CMsgPartyInviteResponse.prototype.partyId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgPartyInviteResponse accept.
         * @member {boolean} accept
         * @memberof CMsgPartyInviteResponse
         * @instance
         */
        CMsgPartyInviteResponse.prototype.accept = false;
    
        /**
         * CMsgPartyInviteResponse clientVersion.
         * @member {number} clientVersion
         * @memberof CMsgPartyInviteResponse
         * @instance
         */
        CMsgPartyInviteResponse.prototype.clientVersion = 0;
    
        /**
         * CMsgPartyInviteResponse teamInvite.
         * @member {number} teamInvite
         * @memberof CMsgPartyInviteResponse
         * @instance
         */
        CMsgPartyInviteResponse.prototype.teamInvite = 0;
    
        /**
         * Creates a new CMsgPartyInviteResponse instance using the specified properties.
         * @function create
         * @memberof CMsgPartyInviteResponse
         * @static
         * @param {ICMsgPartyInviteResponse=} [properties] Properties to set
         * @returns {CMsgPartyInviteResponse} CMsgPartyInviteResponse instance
         */
        CMsgPartyInviteResponse.create = function create(properties) {
            return new CMsgPartyInviteResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgPartyInviteResponse message. Does not implicitly {@link CMsgPartyInviteResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgPartyInviteResponse
         * @static
         * @param {ICMsgPartyInviteResponse} message CMsgPartyInviteResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgPartyInviteResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.partyId != null && Object.hasOwnProperty.call(message, "partyId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.partyId);
            if (message.accept != null && Object.hasOwnProperty.call(message, "accept"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.accept);
            if (message.clientVersion != null && Object.hasOwnProperty.call(message, "clientVersion"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.clientVersion);
            if (message.teamInvite != null && Object.hasOwnProperty.call(message, "teamInvite"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.teamInvite);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgPartyInviteResponse message, length delimited. Does not implicitly {@link CMsgPartyInviteResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgPartyInviteResponse
         * @static
         * @param {ICMsgPartyInviteResponse} message CMsgPartyInviteResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgPartyInviteResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgPartyInviteResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgPartyInviteResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgPartyInviteResponse} CMsgPartyInviteResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgPartyInviteResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgPartyInviteResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.partyId = reader.uint64();
                        break;
                    }
                case 2: {
                        message.accept = reader.bool();
                        break;
                    }
                case 3: {
                        message.clientVersion = reader.uint32();
                        break;
                    }
                case 4: {
                        message.teamInvite = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgPartyInviteResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgPartyInviteResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgPartyInviteResponse} CMsgPartyInviteResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgPartyInviteResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgPartyInviteResponse message.
         * @function verify
         * @memberof CMsgPartyInviteResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgPartyInviteResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.partyId != null && message.hasOwnProperty("partyId"))
                if (!$util.isInteger(message.partyId) && !(message.partyId && $util.isInteger(message.partyId.low) && $util.isInteger(message.partyId.high)))
                    return "partyId: integer|Long expected";
            if (message.accept != null && message.hasOwnProperty("accept"))
                if (typeof message.accept !== "boolean")
                    return "accept: boolean expected";
            if (message.clientVersion != null && message.hasOwnProperty("clientVersion"))
                if (!$util.isInteger(message.clientVersion))
                    return "clientVersion: integer expected";
            if (message.teamInvite != null && message.hasOwnProperty("teamInvite"))
                if (!$util.isInteger(message.teamInvite))
                    return "teamInvite: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgPartyInviteResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgPartyInviteResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgPartyInviteResponse} CMsgPartyInviteResponse
         */
        CMsgPartyInviteResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgPartyInviteResponse)
                return object;
            var message = new $root.CMsgPartyInviteResponse();
            if (object.partyId != null)
                if ($util.Long)
                    (message.partyId = $util.Long.fromValue(object.partyId)).unsigned = true;
                else if (typeof object.partyId === "string")
                    message.partyId = parseInt(object.partyId, 10);
                else if (typeof object.partyId === "number")
                    message.partyId = object.partyId;
                else if (typeof object.partyId === "object")
                    message.partyId = new $util.LongBits(object.partyId.low >>> 0, object.partyId.high >>> 0).toNumber(true);
            if (object.accept != null)
                message.accept = Boolean(object.accept);
            if (object.clientVersion != null)
                message.clientVersion = object.clientVersion >>> 0;
            if (object.teamInvite != null)
                message.teamInvite = object.teamInvite >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgPartyInviteResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgPartyInviteResponse
         * @static
         * @param {CMsgPartyInviteResponse} message CMsgPartyInviteResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgPartyInviteResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.partyId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.partyId = options.longs === String ? "0" : 0;
                object.accept = false;
                object.clientVersion = 0;
                object.teamInvite = 0;
            }
            if (message.partyId != null && message.hasOwnProperty("partyId"))
                if (typeof message.partyId === "number")
                    object.partyId = options.longs === String ? String(message.partyId) : message.partyId;
                else
                    object.partyId = options.longs === String ? $util.Long.prototype.toString.call(message.partyId) : options.longs === Number ? new $util.LongBits(message.partyId.low >>> 0, message.partyId.high >>> 0).toNumber(true) : message.partyId;
            if (message.accept != null && message.hasOwnProperty("accept"))
                object.accept = message.accept;
            if (message.clientVersion != null && message.hasOwnProperty("clientVersion"))
                object.clientVersion = message.clientVersion;
            if (message.teamInvite != null && message.hasOwnProperty("teamInvite"))
                object.teamInvite = message.teamInvite;
            return object;
        };
    
        /**
         * Converts this CMsgPartyInviteResponse to JSON.
         * @function toJSON
         * @memberof CMsgPartyInviteResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgPartyInviteResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgPartyInviteResponse
         * @function getTypeUrl
         * @memberof CMsgPartyInviteResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgPartyInviteResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgPartyInviteResponse";
        };
    
        return CMsgPartyInviteResponse;
    })();
    
    $root.CMsgKickFromParty = (function() {
    
        /**
         * Properties of a CMsgKickFromParty.
         * @exports ICMsgKickFromParty
         * @interface ICMsgKickFromParty
         * @property {number|Long|null} [steamId] CMsgKickFromParty steamId
         */
    
        /**
         * Constructs a new CMsgKickFromParty.
         * @exports CMsgKickFromParty
         * @classdesc Represents a CMsgKickFromParty.
         * @implements ICMsgKickFromParty
         * @constructor
         * @param {ICMsgKickFromParty=} [properties] Properties to set
         */
        function CMsgKickFromParty(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgKickFromParty steamId.
         * @member {number|Long} steamId
         * @memberof CMsgKickFromParty
         * @instance
         */
        CMsgKickFromParty.prototype.steamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgKickFromParty instance using the specified properties.
         * @function create
         * @memberof CMsgKickFromParty
         * @static
         * @param {ICMsgKickFromParty=} [properties] Properties to set
         * @returns {CMsgKickFromParty} CMsgKickFromParty instance
         */
        CMsgKickFromParty.create = function create(properties) {
            return new CMsgKickFromParty(properties);
        };
    
        /**
         * Encodes the specified CMsgKickFromParty message. Does not implicitly {@link CMsgKickFromParty.verify|verify} messages.
         * @function encode
         * @memberof CMsgKickFromParty
         * @static
         * @param {ICMsgKickFromParty} message CMsgKickFromParty message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgKickFromParty.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamId != null && Object.hasOwnProperty.call(message, "steamId"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamId);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgKickFromParty message, length delimited. Does not implicitly {@link CMsgKickFromParty.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgKickFromParty
         * @static
         * @param {ICMsgKickFromParty} message CMsgKickFromParty message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgKickFromParty.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgKickFromParty message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgKickFromParty
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgKickFromParty} CMsgKickFromParty
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgKickFromParty.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgKickFromParty();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamId = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgKickFromParty message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgKickFromParty
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgKickFromParty} CMsgKickFromParty
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgKickFromParty.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgKickFromParty message.
         * @function verify
         * @memberof CMsgKickFromParty
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgKickFromParty.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (!$util.isInteger(message.steamId) && !(message.steamId && $util.isInteger(message.steamId.low) && $util.isInteger(message.steamId.high)))
                    return "steamId: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgKickFromParty message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgKickFromParty
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgKickFromParty} CMsgKickFromParty
         */
        CMsgKickFromParty.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgKickFromParty)
                return object;
            var message = new $root.CMsgKickFromParty();
            if (object.steamId != null)
                if ($util.Long)
                    (message.steamId = $util.Long.fromValue(object.steamId)).unsigned = false;
                else if (typeof object.steamId === "string")
                    message.steamId = parseInt(object.steamId, 10);
                else if (typeof object.steamId === "number")
                    message.steamId = object.steamId;
                else if (typeof object.steamId === "object")
                    message.steamId = new $util.LongBits(object.steamId.low >>> 0, object.steamId.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgKickFromParty message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgKickFromParty
         * @static
         * @param {CMsgKickFromParty} message CMsgKickFromParty
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgKickFromParty.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamId = options.longs === String ? "0" : 0;
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (typeof message.steamId === "number")
                    object.steamId = options.longs === String ? String(message.steamId) : message.steamId;
                else
                    object.steamId = options.longs === String ? $util.Long.prototype.toString.call(message.steamId) : options.longs === Number ? new $util.LongBits(message.steamId.low >>> 0, message.steamId.high >>> 0).toNumber() : message.steamId;
            return object;
        };
    
        /**
         * Converts this CMsgKickFromParty to JSON.
         * @function toJSON
         * @memberof CMsgKickFromParty
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgKickFromParty.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgKickFromParty
         * @function getTypeUrl
         * @memberof CMsgKickFromParty
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgKickFromParty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgKickFromParty";
        };
    
        return CMsgKickFromParty;
    })();
    
    $root.CMsgLeaveParty = (function() {
    
        /**
         * Properties of a CMsgLeaveParty.
         * @exports ICMsgLeaveParty
         * @interface ICMsgLeaveParty
         */
    
        /**
         * Constructs a new CMsgLeaveParty.
         * @exports CMsgLeaveParty
         * @classdesc Represents a CMsgLeaveParty.
         * @implements ICMsgLeaveParty
         * @constructor
         * @param {ICMsgLeaveParty=} [properties] Properties to set
         */
        function CMsgLeaveParty(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CMsgLeaveParty instance using the specified properties.
         * @function create
         * @memberof CMsgLeaveParty
         * @static
         * @param {ICMsgLeaveParty=} [properties] Properties to set
         * @returns {CMsgLeaveParty} CMsgLeaveParty instance
         */
        CMsgLeaveParty.create = function create(properties) {
            return new CMsgLeaveParty(properties);
        };
    
        /**
         * Encodes the specified CMsgLeaveParty message. Does not implicitly {@link CMsgLeaveParty.verify|verify} messages.
         * @function encode
         * @memberof CMsgLeaveParty
         * @static
         * @param {ICMsgLeaveParty} message CMsgLeaveParty message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgLeaveParty.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgLeaveParty message, length delimited. Does not implicitly {@link CMsgLeaveParty.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgLeaveParty
         * @static
         * @param {ICMsgLeaveParty} message CMsgLeaveParty message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgLeaveParty.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgLeaveParty message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgLeaveParty
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgLeaveParty} CMsgLeaveParty
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgLeaveParty.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgLeaveParty();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgLeaveParty message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgLeaveParty
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgLeaveParty} CMsgLeaveParty
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgLeaveParty.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgLeaveParty message.
         * @function verify
         * @memberof CMsgLeaveParty
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgLeaveParty.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CMsgLeaveParty message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgLeaveParty
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgLeaveParty} CMsgLeaveParty
         */
        CMsgLeaveParty.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgLeaveParty)
                return object;
            return new $root.CMsgLeaveParty();
        };
    
        /**
         * Creates a plain object from a CMsgLeaveParty message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgLeaveParty
         * @static
         * @param {CMsgLeaveParty} message CMsgLeaveParty
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgLeaveParty.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CMsgLeaveParty to JSON.
         * @function toJSON
         * @memberof CMsgLeaveParty
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgLeaveParty.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgLeaveParty
         * @function getTypeUrl
         * @memberof CMsgLeaveParty
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgLeaveParty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgLeaveParty";
        };
    
        return CMsgLeaveParty;
    })();
    
    $root.CMsgServerAvailable = (function() {
    
        /**
         * Properties of a CMsgServerAvailable.
         * @exports ICMsgServerAvailable
         * @interface ICMsgServerAvailable
         */
    
        /**
         * Constructs a new CMsgServerAvailable.
         * @exports CMsgServerAvailable
         * @classdesc Represents a CMsgServerAvailable.
         * @implements ICMsgServerAvailable
         * @constructor
         * @param {ICMsgServerAvailable=} [properties] Properties to set
         */
        function CMsgServerAvailable(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CMsgServerAvailable instance using the specified properties.
         * @function create
         * @memberof CMsgServerAvailable
         * @static
         * @param {ICMsgServerAvailable=} [properties] Properties to set
         * @returns {CMsgServerAvailable} CMsgServerAvailable instance
         */
        CMsgServerAvailable.create = function create(properties) {
            return new CMsgServerAvailable(properties);
        };
    
        /**
         * Encodes the specified CMsgServerAvailable message. Does not implicitly {@link CMsgServerAvailable.verify|verify} messages.
         * @function encode
         * @memberof CMsgServerAvailable
         * @static
         * @param {ICMsgServerAvailable} message CMsgServerAvailable message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgServerAvailable.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgServerAvailable message, length delimited. Does not implicitly {@link CMsgServerAvailable.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgServerAvailable
         * @static
         * @param {ICMsgServerAvailable} message CMsgServerAvailable message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgServerAvailable.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgServerAvailable message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgServerAvailable
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgServerAvailable} CMsgServerAvailable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgServerAvailable.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgServerAvailable();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgServerAvailable message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgServerAvailable
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgServerAvailable} CMsgServerAvailable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgServerAvailable.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgServerAvailable message.
         * @function verify
         * @memberof CMsgServerAvailable
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgServerAvailable.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CMsgServerAvailable message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgServerAvailable
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgServerAvailable} CMsgServerAvailable
         */
        CMsgServerAvailable.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgServerAvailable)
                return object;
            return new $root.CMsgServerAvailable();
        };
    
        /**
         * Creates a plain object from a CMsgServerAvailable message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgServerAvailable
         * @static
         * @param {CMsgServerAvailable} message CMsgServerAvailable
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgServerAvailable.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CMsgServerAvailable to JSON.
         * @function toJSON
         * @memberof CMsgServerAvailable
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgServerAvailable.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgServerAvailable
         * @function getTypeUrl
         * @memberof CMsgServerAvailable
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgServerAvailable.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgServerAvailable";
        };
    
        return CMsgServerAvailable;
    })();
    
    $root.CMsgLANServerAvailable = (function() {
    
        /**
         * Properties of a CMsgLANServerAvailable.
         * @exports ICMsgLANServerAvailable
         * @interface ICMsgLANServerAvailable
         * @property {number|Long|null} [lobbyId] CMsgLANServerAvailable lobbyId
         */
    
        /**
         * Constructs a new CMsgLANServerAvailable.
         * @exports CMsgLANServerAvailable
         * @classdesc Represents a CMsgLANServerAvailable.
         * @implements ICMsgLANServerAvailable
         * @constructor
         * @param {ICMsgLANServerAvailable=} [properties] Properties to set
         */
        function CMsgLANServerAvailable(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgLANServerAvailable lobbyId.
         * @member {number|Long} lobbyId
         * @memberof CMsgLANServerAvailable
         * @instance
         */
        CMsgLANServerAvailable.prototype.lobbyId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgLANServerAvailable instance using the specified properties.
         * @function create
         * @memberof CMsgLANServerAvailable
         * @static
         * @param {ICMsgLANServerAvailable=} [properties] Properties to set
         * @returns {CMsgLANServerAvailable} CMsgLANServerAvailable instance
         */
        CMsgLANServerAvailable.create = function create(properties) {
            return new CMsgLANServerAvailable(properties);
        };
    
        /**
         * Encodes the specified CMsgLANServerAvailable message. Does not implicitly {@link CMsgLANServerAvailable.verify|verify} messages.
         * @function encode
         * @memberof CMsgLANServerAvailable
         * @static
         * @param {ICMsgLANServerAvailable} message CMsgLANServerAvailable message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgLANServerAvailable.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.lobbyId != null && Object.hasOwnProperty.call(message, "lobbyId"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.lobbyId);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgLANServerAvailable message, length delimited. Does not implicitly {@link CMsgLANServerAvailable.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgLANServerAvailable
         * @static
         * @param {ICMsgLANServerAvailable} message CMsgLANServerAvailable message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgLANServerAvailable.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgLANServerAvailable message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgLANServerAvailable
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgLANServerAvailable} CMsgLANServerAvailable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgLANServerAvailable.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgLANServerAvailable();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.lobbyId = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgLANServerAvailable message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgLANServerAvailable
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgLANServerAvailable} CMsgLANServerAvailable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgLANServerAvailable.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgLANServerAvailable message.
         * @function verify
         * @memberof CMsgLANServerAvailable
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgLANServerAvailable.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.lobbyId != null && message.hasOwnProperty("lobbyId"))
                if (!$util.isInteger(message.lobbyId) && !(message.lobbyId && $util.isInteger(message.lobbyId.low) && $util.isInteger(message.lobbyId.high)))
                    return "lobbyId: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgLANServerAvailable message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgLANServerAvailable
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgLANServerAvailable} CMsgLANServerAvailable
         */
        CMsgLANServerAvailable.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgLANServerAvailable)
                return object;
            var message = new $root.CMsgLANServerAvailable();
            if (object.lobbyId != null)
                if ($util.Long)
                    (message.lobbyId = $util.Long.fromValue(object.lobbyId)).unsigned = false;
                else if (typeof object.lobbyId === "string")
                    message.lobbyId = parseInt(object.lobbyId, 10);
                else if (typeof object.lobbyId === "number")
                    message.lobbyId = object.lobbyId;
                else if (typeof object.lobbyId === "object")
                    message.lobbyId = new $util.LongBits(object.lobbyId.low >>> 0, object.lobbyId.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgLANServerAvailable message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgLANServerAvailable
         * @static
         * @param {CMsgLANServerAvailable} message CMsgLANServerAvailable
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgLANServerAvailable.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.lobbyId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.lobbyId = options.longs === String ? "0" : 0;
            if (message.lobbyId != null && message.hasOwnProperty("lobbyId"))
                if (typeof message.lobbyId === "number")
                    object.lobbyId = options.longs === String ? String(message.lobbyId) : message.lobbyId;
                else
                    object.lobbyId = options.longs === String ? $util.Long.prototype.toString.call(message.lobbyId) : options.longs === Number ? new $util.LongBits(message.lobbyId.low >>> 0, message.lobbyId.high >>> 0).toNumber() : message.lobbyId;
            return object;
        };
    
        /**
         * Converts this CMsgLANServerAvailable to JSON.
         * @function toJSON
         * @memberof CMsgLANServerAvailable
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgLANServerAvailable.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgLANServerAvailable
         * @function getTypeUrl
         * @memberof CMsgLANServerAvailable
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgLANServerAvailable.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgLANServerAvailable";
        };
    
        return CMsgLANServerAvailable;
    })();
    
    $root.CSOEconGameAccountClient = (function() {
    
        /**
         * Properties of a CSOEconGameAccountClient.
         * @exports ICSOEconGameAccountClient
         * @interface ICSOEconGameAccountClient
         * @property {number|null} [additionalBackpackSlots] CSOEconGameAccountClient additionalBackpackSlots
         * @property {number|null} [bonusXpTimestampRefresh] CSOEconGameAccountClient bonusXpTimestampRefresh
         * @property {number|null} [bonusXpUsedflags] CSOEconGameAccountClient bonusXpUsedflags
         * @property {number|null} [elevatedState] CSOEconGameAccountClient elevatedState
         * @property {number|null} [elevatedTimestamp] CSOEconGameAccountClient elevatedTimestamp
         */
    
        /**
         * Constructs a new CSOEconGameAccountClient.
         * @exports CSOEconGameAccountClient
         * @classdesc Represents a CSOEconGameAccountClient.
         * @implements ICSOEconGameAccountClient
         * @constructor
         * @param {ICSOEconGameAccountClient=} [properties] Properties to set
         */
        function CSOEconGameAccountClient(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOEconGameAccountClient additionalBackpackSlots.
         * @member {number} additionalBackpackSlots
         * @memberof CSOEconGameAccountClient
         * @instance
         */
        CSOEconGameAccountClient.prototype.additionalBackpackSlots = 0;
    
        /**
         * CSOEconGameAccountClient bonusXpTimestampRefresh.
         * @member {number} bonusXpTimestampRefresh
         * @memberof CSOEconGameAccountClient
         * @instance
         */
        CSOEconGameAccountClient.prototype.bonusXpTimestampRefresh = 0;
    
        /**
         * CSOEconGameAccountClient bonusXpUsedflags.
         * @member {number} bonusXpUsedflags
         * @memberof CSOEconGameAccountClient
         * @instance
         */
        CSOEconGameAccountClient.prototype.bonusXpUsedflags = 0;
    
        /**
         * CSOEconGameAccountClient elevatedState.
         * @member {number} elevatedState
         * @memberof CSOEconGameAccountClient
         * @instance
         */
        CSOEconGameAccountClient.prototype.elevatedState = 0;
    
        /**
         * CSOEconGameAccountClient elevatedTimestamp.
         * @member {number} elevatedTimestamp
         * @memberof CSOEconGameAccountClient
         * @instance
         */
        CSOEconGameAccountClient.prototype.elevatedTimestamp = 0;
    
        /**
         * Creates a new CSOEconGameAccountClient instance using the specified properties.
         * @function create
         * @memberof CSOEconGameAccountClient
         * @static
         * @param {ICSOEconGameAccountClient=} [properties] Properties to set
         * @returns {CSOEconGameAccountClient} CSOEconGameAccountClient instance
         */
        CSOEconGameAccountClient.create = function create(properties) {
            return new CSOEconGameAccountClient(properties);
        };
    
        /**
         * Encodes the specified CSOEconGameAccountClient message. Does not implicitly {@link CSOEconGameAccountClient.verify|verify} messages.
         * @function encode
         * @memberof CSOEconGameAccountClient
         * @static
         * @param {ICSOEconGameAccountClient} message CSOEconGameAccountClient message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconGameAccountClient.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.additionalBackpackSlots != null && Object.hasOwnProperty.call(message, "additionalBackpackSlots"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.additionalBackpackSlots);
            if (message.bonusXpTimestampRefresh != null && Object.hasOwnProperty.call(message, "bonusXpTimestampRefresh"))
                writer.uint32(/* id 12, wireType 5 =*/101).fixed32(message.bonusXpTimestampRefresh);
            if (message.bonusXpUsedflags != null && Object.hasOwnProperty.call(message, "bonusXpUsedflags"))
                writer.uint32(/* id 13, wireType 0 =*/104).uint32(message.bonusXpUsedflags);
            if (message.elevatedState != null && Object.hasOwnProperty.call(message, "elevatedState"))
                writer.uint32(/* id 14, wireType 0 =*/112).uint32(message.elevatedState);
            if (message.elevatedTimestamp != null && Object.hasOwnProperty.call(message, "elevatedTimestamp"))
                writer.uint32(/* id 15, wireType 0 =*/120).uint32(message.elevatedTimestamp);
            return writer;
        };
    
        /**
         * Encodes the specified CSOEconGameAccountClient message, length delimited. Does not implicitly {@link CSOEconGameAccountClient.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOEconGameAccountClient
         * @static
         * @param {ICSOEconGameAccountClient} message CSOEconGameAccountClient message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconGameAccountClient.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOEconGameAccountClient message from the specified reader or buffer.
         * @function decode
         * @memberof CSOEconGameAccountClient
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOEconGameAccountClient} CSOEconGameAccountClient
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconGameAccountClient.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOEconGameAccountClient();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.additionalBackpackSlots = reader.uint32();
                        break;
                    }
                case 12: {
                        message.bonusXpTimestampRefresh = reader.fixed32();
                        break;
                    }
                case 13: {
                        message.bonusXpUsedflags = reader.uint32();
                        break;
                    }
                case 14: {
                        message.elevatedState = reader.uint32();
                        break;
                    }
                case 15: {
                        message.elevatedTimestamp = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOEconGameAccountClient message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOEconGameAccountClient
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOEconGameAccountClient} CSOEconGameAccountClient
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconGameAccountClient.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOEconGameAccountClient message.
         * @function verify
         * @memberof CSOEconGameAccountClient
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOEconGameAccountClient.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.additionalBackpackSlots != null && message.hasOwnProperty("additionalBackpackSlots"))
                if (!$util.isInteger(message.additionalBackpackSlots))
                    return "additionalBackpackSlots: integer expected";
            if (message.bonusXpTimestampRefresh != null && message.hasOwnProperty("bonusXpTimestampRefresh"))
                if (!$util.isInteger(message.bonusXpTimestampRefresh))
                    return "bonusXpTimestampRefresh: integer expected";
            if (message.bonusXpUsedflags != null && message.hasOwnProperty("bonusXpUsedflags"))
                if (!$util.isInteger(message.bonusXpUsedflags))
                    return "bonusXpUsedflags: integer expected";
            if (message.elevatedState != null && message.hasOwnProperty("elevatedState"))
                if (!$util.isInteger(message.elevatedState))
                    return "elevatedState: integer expected";
            if (message.elevatedTimestamp != null && message.hasOwnProperty("elevatedTimestamp"))
                if (!$util.isInteger(message.elevatedTimestamp))
                    return "elevatedTimestamp: integer expected";
            return null;
        };
    
        /**
         * Creates a CSOEconGameAccountClient message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOEconGameAccountClient
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOEconGameAccountClient} CSOEconGameAccountClient
         */
        CSOEconGameAccountClient.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOEconGameAccountClient)
                return object;
            var message = new $root.CSOEconGameAccountClient();
            if (object.additionalBackpackSlots != null)
                message.additionalBackpackSlots = object.additionalBackpackSlots >>> 0;
            if (object.bonusXpTimestampRefresh != null)
                message.bonusXpTimestampRefresh = object.bonusXpTimestampRefresh >>> 0;
            if (object.bonusXpUsedflags != null)
                message.bonusXpUsedflags = object.bonusXpUsedflags >>> 0;
            if (object.elevatedState != null)
                message.elevatedState = object.elevatedState >>> 0;
            if (object.elevatedTimestamp != null)
                message.elevatedTimestamp = object.elevatedTimestamp >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CSOEconGameAccountClient message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOEconGameAccountClient
         * @static
         * @param {CSOEconGameAccountClient} message CSOEconGameAccountClient
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOEconGameAccountClient.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.additionalBackpackSlots = 0;
                object.bonusXpTimestampRefresh = 0;
                object.bonusXpUsedflags = 0;
                object.elevatedState = 0;
                object.elevatedTimestamp = 0;
            }
            if (message.additionalBackpackSlots != null && message.hasOwnProperty("additionalBackpackSlots"))
                object.additionalBackpackSlots = message.additionalBackpackSlots;
            if (message.bonusXpTimestampRefresh != null && message.hasOwnProperty("bonusXpTimestampRefresh"))
                object.bonusXpTimestampRefresh = message.bonusXpTimestampRefresh;
            if (message.bonusXpUsedflags != null && message.hasOwnProperty("bonusXpUsedflags"))
                object.bonusXpUsedflags = message.bonusXpUsedflags;
            if (message.elevatedState != null && message.hasOwnProperty("elevatedState"))
                object.elevatedState = message.elevatedState;
            if (message.elevatedTimestamp != null && message.hasOwnProperty("elevatedTimestamp"))
                object.elevatedTimestamp = message.elevatedTimestamp;
            return object;
        };
    
        /**
         * Converts this CSOEconGameAccountClient to JSON.
         * @function toJSON
         * @memberof CSOEconGameAccountClient
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOEconGameAccountClient.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOEconGameAccountClient
         * @function getTypeUrl
         * @memberof CSOEconGameAccountClient
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOEconGameAccountClient.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOEconGameAccountClient";
        };
    
        return CSOEconGameAccountClient;
    })();
    
    $root.CSOItemCriteriaCondition = (function() {
    
        /**
         * Properties of a CSOItemCriteriaCondition.
         * @exports ICSOItemCriteriaCondition
         * @interface ICSOItemCriteriaCondition
         * @property {number|null} [op] CSOItemCriteriaCondition op
         * @property {string|null} [field] CSOItemCriteriaCondition field
         * @property {boolean|null} [required] CSOItemCriteriaCondition required
         * @property {number|null} [floatValue] CSOItemCriteriaCondition floatValue
         * @property {string|null} [stringValue] CSOItemCriteriaCondition stringValue
         */
    
        /**
         * Constructs a new CSOItemCriteriaCondition.
         * @exports CSOItemCriteriaCondition
         * @classdesc Represents a CSOItemCriteriaCondition.
         * @implements ICSOItemCriteriaCondition
         * @constructor
         * @param {ICSOItemCriteriaCondition=} [properties] Properties to set
         */
        function CSOItemCriteriaCondition(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOItemCriteriaCondition op.
         * @member {number} op
         * @memberof CSOItemCriteriaCondition
         * @instance
         */
        CSOItemCriteriaCondition.prototype.op = 0;
    
        /**
         * CSOItemCriteriaCondition field.
         * @member {string} field
         * @memberof CSOItemCriteriaCondition
         * @instance
         */
        CSOItemCriteriaCondition.prototype.field = "";
    
        /**
         * CSOItemCriteriaCondition required.
         * @member {boolean} required
         * @memberof CSOItemCriteriaCondition
         * @instance
         */
        CSOItemCriteriaCondition.prototype.required = false;
    
        /**
         * CSOItemCriteriaCondition floatValue.
         * @member {number} floatValue
         * @memberof CSOItemCriteriaCondition
         * @instance
         */
        CSOItemCriteriaCondition.prototype.floatValue = 0;
    
        /**
         * CSOItemCriteriaCondition stringValue.
         * @member {string} stringValue
         * @memberof CSOItemCriteriaCondition
         * @instance
         */
        CSOItemCriteriaCondition.prototype.stringValue = "";
    
        /**
         * Creates a new CSOItemCriteriaCondition instance using the specified properties.
         * @function create
         * @memberof CSOItemCriteriaCondition
         * @static
         * @param {ICSOItemCriteriaCondition=} [properties] Properties to set
         * @returns {CSOItemCriteriaCondition} CSOItemCriteriaCondition instance
         */
        CSOItemCriteriaCondition.create = function create(properties) {
            return new CSOItemCriteriaCondition(properties);
        };
    
        /**
         * Encodes the specified CSOItemCriteriaCondition message. Does not implicitly {@link CSOItemCriteriaCondition.verify|verify} messages.
         * @function encode
         * @memberof CSOItemCriteriaCondition
         * @static
         * @param {ICSOItemCriteriaCondition} message CSOItemCriteriaCondition message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOItemCriteriaCondition.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.op != null && Object.hasOwnProperty.call(message, "op"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.op);
            if (message.field != null && Object.hasOwnProperty.call(message, "field"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.field);
            if (message.required != null && Object.hasOwnProperty.call(message, "required"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.required);
            if (message.floatValue != null && Object.hasOwnProperty.call(message, "floatValue"))
                writer.uint32(/* id 4, wireType 5 =*/37).float(message.floatValue);
            if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.stringValue);
            return writer;
        };
    
        /**
         * Encodes the specified CSOItemCriteriaCondition message, length delimited. Does not implicitly {@link CSOItemCriteriaCondition.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOItemCriteriaCondition
         * @static
         * @param {ICSOItemCriteriaCondition} message CSOItemCriteriaCondition message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOItemCriteriaCondition.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOItemCriteriaCondition message from the specified reader or buffer.
         * @function decode
         * @memberof CSOItemCriteriaCondition
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOItemCriteriaCondition} CSOItemCriteriaCondition
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOItemCriteriaCondition.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOItemCriteriaCondition();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.op = reader.int32();
                        break;
                    }
                case 2: {
                        message.field = reader.string();
                        break;
                    }
                case 3: {
                        message.required = reader.bool();
                        break;
                    }
                case 4: {
                        message.floatValue = reader.float();
                        break;
                    }
                case 5: {
                        message.stringValue = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOItemCriteriaCondition message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOItemCriteriaCondition
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOItemCriteriaCondition} CSOItemCriteriaCondition
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOItemCriteriaCondition.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOItemCriteriaCondition message.
         * @function verify
         * @memberof CSOItemCriteriaCondition
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOItemCriteriaCondition.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.op != null && message.hasOwnProperty("op"))
                if (!$util.isInteger(message.op))
                    return "op: integer expected";
            if (message.field != null && message.hasOwnProperty("field"))
                if (!$util.isString(message.field))
                    return "field: string expected";
            if (message.required != null && message.hasOwnProperty("required"))
                if (typeof message.required !== "boolean")
                    return "required: boolean expected";
            if (message.floatValue != null && message.hasOwnProperty("floatValue"))
                if (typeof message.floatValue !== "number")
                    return "floatValue: number expected";
            if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                if (!$util.isString(message.stringValue))
                    return "stringValue: string expected";
            return null;
        };
    
        /**
         * Creates a CSOItemCriteriaCondition message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOItemCriteriaCondition
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOItemCriteriaCondition} CSOItemCriteriaCondition
         */
        CSOItemCriteriaCondition.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOItemCriteriaCondition)
                return object;
            var message = new $root.CSOItemCriteriaCondition();
            if (object.op != null)
                message.op = object.op | 0;
            if (object.field != null)
                message.field = String(object.field);
            if (object.required != null)
                message.required = Boolean(object.required);
            if (object.floatValue != null)
                message.floatValue = Number(object.floatValue);
            if (object.stringValue != null)
                message.stringValue = String(object.stringValue);
            return message;
        };
    
        /**
         * Creates a plain object from a CSOItemCriteriaCondition message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOItemCriteriaCondition
         * @static
         * @param {CSOItemCriteriaCondition} message CSOItemCriteriaCondition
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOItemCriteriaCondition.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.op = 0;
                object.field = "";
                object.required = false;
                object.floatValue = 0;
                object.stringValue = "";
            }
            if (message.op != null && message.hasOwnProperty("op"))
                object.op = message.op;
            if (message.field != null && message.hasOwnProperty("field"))
                object.field = message.field;
            if (message.required != null && message.hasOwnProperty("required"))
                object.required = message.required;
            if (message.floatValue != null && message.hasOwnProperty("floatValue"))
                object.floatValue = options.json && !isFinite(message.floatValue) ? String(message.floatValue) : message.floatValue;
            if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                object.stringValue = message.stringValue;
            return object;
        };
    
        /**
         * Converts this CSOItemCriteriaCondition to JSON.
         * @function toJSON
         * @memberof CSOItemCriteriaCondition
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOItemCriteriaCondition.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOItemCriteriaCondition
         * @function getTypeUrl
         * @memberof CSOItemCriteriaCondition
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOItemCriteriaCondition.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOItemCriteriaCondition";
        };
    
        return CSOItemCriteriaCondition;
    })();
    
    $root.CSOItemCriteria = (function() {
    
        /**
         * Properties of a CSOItemCriteria.
         * @exports ICSOItemCriteria
         * @interface ICSOItemCriteria
         * @property {number|null} [itemLevel] CSOItemCriteria itemLevel
         * @property {number|null} [itemQuality] CSOItemCriteria itemQuality
         * @property {boolean|null} [itemLevelSet] CSOItemCriteria itemLevelSet
         * @property {boolean|null} [itemQualitySet] CSOItemCriteria itemQualitySet
         * @property {number|null} [initialInventory] CSOItemCriteria initialInventory
         * @property {number|null} [initialQuantity] CSOItemCriteria initialQuantity
         * @property {boolean|null} [ignoreEnabledFlag] CSOItemCriteria ignoreEnabledFlag
         * @property {Array.<ICSOItemCriteriaCondition>|null} [conditions] CSOItemCriteria conditions
         * @property {number|null} [itemRarity] CSOItemCriteria itemRarity
         * @property {boolean|null} [itemRaritySet] CSOItemCriteria itemRaritySet
         * @property {boolean|null} [recentOnly] CSOItemCriteria recentOnly
         */
    
        /**
         * Constructs a new CSOItemCriteria.
         * @exports CSOItemCriteria
         * @classdesc Represents a CSOItemCriteria.
         * @implements ICSOItemCriteria
         * @constructor
         * @param {ICSOItemCriteria=} [properties] Properties to set
         */
        function CSOItemCriteria(properties) {
            this.conditions = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOItemCriteria itemLevel.
         * @member {number} itemLevel
         * @memberof CSOItemCriteria
         * @instance
         */
        CSOItemCriteria.prototype.itemLevel = 0;
    
        /**
         * CSOItemCriteria itemQuality.
         * @member {number} itemQuality
         * @memberof CSOItemCriteria
         * @instance
         */
        CSOItemCriteria.prototype.itemQuality = 0;
    
        /**
         * CSOItemCriteria itemLevelSet.
         * @member {boolean} itemLevelSet
         * @memberof CSOItemCriteria
         * @instance
         */
        CSOItemCriteria.prototype.itemLevelSet = false;
    
        /**
         * CSOItemCriteria itemQualitySet.
         * @member {boolean} itemQualitySet
         * @memberof CSOItemCriteria
         * @instance
         */
        CSOItemCriteria.prototype.itemQualitySet = false;
    
        /**
         * CSOItemCriteria initialInventory.
         * @member {number} initialInventory
         * @memberof CSOItemCriteria
         * @instance
         */
        CSOItemCriteria.prototype.initialInventory = 0;
    
        /**
         * CSOItemCriteria initialQuantity.
         * @member {number} initialQuantity
         * @memberof CSOItemCriteria
         * @instance
         */
        CSOItemCriteria.prototype.initialQuantity = 0;
    
        /**
         * CSOItemCriteria ignoreEnabledFlag.
         * @member {boolean} ignoreEnabledFlag
         * @memberof CSOItemCriteria
         * @instance
         */
        CSOItemCriteria.prototype.ignoreEnabledFlag = false;
    
        /**
         * CSOItemCriteria conditions.
         * @member {Array.<ICSOItemCriteriaCondition>} conditions
         * @memberof CSOItemCriteria
         * @instance
         */
        CSOItemCriteria.prototype.conditions = $util.emptyArray;
    
        /**
         * CSOItemCriteria itemRarity.
         * @member {number} itemRarity
         * @memberof CSOItemCriteria
         * @instance
         */
        CSOItemCriteria.prototype.itemRarity = 0;
    
        /**
         * CSOItemCriteria itemRaritySet.
         * @member {boolean} itemRaritySet
         * @memberof CSOItemCriteria
         * @instance
         */
        CSOItemCriteria.prototype.itemRaritySet = false;
    
        /**
         * CSOItemCriteria recentOnly.
         * @member {boolean} recentOnly
         * @memberof CSOItemCriteria
         * @instance
         */
        CSOItemCriteria.prototype.recentOnly = false;
    
        /**
         * Creates a new CSOItemCriteria instance using the specified properties.
         * @function create
         * @memberof CSOItemCriteria
         * @static
         * @param {ICSOItemCriteria=} [properties] Properties to set
         * @returns {CSOItemCriteria} CSOItemCriteria instance
         */
        CSOItemCriteria.create = function create(properties) {
            return new CSOItemCriteria(properties);
        };
    
        /**
         * Encodes the specified CSOItemCriteria message. Does not implicitly {@link CSOItemCriteria.verify|verify} messages.
         * @function encode
         * @memberof CSOItemCriteria
         * @static
         * @param {ICSOItemCriteria} message CSOItemCriteria message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOItemCriteria.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.itemLevel != null && Object.hasOwnProperty.call(message, "itemLevel"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.itemLevel);
            if (message.itemQuality != null && Object.hasOwnProperty.call(message, "itemQuality"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.itemQuality);
            if (message.itemLevelSet != null && Object.hasOwnProperty.call(message, "itemLevelSet"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.itemLevelSet);
            if (message.itemQualitySet != null && Object.hasOwnProperty.call(message, "itemQualitySet"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.itemQualitySet);
            if (message.initialInventory != null && Object.hasOwnProperty.call(message, "initialInventory"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.initialInventory);
            if (message.initialQuantity != null && Object.hasOwnProperty.call(message, "initialQuantity"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.initialQuantity);
            if (message.ignoreEnabledFlag != null && Object.hasOwnProperty.call(message, "ignoreEnabledFlag"))
                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.ignoreEnabledFlag);
            if (message.conditions != null && message.conditions.length)
                for (var i = 0; i < message.conditions.length; ++i)
                    $root.CSOItemCriteriaCondition.encode(message.conditions[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
            if (message.itemRarity != null && Object.hasOwnProperty.call(message, "itemRarity"))
                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.itemRarity);
            if (message.itemRaritySet != null && Object.hasOwnProperty.call(message, "itemRaritySet"))
                writer.uint32(/* id 11, wireType 0 =*/88).bool(message.itemRaritySet);
            if (message.recentOnly != null && Object.hasOwnProperty.call(message, "recentOnly"))
                writer.uint32(/* id 12, wireType 0 =*/96).bool(message.recentOnly);
            return writer;
        };
    
        /**
         * Encodes the specified CSOItemCriteria message, length delimited. Does not implicitly {@link CSOItemCriteria.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOItemCriteria
         * @static
         * @param {ICSOItemCriteria} message CSOItemCriteria message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOItemCriteria.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOItemCriteria message from the specified reader or buffer.
         * @function decode
         * @memberof CSOItemCriteria
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOItemCriteria} CSOItemCriteria
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOItemCriteria.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOItemCriteria();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.itemLevel = reader.uint32();
                        break;
                    }
                case 2: {
                        message.itemQuality = reader.int32();
                        break;
                    }
                case 3: {
                        message.itemLevelSet = reader.bool();
                        break;
                    }
                case 4: {
                        message.itemQualitySet = reader.bool();
                        break;
                    }
                case 5: {
                        message.initialInventory = reader.uint32();
                        break;
                    }
                case 6: {
                        message.initialQuantity = reader.uint32();
                        break;
                    }
                case 8: {
                        message.ignoreEnabledFlag = reader.bool();
                        break;
                    }
                case 9: {
                        if (!(message.conditions && message.conditions.length))
                            message.conditions = [];
                        message.conditions.push($root.CSOItemCriteriaCondition.decode(reader, reader.uint32()));
                        break;
                    }
                case 10: {
                        message.itemRarity = reader.int32();
                        break;
                    }
                case 11: {
                        message.itemRaritySet = reader.bool();
                        break;
                    }
                case 12: {
                        message.recentOnly = reader.bool();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOItemCriteria message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOItemCriteria
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOItemCriteria} CSOItemCriteria
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOItemCriteria.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOItemCriteria message.
         * @function verify
         * @memberof CSOItemCriteria
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOItemCriteria.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.itemLevel != null && message.hasOwnProperty("itemLevel"))
                if (!$util.isInteger(message.itemLevel))
                    return "itemLevel: integer expected";
            if (message.itemQuality != null && message.hasOwnProperty("itemQuality"))
                if (!$util.isInteger(message.itemQuality))
                    return "itemQuality: integer expected";
            if (message.itemLevelSet != null && message.hasOwnProperty("itemLevelSet"))
                if (typeof message.itemLevelSet !== "boolean")
                    return "itemLevelSet: boolean expected";
            if (message.itemQualitySet != null && message.hasOwnProperty("itemQualitySet"))
                if (typeof message.itemQualitySet !== "boolean")
                    return "itemQualitySet: boolean expected";
            if (message.initialInventory != null && message.hasOwnProperty("initialInventory"))
                if (!$util.isInteger(message.initialInventory))
                    return "initialInventory: integer expected";
            if (message.initialQuantity != null && message.hasOwnProperty("initialQuantity"))
                if (!$util.isInteger(message.initialQuantity))
                    return "initialQuantity: integer expected";
            if (message.ignoreEnabledFlag != null && message.hasOwnProperty("ignoreEnabledFlag"))
                if (typeof message.ignoreEnabledFlag !== "boolean")
                    return "ignoreEnabledFlag: boolean expected";
            if (message.conditions != null && message.hasOwnProperty("conditions")) {
                if (!Array.isArray(message.conditions))
                    return "conditions: array expected";
                for (var i = 0; i < message.conditions.length; ++i) {
                    var error = $root.CSOItemCriteriaCondition.verify(message.conditions[i]);
                    if (error)
                        return "conditions." + error;
                }
            }
            if (message.itemRarity != null && message.hasOwnProperty("itemRarity"))
                if (!$util.isInteger(message.itemRarity))
                    return "itemRarity: integer expected";
            if (message.itemRaritySet != null && message.hasOwnProperty("itemRaritySet"))
                if (typeof message.itemRaritySet !== "boolean")
                    return "itemRaritySet: boolean expected";
            if (message.recentOnly != null && message.hasOwnProperty("recentOnly"))
                if (typeof message.recentOnly !== "boolean")
                    return "recentOnly: boolean expected";
            return null;
        };
    
        /**
         * Creates a CSOItemCriteria message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOItemCriteria
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOItemCriteria} CSOItemCriteria
         */
        CSOItemCriteria.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOItemCriteria)
                return object;
            var message = new $root.CSOItemCriteria();
            if (object.itemLevel != null)
                message.itemLevel = object.itemLevel >>> 0;
            if (object.itemQuality != null)
                message.itemQuality = object.itemQuality | 0;
            if (object.itemLevelSet != null)
                message.itemLevelSet = Boolean(object.itemLevelSet);
            if (object.itemQualitySet != null)
                message.itemQualitySet = Boolean(object.itemQualitySet);
            if (object.initialInventory != null)
                message.initialInventory = object.initialInventory >>> 0;
            if (object.initialQuantity != null)
                message.initialQuantity = object.initialQuantity >>> 0;
            if (object.ignoreEnabledFlag != null)
                message.ignoreEnabledFlag = Boolean(object.ignoreEnabledFlag);
            if (object.conditions) {
                if (!Array.isArray(object.conditions))
                    throw TypeError(".CSOItemCriteria.conditions: array expected");
                message.conditions = [];
                for (var i = 0; i < object.conditions.length; ++i) {
                    if (typeof object.conditions[i] !== "object")
                        throw TypeError(".CSOItemCriteria.conditions: object expected");
                    message.conditions[i] = $root.CSOItemCriteriaCondition.fromObject(object.conditions[i]);
                }
            }
            if (object.itemRarity != null)
                message.itemRarity = object.itemRarity | 0;
            if (object.itemRaritySet != null)
                message.itemRaritySet = Boolean(object.itemRaritySet);
            if (object.recentOnly != null)
                message.recentOnly = Boolean(object.recentOnly);
            return message;
        };
    
        /**
         * Creates a plain object from a CSOItemCriteria message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOItemCriteria
         * @static
         * @param {CSOItemCriteria} message CSOItemCriteria
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOItemCriteria.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.conditions = [];
            if (options.defaults) {
                object.itemLevel = 0;
                object.itemQuality = 0;
                object.itemLevelSet = false;
                object.itemQualitySet = false;
                object.initialInventory = 0;
                object.initialQuantity = 0;
                object.ignoreEnabledFlag = false;
                object.itemRarity = 0;
                object.itemRaritySet = false;
                object.recentOnly = false;
            }
            if (message.itemLevel != null && message.hasOwnProperty("itemLevel"))
                object.itemLevel = message.itemLevel;
            if (message.itemQuality != null && message.hasOwnProperty("itemQuality"))
                object.itemQuality = message.itemQuality;
            if (message.itemLevelSet != null && message.hasOwnProperty("itemLevelSet"))
                object.itemLevelSet = message.itemLevelSet;
            if (message.itemQualitySet != null && message.hasOwnProperty("itemQualitySet"))
                object.itemQualitySet = message.itemQualitySet;
            if (message.initialInventory != null && message.hasOwnProperty("initialInventory"))
                object.initialInventory = message.initialInventory;
            if (message.initialQuantity != null && message.hasOwnProperty("initialQuantity"))
                object.initialQuantity = message.initialQuantity;
            if (message.ignoreEnabledFlag != null && message.hasOwnProperty("ignoreEnabledFlag"))
                object.ignoreEnabledFlag = message.ignoreEnabledFlag;
            if (message.conditions && message.conditions.length) {
                object.conditions = [];
                for (var j = 0; j < message.conditions.length; ++j)
                    object.conditions[j] = $root.CSOItemCriteriaCondition.toObject(message.conditions[j], options);
            }
            if (message.itemRarity != null && message.hasOwnProperty("itemRarity"))
                object.itemRarity = message.itemRarity;
            if (message.itemRaritySet != null && message.hasOwnProperty("itemRaritySet"))
                object.itemRaritySet = message.itemRaritySet;
            if (message.recentOnly != null && message.hasOwnProperty("recentOnly"))
                object.recentOnly = message.recentOnly;
            return object;
        };
    
        /**
         * Converts this CSOItemCriteria to JSON.
         * @function toJSON
         * @memberof CSOItemCriteria
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOItemCriteria.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOItemCriteria
         * @function getTypeUrl
         * @memberof CSOItemCriteria
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOItemCriteria.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOItemCriteria";
        };
    
        return CSOItemCriteria;
    })();
    
    $root.CSOItemRecipe = (function() {
    
        /**
         * Properties of a CSOItemRecipe.
         * @exports ICSOItemRecipe
         * @interface ICSOItemRecipe
         * @property {number|null} [defIndex] CSOItemRecipe defIndex
         * @property {string|null} [name] CSOItemRecipe name
         * @property {string|null} [nA] CSOItemRecipe nA
         * @property {string|null} [descInputs] CSOItemRecipe descInputs
         * @property {string|null} [descOutputs] CSOItemRecipe descOutputs
         * @property {string|null} [diA] CSOItemRecipe diA
         * @property {string|null} [diB] CSOItemRecipe diB
         * @property {string|null} [diC] CSOItemRecipe diC
         * @property {string|null} [doA] CSOItemRecipe doA
         * @property {string|null} [doB] CSOItemRecipe doB
         * @property {string|null} [doC] CSOItemRecipe doC
         * @property {boolean|null} [requiresAllSameClass] CSOItemRecipe requiresAllSameClass
         * @property {boolean|null} [requiresAllSameSlot] CSOItemRecipe requiresAllSameSlot
         * @property {number|null} [classUsageForOutput] CSOItemRecipe classUsageForOutput
         * @property {number|null} [slotUsageForOutput] CSOItemRecipe slotUsageForOutput
         * @property {number|null} [setForOutput] CSOItemRecipe setForOutput
         * @property {Array.<ICSOItemCriteria>|null} [inputItemsCriteria] CSOItemRecipe inputItemsCriteria
         * @property {Array.<ICSOItemCriteria>|null} [outputItemsCriteria] CSOItemRecipe outputItemsCriteria
         * @property {Array.<number>|null} [inputItemDupeCounts] CSOItemRecipe inputItemDupeCounts
         */
    
        /**
         * Constructs a new CSOItemRecipe.
         * @exports CSOItemRecipe
         * @classdesc Represents a CSOItemRecipe.
         * @implements ICSOItemRecipe
         * @constructor
         * @param {ICSOItemRecipe=} [properties] Properties to set
         */
        function CSOItemRecipe(properties) {
            this.inputItemsCriteria = [];
            this.outputItemsCriteria = [];
            this.inputItemDupeCounts = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOItemRecipe defIndex.
         * @member {number} defIndex
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.defIndex = 0;
    
        /**
         * CSOItemRecipe name.
         * @member {string} name
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.name = "";
    
        /**
         * CSOItemRecipe nA.
         * @member {string} nA
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.nA = "";
    
        /**
         * CSOItemRecipe descInputs.
         * @member {string} descInputs
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.descInputs = "";
    
        /**
         * CSOItemRecipe descOutputs.
         * @member {string} descOutputs
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.descOutputs = "";
    
        /**
         * CSOItemRecipe diA.
         * @member {string} diA
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.diA = "";
    
        /**
         * CSOItemRecipe diB.
         * @member {string} diB
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.diB = "";
    
        /**
         * CSOItemRecipe diC.
         * @member {string} diC
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.diC = "";
    
        /**
         * CSOItemRecipe doA.
         * @member {string} doA
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.doA = "";
    
        /**
         * CSOItemRecipe doB.
         * @member {string} doB
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.doB = "";
    
        /**
         * CSOItemRecipe doC.
         * @member {string} doC
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.doC = "";
    
        /**
         * CSOItemRecipe requiresAllSameClass.
         * @member {boolean} requiresAllSameClass
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.requiresAllSameClass = false;
    
        /**
         * CSOItemRecipe requiresAllSameSlot.
         * @member {boolean} requiresAllSameSlot
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.requiresAllSameSlot = false;
    
        /**
         * CSOItemRecipe classUsageForOutput.
         * @member {number} classUsageForOutput
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.classUsageForOutput = 0;
    
        /**
         * CSOItemRecipe slotUsageForOutput.
         * @member {number} slotUsageForOutput
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.slotUsageForOutput = 0;
    
        /**
         * CSOItemRecipe setForOutput.
         * @member {number} setForOutput
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.setForOutput = 0;
    
        /**
         * CSOItemRecipe inputItemsCriteria.
         * @member {Array.<ICSOItemCriteria>} inputItemsCriteria
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.inputItemsCriteria = $util.emptyArray;
    
        /**
         * CSOItemRecipe outputItemsCriteria.
         * @member {Array.<ICSOItemCriteria>} outputItemsCriteria
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.outputItemsCriteria = $util.emptyArray;
    
        /**
         * CSOItemRecipe inputItemDupeCounts.
         * @member {Array.<number>} inputItemDupeCounts
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.inputItemDupeCounts = $util.emptyArray;
    
        /**
         * Creates a new CSOItemRecipe instance using the specified properties.
         * @function create
         * @memberof CSOItemRecipe
         * @static
         * @param {ICSOItemRecipe=} [properties] Properties to set
         * @returns {CSOItemRecipe} CSOItemRecipe instance
         */
        CSOItemRecipe.create = function create(properties) {
            return new CSOItemRecipe(properties);
        };
    
        /**
         * Encodes the specified CSOItemRecipe message. Does not implicitly {@link CSOItemRecipe.verify|verify} messages.
         * @function encode
         * @memberof CSOItemRecipe
         * @static
         * @param {ICSOItemRecipe} message CSOItemRecipe message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOItemRecipe.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.defIndex != null && Object.hasOwnProperty.call(message, "defIndex"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.defIndex);
            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
            if (message.nA != null && Object.hasOwnProperty.call(message, "nA"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.nA);
            if (message.descInputs != null && Object.hasOwnProperty.call(message, "descInputs"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.descInputs);
            if (message.descOutputs != null && Object.hasOwnProperty.call(message, "descOutputs"))
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.descOutputs);
            if (message.diA != null && Object.hasOwnProperty.call(message, "diA"))
                writer.uint32(/* id 6, wireType 2 =*/50).string(message.diA);
            if (message.diB != null && Object.hasOwnProperty.call(message, "diB"))
                writer.uint32(/* id 7, wireType 2 =*/58).string(message.diB);
            if (message.diC != null && Object.hasOwnProperty.call(message, "diC"))
                writer.uint32(/* id 8, wireType 2 =*/66).string(message.diC);
            if (message.doA != null && Object.hasOwnProperty.call(message, "doA"))
                writer.uint32(/* id 9, wireType 2 =*/74).string(message.doA);
            if (message.doB != null && Object.hasOwnProperty.call(message, "doB"))
                writer.uint32(/* id 10, wireType 2 =*/82).string(message.doB);
            if (message.doC != null && Object.hasOwnProperty.call(message, "doC"))
                writer.uint32(/* id 11, wireType 2 =*/90).string(message.doC);
            if (message.requiresAllSameClass != null && Object.hasOwnProperty.call(message, "requiresAllSameClass"))
                writer.uint32(/* id 12, wireType 0 =*/96).bool(message.requiresAllSameClass);
            if (message.requiresAllSameSlot != null && Object.hasOwnProperty.call(message, "requiresAllSameSlot"))
                writer.uint32(/* id 13, wireType 0 =*/104).bool(message.requiresAllSameSlot);
            if (message.classUsageForOutput != null && Object.hasOwnProperty.call(message, "classUsageForOutput"))
                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.classUsageForOutput);
            if (message.slotUsageForOutput != null && Object.hasOwnProperty.call(message, "slotUsageForOutput"))
                writer.uint32(/* id 15, wireType 0 =*/120).int32(message.slotUsageForOutput);
            if (message.setForOutput != null && Object.hasOwnProperty.call(message, "setForOutput"))
                writer.uint32(/* id 16, wireType 0 =*/128).int32(message.setForOutput);
            if (message.inputItemsCriteria != null && message.inputItemsCriteria.length)
                for (var i = 0; i < message.inputItemsCriteria.length; ++i)
                    $root.CSOItemCriteria.encode(message.inputItemsCriteria[i], writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();
            if (message.outputItemsCriteria != null && message.outputItemsCriteria.length)
                for (var i = 0; i < message.outputItemsCriteria.length; ++i)
                    $root.CSOItemCriteria.encode(message.outputItemsCriteria[i], writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
            if (message.inputItemDupeCounts != null && message.inputItemDupeCounts.length)
                for (var i = 0; i < message.inputItemDupeCounts.length; ++i)
                    writer.uint32(/* id 22, wireType 0 =*/176).uint32(message.inputItemDupeCounts[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CSOItemRecipe message, length delimited. Does not implicitly {@link CSOItemRecipe.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOItemRecipe
         * @static
         * @param {ICSOItemRecipe} message CSOItemRecipe message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOItemRecipe.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOItemRecipe message from the specified reader or buffer.
         * @function decode
         * @memberof CSOItemRecipe
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOItemRecipe} CSOItemRecipe
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOItemRecipe.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOItemRecipe();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.defIndex = reader.uint32();
                        break;
                    }
                case 2: {
                        message.name = reader.string();
                        break;
                    }
                case 3: {
                        message.nA = reader.string();
                        break;
                    }
                case 4: {
                        message.descInputs = reader.string();
                        break;
                    }
                case 5: {
                        message.descOutputs = reader.string();
                        break;
                    }
                case 6: {
                        message.diA = reader.string();
                        break;
                    }
                case 7: {
                        message.diB = reader.string();
                        break;
                    }
                case 8: {
                        message.diC = reader.string();
                        break;
                    }
                case 9: {
                        message.doA = reader.string();
                        break;
                    }
                case 10: {
                        message.doB = reader.string();
                        break;
                    }
                case 11: {
                        message.doC = reader.string();
                        break;
                    }
                case 12: {
                        message.requiresAllSameClass = reader.bool();
                        break;
                    }
                case 13: {
                        message.requiresAllSameSlot = reader.bool();
                        break;
                    }
                case 14: {
                        message.classUsageForOutput = reader.int32();
                        break;
                    }
                case 15: {
                        message.slotUsageForOutput = reader.int32();
                        break;
                    }
                case 16: {
                        message.setForOutput = reader.int32();
                        break;
                    }
                case 20: {
                        if (!(message.inputItemsCriteria && message.inputItemsCriteria.length))
                            message.inputItemsCriteria = [];
                        message.inputItemsCriteria.push($root.CSOItemCriteria.decode(reader, reader.uint32()));
                        break;
                    }
                case 21: {
                        if (!(message.outputItemsCriteria && message.outputItemsCriteria.length))
                            message.outputItemsCriteria = [];
                        message.outputItemsCriteria.push($root.CSOItemCriteria.decode(reader, reader.uint32()));
                        break;
                    }
                case 22: {
                        if (!(message.inputItemDupeCounts && message.inputItemDupeCounts.length))
                            message.inputItemDupeCounts = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.inputItemDupeCounts.push(reader.uint32());
                        } else
                            message.inputItemDupeCounts.push(reader.uint32());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOItemRecipe message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOItemRecipe
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOItemRecipe} CSOItemRecipe
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOItemRecipe.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOItemRecipe message.
         * @function verify
         * @memberof CSOItemRecipe
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOItemRecipe.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.defIndex != null && message.hasOwnProperty("defIndex"))
                if (!$util.isInteger(message.defIndex))
                    return "defIndex: integer expected";
            if (message.name != null && message.hasOwnProperty("name"))
                if (!$util.isString(message.name))
                    return "name: string expected";
            if (message.nA != null && message.hasOwnProperty("nA"))
                if (!$util.isString(message.nA))
                    return "nA: string expected";
            if (message.descInputs != null && message.hasOwnProperty("descInputs"))
                if (!$util.isString(message.descInputs))
                    return "descInputs: string expected";
            if (message.descOutputs != null && message.hasOwnProperty("descOutputs"))
                if (!$util.isString(message.descOutputs))
                    return "descOutputs: string expected";
            if (message.diA != null && message.hasOwnProperty("diA"))
                if (!$util.isString(message.diA))
                    return "diA: string expected";
            if (message.diB != null && message.hasOwnProperty("diB"))
                if (!$util.isString(message.diB))
                    return "diB: string expected";
            if (message.diC != null && message.hasOwnProperty("diC"))
                if (!$util.isString(message.diC))
                    return "diC: string expected";
            if (message.doA != null && message.hasOwnProperty("doA"))
                if (!$util.isString(message.doA))
                    return "doA: string expected";
            if (message.doB != null && message.hasOwnProperty("doB"))
                if (!$util.isString(message.doB))
                    return "doB: string expected";
            if (message.doC != null && message.hasOwnProperty("doC"))
                if (!$util.isString(message.doC))
                    return "doC: string expected";
            if (message.requiresAllSameClass != null && message.hasOwnProperty("requiresAllSameClass"))
                if (typeof message.requiresAllSameClass !== "boolean")
                    return "requiresAllSameClass: boolean expected";
            if (message.requiresAllSameSlot != null && message.hasOwnProperty("requiresAllSameSlot"))
                if (typeof message.requiresAllSameSlot !== "boolean")
                    return "requiresAllSameSlot: boolean expected";
            if (message.classUsageForOutput != null && message.hasOwnProperty("classUsageForOutput"))
                if (!$util.isInteger(message.classUsageForOutput))
                    return "classUsageForOutput: integer expected";
            if (message.slotUsageForOutput != null && message.hasOwnProperty("slotUsageForOutput"))
                if (!$util.isInteger(message.slotUsageForOutput))
                    return "slotUsageForOutput: integer expected";
            if (message.setForOutput != null && message.hasOwnProperty("setForOutput"))
                if (!$util.isInteger(message.setForOutput))
                    return "setForOutput: integer expected";
            if (message.inputItemsCriteria != null && message.hasOwnProperty("inputItemsCriteria")) {
                if (!Array.isArray(message.inputItemsCriteria))
                    return "inputItemsCriteria: array expected";
                for (var i = 0; i < message.inputItemsCriteria.length; ++i) {
                    var error = $root.CSOItemCriteria.verify(message.inputItemsCriteria[i]);
                    if (error)
                        return "inputItemsCriteria." + error;
                }
            }
            if (message.outputItemsCriteria != null && message.hasOwnProperty("outputItemsCriteria")) {
                if (!Array.isArray(message.outputItemsCriteria))
                    return "outputItemsCriteria: array expected";
                for (var i = 0; i < message.outputItemsCriteria.length; ++i) {
                    var error = $root.CSOItemCriteria.verify(message.outputItemsCriteria[i]);
                    if (error)
                        return "outputItemsCriteria." + error;
                }
            }
            if (message.inputItemDupeCounts != null && message.hasOwnProperty("inputItemDupeCounts")) {
                if (!Array.isArray(message.inputItemDupeCounts))
                    return "inputItemDupeCounts: array expected";
                for (var i = 0; i < message.inputItemDupeCounts.length; ++i)
                    if (!$util.isInteger(message.inputItemDupeCounts[i]))
                        return "inputItemDupeCounts: integer[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CSOItemRecipe message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOItemRecipe
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOItemRecipe} CSOItemRecipe
         */
        CSOItemRecipe.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOItemRecipe)
                return object;
            var message = new $root.CSOItemRecipe();
            if (object.defIndex != null)
                message.defIndex = object.defIndex >>> 0;
            if (object.name != null)
                message.name = String(object.name);
            if (object.nA != null)
                message.nA = String(object.nA);
            if (object.descInputs != null)
                message.descInputs = String(object.descInputs);
            if (object.descOutputs != null)
                message.descOutputs = String(object.descOutputs);
            if (object.diA != null)
                message.diA = String(object.diA);
            if (object.diB != null)
                message.diB = String(object.diB);
            if (object.diC != null)
                message.diC = String(object.diC);
            if (object.doA != null)
                message.doA = String(object.doA);
            if (object.doB != null)
                message.doB = String(object.doB);
            if (object.doC != null)
                message.doC = String(object.doC);
            if (object.requiresAllSameClass != null)
                message.requiresAllSameClass = Boolean(object.requiresAllSameClass);
            if (object.requiresAllSameSlot != null)
                message.requiresAllSameSlot = Boolean(object.requiresAllSameSlot);
            if (object.classUsageForOutput != null)
                message.classUsageForOutput = object.classUsageForOutput | 0;
            if (object.slotUsageForOutput != null)
                message.slotUsageForOutput = object.slotUsageForOutput | 0;
            if (object.setForOutput != null)
                message.setForOutput = object.setForOutput | 0;
            if (object.inputItemsCriteria) {
                if (!Array.isArray(object.inputItemsCriteria))
                    throw TypeError(".CSOItemRecipe.inputItemsCriteria: array expected");
                message.inputItemsCriteria = [];
                for (var i = 0; i < object.inputItemsCriteria.length; ++i) {
                    if (typeof object.inputItemsCriteria[i] !== "object")
                        throw TypeError(".CSOItemRecipe.inputItemsCriteria: object expected");
                    message.inputItemsCriteria[i] = $root.CSOItemCriteria.fromObject(object.inputItemsCriteria[i]);
                }
            }
            if (object.outputItemsCriteria) {
                if (!Array.isArray(object.outputItemsCriteria))
                    throw TypeError(".CSOItemRecipe.outputItemsCriteria: array expected");
                message.outputItemsCriteria = [];
                for (var i = 0; i < object.outputItemsCriteria.length; ++i) {
                    if (typeof object.outputItemsCriteria[i] !== "object")
                        throw TypeError(".CSOItemRecipe.outputItemsCriteria: object expected");
                    message.outputItemsCriteria[i] = $root.CSOItemCriteria.fromObject(object.outputItemsCriteria[i]);
                }
            }
            if (object.inputItemDupeCounts) {
                if (!Array.isArray(object.inputItemDupeCounts))
                    throw TypeError(".CSOItemRecipe.inputItemDupeCounts: array expected");
                message.inputItemDupeCounts = [];
                for (var i = 0; i < object.inputItemDupeCounts.length; ++i)
                    message.inputItemDupeCounts[i] = object.inputItemDupeCounts[i] >>> 0;
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CSOItemRecipe message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOItemRecipe
         * @static
         * @param {CSOItemRecipe} message CSOItemRecipe
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOItemRecipe.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.inputItemsCriteria = [];
                object.outputItemsCriteria = [];
                object.inputItemDupeCounts = [];
            }
            if (options.defaults) {
                object.defIndex = 0;
                object.name = "";
                object.nA = "";
                object.descInputs = "";
                object.descOutputs = "";
                object.diA = "";
                object.diB = "";
                object.diC = "";
                object.doA = "";
                object.doB = "";
                object.doC = "";
                object.requiresAllSameClass = false;
                object.requiresAllSameSlot = false;
                object.classUsageForOutput = 0;
                object.slotUsageForOutput = 0;
                object.setForOutput = 0;
            }
            if (message.defIndex != null && message.hasOwnProperty("defIndex"))
                object.defIndex = message.defIndex;
            if (message.name != null && message.hasOwnProperty("name"))
                object.name = message.name;
            if (message.nA != null && message.hasOwnProperty("nA"))
                object.nA = message.nA;
            if (message.descInputs != null && message.hasOwnProperty("descInputs"))
                object.descInputs = message.descInputs;
            if (message.descOutputs != null && message.hasOwnProperty("descOutputs"))
                object.descOutputs = message.descOutputs;
            if (message.diA != null && message.hasOwnProperty("diA"))
                object.diA = message.diA;
            if (message.diB != null && message.hasOwnProperty("diB"))
                object.diB = message.diB;
            if (message.diC != null && message.hasOwnProperty("diC"))
                object.diC = message.diC;
            if (message.doA != null && message.hasOwnProperty("doA"))
                object.doA = message.doA;
            if (message.doB != null && message.hasOwnProperty("doB"))
                object.doB = message.doB;
            if (message.doC != null && message.hasOwnProperty("doC"))
                object.doC = message.doC;
            if (message.requiresAllSameClass != null && message.hasOwnProperty("requiresAllSameClass"))
                object.requiresAllSameClass = message.requiresAllSameClass;
            if (message.requiresAllSameSlot != null && message.hasOwnProperty("requiresAllSameSlot"))
                object.requiresAllSameSlot = message.requiresAllSameSlot;
            if (message.classUsageForOutput != null && message.hasOwnProperty("classUsageForOutput"))
                object.classUsageForOutput = message.classUsageForOutput;
            if (message.slotUsageForOutput != null && message.hasOwnProperty("slotUsageForOutput"))
                object.slotUsageForOutput = message.slotUsageForOutput;
            if (message.setForOutput != null && message.hasOwnProperty("setForOutput"))
                object.setForOutput = message.setForOutput;
            if (message.inputItemsCriteria && message.inputItemsCriteria.length) {
                object.inputItemsCriteria = [];
                for (var j = 0; j < message.inputItemsCriteria.length; ++j)
                    object.inputItemsCriteria[j] = $root.CSOItemCriteria.toObject(message.inputItemsCriteria[j], options);
            }
            if (message.outputItemsCriteria && message.outputItemsCriteria.length) {
                object.outputItemsCriteria = [];
                for (var j = 0; j < message.outputItemsCriteria.length; ++j)
                    object.outputItemsCriteria[j] = $root.CSOItemCriteria.toObject(message.outputItemsCriteria[j], options);
            }
            if (message.inputItemDupeCounts && message.inputItemDupeCounts.length) {
                object.inputItemDupeCounts = [];
                for (var j = 0; j < message.inputItemDupeCounts.length; ++j)
                    object.inputItemDupeCounts[j] = message.inputItemDupeCounts[j];
            }
            return object;
        };
    
        /**
         * Converts this CSOItemRecipe to JSON.
         * @function toJSON
         * @memberof CSOItemRecipe
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOItemRecipe.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOItemRecipe
         * @function getTypeUrl
         * @memberof CSOItemRecipe
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOItemRecipe.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOItemRecipe";
        };
    
        return CSOItemRecipe;
    })();
    
    $root.CMsgDevNewItemRequest = (function() {
    
        /**
         * Properties of a CMsgDevNewItemRequest.
         * @exports ICMsgDevNewItemRequest
         * @interface ICMsgDevNewItemRequest
         * @property {number|Long|null} [receiver] CMsgDevNewItemRequest receiver
         * @property {ICSOItemCriteria|null} [criteria] CMsgDevNewItemRequest criteria
         */
    
        /**
         * Constructs a new CMsgDevNewItemRequest.
         * @exports CMsgDevNewItemRequest
         * @classdesc Represents a CMsgDevNewItemRequest.
         * @implements ICMsgDevNewItemRequest
         * @constructor
         * @param {ICMsgDevNewItemRequest=} [properties] Properties to set
         */
        function CMsgDevNewItemRequest(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgDevNewItemRequest receiver.
         * @member {number|Long} receiver
         * @memberof CMsgDevNewItemRequest
         * @instance
         */
        CMsgDevNewItemRequest.prototype.receiver = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgDevNewItemRequest criteria.
         * @member {ICSOItemCriteria|null|undefined} criteria
         * @memberof CMsgDevNewItemRequest
         * @instance
         */
        CMsgDevNewItemRequest.prototype.criteria = null;
    
        /**
         * Creates a new CMsgDevNewItemRequest instance using the specified properties.
         * @function create
         * @memberof CMsgDevNewItemRequest
         * @static
         * @param {ICMsgDevNewItemRequest=} [properties] Properties to set
         * @returns {CMsgDevNewItemRequest} CMsgDevNewItemRequest instance
         */
        CMsgDevNewItemRequest.create = function create(properties) {
            return new CMsgDevNewItemRequest(properties);
        };
    
        /**
         * Encodes the specified CMsgDevNewItemRequest message. Does not implicitly {@link CMsgDevNewItemRequest.verify|verify} messages.
         * @function encode
         * @memberof CMsgDevNewItemRequest
         * @static
         * @param {ICMsgDevNewItemRequest} message CMsgDevNewItemRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgDevNewItemRequest.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.receiver != null && Object.hasOwnProperty.call(message, "receiver"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.receiver);
            if (message.criteria != null && Object.hasOwnProperty.call(message, "criteria"))
                $root.CSOItemCriteria.encode(message.criteria, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgDevNewItemRequest message, length delimited. Does not implicitly {@link CMsgDevNewItemRequest.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgDevNewItemRequest
         * @static
         * @param {ICMsgDevNewItemRequest} message CMsgDevNewItemRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgDevNewItemRequest.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgDevNewItemRequest message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgDevNewItemRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgDevNewItemRequest} CMsgDevNewItemRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgDevNewItemRequest.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgDevNewItemRequest();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.receiver = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.criteria = $root.CSOItemCriteria.decode(reader, reader.uint32());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgDevNewItemRequest message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgDevNewItemRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgDevNewItemRequest} CMsgDevNewItemRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgDevNewItemRequest.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgDevNewItemRequest message.
         * @function verify
         * @memberof CMsgDevNewItemRequest
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgDevNewItemRequest.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.receiver != null && message.hasOwnProperty("receiver"))
                if (!$util.isInteger(message.receiver) && !(message.receiver && $util.isInteger(message.receiver.low) && $util.isInteger(message.receiver.high)))
                    return "receiver: integer|Long expected";
            if (message.criteria != null && message.hasOwnProperty("criteria")) {
                var error = $root.CSOItemCriteria.verify(message.criteria);
                if (error)
                    return "criteria." + error;
            }
            return null;
        };
    
        /**
         * Creates a CMsgDevNewItemRequest message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgDevNewItemRequest
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgDevNewItemRequest} CMsgDevNewItemRequest
         */
        CMsgDevNewItemRequest.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgDevNewItemRequest)
                return object;
            var message = new $root.CMsgDevNewItemRequest();
            if (object.receiver != null)
                if ($util.Long)
                    (message.receiver = $util.Long.fromValue(object.receiver)).unsigned = false;
                else if (typeof object.receiver === "string")
                    message.receiver = parseInt(object.receiver, 10);
                else if (typeof object.receiver === "number")
                    message.receiver = object.receiver;
                else if (typeof object.receiver === "object")
                    message.receiver = new $util.LongBits(object.receiver.low >>> 0, object.receiver.high >>> 0).toNumber();
            if (object.criteria != null) {
                if (typeof object.criteria !== "object")
                    throw TypeError(".CMsgDevNewItemRequest.criteria: object expected");
                message.criteria = $root.CSOItemCriteria.fromObject(object.criteria);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgDevNewItemRequest message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgDevNewItemRequest
         * @static
         * @param {CMsgDevNewItemRequest} message CMsgDevNewItemRequest
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgDevNewItemRequest.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.receiver = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.receiver = options.longs === String ? "0" : 0;
                object.criteria = null;
            }
            if (message.receiver != null && message.hasOwnProperty("receiver"))
                if (typeof message.receiver === "number")
                    object.receiver = options.longs === String ? String(message.receiver) : message.receiver;
                else
                    object.receiver = options.longs === String ? $util.Long.prototype.toString.call(message.receiver) : options.longs === Number ? new $util.LongBits(message.receiver.low >>> 0, message.receiver.high >>> 0).toNumber() : message.receiver;
            if (message.criteria != null && message.hasOwnProperty("criteria"))
                object.criteria = $root.CSOItemCriteria.toObject(message.criteria, options);
            return object;
        };
    
        /**
         * Converts this CMsgDevNewItemRequest to JSON.
         * @function toJSON
         * @memberof CMsgDevNewItemRequest
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgDevNewItemRequest.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgDevNewItemRequest
         * @function getTypeUrl
         * @memberof CMsgDevNewItemRequest
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgDevNewItemRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgDevNewItemRequest";
        };
    
        return CMsgDevNewItemRequest;
    })();
    
    $root.CMsgIncrementKillCountAttribute = (function() {
    
        /**
         * Properties of a CMsgIncrementKillCountAttribute.
         * @exports ICMsgIncrementKillCountAttribute
         * @interface ICMsgIncrementKillCountAttribute
         * @property {number|null} [killerAccountId] CMsgIncrementKillCountAttribute killerAccountId
         * @property {number|null} [victimAccountId] CMsgIncrementKillCountAttribute victimAccountId
         * @property {number|Long|null} [itemId] CMsgIncrementKillCountAttribute itemId
         * @property {number|null} [eventType] CMsgIncrementKillCountAttribute eventType
         * @property {number|null} [amount] CMsgIncrementKillCountAttribute amount
         */
    
        /**
         * Constructs a new CMsgIncrementKillCountAttribute.
         * @exports CMsgIncrementKillCountAttribute
         * @classdesc Represents a CMsgIncrementKillCountAttribute.
         * @implements ICMsgIncrementKillCountAttribute
         * @constructor
         * @param {ICMsgIncrementKillCountAttribute=} [properties] Properties to set
         */
        function CMsgIncrementKillCountAttribute(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgIncrementKillCountAttribute killerAccountId.
         * @member {number} killerAccountId
         * @memberof CMsgIncrementKillCountAttribute
         * @instance
         */
        CMsgIncrementKillCountAttribute.prototype.killerAccountId = 0;
    
        /**
         * CMsgIncrementKillCountAttribute victimAccountId.
         * @member {number} victimAccountId
         * @memberof CMsgIncrementKillCountAttribute
         * @instance
         */
        CMsgIncrementKillCountAttribute.prototype.victimAccountId = 0;
    
        /**
         * CMsgIncrementKillCountAttribute itemId.
         * @member {number|Long} itemId
         * @memberof CMsgIncrementKillCountAttribute
         * @instance
         */
        CMsgIncrementKillCountAttribute.prototype.itemId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgIncrementKillCountAttribute eventType.
         * @member {number} eventType
         * @memberof CMsgIncrementKillCountAttribute
         * @instance
         */
        CMsgIncrementKillCountAttribute.prototype.eventType = 0;
    
        /**
         * CMsgIncrementKillCountAttribute amount.
         * @member {number} amount
         * @memberof CMsgIncrementKillCountAttribute
         * @instance
         */
        CMsgIncrementKillCountAttribute.prototype.amount = 0;
    
        /**
         * Creates a new CMsgIncrementKillCountAttribute instance using the specified properties.
         * @function create
         * @memberof CMsgIncrementKillCountAttribute
         * @static
         * @param {ICMsgIncrementKillCountAttribute=} [properties] Properties to set
         * @returns {CMsgIncrementKillCountAttribute} CMsgIncrementKillCountAttribute instance
         */
        CMsgIncrementKillCountAttribute.create = function create(properties) {
            return new CMsgIncrementKillCountAttribute(properties);
        };
    
        /**
         * Encodes the specified CMsgIncrementKillCountAttribute message. Does not implicitly {@link CMsgIncrementKillCountAttribute.verify|verify} messages.
         * @function encode
         * @memberof CMsgIncrementKillCountAttribute
         * @static
         * @param {ICMsgIncrementKillCountAttribute} message CMsgIncrementKillCountAttribute message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgIncrementKillCountAttribute.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.killerAccountId != null && Object.hasOwnProperty.call(message, "killerAccountId"))
                writer.uint32(/* id 1, wireType 5 =*/13).fixed32(message.killerAccountId);
            if (message.victimAccountId != null && Object.hasOwnProperty.call(message, "victimAccountId"))
                writer.uint32(/* id 2, wireType 5 =*/21).fixed32(message.victimAccountId);
            if (message.itemId != null && Object.hasOwnProperty.call(message, "itemId"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.itemId);
            if (message.eventType != null && Object.hasOwnProperty.call(message, "eventType"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.eventType);
            if (message.amount != null && Object.hasOwnProperty.call(message, "amount"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.amount);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgIncrementKillCountAttribute message, length delimited. Does not implicitly {@link CMsgIncrementKillCountAttribute.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgIncrementKillCountAttribute
         * @static
         * @param {ICMsgIncrementKillCountAttribute} message CMsgIncrementKillCountAttribute message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgIncrementKillCountAttribute.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgIncrementKillCountAttribute message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgIncrementKillCountAttribute
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgIncrementKillCountAttribute} CMsgIncrementKillCountAttribute
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgIncrementKillCountAttribute.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgIncrementKillCountAttribute();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.killerAccountId = reader.fixed32();
                        break;
                    }
                case 2: {
                        message.victimAccountId = reader.fixed32();
                        break;
                    }
                case 3: {
                        message.itemId = reader.uint64();
                        break;
                    }
                case 4: {
                        message.eventType = reader.uint32();
                        break;
                    }
                case 5: {
                        message.amount = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgIncrementKillCountAttribute message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgIncrementKillCountAttribute
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgIncrementKillCountAttribute} CMsgIncrementKillCountAttribute
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgIncrementKillCountAttribute.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgIncrementKillCountAttribute message.
         * @function verify
         * @memberof CMsgIncrementKillCountAttribute
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgIncrementKillCountAttribute.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.killerAccountId != null && message.hasOwnProperty("killerAccountId"))
                if (!$util.isInteger(message.killerAccountId))
                    return "killerAccountId: integer expected";
            if (message.victimAccountId != null && message.hasOwnProperty("victimAccountId"))
                if (!$util.isInteger(message.victimAccountId))
                    return "victimAccountId: integer expected";
            if (message.itemId != null && message.hasOwnProperty("itemId"))
                if (!$util.isInteger(message.itemId) && !(message.itemId && $util.isInteger(message.itemId.low) && $util.isInteger(message.itemId.high)))
                    return "itemId: integer|Long expected";
            if (message.eventType != null && message.hasOwnProperty("eventType"))
                if (!$util.isInteger(message.eventType))
                    return "eventType: integer expected";
            if (message.amount != null && message.hasOwnProperty("amount"))
                if (!$util.isInteger(message.amount))
                    return "amount: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgIncrementKillCountAttribute message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgIncrementKillCountAttribute
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgIncrementKillCountAttribute} CMsgIncrementKillCountAttribute
         */
        CMsgIncrementKillCountAttribute.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgIncrementKillCountAttribute)
                return object;
            var message = new $root.CMsgIncrementKillCountAttribute();
            if (object.killerAccountId != null)
                message.killerAccountId = object.killerAccountId >>> 0;
            if (object.victimAccountId != null)
                message.victimAccountId = object.victimAccountId >>> 0;
            if (object.itemId != null)
                if ($util.Long)
                    (message.itemId = $util.Long.fromValue(object.itemId)).unsigned = true;
                else if (typeof object.itemId === "string")
                    message.itemId = parseInt(object.itemId, 10);
                else if (typeof object.itemId === "number")
                    message.itemId = object.itemId;
                else if (typeof object.itemId === "object")
                    message.itemId = new $util.LongBits(object.itemId.low >>> 0, object.itemId.high >>> 0).toNumber(true);
            if (object.eventType != null)
                message.eventType = object.eventType >>> 0;
            if (object.amount != null)
                message.amount = object.amount >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgIncrementKillCountAttribute message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgIncrementKillCountAttribute
         * @static
         * @param {CMsgIncrementKillCountAttribute} message CMsgIncrementKillCountAttribute
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgIncrementKillCountAttribute.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.killerAccountId = 0;
                object.victimAccountId = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.itemId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.itemId = options.longs === String ? "0" : 0;
                object.eventType = 0;
                object.amount = 0;
            }
            if (message.killerAccountId != null && message.hasOwnProperty("killerAccountId"))
                object.killerAccountId = message.killerAccountId;
            if (message.victimAccountId != null && message.hasOwnProperty("victimAccountId"))
                object.victimAccountId = message.victimAccountId;
            if (message.itemId != null && message.hasOwnProperty("itemId"))
                if (typeof message.itemId === "number")
                    object.itemId = options.longs === String ? String(message.itemId) : message.itemId;
                else
                    object.itemId = options.longs === String ? $util.Long.prototype.toString.call(message.itemId) : options.longs === Number ? new $util.LongBits(message.itemId.low >>> 0, message.itemId.high >>> 0).toNumber(true) : message.itemId;
            if (message.eventType != null && message.hasOwnProperty("eventType"))
                object.eventType = message.eventType;
            if (message.amount != null && message.hasOwnProperty("amount"))
                object.amount = message.amount;
            return object;
        };
    
        /**
         * Converts this CMsgIncrementKillCountAttribute to JSON.
         * @function toJSON
         * @memberof CMsgIncrementKillCountAttribute
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgIncrementKillCountAttribute.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgIncrementKillCountAttribute
         * @function getTypeUrl
         * @memberof CMsgIncrementKillCountAttribute
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgIncrementKillCountAttribute.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgIncrementKillCountAttribute";
        };
    
        return CMsgIncrementKillCountAttribute;
    })();
    
    $root.CMsgApplySticker = (function() {
    
        /**
         * Properties of a CMsgApplySticker.
         * @exports ICMsgApplySticker
         * @interface ICMsgApplySticker
         * @property {number|Long|null} [stickerItemId] CMsgApplySticker stickerItemId
         * @property {number|Long|null} [itemItemId] CMsgApplySticker itemItemId
         * @property {number|null} [stickerSlot] CMsgApplySticker stickerSlot
         * @property {number|null} [baseitemDefidx] CMsgApplySticker baseitemDefidx
         * @property {number|null} [stickerWear] CMsgApplySticker stickerWear
         */
    
        /**
         * Constructs a new CMsgApplySticker.
         * @exports CMsgApplySticker
         * @classdesc Represents a CMsgApplySticker.
         * @implements ICMsgApplySticker
         * @constructor
         * @param {ICMsgApplySticker=} [properties] Properties to set
         */
        function CMsgApplySticker(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgApplySticker stickerItemId.
         * @member {number|Long} stickerItemId
         * @memberof CMsgApplySticker
         * @instance
         */
        CMsgApplySticker.prototype.stickerItemId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgApplySticker itemItemId.
         * @member {number|Long} itemItemId
         * @memberof CMsgApplySticker
         * @instance
         */
        CMsgApplySticker.prototype.itemItemId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgApplySticker stickerSlot.
         * @member {number} stickerSlot
         * @memberof CMsgApplySticker
         * @instance
         */
        CMsgApplySticker.prototype.stickerSlot = 0;
    
        /**
         * CMsgApplySticker baseitemDefidx.
         * @member {number} baseitemDefidx
         * @memberof CMsgApplySticker
         * @instance
         */
        CMsgApplySticker.prototype.baseitemDefidx = 0;
    
        /**
         * CMsgApplySticker stickerWear.
         * @member {number} stickerWear
         * @memberof CMsgApplySticker
         * @instance
         */
        CMsgApplySticker.prototype.stickerWear = 0;
    
        /**
         * Creates a new CMsgApplySticker instance using the specified properties.
         * @function create
         * @memberof CMsgApplySticker
         * @static
         * @param {ICMsgApplySticker=} [properties] Properties to set
         * @returns {CMsgApplySticker} CMsgApplySticker instance
         */
        CMsgApplySticker.create = function create(properties) {
            return new CMsgApplySticker(properties);
        };
    
        /**
         * Encodes the specified CMsgApplySticker message. Does not implicitly {@link CMsgApplySticker.verify|verify} messages.
         * @function encode
         * @memberof CMsgApplySticker
         * @static
         * @param {ICMsgApplySticker} message CMsgApplySticker message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgApplySticker.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.stickerItemId != null && Object.hasOwnProperty.call(message, "stickerItemId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.stickerItemId);
            if (message.itemItemId != null && Object.hasOwnProperty.call(message, "itemItemId"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.itemItemId);
            if (message.stickerSlot != null && Object.hasOwnProperty.call(message, "stickerSlot"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.stickerSlot);
            if (message.baseitemDefidx != null && Object.hasOwnProperty.call(message, "baseitemDefidx"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.baseitemDefidx);
            if (message.stickerWear != null && Object.hasOwnProperty.call(message, "stickerWear"))
                writer.uint32(/* id 5, wireType 5 =*/45).float(message.stickerWear);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgApplySticker message, length delimited. Does not implicitly {@link CMsgApplySticker.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgApplySticker
         * @static
         * @param {ICMsgApplySticker} message CMsgApplySticker message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgApplySticker.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgApplySticker message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgApplySticker
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgApplySticker} CMsgApplySticker
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgApplySticker.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgApplySticker();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.stickerItemId = reader.uint64();
                        break;
                    }
                case 2: {
                        message.itemItemId = reader.uint64();
                        break;
                    }
                case 3: {
                        message.stickerSlot = reader.uint32();
                        break;
                    }
                case 4: {
                        message.baseitemDefidx = reader.uint32();
                        break;
                    }
                case 5: {
                        message.stickerWear = reader.float();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgApplySticker message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgApplySticker
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgApplySticker} CMsgApplySticker
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgApplySticker.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgApplySticker message.
         * @function verify
         * @memberof CMsgApplySticker
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgApplySticker.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.stickerItemId != null && message.hasOwnProperty("stickerItemId"))
                if (!$util.isInteger(message.stickerItemId) && !(message.stickerItemId && $util.isInteger(message.stickerItemId.low) && $util.isInteger(message.stickerItemId.high)))
                    return "stickerItemId: integer|Long expected";
            if (message.itemItemId != null && message.hasOwnProperty("itemItemId"))
                if (!$util.isInteger(message.itemItemId) && !(message.itemItemId && $util.isInteger(message.itemItemId.low) && $util.isInteger(message.itemItemId.high)))
                    return "itemItemId: integer|Long expected";
            if (message.stickerSlot != null && message.hasOwnProperty("stickerSlot"))
                if (!$util.isInteger(message.stickerSlot))
                    return "stickerSlot: integer expected";
            if (message.baseitemDefidx != null && message.hasOwnProperty("baseitemDefidx"))
                if (!$util.isInteger(message.baseitemDefidx))
                    return "baseitemDefidx: integer expected";
            if (message.stickerWear != null && message.hasOwnProperty("stickerWear"))
                if (typeof message.stickerWear !== "number")
                    return "stickerWear: number expected";
            return null;
        };
    
        /**
         * Creates a CMsgApplySticker message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgApplySticker
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgApplySticker} CMsgApplySticker
         */
        CMsgApplySticker.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgApplySticker)
                return object;
            var message = new $root.CMsgApplySticker();
            if (object.stickerItemId != null)
                if ($util.Long)
                    (message.stickerItemId = $util.Long.fromValue(object.stickerItemId)).unsigned = true;
                else if (typeof object.stickerItemId === "string")
                    message.stickerItemId = parseInt(object.stickerItemId, 10);
                else if (typeof object.stickerItemId === "number")
                    message.stickerItemId = object.stickerItemId;
                else if (typeof object.stickerItemId === "object")
                    message.stickerItemId = new $util.LongBits(object.stickerItemId.low >>> 0, object.stickerItemId.high >>> 0).toNumber(true);
            if (object.itemItemId != null)
                if ($util.Long)
                    (message.itemItemId = $util.Long.fromValue(object.itemItemId)).unsigned = true;
                else if (typeof object.itemItemId === "string")
                    message.itemItemId = parseInt(object.itemItemId, 10);
                else if (typeof object.itemItemId === "number")
                    message.itemItemId = object.itemItemId;
                else if (typeof object.itemItemId === "object")
                    message.itemItemId = new $util.LongBits(object.itemItemId.low >>> 0, object.itemItemId.high >>> 0).toNumber(true);
            if (object.stickerSlot != null)
                message.stickerSlot = object.stickerSlot >>> 0;
            if (object.baseitemDefidx != null)
                message.baseitemDefidx = object.baseitemDefidx >>> 0;
            if (object.stickerWear != null)
                message.stickerWear = Number(object.stickerWear);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgApplySticker message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgApplySticker
         * @static
         * @param {CMsgApplySticker} message CMsgApplySticker
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgApplySticker.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.stickerItemId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.stickerItemId = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.itemItemId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.itemItemId = options.longs === String ? "0" : 0;
                object.stickerSlot = 0;
                object.baseitemDefidx = 0;
                object.stickerWear = 0;
            }
            if (message.stickerItemId != null && message.hasOwnProperty("stickerItemId"))
                if (typeof message.stickerItemId === "number")
                    object.stickerItemId = options.longs === String ? String(message.stickerItemId) : message.stickerItemId;
                else
                    object.stickerItemId = options.longs === String ? $util.Long.prototype.toString.call(message.stickerItemId) : options.longs === Number ? new $util.LongBits(message.stickerItemId.low >>> 0, message.stickerItemId.high >>> 0).toNumber(true) : message.stickerItemId;
            if (message.itemItemId != null && message.hasOwnProperty("itemItemId"))
                if (typeof message.itemItemId === "number")
                    object.itemItemId = options.longs === String ? String(message.itemItemId) : message.itemItemId;
                else
                    object.itemItemId = options.longs === String ? $util.Long.prototype.toString.call(message.itemItemId) : options.longs === Number ? new $util.LongBits(message.itemItemId.low >>> 0, message.itemItemId.high >>> 0).toNumber(true) : message.itemItemId;
            if (message.stickerSlot != null && message.hasOwnProperty("stickerSlot"))
                object.stickerSlot = message.stickerSlot;
            if (message.baseitemDefidx != null && message.hasOwnProperty("baseitemDefidx"))
                object.baseitemDefidx = message.baseitemDefidx;
            if (message.stickerWear != null && message.hasOwnProperty("stickerWear"))
                object.stickerWear = options.json && !isFinite(message.stickerWear) ? String(message.stickerWear) : message.stickerWear;
            return object;
        };
    
        /**
         * Converts this CMsgApplySticker to JSON.
         * @function toJSON
         * @memberof CMsgApplySticker
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgApplySticker.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgApplySticker
         * @function getTypeUrl
         * @memberof CMsgApplySticker
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgApplySticker.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgApplySticker";
        };
    
        return CMsgApplySticker;
    })();
    
    $root.CMsgModifyItemAttribute = (function() {
    
        /**
         * Properties of a CMsgModifyItemAttribute.
         * @exports ICMsgModifyItemAttribute
         * @interface ICMsgModifyItemAttribute
         * @property {number|Long|null} [itemId] CMsgModifyItemAttribute itemId
         * @property {number|null} [attrDefidx] CMsgModifyItemAttribute attrDefidx
         * @property {number|null} [attrValue] CMsgModifyItemAttribute attrValue
         */
    
        /**
         * Constructs a new CMsgModifyItemAttribute.
         * @exports CMsgModifyItemAttribute
         * @classdesc Represents a CMsgModifyItemAttribute.
         * @implements ICMsgModifyItemAttribute
         * @constructor
         * @param {ICMsgModifyItemAttribute=} [properties] Properties to set
         */
        function CMsgModifyItemAttribute(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgModifyItemAttribute itemId.
         * @member {number|Long} itemId
         * @memberof CMsgModifyItemAttribute
         * @instance
         */
        CMsgModifyItemAttribute.prototype.itemId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgModifyItemAttribute attrDefidx.
         * @member {number} attrDefidx
         * @memberof CMsgModifyItemAttribute
         * @instance
         */
        CMsgModifyItemAttribute.prototype.attrDefidx = 0;
    
        /**
         * CMsgModifyItemAttribute attrValue.
         * @member {number} attrValue
         * @memberof CMsgModifyItemAttribute
         * @instance
         */
        CMsgModifyItemAttribute.prototype.attrValue = 0;
    
        /**
         * Creates a new CMsgModifyItemAttribute instance using the specified properties.
         * @function create
         * @memberof CMsgModifyItemAttribute
         * @static
         * @param {ICMsgModifyItemAttribute=} [properties] Properties to set
         * @returns {CMsgModifyItemAttribute} CMsgModifyItemAttribute instance
         */
        CMsgModifyItemAttribute.create = function create(properties) {
            return new CMsgModifyItemAttribute(properties);
        };
    
        /**
         * Encodes the specified CMsgModifyItemAttribute message. Does not implicitly {@link CMsgModifyItemAttribute.verify|verify} messages.
         * @function encode
         * @memberof CMsgModifyItemAttribute
         * @static
         * @param {ICMsgModifyItemAttribute} message CMsgModifyItemAttribute message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgModifyItemAttribute.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.itemId != null && Object.hasOwnProperty.call(message, "itemId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.itemId);
            if (message.attrDefidx != null && Object.hasOwnProperty.call(message, "attrDefidx"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.attrDefidx);
            if (message.attrValue != null && Object.hasOwnProperty.call(message, "attrValue"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.attrValue);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgModifyItemAttribute message, length delimited. Does not implicitly {@link CMsgModifyItemAttribute.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgModifyItemAttribute
         * @static
         * @param {ICMsgModifyItemAttribute} message CMsgModifyItemAttribute message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgModifyItemAttribute.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgModifyItemAttribute message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgModifyItemAttribute
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgModifyItemAttribute} CMsgModifyItemAttribute
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgModifyItemAttribute.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgModifyItemAttribute();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.itemId = reader.uint64();
                        break;
                    }
                case 2: {
                        message.attrDefidx = reader.uint32();
                        break;
                    }
                case 3: {
                        message.attrValue = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgModifyItemAttribute message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgModifyItemAttribute
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgModifyItemAttribute} CMsgModifyItemAttribute
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgModifyItemAttribute.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgModifyItemAttribute message.
         * @function verify
         * @memberof CMsgModifyItemAttribute
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgModifyItemAttribute.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.itemId != null && message.hasOwnProperty("itemId"))
                if (!$util.isInteger(message.itemId) && !(message.itemId && $util.isInteger(message.itemId.low) && $util.isInteger(message.itemId.high)))
                    return "itemId: integer|Long expected";
            if (message.attrDefidx != null && message.hasOwnProperty("attrDefidx"))
                if (!$util.isInteger(message.attrDefidx))
                    return "attrDefidx: integer expected";
            if (message.attrValue != null && message.hasOwnProperty("attrValue"))
                if (!$util.isInteger(message.attrValue))
                    return "attrValue: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgModifyItemAttribute message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgModifyItemAttribute
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgModifyItemAttribute} CMsgModifyItemAttribute
         */
        CMsgModifyItemAttribute.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgModifyItemAttribute)
                return object;
            var message = new $root.CMsgModifyItemAttribute();
            if (object.itemId != null)
                if ($util.Long)
                    (message.itemId = $util.Long.fromValue(object.itemId)).unsigned = true;
                else if (typeof object.itemId === "string")
                    message.itemId = parseInt(object.itemId, 10);
                else if (typeof object.itemId === "number")
                    message.itemId = object.itemId;
                else if (typeof object.itemId === "object")
                    message.itemId = new $util.LongBits(object.itemId.low >>> 0, object.itemId.high >>> 0).toNumber(true);
            if (object.attrDefidx != null)
                message.attrDefidx = object.attrDefidx >>> 0;
            if (object.attrValue != null)
                message.attrValue = object.attrValue >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgModifyItemAttribute message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgModifyItemAttribute
         * @static
         * @param {CMsgModifyItemAttribute} message CMsgModifyItemAttribute
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgModifyItemAttribute.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.itemId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.itemId = options.longs === String ? "0" : 0;
                object.attrDefidx = 0;
                object.attrValue = 0;
            }
            if (message.itemId != null && message.hasOwnProperty("itemId"))
                if (typeof message.itemId === "number")
                    object.itemId = options.longs === String ? String(message.itemId) : message.itemId;
                else
                    object.itemId = options.longs === String ? $util.Long.prototype.toString.call(message.itemId) : options.longs === Number ? new $util.LongBits(message.itemId.low >>> 0, message.itemId.high >>> 0).toNumber(true) : message.itemId;
            if (message.attrDefidx != null && message.hasOwnProperty("attrDefidx"))
                object.attrDefidx = message.attrDefidx;
            if (message.attrValue != null && message.hasOwnProperty("attrValue"))
                object.attrValue = message.attrValue;
            return object;
        };
    
        /**
         * Converts this CMsgModifyItemAttribute to JSON.
         * @function toJSON
         * @memberof CMsgModifyItemAttribute
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgModifyItemAttribute.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgModifyItemAttribute
         * @function getTypeUrl
         * @memberof CMsgModifyItemAttribute
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgModifyItemAttribute.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgModifyItemAttribute";
        };
    
        return CMsgModifyItemAttribute;
    })();
    
    $root.CMsgApplyStatTrakSwap = (function() {
    
        /**
         * Properties of a CMsgApplyStatTrakSwap.
         * @exports ICMsgApplyStatTrakSwap
         * @interface ICMsgApplyStatTrakSwap
         * @property {number|Long|null} [toolItemId] CMsgApplyStatTrakSwap toolItemId
         * @property {number|Long|null} [item_1ItemId] CMsgApplyStatTrakSwap item_1ItemId
         * @property {number|Long|null} [item_2ItemId] CMsgApplyStatTrakSwap item_2ItemId
         */
    
        /**
         * Constructs a new CMsgApplyStatTrakSwap.
         * @exports CMsgApplyStatTrakSwap
         * @classdesc Represents a CMsgApplyStatTrakSwap.
         * @implements ICMsgApplyStatTrakSwap
         * @constructor
         * @param {ICMsgApplyStatTrakSwap=} [properties] Properties to set
         */
        function CMsgApplyStatTrakSwap(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgApplyStatTrakSwap toolItemId.
         * @member {number|Long} toolItemId
         * @memberof CMsgApplyStatTrakSwap
         * @instance
         */
        CMsgApplyStatTrakSwap.prototype.toolItemId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgApplyStatTrakSwap item_1ItemId.
         * @member {number|Long} item_1ItemId
         * @memberof CMsgApplyStatTrakSwap
         * @instance
         */
        CMsgApplyStatTrakSwap.prototype.item_1ItemId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgApplyStatTrakSwap item_2ItemId.
         * @member {number|Long} item_2ItemId
         * @memberof CMsgApplyStatTrakSwap
         * @instance
         */
        CMsgApplyStatTrakSwap.prototype.item_2ItemId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgApplyStatTrakSwap instance using the specified properties.
         * @function create
         * @memberof CMsgApplyStatTrakSwap
         * @static
         * @param {ICMsgApplyStatTrakSwap=} [properties] Properties to set
         * @returns {CMsgApplyStatTrakSwap} CMsgApplyStatTrakSwap instance
         */
        CMsgApplyStatTrakSwap.create = function create(properties) {
            return new CMsgApplyStatTrakSwap(properties);
        };
    
        /**
         * Encodes the specified CMsgApplyStatTrakSwap message. Does not implicitly {@link CMsgApplyStatTrakSwap.verify|verify} messages.
         * @function encode
         * @memberof CMsgApplyStatTrakSwap
         * @static
         * @param {ICMsgApplyStatTrakSwap} message CMsgApplyStatTrakSwap message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgApplyStatTrakSwap.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.toolItemId != null && Object.hasOwnProperty.call(message, "toolItemId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.toolItemId);
            if (message.item_1ItemId != null && Object.hasOwnProperty.call(message, "item_1ItemId"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.item_1ItemId);
            if (message.item_2ItemId != null && Object.hasOwnProperty.call(message, "item_2ItemId"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.item_2ItemId);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgApplyStatTrakSwap message, length delimited. Does not implicitly {@link CMsgApplyStatTrakSwap.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgApplyStatTrakSwap
         * @static
         * @param {ICMsgApplyStatTrakSwap} message CMsgApplyStatTrakSwap message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgApplyStatTrakSwap.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgApplyStatTrakSwap message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgApplyStatTrakSwap
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgApplyStatTrakSwap} CMsgApplyStatTrakSwap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgApplyStatTrakSwap.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgApplyStatTrakSwap();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.toolItemId = reader.uint64();
                        break;
                    }
                case 2: {
                        message.item_1ItemId = reader.uint64();
                        break;
                    }
                case 3: {
                        message.item_2ItemId = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgApplyStatTrakSwap message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgApplyStatTrakSwap
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgApplyStatTrakSwap} CMsgApplyStatTrakSwap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgApplyStatTrakSwap.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgApplyStatTrakSwap message.
         * @function verify
         * @memberof CMsgApplyStatTrakSwap
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgApplyStatTrakSwap.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.toolItemId != null && message.hasOwnProperty("toolItemId"))
                if (!$util.isInteger(message.toolItemId) && !(message.toolItemId && $util.isInteger(message.toolItemId.low) && $util.isInteger(message.toolItemId.high)))
                    return "toolItemId: integer|Long expected";
            if (message.item_1ItemId != null && message.hasOwnProperty("item_1ItemId"))
                if (!$util.isInteger(message.item_1ItemId) && !(message.item_1ItemId && $util.isInteger(message.item_1ItemId.low) && $util.isInteger(message.item_1ItemId.high)))
                    return "item_1ItemId: integer|Long expected";
            if (message.item_2ItemId != null && message.hasOwnProperty("item_2ItemId"))
                if (!$util.isInteger(message.item_2ItemId) && !(message.item_2ItemId && $util.isInteger(message.item_2ItemId.low) && $util.isInteger(message.item_2ItemId.high)))
                    return "item_2ItemId: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgApplyStatTrakSwap message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgApplyStatTrakSwap
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgApplyStatTrakSwap} CMsgApplyStatTrakSwap
         */
        CMsgApplyStatTrakSwap.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgApplyStatTrakSwap)
                return object;
            var message = new $root.CMsgApplyStatTrakSwap();
            if (object.toolItemId != null)
                if ($util.Long)
                    (message.toolItemId = $util.Long.fromValue(object.toolItemId)).unsigned = true;
                else if (typeof object.toolItemId === "string")
                    message.toolItemId = parseInt(object.toolItemId, 10);
                else if (typeof object.toolItemId === "number")
                    message.toolItemId = object.toolItemId;
                else if (typeof object.toolItemId === "object")
                    message.toolItemId = new $util.LongBits(object.toolItemId.low >>> 0, object.toolItemId.high >>> 0).toNumber(true);
            if (object.item_1ItemId != null)
                if ($util.Long)
                    (message.item_1ItemId = $util.Long.fromValue(object.item_1ItemId)).unsigned = true;
                else if (typeof object.item_1ItemId === "string")
                    message.item_1ItemId = parseInt(object.item_1ItemId, 10);
                else if (typeof object.item_1ItemId === "number")
                    message.item_1ItemId = object.item_1ItemId;
                else if (typeof object.item_1ItemId === "object")
                    message.item_1ItemId = new $util.LongBits(object.item_1ItemId.low >>> 0, object.item_1ItemId.high >>> 0).toNumber(true);
            if (object.item_2ItemId != null)
                if ($util.Long)
                    (message.item_2ItemId = $util.Long.fromValue(object.item_2ItemId)).unsigned = true;
                else if (typeof object.item_2ItemId === "string")
                    message.item_2ItemId = parseInt(object.item_2ItemId, 10);
                else if (typeof object.item_2ItemId === "number")
                    message.item_2ItemId = object.item_2ItemId;
                else if (typeof object.item_2ItemId === "object")
                    message.item_2ItemId = new $util.LongBits(object.item_2ItemId.low >>> 0, object.item_2ItemId.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgApplyStatTrakSwap message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgApplyStatTrakSwap
         * @static
         * @param {CMsgApplyStatTrakSwap} message CMsgApplyStatTrakSwap
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgApplyStatTrakSwap.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.toolItemId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.toolItemId = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.item_1ItemId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.item_1ItemId = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.item_2ItemId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.item_2ItemId = options.longs === String ? "0" : 0;
            }
            if (message.toolItemId != null && message.hasOwnProperty("toolItemId"))
                if (typeof message.toolItemId === "number")
                    object.toolItemId = options.longs === String ? String(message.toolItemId) : message.toolItemId;
                else
                    object.toolItemId = options.longs === String ? $util.Long.prototype.toString.call(message.toolItemId) : options.longs === Number ? new $util.LongBits(message.toolItemId.low >>> 0, message.toolItemId.high >>> 0).toNumber(true) : message.toolItemId;
            if (message.item_1ItemId != null && message.hasOwnProperty("item_1ItemId"))
                if (typeof message.item_1ItemId === "number")
                    object.item_1ItemId = options.longs === String ? String(message.item_1ItemId) : message.item_1ItemId;
                else
                    object.item_1ItemId = options.longs === String ? $util.Long.prototype.toString.call(message.item_1ItemId) : options.longs === Number ? new $util.LongBits(message.item_1ItemId.low >>> 0, message.item_1ItemId.high >>> 0).toNumber(true) : message.item_1ItemId;
            if (message.item_2ItemId != null && message.hasOwnProperty("item_2ItemId"))
                if (typeof message.item_2ItemId === "number")
                    object.item_2ItemId = options.longs === String ? String(message.item_2ItemId) : message.item_2ItemId;
                else
                    object.item_2ItemId = options.longs === String ? $util.Long.prototype.toString.call(message.item_2ItemId) : options.longs === Number ? new $util.LongBits(message.item_2ItemId.low >>> 0, message.item_2ItemId.high >>> 0).toNumber(true) : message.item_2ItemId;
            return object;
        };
    
        /**
         * Converts this CMsgApplyStatTrakSwap to JSON.
         * @function toJSON
         * @memberof CMsgApplyStatTrakSwap
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgApplyStatTrakSwap.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgApplyStatTrakSwap
         * @function getTypeUrl
         * @memberof CMsgApplyStatTrakSwap
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgApplyStatTrakSwap.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgApplyStatTrakSwap";
        };
    
        return CMsgApplyStatTrakSwap;
    })();
    
    $root.CMsgApplyStrangePart = (function() {
    
        /**
         * Properties of a CMsgApplyStrangePart.
         * @exports ICMsgApplyStrangePart
         * @interface ICMsgApplyStrangePart
         * @property {number|Long|null} [strangePartItemId] CMsgApplyStrangePart strangePartItemId
         * @property {number|Long|null} [itemItemId] CMsgApplyStrangePart itemItemId
         */
    
        /**
         * Constructs a new CMsgApplyStrangePart.
         * @exports CMsgApplyStrangePart
         * @classdesc Represents a CMsgApplyStrangePart.
         * @implements ICMsgApplyStrangePart
         * @constructor
         * @param {ICMsgApplyStrangePart=} [properties] Properties to set
         */
        function CMsgApplyStrangePart(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgApplyStrangePart strangePartItemId.
         * @member {number|Long} strangePartItemId
         * @memberof CMsgApplyStrangePart
         * @instance
         */
        CMsgApplyStrangePart.prototype.strangePartItemId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgApplyStrangePart itemItemId.
         * @member {number|Long} itemItemId
         * @memberof CMsgApplyStrangePart
         * @instance
         */
        CMsgApplyStrangePart.prototype.itemItemId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgApplyStrangePart instance using the specified properties.
         * @function create
         * @memberof CMsgApplyStrangePart
         * @static
         * @param {ICMsgApplyStrangePart=} [properties] Properties to set
         * @returns {CMsgApplyStrangePart} CMsgApplyStrangePart instance
         */
        CMsgApplyStrangePart.create = function create(properties) {
            return new CMsgApplyStrangePart(properties);
        };
    
        /**
         * Encodes the specified CMsgApplyStrangePart message. Does not implicitly {@link CMsgApplyStrangePart.verify|verify} messages.
         * @function encode
         * @memberof CMsgApplyStrangePart
         * @static
         * @param {ICMsgApplyStrangePart} message CMsgApplyStrangePart message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgApplyStrangePart.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.strangePartItemId != null && Object.hasOwnProperty.call(message, "strangePartItemId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.strangePartItemId);
            if (message.itemItemId != null && Object.hasOwnProperty.call(message, "itemItemId"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.itemItemId);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgApplyStrangePart message, length delimited. Does not implicitly {@link CMsgApplyStrangePart.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgApplyStrangePart
         * @static
         * @param {ICMsgApplyStrangePart} message CMsgApplyStrangePart message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgApplyStrangePart.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgApplyStrangePart message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgApplyStrangePart
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgApplyStrangePart} CMsgApplyStrangePart
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgApplyStrangePart.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgApplyStrangePart();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.strangePartItemId = reader.uint64();
                        break;
                    }
                case 2: {
                        message.itemItemId = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgApplyStrangePart message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgApplyStrangePart
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgApplyStrangePart} CMsgApplyStrangePart
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgApplyStrangePart.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgApplyStrangePart message.
         * @function verify
         * @memberof CMsgApplyStrangePart
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgApplyStrangePart.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.strangePartItemId != null && message.hasOwnProperty("strangePartItemId"))
                if (!$util.isInteger(message.strangePartItemId) && !(message.strangePartItemId && $util.isInteger(message.strangePartItemId.low) && $util.isInteger(message.strangePartItemId.high)))
                    return "strangePartItemId: integer|Long expected";
            if (message.itemItemId != null && message.hasOwnProperty("itemItemId"))
                if (!$util.isInteger(message.itemItemId) && !(message.itemItemId && $util.isInteger(message.itemItemId.low) && $util.isInteger(message.itemItemId.high)))
                    return "itemItemId: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgApplyStrangePart message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgApplyStrangePart
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgApplyStrangePart} CMsgApplyStrangePart
         */
        CMsgApplyStrangePart.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgApplyStrangePart)
                return object;
            var message = new $root.CMsgApplyStrangePart();
            if (object.strangePartItemId != null)
                if ($util.Long)
                    (message.strangePartItemId = $util.Long.fromValue(object.strangePartItemId)).unsigned = true;
                else if (typeof object.strangePartItemId === "string")
                    message.strangePartItemId = parseInt(object.strangePartItemId, 10);
                else if (typeof object.strangePartItemId === "number")
                    message.strangePartItemId = object.strangePartItemId;
                else if (typeof object.strangePartItemId === "object")
                    message.strangePartItemId = new $util.LongBits(object.strangePartItemId.low >>> 0, object.strangePartItemId.high >>> 0).toNumber(true);
            if (object.itemItemId != null)
                if ($util.Long)
                    (message.itemItemId = $util.Long.fromValue(object.itemItemId)).unsigned = true;
                else if (typeof object.itemItemId === "string")
                    message.itemItemId = parseInt(object.itemItemId, 10);
                else if (typeof object.itemItemId === "number")
                    message.itemItemId = object.itemItemId;
                else if (typeof object.itemItemId === "object")
                    message.itemItemId = new $util.LongBits(object.itemItemId.low >>> 0, object.itemItemId.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgApplyStrangePart message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgApplyStrangePart
         * @static
         * @param {CMsgApplyStrangePart} message CMsgApplyStrangePart
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgApplyStrangePart.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.strangePartItemId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.strangePartItemId = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.itemItemId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.itemItemId = options.longs === String ? "0" : 0;
            }
            if (message.strangePartItemId != null && message.hasOwnProperty("strangePartItemId"))
                if (typeof message.strangePartItemId === "number")
                    object.strangePartItemId = options.longs === String ? String(message.strangePartItemId) : message.strangePartItemId;
                else
                    object.strangePartItemId = options.longs === String ? $util.Long.prototype.toString.call(message.strangePartItemId) : options.longs === Number ? new $util.LongBits(message.strangePartItemId.low >>> 0, message.strangePartItemId.high >>> 0).toNumber(true) : message.strangePartItemId;
            if (message.itemItemId != null && message.hasOwnProperty("itemItemId"))
                if (typeof message.itemItemId === "number")
                    object.itemItemId = options.longs === String ? String(message.itemItemId) : message.itemItemId;
                else
                    object.itemItemId = options.longs === String ? $util.Long.prototype.toString.call(message.itemItemId) : options.longs === Number ? new $util.LongBits(message.itemItemId.low >>> 0, message.itemItemId.high >>> 0).toNumber(true) : message.itemItemId;
            return object;
        };
    
        /**
         * Converts this CMsgApplyStrangePart to JSON.
         * @function toJSON
         * @memberof CMsgApplyStrangePart
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgApplyStrangePart.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgApplyStrangePart
         * @function getTypeUrl
         * @memberof CMsgApplyStrangePart
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgApplyStrangePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgApplyStrangePart";
        };
    
        return CMsgApplyStrangePart;
    })();
    
    $root.CMsgApplyPennantUpgrade = (function() {
    
        /**
         * Properties of a CMsgApplyPennantUpgrade.
         * @exports ICMsgApplyPennantUpgrade
         * @interface ICMsgApplyPennantUpgrade
         * @property {number|Long|null} [upgradeItemId] CMsgApplyPennantUpgrade upgradeItemId
         * @property {number|Long|null} [pennantItemId] CMsgApplyPennantUpgrade pennantItemId
         */
    
        /**
         * Constructs a new CMsgApplyPennantUpgrade.
         * @exports CMsgApplyPennantUpgrade
         * @classdesc Represents a CMsgApplyPennantUpgrade.
         * @implements ICMsgApplyPennantUpgrade
         * @constructor
         * @param {ICMsgApplyPennantUpgrade=} [properties] Properties to set
         */
        function CMsgApplyPennantUpgrade(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgApplyPennantUpgrade upgradeItemId.
         * @member {number|Long} upgradeItemId
         * @memberof CMsgApplyPennantUpgrade
         * @instance
         */
        CMsgApplyPennantUpgrade.prototype.upgradeItemId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgApplyPennantUpgrade pennantItemId.
         * @member {number|Long} pennantItemId
         * @memberof CMsgApplyPennantUpgrade
         * @instance
         */
        CMsgApplyPennantUpgrade.prototype.pennantItemId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgApplyPennantUpgrade instance using the specified properties.
         * @function create
         * @memberof CMsgApplyPennantUpgrade
         * @static
         * @param {ICMsgApplyPennantUpgrade=} [properties] Properties to set
         * @returns {CMsgApplyPennantUpgrade} CMsgApplyPennantUpgrade instance
         */
        CMsgApplyPennantUpgrade.create = function create(properties) {
            return new CMsgApplyPennantUpgrade(properties);
        };
    
        /**
         * Encodes the specified CMsgApplyPennantUpgrade message. Does not implicitly {@link CMsgApplyPennantUpgrade.verify|verify} messages.
         * @function encode
         * @memberof CMsgApplyPennantUpgrade
         * @static
         * @param {ICMsgApplyPennantUpgrade} message CMsgApplyPennantUpgrade message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgApplyPennantUpgrade.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.upgradeItemId != null && Object.hasOwnProperty.call(message, "upgradeItemId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.upgradeItemId);
            if (message.pennantItemId != null && Object.hasOwnProperty.call(message, "pennantItemId"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.pennantItemId);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgApplyPennantUpgrade message, length delimited. Does not implicitly {@link CMsgApplyPennantUpgrade.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgApplyPennantUpgrade
         * @static
         * @param {ICMsgApplyPennantUpgrade} message CMsgApplyPennantUpgrade message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgApplyPennantUpgrade.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgApplyPennantUpgrade message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgApplyPennantUpgrade
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgApplyPennantUpgrade} CMsgApplyPennantUpgrade
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgApplyPennantUpgrade.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgApplyPennantUpgrade();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.upgradeItemId = reader.uint64();
                        break;
                    }
                case 2: {
                        message.pennantItemId = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgApplyPennantUpgrade message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgApplyPennantUpgrade
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgApplyPennantUpgrade} CMsgApplyPennantUpgrade
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgApplyPennantUpgrade.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgApplyPennantUpgrade message.
         * @function verify
         * @memberof CMsgApplyPennantUpgrade
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgApplyPennantUpgrade.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.upgradeItemId != null && message.hasOwnProperty("upgradeItemId"))
                if (!$util.isInteger(message.upgradeItemId) && !(message.upgradeItemId && $util.isInteger(message.upgradeItemId.low) && $util.isInteger(message.upgradeItemId.high)))
                    return "upgradeItemId: integer|Long expected";
            if (message.pennantItemId != null && message.hasOwnProperty("pennantItemId"))
                if (!$util.isInteger(message.pennantItemId) && !(message.pennantItemId && $util.isInteger(message.pennantItemId.low) && $util.isInteger(message.pennantItemId.high)))
                    return "pennantItemId: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgApplyPennantUpgrade message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgApplyPennantUpgrade
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgApplyPennantUpgrade} CMsgApplyPennantUpgrade
         */
        CMsgApplyPennantUpgrade.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgApplyPennantUpgrade)
                return object;
            var message = new $root.CMsgApplyPennantUpgrade();
            if (object.upgradeItemId != null)
                if ($util.Long)
                    (message.upgradeItemId = $util.Long.fromValue(object.upgradeItemId)).unsigned = true;
                else if (typeof object.upgradeItemId === "string")
                    message.upgradeItemId = parseInt(object.upgradeItemId, 10);
                else if (typeof object.upgradeItemId === "number")
                    message.upgradeItemId = object.upgradeItemId;
                else if (typeof object.upgradeItemId === "object")
                    message.upgradeItemId = new $util.LongBits(object.upgradeItemId.low >>> 0, object.upgradeItemId.high >>> 0).toNumber(true);
            if (object.pennantItemId != null)
                if ($util.Long)
                    (message.pennantItemId = $util.Long.fromValue(object.pennantItemId)).unsigned = true;
                else if (typeof object.pennantItemId === "string")
                    message.pennantItemId = parseInt(object.pennantItemId, 10);
                else if (typeof object.pennantItemId === "number")
                    message.pennantItemId = object.pennantItemId;
                else if (typeof object.pennantItemId === "object")
                    message.pennantItemId = new $util.LongBits(object.pennantItemId.low >>> 0, object.pennantItemId.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgApplyPennantUpgrade message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgApplyPennantUpgrade
         * @static
         * @param {CMsgApplyPennantUpgrade} message CMsgApplyPennantUpgrade
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgApplyPennantUpgrade.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.upgradeItemId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.upgradeItemId = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.pennantItemId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.pennantItemId = options.longs === String ? "0" : 0;
            }
            if (message.upgradeItemId != null && message.hasOwnProperty("upgradeItemId"))
                if (typeof message.upgradeItemId === "number")
                    object.upgradeItemId = options.longs === String ? String(message.upgradeItemId) : message.upgradeItemId;
                else
                    object.upgradeItemId = options.longs === String ? $util.Long.prototype.toString.call(message.upgradeItemId) : options.longs === Number ? new $util.LongBits(message.upgradeItemId.low >>> 0, message.upgradeItemId.high >>> 0).toNumber(true) : message.upgradeItemId;
            if (message.pennantItemId != null && message.hasOwnProperty("pennantItemId"))
                if (typeof message.pennantItemId === "number")
                    object.pennantItemId = options.longs === String ? String(message.pennantItemId) : message.pennantItemId;
                else
                    object.pennantItemId = options.longs === String ? $util.Long.prototype.toString.call(message.pennantItemId) : options.longs === Number ? new $util.LongBits(message.pennantItemId.low >>> 0, message.pennantItemId.high >>> 0).toNumber(true) : message.pennantItemId;
            return object;
        };
    
        /**
         * Converts this CMsgApplyPennantUpgrade to JSON.
         * @function toJSON
         * @memberof CMsgApplyPennantUpgrade
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgApplyPennantUpgrade.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgApplyPennantUpgrade
         * @function getTypeUrl
         * @memberof CMsgApplyPennantUpgrade
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgApplyPennantUpgrade.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgApplyPennantUpgrade";
        };
    
        return CMsgApplyPennantUpgrade;
    })();
    
    $root.CMsgApplyEggEssence = (function() {
    
        /**
         * Properties of a CMsgApplyEggEssence.
         * @exports ICMsgApplyEggEssence
         * @interface ICMsgApplyEggEssence
         * @property {number|Long|null} [essenceItemId] CMsgApplyEggEssence essenceItemId
         * @property {number|Long|null} [eggItemId] CMsgApplyEggEssence eggItemId
         */
    
        /**
         * Constructs a new CMsgApplyEggEssence.
         * @exports CMsgApplyEggEssence
         * @classdesc Represents a CMsgApplyEggEssence.
         * @implements ICMsgApplyEggEssence
         * @constructor
         * @param {ICMsgApplyEggEssence=} [properties] Properties to set
         */
        function CMsgApplyEggEssence(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgApplyEggEssence essenceItemId.
         * @member {number|Long} essenceItemId
         * @memberof CMsgApplyEggEssence
         * @instance
         */
        CMsgApplyEggEssence.prototype.essenceItemId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgApplyEggEssence eggItemId.
         * @member {number|Long} eggItemId
         * @memberof CMsgApplyEggEssence
         * @instance
         */
        CMsgApplyEggEssence.prototype.eggItemId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgApplyEggEssence instance using the specified properties.
         * @function create
         * @memberof CMsgApplyEggEssence
         * @static
         * @param {ICMsgApplyEggEssence=} [properties] Properties to set
         * @returns {CMsgApplyEggEssence} CMsgApplyEggEssence instance
         */
        CMsgApplyEggEssence.create = function create(properties) {
            return new CMsgApplyEggEssence(properties);
        };
    
        /**
         * Encodes the specified CMsgApplyEggEssence message. Does not implicitly {@link CMsgApplyEggEssence.verify|verify} messages.
         * @function encode
         * @memberof CMsgApplyEggEssence
         * @static
         * @param {ICMsgApplyEggEssence} message CMsgApplyEggEssence message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgApplyEggEssence.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.essenceItemId != null && Object.hasOwnProperty.call(message, "essenceItemId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.essenceItemId);
            if (message.eggItemId != null && Object.hasOwnProperty.call(message, "eggItemId"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.eggItemId);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgApplyEggEssence message, length delimited. Does not implicitly {@link CMsgApplyEggEssence.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgApplyEggEssence
         * @static
         * @param {ICMsgApplyEggEssence} message CMsgApplyEggEssence message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgApplyEggEssence.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgApplyEggEssence message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgApplyEggEssence
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgApplyEggEssence} CMsgApplyEggEssence
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgApplyEggEssence.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgApplyEggEssence();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.essenceItemId = reader.uint64();
                        break;
                    }
                case 2: {
                        message.eggItemId = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgApplyEggEssence message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgApplyEggEssence
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgApplyEggEssence} CMsgApplyEggEssence
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgApplyEggEssence.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgApplyEggEssence message.
         * @function verify
         * @memberof CMsgApplyEggEssence
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgApplyEggEssence.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.essenceItemId != null && message.hasOwnProperty("essenceItemId"))
                if (!$util.isInteger(message.essenceItemId) && !(message.essenceItemId && $util.isInteger(message.essenceItemId.low) && $util.isInteger(message.essenceItemId.high)))
                    return "essenceItemId: integer|Long expected";
            if (message.eggItemId != null && message.hasOwnProperty("eggItemId"))
                if (!$util.isInteger(message.eggItemId) && !(message.eggItemId && $util.isInteger(message.eggItemId.low) && $util.isInteger(message.eggItemId.high)))
                    return "eggItemId: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgApplyEggEssence message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgApplyEggEssence
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgApplyEggEssence} CMsgApplyEggEssence
         */
        CMsgApplyEggEssence.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgApplyEggEssence)
                return object;
            var message = new $root.CMsgApplyEggEssence();
            if (object.essenceItemId != null)
                if ($util.Long)
                    (message.essenceItemId = $util.Long.fromValue(object.essenceItemId)).unsigned = true;
                else if (typeof object.essenceItemId === "string")
                    message.essenceItemId = parseInt(object.essenceItemId, 10);
                else if (typeof object.essenceItemId === "number")
                    message.essenceItemId = object.essenceItemId;
                else if (typeof object.essenceItemId === "object")
                    message.essenceItemId = new $util.LongBits(object.essenceItemId.low >>> 0, object.essenceItemId.high >>> 0).toNumber(true);
            if (object.eggItemId != null)
                if ($util.Long)
                    (message.eggItemId = $util.Long.fromValue(object.eggItemId)).unsigned = true;
                else if (typeof object.eggItemId === "string")
                    message.eggItemId = parseInt(object.eggItemId, 10);
                else if (typeof object.eggItemId === "number")
                    message.eggItemId = object.eggItemId;
                else if (typeof object.eggItemId === "object")
                    message.eggItemId = new $util.LongBits(object.eggItemId.low >>> 0, object.eggItemId.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgApplyEggEssence message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgApplyEggEssence
         * @static
         * @param {CMsgApplyEggEssence} message CMsgApplyEggEssence
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgApplyEggEssence.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.essenceItemId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.essenceItemId = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.eggItemId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.eggItemId = options.longs === String ? "0" : 0;
            }
            if (message.essenceItemId != null && message.hasOwnProperty("essenceItemId"))
                if (typeof message.essenceItemId === "number")
                    object.essenceItemId = options.longs === String ? String(message.essenceItemId) : message.essenceItemId;
                else
                    object.essenceItemId = options.longs === String ? $util.Long.prototype.toString.call(message.essenceItemId) : options.longs === Number ? new $util.LongBits(message.essenceItemId.low >>> 0, message.essenceItemId.high >>> 0).toNumber(true) : message.essenceItemId;
            if (message.eggItemId != null && message.hasOwnProperty("eggItemId"))
                if (typeof message.eggItemId === "number")
                    object.eggItemId = options.longs === String ? String(message.eggItemId) : message.eggItemId;
                else
                    object.eggItemId = options.longs === String ? $util.Long.prototype.toString.call(message.eggItemId) : options.longs === Number ? new $util.LongBits(message.eggItemId.low >>> 0, message.eggItemId.high >>> 0).toNumber(true) : message.eggItemId;
            return object;
        };
    
        /**
         * Converts this CMsgApplyEggEssence to JSON.
         * @function toJSON
         * @memberof CMsgApplyEggEssence
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgApplyEggEssence.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgApplyEggEssence
         * @function getTypeUrl
         * @memberof CMsgApplyEggEssence
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgApplyEggEssence.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgApplyEggEssence";
        };
    
        return CMsgApplyEggEssence;
    })();
    
    $root.CSOEconItemAttribute = (function() {
    
        /**
         * Properties of a CSOEconItemAttribute.
         * @exports ICSOEconItemAttribute
         * @interface ICSOEconItemAttribute
         * @property {number|null} [defIndex] CSOEconItemAttribute defIndex
         * @property {number|null} [value] CSOEconItemAttribute value
         * @property {Uint8Array|null} [valueBytes] CSOEconItemAttribute valueBytes
         */
    
        /**
         * Constructs a new CSOEconItemAttribute.
         * @exports CSOEconItemAttribute
         * @classdesc Represents a CSOEconItemAttribute.
         * @implements ICSOEconItemAttribute
         * @constructor
         * @param {ICSOEconItemAttribute=} [properties] Properties to set
         */
        function CSOEconItemAttribute(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOEconItemAttribute defIndex.
         * @member {number} defIndex
         * @memberof CSOEconItemAttribute
         * @instance
         */
        CSOEconItemAttribute.prototype.defIndex = 0;
    
        /**
         * CSOEconItemAttribute value.
         * @member {number} value
         * @memberof CSOEconItemAttribute
         * @instance
         */
        CSOEconItemAttribute.prototype.value = 0;
    
        /**
         * CSOEconItemAttribute valueBytes.
         * @member {Uint8Array} valueBytes
         * @memberof CSOEconItemAttribute
         * @instance
         */
        CSOEconItemAttribute.prototype.valueBytes = $util.newBuffer([]);
    
        /**
         * Creates a new CSOEconItemAttribute instance using the specified properties.
         * @function create
         * @memberof CSOEconItemAttribute
         * @static
         * @param {ICSOEconItemAttribute=} [properties] Properties to set
         * @returns {CSOEconItemAttribute} CSOEconItemAttribute instance
         */
        CSOEconItemAttribute.create = function create(properties) {
            return new CSOEconItemAttribute(properties);
        };
    
        /**
         * Encodes the specified CSOEconItemAttribute message. Does not implicitly {@link CSOEconItemAttribute.verify|verify} messages.
         * @function encode
         * @memberof CSOEconItemAttribute
         * @static
         * @param {ICSOEconItemAttribute} message CSOEconItemAttribute message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconItemAttribute.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.defIndex != null && Object.hasOwnProperty.call(message, "defIndex"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.defIndex);
            if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.value);
            if (message.valueBytes != null && Object.hasOwnProperty.call(message, "valueBytes"))
                writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.valueBytes);
            return writer;
        };
    
        /**
         * Encodes the specified CSOEconItemAttribute message, length delimited. Does not implicitly {@link CSOEconItemAttribute.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOEconItemAttribute
         * @static
         * @param {ICSOEconItemAttribute} message CSOEconItemAttribute message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconItemAttribute.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOEconItemAttribute message from the specified reader or buffer.
         * @function decode
         * @memberof CSOEconItemAttribute
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOEconItemAttribute} CSOEconItemAttribute
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconItemAttribute.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOEconItemAttribute();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.defIndex = reader.uint32();
                        break;
                    }
                case 2: {
                        message.value = reader.uint32();
                        break;
                    }
                case 3: {
                        message.valueBytes = reader.bytes();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOEconItemAttribute message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOEconItemAttribute
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOEconItemAttribute} CSOEconItemAttribute
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconItemAttribute.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOEconItemAttribute message.
         * @function verify
         * @memberof CSOEconItemAttribute
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOEconItemAttribute.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.defIndex != null && message.hasOwnProperty("defIndex"))
                if (!$util.isInteger(message.defIndex))
                    return "defIndex: integer expected";
            if (message.value != null && message.hasOwnProperty("value"))
                if (!$util.isInteger(message.value))
                    return "value: integer expected";
            if (message.valueBytes != null && message.hasOwnProperty("valueBytes"))
                if (!(message.valueBytes && typeof message.valueBytes.length === "number" || $util.isString(message.valueBytes)))
                    return "valueBytes: buffer expected";
            return null;
        };
    
        /**
         * Creates a CSOEconItemAttribute message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOEconItemAttribute
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOEconItemAttribute} CSOEconItemAttribute
         */
        CSOEconItemAttribute.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOEconItemAttribute)
                return object;
            var message = new $root.CSOEconItemAttribute();
            if (object.defIndex != null)
                message.defIndex = object.defIndex >>> 0;
            if (object.value != null)
                message.value = object.value >>> 0;
            if (object.valueBytes != null)
                if (typeof object.valueBytes === "string")
                    $util.base64.decode(object.valueBytes, message.valueBytes = $util.newBuffer($util.base64.length(object.valueBytes)), 0);
                else if (object.valueBytes.length >= 0)
                    message.valueBytes = object.valueBytes;
            return message;
        };
    
        /**
         * Creates a plain object from a CSOEconItemAttribute message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOEconItemAttribute
         * @static
         * @param {CSOEconItemAttribute} message CSOEconItemAttribute
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOEconItemAttribute.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.defIndex = 0;
                object.value = 0;
                if (options.bytes === String)
                    object.valueBytes = "";
                else {
                    object.valueBytes = [];
                    if (options.bytes !== Array)
                        object.valueBytes = $util.newBuffer(object.valueBytes);
                }
            }
            if (message.defIndex != null && message.hasOwnProperty("defIndex"))
                object.defIndex = message.defIndex;
            if (message.value != null && message.hasOwnProperty("value"))
                object.value = message.value;
            if (message.valueBytes != null && message.hasOwnProperty("valueBytes"))
                object.valueBytes = options.bytes === String ? $util.base64.encode(message.valueBytes, 0, message.valueBytes.length) : options.bytes === Array ? Array.prototype.slice.call(message.valueBytes) : message.valueBytes;
            return object;
        };
    
        /**
         * Converts this CSOEconItemAttribute to JSON.
         * @function toJSON
         * @memberof CSOEconItemAttribute
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOEconItemAttribute.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOEconItemAttribute
         * @function getTypeUrl
         * @memberof CSOEconItemAttribute
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOEconItemAttribute.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOEconItemAttribute";
        };
    
        return CSOEconItemAttribute;
    })();
    
    $root.CSOEconItemEquipped = (function() {
    
        /**
         * Properties of a CSOEconItemEquipped.
         * @exports ICSOEconItemEquipped
         * @interface ICSOEconItemEquipped
         * @property {number|null} [newClass] CSOEconItemEquipped newClass
         * @property {number|null} [newSlot] CSOEconItemEquipped newSlot
         */
    
        /**
         * Constructs a new CSOEconItemEquipped.
         * @exports CSOEconItemEquipped
         * @classdesc Represents a CSOEconItemEquipped.
         * @implements ICSOEconItemEquipped
         * @constructor
         * @param {ICSOEconItemEquipped=} [properties] Properties to set
         */
        function CSOEconItemEquipped(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOEconItemEquipped newClass.
         * @member {number} newClass
         * @memberof CSOEconItemEquipped
         * @instance
         */
        CSOEconItemEquipped.prototype.newClass = 0;
    
        /**
         * CSOEconItemEquipped newSlot.
         * @member {number} newSlot
         * @memberof CSOEconItemEquipped
         * @instance
         */
        CSOEconItemEquipped.prototype.newSlot = 0;
    
        /**
         * Creates a new CSOEconItemEquipped instance using the specified properties.
         * @function create
         * @memberof CSOEconItemEquipped
         * @static
         * @param {ICSOEconItemEquipped=} [properties] Properties to set
         * @returns {CSOEconItemEquipped} CSOEconItemEquipped instance
         */
        CSOEconItemEquipped.create = function create(properties) {
            return new CSOEconItemEquipped(properties);
        };
    
        /**
         * Encodes the specified CSOEconItemEquipped message. Does not implicitly {@link CSOEconItemEquipped.verify|verify} messages.
         * @function encode
         * @memberof CSOEconItemEquipped
         * @static
         * @param {ICSOEconItemEquipped} message CSOEconItemEquipped message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconItemEquipped.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.newClass != null && Object.hasOwnProperty.call(message, "newClass"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.newClass);
            if (message.newSlot != null && Object.hasOwnProperty.call(message, "newSlot"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.newSlot);
            return writer;
        };
    
        /**
         * Encodes the specified CSOEconItemEquipped message, length delimited. Does not implicitly {@link CSOEconItemEquipped.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOEconItemEquipped
         * @static
         * @param {ICSOEconItemEquipped} message CSOEconItemEquipped message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconItemEquipped.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOEconItemEquipped message from the specified reader or buffer.
         * @function decode
         * @memberof CSOEconItemEquipped
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOEconItemEquipped} CSOEconItemEquipped
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconItemEquipped.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOEconItemEquipped();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.newClass = reader.uint32();
                        break;
                    }
                case 2: {
                        message.newSlot = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOEconItemEquipped message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOEconItemEquipped
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOEconItemEquipped} CSOEconItemEquipped
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconItemEquipped.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOEconItemEquipped message.
         * @function verify
         * @memberof CSOEconItemEquipped
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOEconItemEquipped.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.newClass != null && message.hasOwnProperty("newClass"))
                if (!$util.isInteger(message.newClass))
                    return "newClass: integer expected";
            if (message.newSlot != null && message.hasOwnProperty("newSlot"))
                if (!$util.isInteger(message.newSlot))
                    return "newSlot: integer expected";
            return null;
        };
    
        /**
         * Creates a CSOEconItemEquipped message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOEconItemEquipped
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOEconItemEquipped} CSOEconItemEquipped
         */
        CSOEconItemEquipped.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOEconItemEquipped)
                return object;
            var message = new $root.CSOEconItemEquipped();
            if (object.newClass != null)
                message.newClass = object.newClass >>> 0;
            if (object.newSlot != null)
                message.newSlot = object.newSlot >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CSOEconItemEquipped message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOEconItemEquipped
         * @static
         * @param {CSOEconItemEquipped} message CSOEconItemEquipped
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOEconItemEquipped.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.newClass = 0;
                object.newSlot = 0;
            }
            if (message.newClass != null && message.hasOwnProperty("newClass"))
                object.newClass = message.newClass;
            if (message.newSlot != null && message.hasOwnProperty("newSlot"))
                object.newSlot = message.newSlot;
            return object;
        };
    
        /**
         * Converts this CSOEconItemEquipped to JSON.
         * @function toJSON
         * @memberof CSOEconItemEquipped
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOEconItemEquipped.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOEconItemEquipped
         * @function getTypeUrl
         * @memberof CSOEconItemEquipped
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOEconItemEquipped.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOEconItemEquipped";
        };
    
        return CSOEconItemEquipped;
    })();
    
    $root.CSOEconItem = (function() {
    
        /**
         * Properties of a CSOEconItem.
         * @exports ICSOEconItem
         * @interface ICSOEconItem
         * @property {number|Long|null} [id] CSOEconItem id
         * @property {number|null} [accountId] CSOEconItem accountId
         * @property {number|null} [inventory] CSOEconItem inventory
         * @property {number|null} [defIndex] CSOEconItem defIndex
         * @property {number|null} [quantity] CSOEconItem quantity
         * @property {number|null} [level] CSOEconItem level
         * @property {number|null} [quality] CSOEconItem quality
         * @property {number|null} [flags] CSOEconItem flags
         * @property {number|null} [origin] CSOEconItem origin
         * @property {string|null} [customName] CSOEconItem customName
         * @property {string|null} [customDesc] CSOEconItem customDesc
         * @property {Array.<ICSOEconItemAttribute>|null} [attribute] CSOEconItem attribute
         * @property {ICSOEconItem|null} [interiorItem] CSOEconItem interiorItem
         * @property {boolean|null} [inUse] CSOEconItem inUse
         * @property {number|null} [style] CSOEconItem style
         * @property {number|Long|null} [originalId] CSOEconItem originalId
         * @property {Array.<ICSOEconItemEquipped>|null} [equippedState] CSOEconItem equippedState
         * @property {number|null} [rarity] CSOEconItem rarity
         */
    
        /**
         * Constructs a new CSOEconItem.
         * @exports CSOEconItem
         * @classdesc Represents a CSOEconItem.
         * @implements ICSOEconItem
         * @constructor
         * @param {ICSOEconItem=} [properties] Properties to set
         */
        function CSOEconItem(properties) {
            this.attribute = [];
            this.equippedState = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOEconItem id.
         * @member {number|Long} id
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CSOEconItem accountId.
         * @member {number} accountId
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.accountId = 0;
    
        /**
         * CSOEconItem inventory.
         * @member {number} inventory
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.inventory = 0;
    
        /**
         * CSOEconItem defIndex.
         * @member {number} defIndex
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.defIndex = 0;
    
        /**
         * CSOEconItem quantity.
         * @member {number} quantity
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.quantity = 0;
    
        /**
         * CSOEconItem level.
         * @member {number} level
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.level = 0;
    
        /**
         * CSOEconItem quality.
         * @member {number} quality
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.quality = 0;
    
        /**
         * CSOEconItem flags.
         * @member {number} flags
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.flags = 0;
    
        /**
         * CSOEconItem origin.
         * @member {number} origin
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.origin = 0;
    
        /**
         * CSOEconItem customName.
         * @member {string} customName
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.customName = "";
    
        /**
         * CSOEconItem customDesc.
         * @member {string} customDesc
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.customDesc = "";
    
        /**
         * CSOEconItem attribute.
         * @member {Array.<ICSOEconItemAttribute>} attribute
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.attribute = $util.emptyArray;
    
        /**
         * CSOEconItem interiorItem.
         * @member {ICSOEconItem|null|undefined} interiorItem
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.interiorItem = null;
    
        /**
         * CSOEconItem inUse.
         * @member {boolean} inUse
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.inUse = false;
    
        /**
         * CSOEconItem style.
         * @member {number} style
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.style = 0;
    
        /**
         * CSOEconItem originalId.
         * @member {number|Long} originalId
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.originalId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CSOEconItem equippedState.
         * @member {Array.<ICSOEconItemEquipped>} equippedState
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.equippedState = $util.emptyArray;
    
        /**
         * CSOEconItem rarity.
         * @member {number} rarity
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.rarity = 0;
    
        /**
         * Creates a new CSOEconItem instance using the specified properties.
         * @function create
         * @memberof CSOEconItem
         * @static
         * @param {ICSOEconItem=} [properties] Properties to set
         * @returns {CSOEconItem} CSOEconItem instance
         */
        CSOEconItem.create = function create(properties) {
            return new CSOEconItem(properties);
        };
    
        /**
         * Encodes the specified CSOEconItem message. Does not implicitly {@link CSOEconItem.verify|verify} messages.
         * @function encode
         * @memberof CSOEconItem
         * @static
         * @param {ICSOEconItem} message CSOEconItem message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconItem.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.id);
            if (message.accountId != null && Object.hasOwnProperty.call(message, "accountId"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.accountId);
            if (message.inventory != null && Object.hasOwnProperty.call(message, "inventory"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.inventory);
            if (message.defIndex != null && Object.hasOwnProperty.call(message, "defIndex"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.defIndex);
            if (message.quantity != null && Object.hasOwnProperty.call(message, "quantity"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.quantity);
            if (message.level != null && Object.hasOwnProperty.call(message, "level"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.level);
            if (message.quality != null && Object.hasOwnProperty.call(message, "quality"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.quality);
            if (message.flags != null && Object.hasOwnProperty.call(message, "flags"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.flags);
            if (message.origin != null && Object.hasOwnProperty.call(message, "origin"))
                writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.origin);
            if (message.customName != null && Object.hasOwnProperty.call(message, "customName"))
                writer.uint32(/* id 10, wireType 2 =*/82).string(message.customName);
            if (message.customDesc != null && Object.hasOwnProperty.call(message, "customDesc"))
                writer.uint32(/* id 11, wireType 2 =*/90).string(message.customDesc);
            if (message.attribute != null && message.attribute.length)
                for (var i = 0; i < message.attribute.length; ++i)
                    $root.CSOEconItemAttribute.encode(message.attribute[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
            if (message.interiorItem != null && Object.hasOwnProperty.call(message, "interiorItem"))
                $root.CSOEconItem.encode(message.interiorItem, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
            if (message.inUse != null && Object.hasOwnProperty.call(message, "inUse"))
                writer.uint32(/* id 14, wireType 0 =*/112).bool(message.inUse);
            if (message.style != null && Object.hasOwnProperty.call(message, "style"))
                writer.uint32(/* id 15, wireType 0 =*/120).uint32(message.style);
            if (message.originalId != null && Object.hasOwnProperty.call(message, "originalId"))
                writer.uint32(/* id 16, wireType 0 =*/128).uint64(message.originalId);
            if (message.equippedState != null && message.equippedState.length)
                for (var i = 0; i < message.equippedState.length; ++i)
                    $root.CSOEconItemEquipped.encode(message.equippedState[i], writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();
            if (message.rarity != null && Object.hasOwnProperty.call(message, "rarity"))
                writer.uint32(/* id 19, wireType 0 =*/152).uint32(message.rarity);
            return writer;
        };
    
        /**
         * Encodes the specified CSOEconItem message, length delimited. Does not implicitly {@link CSOEconItem.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOEconItem
         * @static
         * @param {ICSOEconItem} message CSOEconItem message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconItem.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOEconItem message from the specified reader or buffer.
         * @function decode
         * @memberof CSOEconItem
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOEconItem} CSOEconItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconItem.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOEconItem();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.id = reader.uint64();
                        break;
                    }
                case 2: {
                        message.accountId = reader.uint32();
                        break;
                    }
                case 3: {
                        message.inventory = reader.uint32();
                        break;
                    }
                case 4: {
                        message.defIndex = reader.uint32();
                        break;
                    }
                case 5: {
                        message.quantity = reader.uint32();
                        break;
                    }
                case 6: {
                        message.level = reader.uint32();
                        break;
                    }
                case 7: {
                        message.quality = reader.uint32();
                        break;
                    }
                case 8: {
                        message.flags = reader.uint32();
                        break;
                    }
                case 9: {
                        message.origin = reader.uint32();
                        break;
                    }
                case 10: {
                        message.customName = reader.string();
                        break;
                    }
                case 11: {
                        message.customDesc = reader.string();
                        break;
                    }
                case 12: {
                        if (!(message.attribute && message.attribute.length))
                            message.attribute = [];
                        message.attribute.push($root.CSOEconItemAttribute.decode(reader, reader.uint32()));
                        break;
                    }
                case 13: {
                        message.interiorItem = $root.CSOEconItem.decode(reader, reader.uint32());
                        break;
                    }
                case 14: {
                        message.inUse = reader.bool();
                        break;
                    }
                case 15: {
                        message.style = reader.uint32();
                        break;
                    }
                case 16: {
                        message.originalId = reader.uint64();
                        break;
                    }
                case 18: {
                        if (!(message.equippedState && message.equippedState.length))
                            message.equippedState = [];
                        message.equippedState.push($root.CSOEconItemEquipped.decode(reader, reader.uint32()));
                        break;
                    }
                case 19: {
                        message.rarity = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOEconItem message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOEconItem
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOEconItem} CSOEconItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconItem.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOEconItem message.
         * @function verify
         * @memberof CSOEconItem
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOEconItem.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.id != null && message.hasOwnProperty("id"))
                if (!$util.isInteger(message.id) && !(message.id && $util.isInteger(message.id.low) && $util.isInteger(message.id.high)))
                    return "id: integer|Long expected";
            if (message.accountId != null && message.hasOwnProperty("accountId"))
                if (!$util.isInteger(message.accountId))
                    return "accountId: integer expected";
            if (message.inventory != null && message.hasOwnProperty("inventory"))
                if (!$util.isInteger(message.inventory))
                    return "inventory: integer expected";
            if (message.defIndex != null && message.hasOwnProperty("defIndex"))
                if (!$util.isInteger(message.defIndex))
                    return "defIndex: integer expected";
            if (message.quantity != null && message.hasOwnProperty("quantity"))
                if (!$util.isInteger(message.quantity))
                    return "quantity: integer expected";
            if (message.level != null && message.hasOwnProperty("level"))
                if (!$util.isInteger(message.level))
                    return "level: integer expected";
            if (message.quality != null && message.hasOwnProperty("quality"))
                if (!$util.isInteger(message.quality))
                    return "quality: integer expected";
            if (message.flags != null && message.hasOwnProperty("flags"))
                if (!$util.isInteger(message.flags))
                    return "flags: integer expected";
            if (message.origin != null && message.hasOwnProperty("origin"))
                if (!$util.isInteger(message.origin))
                    return "origin: integer expected";
            if (message.customName != null && message.hasOwnProperty("customName"))
                if (!$util.isString(message.customName))
                    return "customName: string expected";
            if (message.customDesc != null && message.hasOwnProperty("customDesc"))
                if (!$util.isString(message.customDesc))
                    return "customDesc: string expected";
            if (message.attribute != null && message.hasOwnProperty("attribute")) {
                if (!Array.isArray(message.attribute))
                    return "attribute: array expected";
                for (var i = 0; i < message.attribute.length; ++i) {
                    var error = $root.CSOEconItemAttribute.verify(message.attribute[i]);
                    if (error)
                        return "attribute." + error;
                }
            }
            if (message.interiorItem != null && message.hasOwnProperty("interiorItem")) {
                var error = $root.CSOEconItem.verify(message.interiorItem);
                if (error)
                    return "interiorItem." + error;
            }
            if (message.inUse != null && message.hasOwnProperty("inUse"))
                if (typeof message.inUse !== "boolean")
                    return "inUse: boolean expected";
            if (message.style != null && message.hasOwnProperty("style"))
                if (!$util.isInteger(message.style))
                    return "style: integer expected";
            if (message.originalId != null && message.hasOwnProperty("originalId"))
                if (!$util.isInteger(message.originalId) && !(message.originalId && $util.isInteger(message.originalId.low) && $util.isInteger(message.originalId.high)))
                    return "originalId: integer|Long expected";
            if (message.equippedState != null && message.hasOwnProperty("equippedState")) {
                if (!Array.isArray(message.equippedState))
                    return "equippedState: array expected";
                for (var i = 0; i < message.equippedState.length; ++i) {
                    var error = $root.CSOEconItemEquipped.verify(message.equippedState[i]);
                    if (error)
                        return "equippedState." + error;
                }
            }
            if (message.rarity != null && message.hasOwnProperty("rarity"))
                if (!$util.isInteger(message.rarity))
                    return "rarity: integer expected";
            return null;
        };
    
        /**
         * Creates a CSOEconItem message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOEconItem
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOEconItem} CSOEconItem
         */
        CSOEconItem.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOEconItem)
                return object;
            var message = new $root.CSOEconItem();
            if (object.id != null)
                if ($util.Long)
                    (message.id = $util.Long.fromValue(object.id)).unsigned = true;
                else if (typeof object.id === "string")
                    message.id = parseInt(object.id, 10);
                else if (typeof object.id === "number")
                    message.id = object.id;
                else if (typeof object.id === "object")
                    message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber(true);
            if (object.accountId != null)
                message.accountId = object.accountId >>> 0;
            if (object.inventory != null)
                message.inventory = object.inventory >>> 0;
            if (object.defIndex != null)
                message.defIndex = object.defIndex >>> 0;
            if (object.quantity != null)
                message.quantity = object.quantity >>> 0;
            if (object.level != null)
                message.level = object.level >>> 0;
            if (object.quality != null)
                message.quality = object.quality >>> 0;
            if (object.flags != null)
                message.flags = object.flags >>> 0;
            if (object.origin != null)
                message.origin = object.origin >>> 0;
            if (object.customName != null)
                message.customName = String(object.customName);
            if (object.customDesc != null)
                message.customDesc = String(object.customDesc);
            if (object.attribute) {
                if (!Array.isArray(object.attribute))
                    throw TypeError(".CSOEconItem.attribute: array expected");
                message.attribute = [];
                for (var i = 0; i < object.attribute.length; ++i) {
                    if (typeof object.attribute[i] !== "object")
                        throw TypeError(".CSOEconItem.attribute: object expected");
                    message.attribute[i] = $root.CSOEconItemAttribute.fromObject(object.attribute[i]);
                }
            }
            if (object.interiorItem != null) {
                if (typeof object.interiorItem !== "object")
                    throw TypeError(".CSOEconItem.interiorItem: object expected");
                message.interiorItem = $root.CSOEconItem.fromObject(object.interiorItem);
            }
            if (object.inUse != null)
                message.inUse = Boolean(object.inUse);
            if (object.style != null)
                message.style = object.style >>> 0;
            if (object.originalId != null)
                if ($util.Long)
                    (message.originalId = $util.Long.fromValue(object.originalId)).unsigned = true;
                else if (typeof object.originalId === "string")
                    message.originalId = parseInt(object.originalId, 10);
                else if (typeof object.originalId === "number")
                    message.originalId = object.originalId;
                else if (typeof object.originalId === "object")
                    message.originalId = new $util.LongBits(object.originalId.low >>> 0, object.originalId.high >>> 0).toNumber(true);
            if (object.equippedState) {
                if (!Array.isArray(object.equippedState))
                    throw TypeError(".CSOEconItem.equippedState: array expected");
                message.equippedState = [];
                for (var i = 0; i < object.equippedState.length; ++i) {
                    if (typeof object.equippedState[i] !== "object")
                        throw TypeError(".CSOEconItem.equippedState: object expected");
                    message.equippedState[i] = $root.CSOEconItemEquipped.fromObject(object.equippedState[i]);
                }
            }
            if (object.rarity != null)
                message.rarity = object.rarity >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CSOEconItem message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOEconItem
         * @static
         * @param {CSOEconItem} message CSOEconItem
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOEconItem.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.attribute = [];
                object.equippedState = [];
            }
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.id = options.longs === String ? "0" : 0;
                object.accountId = 0;
                object.inventory = 0;
                object.defIndex = 0;
                object.quantity = 0;
                object.level = 0;
                object.quality = 0;
                object.flags = 0;
                object.origin = 0;
                object.customName = "";
                object.customDesc = "";
                object.interiorItem = null;
                object.inUse = false;
                object.style = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.originalId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.originalId = options.longs === String ? "0" : 0;
                object.rarity = 0;
            }
            if (message.id != null && message.hasOwnProperty("id"))
                if (typeof message.id === "number")
                    object.id = options.longs === String ? String(message.id) : message.id;
                else
                    object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber(true) : message.id;
            if (message.accountId != null && message.hasOwnProperty("accountId"))
                object.accountId = message.accountId;
            if (message.inventory != null && message.hasOwnProperty("inventory"))
                object.inventory = message.inventory;
            if (message.defIndex != null && message.hasOwnProperty("defIndex"))
                object.defIndex = message.defIndex;
            if (message.quantity != null && message.hasOwnProperty("quantity"))
                object.quantity = message.quantity;
            if (message.level != null && message.hasOwnProperty("level"))
                object.level = message.level;
            if (message.quality != null && message.hasOwnProperty("quality"))
                object.quality = message.quality;
            if (message.flags != null && message.hasOwnProperty("flags"))
                object.flags = message.flags;
            if (message.origin != null && message.hasOwnProperty("origin"))
                object.origin = message.origin;
            if (message.customName != null && message.hasOwnProperty("customName"))
                object.customName = message.customName;
            if (message.customDesc != null && message.hasOwnProperty("customDesc"))
                object.customDesc = message.customDesc;
            if (message.attribute && message.attribute.length) {
                object.attribute = [];
                for (var j = 0; j < message.attribute.length; ++j)
                    object.attribute[j] = $root.CSOEconItemAttribute.toObject(message.attribute[j], options);
            }
            if (message.interiorItem != null && message.hasOwnProperty("interiorItem"))
                object.interiorItem = $root.CSOEconItem.toObject(message.interiorItem, options);
            if (message.inUse != null && message.hasOwnProperty("inUse"))
                object.inUse = message.inUse;
            if (message.style != null && message.hasOwnProperty("style"))
                object.style = message.style;
            if (message.originalId != null && message.hasOwnProperty("originalId"))
                if (typeof message.originalId === "number")
                    object.originalId = options.longs === String ? String(message.originalId) : message.originalId;
                else
                    object.originalId = options.longs === String ? $util.Long.prototype.toString.call(message.originalId) : options.longs === Number ? new $util.LongBits(message.originalId.low >>> 0, message.originalId.high >>> 0).toNumber(true) : message.originalId;
            if (message.equippedState && message.equippedState.length) {
                object.equippedState = [];
                for (var j = 0; j < message.equippedState.length; ++j)
                    object.equippedState[j] = $root.CSOEconItemEquipped.toObject(message.equippedState[j], options);
            }
            if (message.rarity != null && message.hasOwnProperty("rarity"))
                object.rarity = message.rarity;
            return object;
        };
    
        /**
         * Converts this CSOEconItem to JSON.
         * @function toJSON
         * @memberof CSOEconItem
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOEconItem.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOEconItem
         * @function getTypeUrl
         * @memberof CSOEconItem
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOEconItem.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOEconItem";
        };
    
        return CSOEconItem;
    })();
    
    $root.CMsgAdjustItemEquippedState = (function() {
    
        /**
         * Properties of a CMsgAdjustItemEquippedState.
         * @exports ICMsgAdjustItemEquippedState
         * @interface ICMsgAdjustItemEquippedState
         * @property {number|Long|null} [itemId] CMsgAdjustItemEquippedState itemId
         * @property {number|null} [newClass] CMsgAdjustItemEquippedState newClass
         * @property {number|null} [newSlot] CMsgAdjustItemEquippedState newSlot
         * @property {boolean|null} [swap] CMsgAdjustItemEquippedState swap
         */
    
        /**
         * Constructs a new CMsgAdjustItemEquippedState.
         * @exports CMsgAdjustItemEquippedState
         * @classdesc Represents a CMsgAdjustItemEquippedState.
         * @implements ICMsgAdjustItemEquippedState
         * @constructor
         * @param {ICMsgAdjustItemEquippedState=} [properties] Properties to set
         */
        function CMsgAdjustItemEquippedState(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAdjustItemEquippedState itemId.
         * @member {number|Long} itemId
         * @memberof CMsgAdjustItemEquippedState
         * @instance
         */
        CMsgAdjustItemEquippedState.prototype.itemId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgAdjustItemEquippedState newClass.
         * @member {number} newClass
         * @memberof CMsgAdjustItemEquippedState
         * @instance
         */
        CMsgAdjustItemEquippedState.prototype.newClass = 0;
    
        /**
         * CMsgAdjustItemEquippedState newSlot.
         * @member {number} newSlot
         * @memberof CMsgAdjustItemEquippedState
         * @instance
         */
        CMsgAdjustItemEquippedState.prototype.newSlot = 0;
    
        /**
         * CMsgAdjustItemEquippedState swap.
         * @member {boolean} swap
         * @memberof CMsgAdjustItemEquippedState
         * @instance
         */
        CMsgAdjustItemEquippedState.prototype.swap = false;
    
        /**
         * Creates a new CMsgAdjustItemEquippedState instance using the specified properties.
         * @function create
         * @memberof CMsgAdjustItemEquippedState
         * @static
         * @param {ICMsgAdjustItemEquippedState=} [properties] Properties to set
         * @returns {CMsgAdjustItemEquippedState} CMsgAdjustItemEquippedState instance
         */
        CMsgAdjustItemEquippedState.create = function create(properties) {
            return new CMsgAdjustItemEquippedState(properties);
        };
    
        /**
         * Encodes the specified CMsgAdjustItemEquippedState message. Does not implicitly {@link CMsgAdjustItemEquippedState.verify|verify} messages.
         * @function encode
         * @memberof CMsgAdjustItemEquippedState
         * @static
         * @param {ICMsgAdjustItemEquippedState} message CMsgAdjustItemEquippedState message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAdjustItemEquippedState.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.itemId != null && Object.hasOwnProperty.call(message, "itemId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.itemId);
            if (message.newClass != null && Object.hasOwnProperty.call(message, "newClass"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.newClass);
            if (message.newSlot != null && Object.hasOwnProperty.call(message, "newSlot"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.newSlot);
            if (message.swap != null && Object.hasOwnProperty.call(message, "swap"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.swap);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAdjustItemEquippedState message, length delimited. Does not implicitly {@link CMsgAdjustItemEquippedState.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAdjustItemEquippedState
         * @static
         * @param {ICMsgAdjustItemEquippedState} message CMsgAdjustItemEquippedState message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAdjustItemEquippedState.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAdjustItemEquippedState message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAdjustItemEquippedState
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAdjustItemEquippedState} CMsgAdjustItemEquippedState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAdjustItemEquippedState.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAdjustItemEquippedState();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.itemId = reader.uint64();
                        break;
                    }
                case 2: {
                        message.newClass = reader.uint32();
                        break;
                    }
                case 3: {
                        message.newSlot = reader.uint32();
                        break;
                    }
                case 4: {
                        message.swap = reader.bool();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAdjustItemEquippedState message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAdjustItemEquippedState
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAdjustItemEquippedState} CMsgAdjustItemEquippedState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAdjustItemEquippedState.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAdjustItemEquippedState message.
         * @function verify
         * @memberof CMsgAdjustItemEquippedState
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAdjustItemEquippedState.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.itemId != null && message.hasOwnProperty("itemId"))
                if (!$util.isInteger(message.itemId) && !(message.itemId && $util.isInteger(message.itemId.low) && $util.isInteger(message.itemId.high)))
                    return "itemId: integer|Long expected";
            if (message.newClass != null && message.hasOwnProperty("newClass"))
                if (!$util.isInteger(message.newClass))
                    return "newClass: integer expected";
            if (message.newSlot != null && message.hasOwnProperty("newSlot"))
                if (!$util.isInteger(message.newSlot))
                    return "newSlot: integer expected";
            if (message.swap != null && message.hasOwnProperty("swap"))
                if (typeof message.swap !== "boolean")
                    return "swap: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgAdjustItemEquippedState message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAdjustItemEquippedState
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAdjustItemEquippedState} CMsgAdjustItemEquippedState
         */
        CMsgAdjustItemEquippedState.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAdjustItemEquippedState)
                return object;
            var message = new $root.CMsgAdjustItemEquippedState();
            if (object.itemId != null)
                if ($util.Long)
                    (message.itemId = $util.Long.fromValue(object.itemId)).unsigned = true;
                else if (typeof object.itemId === "string")
                    message.itemId = parseInt(object.itemId, 10);
                else if (typeof object.itemId === "number")
                    message.itemId = object.itemId;
                else if (typeof object.itemId === "object")
                    message.itemId = new $util.LongBits(object.itemId.low >>> 0, object.itemId.high >>> 0).toNumber(true);
            if (object.newClass != null)
                message.newClass = object.newClass >>> 0;
            if (object.newSlot != null)
                message.newSlot = object.newSlot >>> 0;
            if (object.swap != null)
                message.swap = Boolean(object.swap);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAdjustItemEquippedState message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAdjustItemEquippedState
         * @static
         * @param {CMsgAdjustItemEquippedState} message CMsgAdjustItemEquippedState
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAdjustItemEquippedState.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.itemId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.itemId = options.longs === String ? "0" : 0;
                object.newClass = 0;
                object.newSlot = 0;
                object.swap = false;
            }
            if (message.itemId != null && message.hasOwnProperty("itemId"))
                if (typeof message.itemId === "number")
                    object.itemId = options.longs === String ? String(message.itemId) : message.itemId;
                else
                    object.itemId = options.longs === String ? $util.Long.prototype.toString.call(message.itemId) : options.longs === Number ? new $util.LongBits(message.itemId.low >>> 0, message.itemId.high >>> 0).toNumber(true) : message.itemId;
            if (message.newClass != null && message.hasOwnProperty("newClass"))
                object.newClass = message.newClass;
            if (message.newSlot != null && message.hasOwnProperty("newSlot"))
                object.newSlot = message.newSlot;
            if (message.swap != null && message.hasOwnProperty("swap"))
                object.swap = message.swap;
            return object;
        };
    
        /**
         * Converts this CMsgAdjustItemEquippedState to JSON.
         * @function toJSON
         * @memberof CMsgAdjustItemEquippedState
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAdjustItemEquippedState.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAdjustItemEquippedState
         * @function getTypeUrl
         * @memberof CMsgAdjustItemEquippedState
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAdjustItemEquippedState.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAdjustItemEquippedState";
        };
    
        return CMsgAdjustItemEquippedState;
    })();
    
    $root.CMsgAdjustItemEquippedStateMulti = (function() {
    
        /**
         * Properties of a CMsgAdjustItemEquippedStateMulti.
         * @exports ICMsgAdjustItemEquippedStateMulti
         * @interface ICMsgAdjustItemEquippedStateMulti
         * @property {Array.<number|Long>|null} [tEquips] CMsgAdjustItemEquippedStateMulti tEquips
         * @property {Array.<number|Long>|null} [ctEquips] CMsgAdjustItemEquippedStateMulti ctEquips
         * @property {Array.<number|Long>|null} [noteamEquips] CMsgAdjustItemEquippedStateMulti noteamEquips
         */
    
        /**
         * Constructs a new CMsgAdjustItemEquippedStateMulti.
         * @exports CMsgAdjustItemEquippedStateMulti
         * @classdesc Represents a CMsgAdjustItemEquippedStateMulti.
         * @implements ICMsgAdjustItemEquippedStateMulti
         * @constructor
         * @param {ICMsgAdjustItemEquippedStateMulti=} [properties] Properties to set
         */
        function CMsgAdjustItemEquippedStateMulti(properties) {
            this.tEquips = [];
            this.ctEquips = [];
            this.noteamEquips = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAdjustItemEquippedStateMulti tEquips.
         * @member {Array.<number|Long>} tEquips
         * @memberof CMsgAdjustItemEquippedStateMulti
         * @instance
         */
        CMsgAdjustItemEquippedStateMulti.prototype.tEquips = $util.emptyArray;
    
        /**
         * CMsgAdjustItemEquippedStateMulti ctEquips.
         * @member {Array.<number|Long>} ctEquips
         * @memberof CMsgAdjustItemEquippedStateMulti
         * @instance
         */
        CMsgAdjustItemEquippedStateMulti.prototype.ctEquips = $util.emptyArray;
    
        /**
         * CMsgAdjustItemEquippedStateMulti noteamEquips.
         * @member {Array.<number|Long>} noteamEquips
         * @memberof CMsgAdjustItemEquippedStateMulti
         * @instance
         */
        CMsgAdjustItemEquippedStateMulti.prototype.noteamEquips = $util.emptyArray;
    
        /**
         * Creates a new CMsgAdjustItemEquippedStateMulti instance using the specified properties.
         * @function create
         * @memberof CMsgAdjustItemEquippedStateMulti
         * @static
         * @param {ICMsgAdjustItemEquippedStateMulti=} [properties] Properties to set
         * @returns {CMsgAdjustItemEquippedStateMulti} CMsgAdjustItemEquippedStateMulti instance
         */
        CMsgAdjustItemEquippedStateMulti.create = function create(properties) {
            return new CMsgAdjustItemEquippedStateMulti(properties);
        };
    
        /**
         * Encodes the specified CMsgAdjustItemEquippedStateMulti message. Does not implicitly {@link CMsgAdjustItemEquippedStateMulti.verify|verify} messages.
         * @function encode
         * @memberof CMsgAdjustItemEquippedStateMulti
         * @static
         * @param {ICMsgAdjustItemEquippedStateMulti} message CMsgAdjustItemEquippedStateMulti message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAdjustItemEquippedStateMulti.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.tEquips != null && message.tEquips.length)
                for (var i = 0; i < message.tEquips.length; ++i)
                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.tEquips[i]);
            if (message.ctEquips != null && message.ctEquips.length)
                for (var i = 0; i < message.ctEquips.length; ++i)
                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.ctEquips[i]);
            if (message.noteamEquips != null && message.noteamEquips.length)
                for (var i = 0; i < message.noteamEquips.length; ++i)
                    writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.noteamEquips[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAdjustItemEquippedStateMulti message, length delimited. Does not implicitly {@link CMsgAdjustItemEquippedStateMulti.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAdjustItemEquippedStateMulti
         * @static
         * @param {ICMsgAdjustItemEquippedStateMulti} message CMsgAdjustItemEquippedStateMulti message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAdjustItemEquippedStateMulti.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAdjustItemEquippedStateMulti message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAdjustItemEquippedStateMulti
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAdjustItemEquippedStateMulti} CMsgAdjustItemEquippedStateMulti
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAdjustItemEquippedStateMulti.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAdjustItemEquippedStateMulti();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.tEquips && message.tEquips.length))
                            message.tEquips = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.tEquips.push(reader.uint64());
                        } else
                            message.tEquips.push(reader.uint64());
                        break;
                    }
                case 2: {
                        if (!(message.ctEquips && message.ctEquips.length))
                            message.ctEquips = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.ctEquips.push(reader.uint64());
                        } else
                            message.ctEquips.push(reader.uint64());
                        break;
                    }
                case 3: {
                        if (!(message.noteamEquips && message.noteamEquips.length))
                            message.noteamEquips = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.noteamEquips.push(reader.uint64());
                        } else
                            message.noteamEquips.push(reader.uint64());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAdjustItemEquippedStateMulti message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAdjustItemEquippedStateMulti
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAdjustItemEquippedStateMulti} CMsgAdjustItemEquippedStateMulti
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAdjustItemEquippedStateMulti.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAdjustItemEquippedStateMulti message.
         * @function verify
         * @memberof CMsgAdjustItemEquippedStateMulti
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAdjustItemEquippedStateMulti.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.tEquips != null && message.hasOwnProperty("tEquips")) {
                if (!Array.isArray(message.tEquips))
                    return "tEquips: array expected";
                for (var i = 0; i < message.tEquips.length; ++i)
                    if (!$util.isInteger(message.tEquips[i]) && !(message.tEquips[i] && $util.isInteger(message.tEquips[i].low) && $util.isInteger(message.tEquips[i].high)))
                        return "tEquips: integer|Long[] expected";
            }
            if (message.ctEquips != null && message.hasOwnProperty("ctEquips")) {
                if (!Array.isArray(message.ctEquips))
                    return "ctEquips: array expected";
                for (var i = 0; i < message.ctEquips.length; ++i)
                    if (!$util.isInteger(message.ctEquips[i]) && !(message.ctEquips[i] && $util.isInteger(message.ctEquips[i].low) && $util.isInteger(message.ctEquips[i].high)))
                        return "ctEquips: integer|Long[] expected";
            }
            if (message.noteamEquips != null && message.hasOwnProperty("noteamEquips")) {
                if (!Array.isArray(message.noteamEquips))
                    return "noteamEquips: array expected";
                for (var i = 0; i < message.noteamEquips.length; ++i)
                    if (!$util.isInteger(message.noteamEquips[i]) && !(message.noteamEquips[i] && $util.isInteger(message.noteamEquips[i].low) && $util.isInteger(message.noteamEquips[i].high)))
                        return "noteamEquips: integer|Long[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgAdjustItemEquippedStateMulti message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAdjustItemEquippedStateMulti
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAdjustItemEquippedStateMulti} CMsgAdjustItemEquippedStateMulti
         */
        CMsgAdjustItemEquippedStateMulti.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAdjustItemEquippedStateMulti)
                return object;
            var message = new $root.CMsgAdjustItemEquippedStateMulti();
            if (object.tEquips) {
                if (!Array.isArray(object.tEquips))
                    throw TypeError(".CMsgAdjustItemEquippedStateMulti.tEquips: array expected");
                message.tEquips = [];
                for (var i = 0; i < object.tEquips.length; ++i)
                    if ($util.Long)
                        (message.tEquips[i] = $util.Long.fromValue(object.tEquips[i])).unsigned = true;
                    else if (typeof object.tEquips[i] === "string")
                        message.tEquips[i] = parseInt(object.tEquips[i], 10);
                    else if (typeof object.tEquips[i] === "number")
                        message.tEquips[i] = object.tEquips[i];
                    else if (typeof object.tEquips[i] === "object")
                        message.tEquips[i] = new $util.LongBits(object.tEquips[i].low >>> 0, object.tEquips[i].high >>> 0).toNumber(true);
            }
            if (object.ctEquips) {
                if (!Array.isArray(object.ctEquips))
                    throw TypeError(".CMsgAdjustItemEquippedStateMulti.ctEquips: array expected");
                message.ctEquips = [];
                for (var i = 0; i < object.ctEquips.length; ++i)
                    if ($util.Long)
                        (message.ctEquips[i] = $util.Long.fromValue(object.ctEquips[i])).unsigned = true;
                    else if (typeof object.ctEquips[i] === "string")
                        message.ctEquips[i] = parseInt(object.ctEquips[i], 10);
                    else if (typeof object.ctEquips[i] === "number")
                        message.ctEquips[i] = object.ctEquips[i];
                    else if (typeof object.ctEquips[i] === "object")
                        message.ctEquips[i] = new $util.LongBits(object.ctEquips[i].low >>> 0, object.ctEquips[i].high >>> 0).toNumber(true);
            }
            if (object.noteamEquips) {
                if (!Array.isArray(object.noteamEquips))
                    throw TypeError(".CMsgAdjustItemEquippedStateMulti.noteamEquips: array expected");
                message.noteamEquips = [];
                for (var i = 0; i < object.noteamEquips.length; ++i)
                    if ($util.Long)
                        (message.noteamEquips[i] = $util.Long.fromValue(object.noteamEquips[i])).unsigned = true;
                    else if (typeof object.noteamEquips[i] === "string")
                        message.noteamEquips[i] = parseInt(object.noteamEquips[i], 10);
                    else if (typeof object.noteamEquips[i] === "number")
                        message.noteamEquips[i] = object.noteamEquips[i];
                    else if (typeof object.noteamEquips[i] === "object")
                        message.noteamEquips[i] = new $util.LongBits(object.noteamEquips[i].low >>> 0, object.noteamEquips[i].high >>> 0).toNumber(true);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAdjustItemEquippedStateMulti message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAdjustItemEquippedStateMulti
         * @static
         * @param {CMsgAdjustItemEquippedStateMulti} message CMsgAdjustItemEquippedStateMulti
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAdjustItemEquippedStateMulti.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.tEquips = [];
                object.ctEquips = [];
                object.noteamEquips = [];
            }
            if (message.tEquips && message.tEquips.length) {
                object.tEquips = [];
                for (var j = 0; j < message.tEquips.length; ++j)
                    if (typeof message.tEquips[j] === "number")
                        object.tEquips[j] = options.longs === String ? String(message.tEquips[j]) : message.tEquips[j];
                    else
                        object.tEquips[j] = options.longs === String ? $util.Long.prototype.toString.call(message.tEquips[j]) : options.longs === Number ? new $util.LongBits(message.tEquips[j].low >>> 0, message.tEquips[j].high >>> 0).toNumber(true) : message.tEquips[j];
            }
            if (message.ctEquips && message.ctEquips.length) {
                object.ctEquips = [];
                for (var j = 0; j < message.ctEquips.length; ++j)
                    if (typeof message.ctEquips[j] === "number")
                        object.ctEquips[j] = options.longs === String ? String(message.ctEquips[j]) : message.ctEquips[j];
                    else
                        object.ctEquips[j] = options.longs === String ? $util.Long.prototype.toString.call(message.ctEquips[j]) : options.longs === Number ? new $util.LongBits(message.ctEquips[j].low >>> 0, message.ctEquips[j].high >>> 0).toNumber(true) : message.ctEquips[j];
            }
            if (message.noteamEquips && message.noteamEquips.length) {
                object.noteamEquips = [];
                for (var j = 0; j < message.noteamEquips.length; ++j)
                    if (typeof message.noteamEquips[j] === "number")
                        object.noteamEquips[j] = options.longs === String ? String(message.noteamEquips[j]) : message.noteamEquips[j];
                    else
                        object.noteamEquips[j] = options.longs === String ? $util.Long.prototype.toString.call(message.noteamEquips[j]) : options.longs === Number ? new $util.LongBits(message.noteamEquips[j].low >>> 0, message.noteamEquips[j].high >>> 0).toNumber(true) : message.noteamEquips[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgAdjustItemEquippedStateMulti to JSON.
         * @function toJSON
         * @memberof CMsgAdjustItemEquippedStateMulti
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAdjustItemEquippedStateMulti.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAdjustItemEquippedStateMulti
         * @function getTypeUrl
         * @memberof CMsgAdjustItemEquippedStateMulti
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAdjustItemEquippedStateMulti.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAdjustItemEquippedStateMulti";
        };
    
        return CMsgAdjustItemEquippedStateMulti;
    })();
    
    $root.CMsgSortItems = (function() {
    
        /**
         * Properties of a CMsgSortItems.
         * @exports ICMsgSortItems
         * @interface ICMsgSortItems
         * @property {number|null} [sortType] CMsgSortItems sortType
         */
    
        /**
         * Constructs a new CMsgSortItems.
         * @exports CMsgSortItems
         * @classdesc Represents a CMsgSortItems.
         * @implements ICMsgSortItems
         * @constructor
         * @param {ICMsgSortItems=} [properties] Properties to set
         */
        function CMsgSortItems(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgSortItems sortType.
         * @member {number} sortType
         * @memberof CMsgSortItems
         * @instance
         */
        CMsgSortItems.prototype.sortType = 0;
    
        /**
         * Creates a new CMsgSortItems instance using the specified properties.
         * @function create
         * @memberof CMsgSortItems
         * @static
         * @param {ICMsgSortItems=} [properties] Properties to set
         * @returns {CMsgSortItems} CMsgSortItems instance
         */
        CMsgSortItems.create = function create(properties) {
            return new CMsgSortItems(properties);
        };
    
        /**
         * Encodes the specified CMsgSortItems message. Does not implicitly {@link CMsgSortItems.verify|verify} messages.
         * @function encode
         * @memberof CMsgSortItems
         * @static
         * @param {ICMsgSortItems} message CMsgSortItems message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSortItems.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.sortType != null && Object.hasOwnProperty.call(message, "sortType"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.sortType);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgSortItems message, length delimited. Does not implicitly {@link CMsgSortItems.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgSortItems
         * @static
         * @param {ICMsgSortItems} message CMsgSortItems message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSortItems.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgSortItems message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgSortItems
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgSortItems} CMsgSortItems
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSortItems.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSortItems();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.sortType = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgSortItems message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgSortItems
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgSortItems} CMsgSortItems
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSortItems.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgSortItems message.
         * @function verify
         * @memberof CMsgSortItems
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgSortItems.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.sortType != null && message.hasOwnProperty("sortType"))
                if (!$util.isInteger(message.sortType))
                    return "sortType: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgSortItems message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgSortItems
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgSortItems} CMsgSortItems
         */
        CMsgSortItems.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgSortItems)
                return object;
            var message = new $root.CMsgSortItems();
            if (object.sortType != null)
                message.sortType = object.sortType >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgSortItems message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgSortItems
         * @static
         * @param {CMsgSortItems} message CMsgSortItems
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgSortItems.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.sortType = 0;
            if (message.sortType != null && message.hasOwnProperty("sortType"))
                object.sortType = message.sortType;
            return object;
        };
    
        /**
         * Converts this CMsgSortItems to JSON.
         * @function toJSON
         * @memberof CMsgSortItems
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgSortItems.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgSortItems
         * @function getTypeUrl
         * @memberof CMsgSortItems
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgSortItems.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgSortItems";
        };
    
        return CMsgSortItems;
    })();
    
    $root.CSOEconClaimCode = (function() {
    
        /**
         * Properties of a CSOEconClaimCode.
         * @exports ICSOEconClaimCode
         * @interface ICSOEconClaimCode
         * @property {number|null} [accountId] CSOEconClaimCode accountId
         * @property {number|null} [codeType] CSOEconClaimCode codeType
         * @property {number|null} [timeAcquired] CSOEconClaimCode timeAcquired
         * @property {string|null} [code] CSOEconClaimCode code
         */
    
        /**
         * Constructs a new CSOEconClaimCode.
         * @exports CSOEconClaimCode
         * @classdesc Represents a CSOEconClaimCode.
         * @implements ICSOEconClaimCode
         * @constructor
         * @param {ICSOEconClaimCode=} [properties] Properties to set
         */
        function CSOEconClaimCode(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOEconClaimCode accountId.
         * @member {number} accountId
         * @memberof CSOEconClaimCode
         * @instance
         */
        CSOEconClaimCode.prototype.accountId = 0;
    
        /**
         * CSOEconClaimCode codeType.
         * @member {number} codeType
         * @memberof CSOEconClaimCode
         * @instance
         */
        CSOEconClaimCode.prototype.codeType = 0;
    
        /**
         * CSOEconClaimCode timeAcquired.
         * @member {number} timeAcquired
         * @memberof CSOEconClaimCode
         * @instance
         */
        CSOEconClaimCode.prototype.timeAcquired = 0;
    
        /**
         * CSOEconClaimCode code.
         * @member {string} code
         * @memberof CSOEconClaimCode
         * @instance
         */
        CSOEconClaimCode.prototype.code = "";
    
        /**
         * Creates a new CSOEconClaimCode instance using the specified properties.
         * @function create
         * @memberof CSOEconClaimCode
         * @static
         * @param {ICSOEconClaimCode=} [properties] Properties to set
         * @returns {CSOEconClaimCode} CSOEconClaimCode instance
         */
        CSOEconClaimCode.create = function create(properties) {
            return new CSOEconClaimCode(properties);
        };
    
        /**
         * Encodes the specified CSOEconClaimCode message. Does not implicitly {@link CSOEconClaimCode.verify|verify} messages.
         * @function encode
         * @memberof CSOEconClaimCode
         * @static
         * @param {ICSOEconClaimCode} message CSOEconClaimCode message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconClaimCode.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.accountId != null && Object.hasOwnProperty.call(message, "accountId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.accountId);
            if (message.codeType != null && Object.hasOwnProperty.call(message, "codeType"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.codeType);
            if (message.timeAcquired != null && Object.hasOwnProperty.call(message, "timeAcquired"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.timeAcquired);
            if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.code);
            return writer;
        };
    
        /**
         * Encodes the specified CSOEconClaimCode message, length delimited. Does not implicitly {@link CSOEconClaimCode.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOEconClaimCode
         * @static
         * @param {ICSOEconClaimCode} message CSOEconClaimCode message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconClaimCode.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOEconClaimCode message from the specified reader or buffer.
         * @function decode
         * @memberof CSOEconClaimCode
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOEconClaimCode} CSOEconClaimCode
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconClaimCode.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOEconClaimCode();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.accountId = reader.uint32();
                        break;
                    }
                case 2: {
                        message.codeType = reader.uint32();
                        break;
                    }
                case 3: {
                        message.timeAcquired = reader.uint32();
                        break;
                    }
                case 4: {
                        message.code = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOEconClaimCode message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOEconClaimCode
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOEconClaimCode} CSOEconClaimCode
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconClaimCode.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOEconClaimCode message.
         * @function verify
         * @memberof CSOEconClaimCode
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOEconClaimCode.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.accountId != null && message.hasOwnProperty("accountId"))
                if (!$util.isInteger(message.accountId))
                    return "accountId: integer expected";
            if (message.codeType != null && message.hasOwnProperty("codeType"))
                if (!$util.isInteger(message.codeType))
                    return "codeType: integer expected";
            if (message.timeAcquired != null && message.hasOwnProperty("timeAcquired"))
                if (!$util.isInteger(message.timeAcquired))
                    return "timeAcquired: integer expected";
            if (message.code != null && message.hasOwnProperty("code"))
                if (!$util.isString(message.code))
                    return "code: string expected";
            return null;
        };
    
        /**
         * Creates a CSOEconClaimCode message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOEconClaimCode
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOEconClaimCode} CSOEconClaimCode
         */
        CSOEconClaimCode.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOEconClaimCode)
                return object;
            var message = new $root.CSOEconClaimCode();
            if (object.accountId != null)
                message.accountId = object.accountId >>> 0;
            if (object.codeType != null)
                message.codeType = object.codeType >>> 0;
            if (object.timeAcquired != null)
                message.timeAcquired = object.timeAcquired >>> 0;
            if (object.code != null)
                message.code = String(object.code);
            return message;
        };
    
        /**
         * Creates a plain object from a CSOEconClaimCode message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOEconClaimCode
         * @static
         * @param {CSOEconClaimCode} message CSOEconClaimCode
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOEconClaimCode.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.accountId = 0;
                object.codeType = 0;
                object.timeAcquired = 0;
                object.code = "";
            }
            if (message.accountId != null && message.hasOwnProperty("accountId"))
                object.accountId = message.accountId;
            if (message.codeType != null && message.hasOwnProperty("codeType"))
                object.codeType = message.codeType;
            if (message.timeAcquired != null && message.hasOwnProperty("timeAcquired"))
                object.timeAcquired = message.timeAcquired;
            if (message.code != null && message.hasOwnProperty("code"))
                object.code = message.code;
            return object;
        };
    
        /**
         * Converts this CSOEconClaimCode to JSON.
         * @function toJSON
         * @memberof CSOEconClaimCode
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOEconClaimCode.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOEconClaimCode
         * @function getTypeUrl
         * @memberof CSOEconClaimCode
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOEconClaimCode.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOEconClaimCode";
        };
    
        return CSOEconClaimCode;
    })();
    
    $root.CMsgStoreGetUserData = (function() {
    
        /**
         * Properties of a CMsgStoreGetUserData.
         * @exports ICMsgStoreGetUserData
         * @interface ICMsgStoreGetUserData
         * @property {number|null} [priceSheetVersion] CMsgStoreGetUserData priceSheetVersion
         * @property {number|null} [currency] CMsgStoreGetUserData currency
         */
    
        /**
         * Constructs a new CMsgStoreGetUserData.
         * @exports CMsgStoreGetUserData
         * @classdesc Represents a CMsgStoreGetUserData.
         * @implements ICMsgStoreGetUserData
         * @constructor
         * @param {ICMsgStoreGetUserData=} [properties] Properties to set
         */
        function CMsgStoreGetUserData(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgStoreGetUserData priceSheetVersion.
         * @member {number} priceSheetVersion
         * @memberof CMsgStoreGetUserData
         * @instance
         */
        CMsgStoreGetUserData.prototype.priceSheetVersion = 0;
    
        /**
         * CMsgStoreGetUserData currency.
         * @member {number} currency
         * @memberof CMsgStoreGetUserData
         * @instance
         */
        CMsgStoreGetUserData.prototype.currency = 0;
    
        /**
         * Creates a new CMsgStoreGetUserData instance using the specified properties.
         * @function create
         * @memberof CMsgStoreGetUserData
         * @static
         * @param {ICMsgStoreGetUserData=} [properties] Properties to set
         * @returns {CMsgStoreGetUserData} CMsgStoreGetUserData instance
         */
        CMsgStoreGetUserData.create = function create(properties) {
            return new CMsgStoreGetUserData(properties);
        };
    
        /**
         * Encodes the specified CMsgStoreGetUserData message. Does not implicitly {@link CMsgStoreGetUserData.verify|verify} messages.
         * @function encode
         * @memberof CMsgStoreGetUserData
         * @static
         * @param {ICMsgStoreGetUserData} message CMsgStoreGetUserData message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgStoreGetUserData.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.priceSheetVersion != null && Object.hasOwnProperty.call(message, "priceSheetVersion"))
                writer.uint32(/* id 1, wireType 5 =*/13).fixed32(message.priceSheetVersion);
            if (message.currency != null && Object.hasOwnProperty.call(message, "currency"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.currency);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgStoreGetUserData message, length delimited. Does not implicitly {@link CMsgStoreGetUserData.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgStoreGetUserData
         * @static
         * @param {ICMsgStoreGetUserData} message CMsgStoreGetUserData message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgStoreGetUserData.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgStoreGetUserData message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgStoreGetUserData
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgStoreGetUserData} CMsgStoreGetUserData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgStoreGetUserData.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgStoreGetUserData();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.priceSheetVersion = reader.fixed32();
                        break;
                    }
                case 2: {
                        message.currency = reader.int32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgStoreGetUserData message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgStoreGetUserData
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgStoreGetUserData} CMsgStoreGetUserData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgStoreGetUserData.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgStoreGetUserData message.
         * @function verify
         * @memberof CMsgStoreGetUserData
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgStoreGetUserData.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.priceSheetVersion != null && message.hasOwnProperty("priceSheetVersion"))
                if (!$util.isInteger(message.priceSheetVersion))
                    return "priceSheetVersion: integer expected";
            if (message.currency != null && message.hasOwnProperty("currency"))
                if (!$util.isInteger(message.currency))
                    return "currency: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgStoreGetUserData message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgStoreGetUserData
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgStoreGetUserData} CMsgStoreGetUserData
         */
        CMsgStoreGetUserData.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgStoreGetUserData)
                return object;
            var message = new $root.CMsgStoreGetUserData();
            if (object.priceSheetVersion != null)
                message.priceSheetVersion = object.priceSheetVersion >>> 0;
            if (object.currency != null)
                message.currency = object.currency | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgStoreGetUserData message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgStoreGetUserData
         * @static
         * @param {CMsgStoreGetUserData} message CMsgStoreGetUserData
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgStoreGetUserData.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.priceSheetVersion = 0;
                object.currency = 0;
            }
            if (message.priceSheetVersion != null && message.hasOwnProperty("priceSheetVersion"))
                object.priceSheetVersion = message.priceSheetVersion;
            if (message.currency != null && message.hasOwnProperty("currency"))
                object.currency = message.currency;
            return object;
        };
    
        /**
         * Converts this CMsgStoreGetUserData to JSON.
         * @function toJSON
         * @memberof CMsgStoreGetUserData
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgStoreGetUserData.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgStoreGetUserData
         * @function getTypeUrl
         * @memberof CMsgStoreGetUserData
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgStoreGetUserData.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgStoreGetUserData";
        };
    
        return CMsgStoreGetUserData;
    })();
    
    $root.CMsgStoreGetUserDataResponse = (function() {
    
        /**
         * Properties of a CMsgStoreGetUserDataResponse.
         * @exports ICMsgStoreGetUserDataResponse
         * @interface ICMsgStoreGetUserDataResponse
         * @property {number|null} [result] CMsgStoreGetUserDataResponse result
         * @property {number|null} [currencyDeprecated] CMsgStoreGetUserDataResponse currencyDeprecated
         * @property {string|null} [countryDeprecated] CMsgStoreGetUserDataResponse countryDeprecated
         * @property {number|null} [priceSheetVersion] CMsgStoreGetUserDataResponse priceSheetVersion
         * @property {Uint8Array|null} [priceSheet] CMsgStoreGetUserDataResponse priceSheet
         */
    
        /**
         * Constructs a new CMsgStoreGetUserDataResponse.
         * @exports CMsgStoreGetUserDataResponse
         * @classdesc Represents a CMsgStoreGetUserDataResponse.
         * @implements ICMsgStoreGetUserDataResponse
         * @constructor
         * @param {ICMsgStoreGetUserDataResponse=} [properties] Properties to set
         */
        function CMsgStoreGetUserDataResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgStoreGetUserDataResponse result.
         * @member {number} result
         * @memberof CMsgStoreGetUserDataResponse
         * @instance
         */
        CMsgStoreGetUserDataResponse.prototype.result = 0;
    
        /**
         * CMsgStoreGetUserDataResponse currencyDeprecated.
         * @member {number} currencyDeprecated
         * @memberof CMsgStoreGetUserDataResponse
         * @instance
         */
        CMsgStoreGetUserDataResponse.prototype.currencyDeprecated = 0;
    
        /**
         * CMsgStoreGetUserDataResponse countryDeprecated.
         * @member {string} countryDeprecated
         * @memberof CMsgStoreGetUserDataResponse
         * @instance
         */
        CMsgStoreGetUserDataResponse.prototype.countryDeprecated = "";
    
        /**
         * CMsgStoreGetUserDataResponse priceSheetVersion.
         * @member {number} priceSheetVersion
         * @memberof CMsgStoreGetUserDataResponse
         * @instance
         */
        CMsgStoreGetUserDataResponse.prototype.priceSheetVersion = 0;
    
        /**
         * CMsgStoreGetUserDataResponse priceSheet.
         * @member {Uint8Array} priceSheet
         * @memberof CMsgStoreGetUserDataResponse
         * @instance
         */
        CMsgStoreGetUserDataResponse.prototype.priceSheet = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgStoreGetUserDataResponse instance using the specified properties.
         * @function create
         * @memberof CMsgStoreGetUserDataResponse
         * @static
         * @param {ICMsgStoreGetUserDataResponse=} [properties] Properties to set
         * @returns {CMsgStoreGetUserDataResponse} CMsgStoreGetUserDataResponse instance
         */
        CMsgStoreGetUserDataResponse.create = function create(properties) {
            return new CMsgStoreGetUserDataResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgStoreGetUserDataResponse message. Does not implicitly {@link CMsgStoreGetUserDataResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgStoreGetUserDataResponse
         * @static
         * @param {ICMsgStoreGetUserDataResponse} message CMsgStoreGetUserDataResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgStoreGetUserDataResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.result != null && Object.hasOwnProperty.call(message, "result"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.result);
            if (message.currencyDeprecated != null && Object.hasOwnProperty.call(message, "currencyDeprecated"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.currencyDeprecated);
            if (message.countryDeprecated != null && Object.hasOwnProperty.call(message, "countryDeprecated"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.countryDeprecated);
            if (message.priceSheetVersion != null && Object.hasOwnProperty.call(message, "priceSheetVersion"))
                writer.uint32(/* id 4, wireType 5 =*/37).fixed32(message.priceSheetVersion);
            if (message.priceSheet != null && Object.hasOwnProperty.call(message, "priceSheet"))
                writer.uint32(/* id 8, wireType 2 =*/66).bytes(message.priceSheet);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgStoreGetUserDataResponse message, length delimited. Does not implicitly {@link CMsgStoreGetUserDataResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgStoreGetUserDataResponse
         * @static
         * @param {ICMsgStoreGetUserDataResponse} message CMsgStoreGetUserDataResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgStoreGetUserDataResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgStoreGetUserDataResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgStoreGetUserDataResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgStoreGetUserDataResponse} CMsgStoreGetUserDataResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgStoreGetUserDataResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgStoreGetUserDataResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.result = reader.int32();
                        break;
                    }
                case 2: {
                        message.currencyDeprecated = reader.int32();
                        break;
                    }
                case 3: {
                        message.countryDeprecated = reader.string();
                        break;
                    }
                case 4: {
                        message.priceSheetVersion = reader.fixed32();
                        break;
                    }
                case 8: {
                        message.priceSheet = reader.bytes();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgStoreGetUserDataResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgStoreGetUserDataResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgStoreGetUserDataResponse} CMsgStoreGetUserDataResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgStoreGetUserDataResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgStoreGetUserDataResponse message.
         * @function verify
         * @memberof CMsgStoreGetUserDataResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgStoreGetUserDataResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.result != null && message.hasOwnProperty("result"))
                if (!$util.isInteger(message.result))
                    return "result: integer expected";
            if (message.currencyDeprecated != null && message.hasOwnProperty("currencyDeprecated"))
                if (!$util.isInteger(message.currencyDeprecated))
                    return "currencyDeprecated: integer expected";
            if (message.countryDeprecated != null && message.hasOwnProperty("countryDeprecated"))
                if (!$util.isString(message.countryDeprecated))
                    return "countryDeprecated: string expected";
            if (message.priceSheetVersion != null && message.hasOwnProperty("priceSheetVersion"))
                if (!$util.isInteger(message.priceSheetVersion))
                    return "priceSheetVersion: integer expected";
            if (message.priceSheet != null && message.hasOwnProperty("priceSheet"))
                if (!(message.priceSheet && typeof message.priceSheet.length === "number" || $util.isString(message.priceSheet)))
                    return "priceSheet: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgStoreGetUserDataResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgStoreGetUserDataResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgStoreGetUserDataResponse} CMsgStoreGetUserDataResponse
         */
        CMsgStoreGetUserDataResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgStoreGetUserDataResponse)
                return object;
            var message = new $root.CMsgStoreGetUserDataResponse();
            if (object.result != null)
                message.result = object.result | 0;
            if (object.currencyDeprecated != null)
                message.currencyDeprecated = object.currencyDeprecated | 0;
            if (object.countryDeprecated != null)
                message.countryDeprecated = String(object.countryDeprecated);
            if (object.priceSheetVersion != null)
                message.priceSheetVersion = object.priceSheetVersion >>> 0;
            if (object.priceSheet != null)
                if (typeof object.priceSheet === "string")
                    $util.base64.decode(object.priceSheet, message.priceSheet = $util.newBuffer($util.base64.length(object.priceSheet)), 0);
                else if (object.priceSheet.length >= 0)
                    message.priceSheet = object.priceSheet;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgStoreGetUserDataResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgStoreGetUserDataResponse
         * @static
         * @param {CMsgStoreGetUserDataResponse} message CMsgStoreGetUserDataResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgStoreGetUserDataResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.result = 0;
                object.currencyDeprecated = 0;
                object.countryDeprecated = "";
                object.priceSheetVersion = 0;
                if (options.bytes === String)
                    object.priceSheet = "";
                else {
                    object.priceSheet = [];
                    if (options.bytes !== Array)
                        object.priceSheet = $util.newBuffer(object.priceSheet);
                }
            }
            if (message.result != null && message.hasOwnProperty("result"))
                object.result = message.result;
            if (message.currencyDeprecated != null && message.hasOwnProperty("currencyDeprecated"))
                object.currencyDeprecated = message.currencyDeprecated;
            if (message.countryDeprecated != null && message.hasOwnProperty("countryDeprecated"))
                object.countryDeprecated = message.countryDeprecated;
            if (message.priceSheetVersion != null && message.hasOwnProperty("priceSheetVersion"))
                object.priceSheetVersion = message.priceSheetVersion;
            if (message.priceSheet != null && message.hasOwnProperty("priceSheet"))
                object.priceSheet = options.bytes === String ? $util.base64.encode(message.priceSheet, 0, message.priceSheet.length) : options.bytes === Array ? Array.prototype.slice.call(message.priceSheet) : message.priceSheet;
            return object;
        };
    
        /**
         * Converts this CMsgStoreGetUserDataResponse to JSON.
         * @function toJSON
         * @memberof CMsgStoreGetUserDataResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgStoreGetUserDataResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgStoreGetUserDataResponse
         * @function getTypeUrl
         * @memberof CMsgStoreGetUserDataResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgStoreGetUserDataResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgStoreGetUserDataResponse";
        };
    
        return CMsgStoreGetUserDataResponse;
    })();
    
    $root.CMsgUpdateItemSchema = (function() {
    
        /**
         * Properties of a CMsgUpdateItemSchema.
         * @exports ICMsgUpdateItemSchema
         * @interface ICMsgUpdateItemSchema
         * @property {Uint8Array|null} [itemsGame] CMsgUpdateItemSchema itemsGame
         * @property {number|null} [itemSchemaVersion] CMsgUpdateItemSchema itemSchemaVersion
         * @property {string|null} [itemsGameUrl] CMsgUpdateItemSchema itemsGameUrl
         */
    
        /**
         * Constructs a new CMsgUpdateItemSchema.
         * @exports CMsgUpdateItemSchema
         * @classdesc Represents a CMsgUpdateItemSchema.
         * @implements ICMsgUpdateItemSchema
         * @constructor
         * @param {ICMsgUpdateItemSchema=} [properties] Properties to set
         */
        function CMsgUpdateItemSchema(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgUpdateItemSchema itemsGame.
         * @member {Uint8Array} itemsGame
         * @memberof CMsgUpdateItemSchema
         * @instance
         */
        CMsgUpdateItemSchema.prototype.itemsGame = $util.newBuffer([]);
    
        /**
         * CMsgUpdateItemSchema itemSchemaVersion.
         * @member {number} itemSchemaVersion
         * @memberof CMsgUpdateItemSchema
         * @instance
         */
        CMsgUpdateItemSchema.prototype.itemSchemaVersion = 0;
    
        /**
         * CMsgUpdateItemSchema itemsGameUrl.
         * @member {string} itemsGameUrl
         * @memberof CMsgUpdateItemSchema
         * @instance
         */
        CMsgUpdateItemSchema.prototype.itemsGameUrl = "";
    
        /**
         * Creates a new CMsgUpdateItemSchema instance using the specified properties.
         * @function create
         * @memberof CMsgUpdateItemSchema
         * @static
         * @param {ICMsgUpdateItemSchema=} [properties] Properties to set
         * @returns {CMsgUpdateItemSchema} CMsgUpdateItemSchema instance
         */
        CMsgUpdateItemSchema.create = function create(properties) {
            return new CMsgUpdateItemSchema(properties);
        };
    
        /**
         * Encodes the specified CMsgUpdateItemSchema message. Does not implicitly {@link CMsgUpdateItemSchema.verify|verify} messages.
         * @function encode
         * @memberof CMsgUpdateItemSchema
         * @static
         * @param {ICMsgUpdateItemSchema} message CMsgUpdateItemSchema message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgUpdateItemSchema.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.itemsGame != null && Object.hasOwnProperty.call(message, "itemsGame"))
                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.itemsGame);
            if (message.itemSchemaVersion != null && Object.hasOwnProperty.call(message, "itemSchemaVersion"))
                writer.uint32(/* id 2, wireType 5 =*/21).fixed32(message.itemSchemaVersion);
            if (message.itemsGameUrl != null && Object.hasOwnProperty.call(message, "itemsGameUrl"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.itemsGameUrl);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgUpdateItemSchema message, length delimited. Does not implicitly {@link CMsgUpdateItemSchema.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgUpdateItemSchema
         * @static
         * @param {ICMsgUpdateItemSchema} message CMsgUpdateItemSchema message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgUpdateItemSchema.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgUpdateItemSchema message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgUpdateItemSchema
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgUpdateItemSchema} CMsgUpdateItemSchema
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgUpdateItemSchema.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgUpdateItemSchema();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.itemsGame = reader.bytes();
                        break;
                    }
                case 2: {
                        message.itemSchemaVersion = reader.fixed32();
                        break;
                    }
                case 4: {
                        message.itemsGameUrl = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgUpdateItemSchema message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgUpdateItemSchema
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgUpdateItemSchema} CMsgUpdateItemSchema
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgUpdateItemSchema.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgUpdateItemSchema message.
         * @function verify
         * @memberof CMsgUpdateItemSchema
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgUpdateItemSchema.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.itemsGame != null && message.hasOwnProperty("itemsGame"))
                if (!(message.itemsGame && typeof message.itemsGame.length === "number" || $util.isString(message.itemsGame)))
                    return "itemsGame: buffer expected";
            if (message.itemSchemaVersion != null && message.hasOwnProperty("itemSchemaVersion"))
                if (!$util.isInteger(message.itemSchemaVersion))
                    return "itemSchemaVersion: integer expected";
            if (message.itemsGameUrl != null && message.hasOwnProperty("itemsGameUrl"))
                if (!$util.isString(message.itemsGameUrl))
                    return "itemsGameUrl: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgUpdateItemSchema message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgUpdateItemSchema
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgUpdateItemSchema} CMsgUpdateItemSchema
         */
        CMsgUpdateItemSchema.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgUpdateItemSchema)
                return object;
            var message = new $root.CMsgUpdateItemSchema();
            if (object.itemsGame != null)
                if (typeof object.itemsGame === "string")
                    $util.base64.decode(object.itemsGame, message.itemsGame = $util.newBuffer($util.base64.length(object.itemsGame)), 0);
                else if (object.itemsGame.length >= 0)
                    message.itemsGame = object.itemsGame;
            if (object.itemSchemaVersion != null)
                message.itemSchemaVersion = object.itemSchemaVersion >>> 0;
            if (object.itemsGameUrl != null)
                message.itemsGameUrl = String(object.itemsGameUrl);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgUpdateItemSchema message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgUpdateItemSchema
         * @static
         * @param {CMsgUpdateItemSchema} message CMsgUpdateItemSchema
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgUpdateItemSchema.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if (options.bytes === String)
                    object.itemsGame = "";
                else {
                    object.itemsGame = [];
                    if (options.bytes !== Array)
                        object.itemsGame = $util.newBuffer(object.itemsGame);
                }
                object.itemSchemaVersion = 0;
                object.itemsGameUrl = "";
            }
            if (message.itemsGame != null && message.hasOwnProperty("itemsGame"))
                object.itemsGame = options.bytes === String ? $util.base64.encode(message.itemsGame, 0, message.itemsGame.length) : options.bytes === Array ? Array.prototype.slice.call(message.itemsGame) : message.itemsGame;
            if (message.itemSchemaVersion != null && message.hasOwnProperty("itemSchemaVersion"))
                object.itemSchemaVersion = message.itemSchemaVersion;
            if (message.itemsGameUrl != null && message.hasOwnProperty("itemsGameUrl"))
                object.itemsGameUrl = message.itemsGameUrl;
            return object;
        };
    
        /**
         * Converts this CMsgUpdateItemSchema to JSON.
         * @function toJSON
         * @memberof CMsgUpdateItemSchema
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgUpdateItemSchema.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgUpdateItemSchema
         * @function getTypeUrl
         * @memberof CMsgUpdateItemSchema
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgUpdateItemSchema.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgUpdateItemSchema";
        };
    
        return CMsgUpdateItemSchema;
    })();
    
    $root.CMsgGCError = (function() {
    
        /**
         * Properties of a CMsgGCError.
         * @exports ICMsgGCError
         * @interface ICMsgGCError
         * @property {string|null} [errorText] CMsgGCError errorText
         */
    
        /**
         * Constructs a new CMsgGCError.
         * @exports CMsgGCError
         * @classdesc Represents a CMsgGCError.
         * @implements ICMsgGCError
         * @constructor
         * @param {ICMsgGCError=} [properties] Properties to set
         */
        function CMsgGCError(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCError errorText.
         * @member {string} errorText
         * @memberof CMsgGCError
         * @instance
         */
        CMsgGCError.prototype.errorText = "";
    
        /**
         * Creates a new CMsgGCError instance using the specified properties.
         * @function create
         * @memberof CMsgGCError
         * @static
         * @param {ICMsgGCError=} [properties] Properties to set
         * @returns {CMsgGCError} CMsgGCError instance
         */
        CMsgGCError.create = function create(properties) {
            return new CMsgGCError(properties);
        };
    
        /**
         * Encodes the specified CMsgGCError message. Does not implicitly {@link CMsgGCError.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCError
         * @static
         * @param {ICMsgGCError} message CMsgGCError message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCError.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.errorText != null && Object.hasOwnProperty.call(message, "errorText"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.errorText);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCError message, length delimited. Does not implicitly {@link CMsgGCError.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCError
         * @static
         * @param {ICMsgGCError} message CMsgGCError message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCError.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCError message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCError
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCError} CMsgGCError
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCError.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCError();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.errorText = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCError message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCError
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCError} CMsgGCError
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCError.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCError message.
         * @function verify
         * @memberof CMsgGCError
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCError.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.errorText != null && message.hasOwnProperty("errorText"))
                if (!$util.isString(message.errorText))
                    return "errorText: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCError message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCError
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCError} CMsgGCError
         */
        CMsgGCError.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCError)
                return object;
            var message = new $root.CMsgGCError();
            if (object.errorText != null)
                message.errorText = String(object.errorText);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCError message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCError
         * @static
         * @param {CMsgGCError} message CMsgGCError
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCError.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.errorText = "";
            if (message.errorText != null && message.hasOwnProperty("errorText"))
                object.errorText = message.errorText;
            return object;
        };
    
        /**
         * Converts this CMsgGCError to JSON.
         * @function toJSON
         * @memberof CMsgGCError
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCError.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCError
         * @function getTypeUrl
         * @memberof CMsgGCError
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCError.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCError";
        };
    
        return CMsgGCError;
    })();
    
    $root.CMsgRequestInventoryRefresh = (function() {
    
        /**
         * Properties of a CMsgRequestInventoryRefresh.
         * @exports ICMsgRequestInventoryRefresh
         * @interface ICMsgRequestInventoryRefresh
         */
    
        /**
         * Constructs a new CMsgRequestInventoryRefresh.
         * @exports CMsgRequestInventoryRefresh
         * @classdesc Represents a CMsgRequestInventoryRefresh.
         * @implements ICMsgRequestInventoryRefresh
         * @constructor
         * @param {ICMsgRequestInventoryRefresh=} [properties] Properties to set
         */
        function CMsgRequestInventoryRefresh(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CMsgRequestInventoryRefresh instance using the specified properties.
         * @function create
         * @memberof CMsgRequestInventoryRefresh
         * @static
         * @param {ICMsgRequestInventoryRefresh=} [properties] Properties to set
         * @returns {CMsgRequestInventoryRefresh} CMsgRequestInventoryRefresh instance
         */
        CMsgRequestInventoryRefresh.create = function create(properties) {
            return new CMsgRequestInventoryRefresh(properties);
        };
    
        /**
         * Encodes the specified CMsgRequestInventoryRefresh message. Does not implicitly {@link CMsgRequestInventoryRefresh.verify|verify} messages.
         * @function encode
         * @memberof CMsgRequestInventoryRefresh
         * @static
         * @param {ICMsgRequestInventoryRefresh} message CMsgRequestInventoryRefresh message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgRequestInventoryRefresh.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgRequestInventoryRefresh message, length delimited. Does not implicitly {@link CMsgRequestInventoryRefresh.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgRequestInventoryRefresh
         * @static
         * @param {ICMsgRequestInventoryRefresh} message CMsgRequestInventoryRefresh message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgRequestInventoryRefresh.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgRequestInventoryRefresh message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgRequestInventoryRefresh
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgRequestInventoryRefresh} CMsgRequestInventoryRefresh
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgRequestInventoryRefresh.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgRequestInventoryRefresh();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgRequestInventoryRefresh message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgRequestInventoryRefresh
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgRequestInventoryRefresh} CMsgRequestInventoryRefresh
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgRequestInventoryRefresh.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgRequestInventoryRefresh message.
         * @function verify
         * @memberof CMsgRequestInventoryRefresh
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgRequestInventoryRefresh.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CMsgRequestInventoryRefresh message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgRequestInventoryRefresh
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgRequestInventoryRefresh} CMsgRequestInventoryRefresh
         */
        CMsgRequestInventoryRefresh.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgRequestInventoryRefresh)
                return object;
            return new $root.CMsgRequestInventoryRefresh();
        };
    
        /**
         * Creates a plain object from a CMsgRequestInventoryRefresh message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgRequestInventoryRefresh
         * @static
         * @param {CMsgRequestInventoryRefresh} message CMsgRequestInventoryRefresh
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgRequestInventoryRefresh.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CMsgRequestInventoryRefresh to JSON.
         * @function toJSON
         * @memberof CMsgRequestInventoryRefresh
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgRequestInventoryRefresh.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgRequestInventoryRefresh
         * @function getTypeUrl
         * @memberof CMsgRequestInventoryRefresh
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgRequestInventoryRefresh.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgRequestInventoryRefresh";
        };
    
        return CMsgRequestInventoryRefresh;
    })();
    
    $root.CMsgConVarValue = (function() {
    
        /**
         * Properties of a CMsgConVarValue.
         * @exports ICMsgConVarValue
         * @interface ICMsgConVarValue
         * @property {string|null} [name] CMsgConVarValue name
         * @property {string|null} [value] CMsgConVarValue value
         */
    
        /**
         * Constructs a new CMsgConVarValue.
         * @exports CMsgConVarValue
         * @classdesc Represents a CMsgConVarValue.
         * @implements ICMsgConVarValue
         * @constructor
         * @param {ICMsgConVarValue=} [properties] Properties to set
         */
        function CMsgConVarValue(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgConVarValue name.
         * @member {string} name
         * @memberof CMsgConVarValue
         * @instance
         */
        CMsgConVarValue.prototype.name = "";
    
        /**
         * CMsgConVarValue value.
         * @member {string} value
         * @memberof CMsgConVarValue
         * @instance
         */
        CMsgConVarValue.prototype.value = "";
    
        /**
         * Creates a new CMsgConVarValue instance using the specified properties.
         * @function create
         * @memberof CMsgConVarValue
         * @static
         * @param {ICMsgConVarValue=} [properties] Properties to set
         * @returns {CMsgConVarValue} CMsgConVarValue instance
         */
        CMsgConVarValue.create = function create(properties) {
            return new CMsgConVarValue(properties);
        };
    
        /**
         * Encodes the specified CMsgConVarValue message. Does not implicitly {@link CMsgConVarValue.verify|verify} messages.
         * @function encode
         * @memberof CMsgConVarValue
         * @static
         * @param {ICMsgConVarValue} message CMsgConVarValue message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgConVarValue.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
            if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgConVarValue message, length delimited. Does not implicitly {@link CMsgConVarValue.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgConVarValue
         * @static
         * @param {ICMsgConVarValue} message CMsgConVarValue message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgConVarValue.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgConVarValue message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgConVarValue
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgConVarValue} CMsgConVarValue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgConVarValue.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgConVarValue();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.name = reader.string();
                        break;
                    }
                case 2: {
                        message.value = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgConVarValue message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgConVarValue
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgConVarValue} CMsgConVarValue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgConVarValue.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgConVarValue message.
         * @function verify
         * @memberof CMsgConVarValue
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgConVarValue.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.name != null && message.hasOwnProperty("name"))
                if (!$util.isString(message.name))
                    return "name: string expected";
            if (message.value != null && message.hasOwnProperty("value"))
                if (!$util.isString(message.value))
                    return "value: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgConVarValue message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgConVarValue
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgConVarValue} CMsgConVarValue
         */
        CMsgConVarValue.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgConVarValue)
                return object;
            var message = new $root.CMsgConVarValue();
            if (object.name != null)
                message.name = String(object.name);
            if (object.value != null)
                message.value = String(object.value);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgConVarValue message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgConVarValue
         * @static
         * @param {CMsgConVarValue} message CMsgConVarValue
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgConVarValue.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.name = "";
                object.value = "";
            }
            if (message.name != null && message.hasOwnProperty("name"))
                object.name = message.name;
            if (message.value != null && message.hasOwnProperty("value"))
                object.value = message.value;
            return object;
        };
    
        /**
         * Converts this CMsgConVarValue to JSON.
         * @function toJSON
         * @memberof CMsgConVarValue
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgConVarValue.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgConVarValue
         * @function getTypeUrl
         * @memberof CMsgConVarValue
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgConVarValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgConVarValue";
        };
    
        return CMsgConVarValue;
    })();
    
    $root.CMsgReplicateConVars = (function() {
    
        /**
         * Properties of a CMsgReplicateConVars.
         * @exports ICMsgReplicateConVars
         * @interface ICMsgReplicateConVars
         * @property {Array.<ICMsgConVarValue>|null} [convars] CMsgReplicateConVars convars
         */
    
        /**
         * Constructs a new CMsgReplicateConVars.
         * @exports CMsgReplicateConVars
         * @classdesc Represents a CMsgReplicateConVars.
         * @implements ICMsgReplicateConVars
         * @constructor
         * @param {ICMsgReplicateConVars=} [properties] Properties to set
         */
        function CMsgReplicateConVars(properties) {
            this.convars = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgReplicateConVars convars.
         * @member {Array.<ICMsgConVarValue>} convars
         * @memberof CMsgReplicateConVars
         * @instance
         */
        CMsgReplicateConVars.prototype.convars = $util.emptyArray;
    
        /**
         * Creates a new CMsgReplicateConVars instance using the specified properties.
         * @function create
         * @memberof CMsgReplicateConVars
         * @static
         * @param {ICMsgReplicateConVars=} [properties] Properties to set
         * @returns {CMsgReplicateConVars} CMsgReplicateConVars instance
         */
        CMsgReplicateConVars.create = function create(properties) {
            return new CMsgReplicateConVars(properties);
        };
    
        /**
         * Encodes the specified CMsgReplicateConVars message. Does not implicitly {@link CMsgReplicateConVars.verify|verify} messages.
         * @function encode
         * @memberof CMsgReplicateConVars
         * @static
         * @param {ICMsgReplicateConVars} message CMsgReplicateConVars message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgReplicateConVars.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.convars != null && message.convars.length)
                for (var i = 0; i < message.convars.length; ++i)
                    $root.CMsgConVarValue.encode(message.convars[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgReplicateConVars message, length delimited. Does not implicitly {@link CMsgReplicateConVars.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgReplicateConVars
         * @static
         * @param {ICMsgReplicateConVars} message CMsgReplicateConVars message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgReplicateConVars.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgReplicateConVars message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgReplicateConVars
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgReplicateConVars} CMsgReplicateConVars
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgReplicateConVars.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgReplicateConVars();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.convars && message.convars.length))
                            message.convars = [];
                        message.convars.push($root.CMsgConVarValue.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgReplicateConVars message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgReplicateConVars
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgReplicateConVars} CMsgReplicateConVars
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgReplicateConVars.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgReplicateConVars message.
         * @function verify
         * @memberof CMsgReplicateConVars
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgReplicateConVars.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.convars != null && message.hasOwnProperty("convars")) {
                if (!Array.isArray(message.convars))
                    return "convars: array expected";
                for (var i = 0; i < message.convars.length; ++i) {
                    var error = $root.CMsgConVarValue.verify(message.convars[i]);
                    if (error)
                        return "convars." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgReplicateConVars message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgReplicateConVars
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgReplicateConVars} CMsgReplicateConVars
         */
        CMsgReplicateConVars.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgReplicateConVars)
                return object;
            var message = new $root.CMsgReplicateConVars();
            if (object.convars) {
                if (!Array.isArray(object.convars))
                    throw TypeError(".CMsgReplicateConVars.convars: array expected");
                message.convars = [];
                for (var i = 0; i < object.convars.length; ++i) {
                    if (typeof object.convars[i] !== "object")
                        throw TypeError(".CMsgReplicateConVars.convars: object expected");
                    message.convars[i] = $root.CMsgConVarValue.fromObject(object.convars[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgReplicateConVars message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgReplicateConVars
         * @static
         * @param {CMsgReplicateConVars} message CMsgReplicateConVars
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgReplicateConVars.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.convars = [];
            if (message.convars && message.convars.length) {
                object.convars = [];
                for (var j = 0; j < message.convars.length; ++j)
                    object.convars[j] = $root.CMsgConVarValue.toObject(message.convars[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgReplicateConVars to JSON.
         * @function toJSON
         * @memberof CMsgReplicateConVars
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgReplicateConVars.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgReplicateConVars
         * @function getTypeUrl
         * @memberof CMsgReplicateConVars
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgReplicateConVars.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgReplicateConVars";
        };
    
        return CMsgReplicateConVars;
    })();
    
    $root.CMsgUseItem = (function() {
    
        /**
         * Properties of a CMsgUseItem.
         * @exports ICMsgUseItem
         * @interface ICMsgUseItem
         * @property {number|Long|null} [itemId] CMsgUseItem itemId
         * @property {number|Long|null} [targetSteamId] CMsgUseItem targetSteamId
         * @property {Array.<number>|null} [gift_PotentialTargets] CMsgUseItem gift_PotentialTargets
         * @property {number|null} [duel_ClassLock] CMsgUseItem duel_ClassLock
         * @property {number|Long|null} [initiatorSteamId] CMsgUseItem initiatorSteamId
         */
    
        /**
         * Constructs a new CMsgUseItem.
         * @exports CMsgUseItem
         * @classdesc Represents a CMsgUseItem.
         * @implements ICMsgUseItem
         * @constructor
         * @param {ICMsgUseItem=} [properties] Properties to set
         */
        function CMsgUseItem(properties) {
            this.gift_PotentialTargets = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgUseItem itemId.
         * @member {number|Long} itemId
         * @memberof CMsgUseItem
         * @instance
         */
        CMsgUseItem.prototype.itemId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgUseItem targetSteamId.
         * @member {number|Long} targetSteamId
         * @memberof CMsgUseItem
         * @instance
         */
        CMsgUseItem.prototype.targetSteamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgUseItem gift_PotentialTargets.
         * @member {Array.<number>} gift_PotentialTargets
         * @memberof CMsgUseItem
         * @instance
         */
        CMsgUseItem.prototype.gift_PotentialTargets = $util.emptyArray;
    
        /**
         * CMsgUseItem duel_ClassLock.
         * @member {number} duel_ClassLock
         * @memberof CMsgUseItem
         * @instance
         */
        CMsgUseItem.prototype.duel_ClassLock = 0;
    
        /**
         * CMsgUseItem initiatorSteamId.
         * @member {number|Long} initiatorSteamId
         * @memberof CMsgUseItem
         * @instance
         */
        CMsgUseItem.prototype.initiatorSteamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgUseItem instance using the specified properties.
         * @function create
         * @memberof CMsgUseItem
         * @static
         * @param {ICMsgUseItem=} [properties] Properties to set
         * @returns {CMsgUseItem} CMsgUseItem instance
         */
        CMsgUseItem.create = function create(properties) {
            return new CMsgUseItem(properties);
        };
    
        /**
         * Encodes the specified CMsgUseItem message. Does not implicitly {@link CMsgUseItem.verify|verify} messages.
         * @function encode
         * @memberof CMsgUseItem
         * @static
         * @param {ICMsgUseItem} message CMsgUseItem message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgUseItem.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.itemId != null && Object.hasOwnProperty.call(message, "itemId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.itemId);
            if (message.targetSteamId != null && Object.hasOwnProperty.call(message, "targetSteamId"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.targetSteamId);
            if (message.gift_PotentialTargets != null && message.gift_PotentialTargets.length)
                for (var i = 0; i < message.gift_PotentialTargets.length; ++i)
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.gift_PotentialTargets[i]);
            if (message.duel_ClassLock != null && Object.hasOwnProperty.call(message, "duel_ClassLock"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.duel_ClassLock);
            if (message.initiatorSteamId != null && Object.hasOwnProperty.call(message, "initiatorSteamId"))
                writer.uint32(/* id 5, wireType 1 =*/41).fixed64(message.initiatorSteamId);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgUseItem message, length delimited. Does not implicitly {@link CMsgUseItem.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgUseItem
         * @static
         * @param {ICMsgUseItem} message CMsgUseItem message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgUseItem.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgUseItem message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgUseItem
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgUseItem} CMsgUseItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgUseItem.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgUseItem();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.itemId = reader.uint64();
                        break;
                    }
                case 2: {
                        message.targetSteamId = reader.fixed64();
                        break;
                    }
                case 3: {
                        if (!(message.gift_PotentialTargets && message.gift_PotentialTargets.length))
                            message.gift_PotentialTargets = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.gift_PotentialTargets.push(reader.uint32());
                        } else
                            message.gift_PotentialTargets.push(reader.uint32());
                        break;
                    }
                case 4: {
                        message.duel_ClassLock = reader.uint32();
                        break;
                    }
                case 5: {
                        message.initiatorSteamId = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgUseItem message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgUseItem
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgUseItem} CMsgUseItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgUseItem.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgUseItem message.
         * @function verify
         * @memberof CMsgUseItem
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgUseItem.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.itemId != null && message.hasOwnProperty("itemId"))
                if (!$util.isInteger(message.itemId) && !(message.itemId && $util.isInteger(message.itemId.low) && $util.isInteger(message.itemId.high)))
                    return "itemId: integer|Long expected";
            if (message.targetSteamId != null && message.hasOwnProperty("targetSteamId"))
                if (!$util.isInteger(message.targetSteamId) && !(message.targetSteamId && $util.isInteger(message.targetSteamId.low) && $util.isInteger(message.targetSteamId.high)))
                    return "targetSteamId: integer|Long expected";
            if (message.gift_PotentialTargets != null && message.hasOwnProperty("gift_PotentialTargets")) {
                if (!Array.isArray(message.gift_PotentialTargets))
                    return "gift_PotentialTargets: array expected";
                for (var i = 0; i < message.gift_PotentialTargets.length; ++i)
                    if (!$util.isInteger(message.gift_PotentialTargets[i]))
                        return "gift_PotentialTargets: integer[] expected";
            }
            if (message.duel_ClassLock != null && message.hasOwnProperty("duel_ClassLock"))
                if (!$util.isInteger(message.duel_ClassLock))
                    return "duel_ClassLock: integer expected";
            if (message.initiatorSteamId != null && message.hasOwnProperty("initiatorSteamId"))
                if (!$util.isInteger(message.initiatorSteamId) && !(message.initiatorSteamId && $util.isInteger(message.initiatorSteamId.low) && $util.isInteger(message.initiatorSteamId.high)))
                    return "initiatorSteamId: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgUseItem message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgUseItem
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgUseItem} CMsgUseItem
         */
        CMsgUseItem.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgUseItem)
                return object;
            var message = new $root.CMsgUseItem();
            if (object.itemId != null)
                if ($util.Long)
                    (message.itemId = $util.Long.fromValue(object.itemId)).unsigned = true;
                else if (typeof object.itemId === "string")
                    message.itemId = parseInt(object.itemId, 10);
                else if (typeof object.itemId === "number")
                    message.itemId = object.itemId;
                else if (typeof object.itemId === "object")
                    message.itemId = new $util.LongBits(object.itemId.low >>> 0, object.itemId.high >>> 0).toNumber(true);
            if (object.targetSteamId != null)
                if ($util.Long)
                    (message.targetSteamId = $util.Long.fromValue(object.targetSteamId)).unsigned = false;
                else if (typeof object.targetSteamId === "string")
                    message.targetSteamId = parseInt(object.targetSteamId, 10);
                else if (typeof object.targetSteamId === "number")
                    message.targetSteamId = object.targetSteamId;
                else if (typeof object.targetSteamId === "object")
                    message.targetSteamId = new $util.LongBits(object.targetSteamId.low >>> 0, object.targetSteamId.high >>> 0).toNumber();
            if (object.gift_PotentialTargets) {
                if (!Array.isArray(object.gift_PotentialTargets))
                    throw TypeError(".CMsgUseItem.gift_PotentialTargets: array expected");
                message.gift_PotentialTargets = [];
                for (var i = 0; i < object.gift_PotentialTargets.length; ++i)
                    message.gift_PotentialTargets[i] = object.gift_PotentialTargets[i] >>> 0;
            }
            if (object.duel_ClassLock != null)
                message.duel_ClassLock = object.duel_ClassLock >>> 0;
            if (object.initiatorSteamId != null)
                if ($util.Long)
                    (message.initiatorSteamId = $util.Long.fromValue(object.initiatorSteamId)).unsigned = false;
                else if (typeof object.initiatorSteamId === "string")
                    message.initiatorSteamId = parseInt(object.initiatorSteamId, 10);
                else if (typeof object.initiatorSteamId === "number")
                    message.initiatorSteamId = object.initiatorSteamId;
                else if (typeof object.initiatorSteamId === "object")
                    message.initiatorSteamId = new $util.LongBits(object.initiatorSteamId.low >>> 0, object.initiatorSteamId.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgUseItem message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgUseItem
         * @static
         * @param {CMsgUseItem} message CMsgUseItem
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgUseItem.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.gift_PotentialTargets = [];
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.itemId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.itemId = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.targetSteamId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.targetSteamId = options.longs === String ? "0" : 0;
                object.duel_ClassLock = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.initiatorSteamId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.initiatorSteamId = options.longs === String ? "0" : 0;
            }
            if (message.itemId != null && message.hasOwnProperty("itemId"))
                if (typeof message.itemId === "number")
                    object.itemId = options.longs === String ? String(message.itemId) : message.itemId;
                else
                    object.itemId = options.longs === String ? $util.Long.prototype.toString.call(message.itemId) : options.longs === Number ? new $util.LongBits(message.itemId.low >>> 0, message.itemId.high >>> 0).toNumber(true) : message.itemId;
            if (message.targetSteamId != null && message.hasOwnProperty("targetSteamId"))
                if (typeof message.targetSteamId === "number")
                    object.targetSteamId = options.longs === String ? String(message.targetSteamId) : message.targetSteamId;
                else
                    object.targetSteamId = options.longs === String ? $util.Long.prototype.toString.call(message.targetSteamId) : options.longs === Number ? new $util.LongBits(message.targetSteamId.low >>> 0, message.targetSteamId.high >>> 0).toNumber() : message.targetSteamId;
            if (message.gift_PotentialTargets && message.gift_PotentialTargets.length) {
                object.gift_PotentialTargets = [];
                for (var j = 0; j < message.gift_PotentialTargets.length; ++j)
                    object.gift_PotentialTargets[j] = message.gift_PotentialTargets[j];
            }
            if (message.duel_ClassLock != null && message.hasOwnProperty("duel_ClassLock"))
                object.duel_ClassLock = message.duel_ClassLock;
            if (message.initiatorSteamId != null && message.hasOwnProperty("initiatorSteamId"))
                if (typeof message.initiatorSteamId === "number")
                    object.initiatorSteamId = options.longs === String ? String(message.initiatorSteamId) : message.initiatorSteamId;
                else
                    object.initiatorSteamId = options.longs === String ? $util.Long.prototype.toString.call(message.initiatorSteamId) : options.longs === Number ? new $util.LongBits(message.initiatorSteamId.low >>> 0, message.initiatorSteamId.high >>> 0).toNumber() : message.initiatorSteamId;
            return object;
        };
    
        /**
         * Converts this CMsgUseItem to JSON.
         * @function toJSON
         * @memberof CMsgUseItem
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgUseItem.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgUseItem
         * @function getTypeUrl
         * @memberof CMsgUseItem
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgUseItem.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgUseItem";
        };
    
        return CMsgUseItem;
    })();
    
    $root.CMsgReplayUploadedToYouTube = (function() {
    
        /**
         * Properties of a CMsgReplayUploadedToYouTube.
         * @exports ICMsgReplayUploadedToYouTube
         * @interface ICMsgReplayUploadedToYouTube
         * @property {string|null} [youtubeUrl] CMsgReplayUploadedToYouTube youtubeUrl
         * @property {string|null} [youtubeAccountName] CMsgReplayUploadedToYouTube youtubeAccountName
         * @property {number|Long|null} [sessionId] CMsgReplayUploadedToYouTube sessionId
         */
    
        /**
         * Constructs a new CMsgReplayUploadedToYouTube.
         * @exports CMsgReplayUploadedToYouTube
         * @classdesc Represents a CMsgReplayUploadedToYouTube.
         * @implements ICMsgReplayUploadedToYouTube
         * @constructor
         * @param {ICMsgReplayUploadedToYouTube=} [properties] Properties to set
         */
        function CMsgReplayUploadedToYouTube(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgReplayUploadedToYouTube youtubeUrl.
         * @member {string} youtubeUrl
         * @memberof CMsgReplayUploadedToYouTube
         * @instance
         */
        CMsgReplayUploadedToYouTube.prototype.youtubeUrl = "";
    
        /**
         * CMsgReplayUploadedToYouTube youtubeAccountName.
         * @member {string} youtubeAccountName
         * @memberof CMsgReplayUploadedToYouTube
         * @instance
         */
        CMsgReplayUploadedToYouTube.prototype.youtubeAccountName = "";
    
        /**
         * CMsgReplayUploadedToYouTube sessionId.
         * @member {number|Long} sessionId
         * @memberof CMsgReplayUploadedToYouTube
         * @instance
         */
        CMsgReplayUploadedToYouTube.prototype.sessionId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgReplayUploadedToYouTube instance using the specified properties.
         * @function create
         * @memberof CMsgReplayUploadedToYouTube
         * @static
         * @param {ICMsgReplayUploadedToYouTube=} [properties] Properties to set
         * @returns {CMsgReplayUploadedToYouTube} CMsgReplayUploadedToYouTube instance
         */
        CMsgReplayUploadedToYouTube.create = function create(properties) {
            return new CMsgReplayUploadedToYouTube(properties);
        };
    
        /**
         * Encodes the specified CMsgReplayUploadedToYouTube message. Does not implicitly {@link CMsgReplayUploadedToYouTube.verify|verify} messages.
         * @function encode
         * @memberof CMsgReplayUploadedToYouTube
         * @static
         * @param {ICMsgReplayUploadedToYouTube} message CMsgReplayUploadedToYouTube message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgReplayUploadedToYouTube.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.youtubeUrl != null && Object.hasOwnProperty.call(message, "youtubeUrl"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.youtubeUrl);
            if (message.youtubeAccountName != null && Object.hasOwnProperty.call(message, "youtubeAccountName"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.youtubeAccountName);
            if (message.sessionId != null && Object.hasOwnProperty.call(message, "sessionId"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.sessionId);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgReplayUploadedToYouTube message, length delimited. Does not implicitly {@link CMsgReplayUploadedToYouTube.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgReplayUploadedToYouTube
         * @static
         * @param {ICMsgReplayUploadedToYouTube} message CMsgReplayUploadedToYouTube message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgReplayUploadedToYouTube.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgReplayUploadedToYouTube message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgReplayUploadedToYouTube
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgReplayUploadedToYouTube} CMsgReplayUploadedToYouTube
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgReplayUploadedToYouTube.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgReplayUploadedToYouTube();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.youtubeUrl = reader.string();
                        break;
                    }
                case 2: {
                        message.youtubeAccountName = reader.string();
                        break;
                    }
                case 3: {
                        message.sessionId = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgReplayUploadedToYouTube message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgReplayUploadedToYouTube
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgReplayUploadedToYouTube} CMsgReplayUploadedToYouTube
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgReplayUploadedToYouTube.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgReplayUploadedToYouTube message.
         * @function verify
         * @memberof CMsgReplayUploadedToYouTube
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgReplayUploadedToYouTube.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.youtubeUrl != null && message.hasOwnProperty("youtubeUrl"))
                if (!$util.isString(message.youtubeUrl))
                    return "youtubeUrl: string expected";
            if (message.youtubeAccountName != null && message.hasOwnProperty("youtubeAccountName"))
                if (!$util.isString(message.youtubeAccountName))
                    return "youtubeAccountName: string expected";
            if (message.sessionId != null && message.hasOwnProperty("sessionId"))
                if (!$util.isInteger(message.sessionId) && !(message.sessionId && $util.isInteger(message.sessionId.low) && $util.isInteger(message.sessionId.high)))
                    return "sessionId: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgReplayUploadedToYouTube message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgReplayUploadedToYouTube
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgReplayUploadedToYouTube} CMsgReplayUploadedToYouTube
         */
        CMsgReplayUploadedToYouTube.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgReplayUploadedToYouTube)
                return object;
            var message = new $root.CMsgReplayUploadedToYouTube();
            if (object.youtubeUrl != null)
                message.youtubeUrl = String(object.youtubeUrl);
            if (object.youtubeAccountName != null)
                message.youtubeAccountName = String(object.youtubeAccountName);
            if (object.sessionId != null)
                if ($util.Long)
                    (message.sessionId = $util.Long.fromValue(object.sessionId)).unsigned = true;
                else if (typeof object.sessionId === "string")
                    message.sessionId = parseInt(object.sessionId, 10);
                else if (typeof object.sessionId === "number")
                    message.sessionId = object.sessionId;
                else if (typeof object.sessionId === "object")
                    message.sessionId = new $util.LongBits(object.sessionId.low >>> 0, object.sessionId.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgReplayUploadedToYouTube message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgReplayUploadedToYouTube
         * @static
         * @param {CMsgReplayUploadedToYouTube} message CMsgReplayUploadedToYouTube
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgReplayUploadedToYouTube.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.youtubeUrl = "";
                object.youtubeAccountName = "";
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.sessionId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.sessionId = options.longs === String ? "0" : 0;
            }
            if (message.youtubeUrl != null && message.hasOwnProperty("youtubeUrl"))
                object.youtubeUrl = message.youtubeUrl;
            if (message.youtubeAccountName != null && message.hasOwnProperty("youtubeAccountName"))
                object.youtubeAccountName = message.youtubeAccountName;
            if (message.sessionId != null && message.hasOwnProperty("sessionId"))
                if (typeof message.sessionId === "number")
                    object.sessionId = options.longs === String ? String(message.sessionId) : message.sessionId;
                else
                    object.sessionId = options.longs === String ? $util.Long.prototype.toString.call(message.sessionId) : options.longs === Number ? new $util.LongBits(message.sessionId.low >>> 0, message.sessionId.high >>> 0).toNumber(true) : message.sessionId;
            return object;
        };
    
        /**
         * Converts this CMsgReplayUploadedToYouTube to JSON.
         * @function toJSON
         * @memberof CMsgReplayUploadedToYouTube
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgReplayUploadedToYouTube.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgReplayUploadedToYouTube
         * @function getTypeUrl
         * @memberof CMsgReplayUploadedToYouTube
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgReplayUploadedToYouTube.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgReplayUploadedToYouTube";
        };
    
        return CMsgReplayUploadedToYouTube;
    })();
    
    $root.CMsgConsumableExhausted = (function() {
    
        /**
         * Properties of a CMsgConsumableExhausted.
         * @exports ICMsgConsumableExhausted
         * @interface ICMsgConsumableExhausted
         * @property {number|null} [itemDefId] CMsgConsumableExhausted itemDefId
         */
    
        /**
         * Constructs a new CMsgConsumableExhausted.
         * @exports CMsgConsumableExhausted
         * @classdesc Represents a CMsgConsumableExhausted.
         * @implements ICMsgConsumableExhausted
         * @constructor
         * @param {ICMsgConsumableExhausted=} [properties] Properties to set
         */
        function CMsgConsumableExhausted(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgConsumableExhausted itemDefId.
         * @member {number} itemDefId
         * @memberof CMsgConsumableExhausted
         * @instance
         */
        CMsgConsumableExhausted.prototype.itemDefId = 0;
    
        /**
         * Creates a new CMsgConsumableExhausted instance using the specified properties.
         * @function create
         * @memberof CMsgConsumableExhausted
         * @static
         * @param {ICMsgConsumableExhausted=} [properties] Properties to set
         * @returns {CMsgConsumableExhausted} CMsgConsumableExhausted instance
         */
        CMsgConsumableExhausted.create = function create(properties) {
            return new CMsgConsumableExhausted(properties);
        };
    
        /**
         * Encodes the specified CMsgConsumableExhausted message. Does not implicitly {@link CMsgConsumableExhausted.verify|verify} messages.
         * @function encode
         * @memberof CMsgConsumableExhausted
         * @static
         * @param {ICMsgConsumableExhausted} message CMsgConsumableExhausted message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgConsumableExhausted.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.itemDefId != null && Object.hasOwnProperty.call(message, "itemDefId"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.itemDefId);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgConsumableExhausted message, length delimited. Does not implicitly {@link CMsgConsumableExhausted.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgConsumableExhausted
         * @static
         * @param {ICMsgConsumableExhausted} message CMsgConsumableExhausted message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgConsumableExhausted.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgConsumableExhausted message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgConsumableExhausted
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgConsumableExhausted} CMsgConsumableExhausted
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgConsumableExhausted.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgConsumableExhausted();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.itemDefId = reader.int32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgConsumableExhausted message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgConsumableExhausted
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgConsumableExhausted} CMsgConsumableExhausted
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgConsumableExhausted.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgConsumableExhausted message.
         * @function verify
         * @memberof CMsgConsumableExhausted
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgConsumableExhausted.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.itemDefId != null && message.hasOwnProperty("itemDefId"))
                if (!$util.isInteger(message.itemDefId))
                    return "itemDefId: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgConsumableExhausted message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgConsumableExhausted
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgConsumableExhausted} CMsgConsumableExhausted
         */
        CMsgConsumableExhausted.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgConsumableExhausted)
                return object;
            var message = new $root.CMsgConsumableExhausted();
            if (object.itemDefId != null)
                message.itemDefId = object.itemDefId | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgConsumableExhausted message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgConsumableExhausted
         * @static
         * @param {CMsgConsumableExhausted} message CMsgConsumableExhausted
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgConsumableExhausted.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.itemDefId = 0;
            if (message.itemDefId != null && message.hasOwnProperty("itemDefId"))
                object.itemDefId = message.itemDefId;
            return object;
        };
    
        /**
         * Converts this CMsgConsumableExhausted to JSON.
         * @function toJSON
         * @memberof CMsgConsumableExhausted
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgConsumableExhausted.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgConsumableExhausted
         * @function getTypeUrl
         * @memberof CMsgConsumableExhausted
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgConsumableExhausted.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgConsumableExhausted";
        };
    
        return CMsgConsumableExhausted;
    })();
    
    $root.CMsgItemAcknowledged__DEPRECATED = (function() {
    
        /**
         * Properties of a CMsgItemAcknowledged__DEPRECATED.
         * @exports ICMsgItemAcknowledged__DEPRECATED
         * @interface ICMsgItemAcknowledged__DEPRECATED
         * @property {number|null} [accountId] CMsgItemAcknowledged__DEPRECATED accountId
         * @property {number|null} [inventory] CMsgItemAcknowledged__DEPRECATED inventory
         * @property {number|null} [defIndex] CMsgItemAcknowledged__DEPRECATED defIndex
         * @property {number|null} [quality] CMsgItemAcknowledged__DEPRECATED quality
         * @property {number|null} [rarity] CMsgItemAcknowledged__DEPRECATED rarity
         * @property {number|null} [origin] CMsgItemAcknowledged__DEPRECATED origin
         * @property {number|Long|null} [itemId] CMsgItemAcknowledged__DEPRECATED itemId
         */
    
        /**
         * Constructs a new CMsgItemAcknowledged__DEPRECATED.
         * @exports CMsgItemAcknowledged__DEPRECATED
         * @classdesc Represents a CMsgItemAcknowledged__DEPRECATED.
         * @implements ICMsgItemAcknowledged__DEPRECATED
         * @constructor
         * @param {ICMsgItemAcknowledged__DEPRECATED=} [properties] Properties to set
         */
        function CMsgItemAcknowledged__DEPRECATED(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgItemAcknowledged__DEPRECATED accountId.
         * @member {number} accountId
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @instance
         */
        CMsgItemAcknowledged__DEPRECATED.prototype.accountId = 0;
    
        /**
         * CMsgItemAcknowledged__DEPRECATED inventory.
         * @member {number} inventory
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @instance
         */
        CMsgItemAcknowledged__DEPRECATED.prototype.inventory = 0;
    
        /**
         * CMsgItemAcknowledged__DEPRECATED defIndex.
         * @member {number} defIndex
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @instance
         */
        CMsgItemAcknowledged__DEPRECATED.prototype.defIndex = 0;
    
        /**
         * CMsgItemAcknowledged__DEPRECATED quality.
         * @member {number} quality
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @instance
         */
        CMsgItemAcknowledged__DEPRECATED.prototype.quality = 0;
    
        /**
         * CMsgItemAcknowledged__DEPRECATED rarity.
         * @member {number} rarity
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @instance
         */
        CMsgItemAcknowledged__DEPRECATED.prototype.rarity = 0;
    
        /**
         * CMsgItemAcknowledged__DEPRECATED origin.
         * @member {number} origin
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @instance
         */
        CMsgItemAcknowledged__DEPRECATED.prototype.origin = 0;
    
        /**
         * CMsgItemAcknowledged__DEPRECATED itemId.
         * @member {number|Long} itemId
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @instance
         */
        CMsgItemAcknowledged__DEPRECATED.prototype.itemId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgItemAcknowledged__DEPRECATED instance using the specified properties.
         * @function create
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @static
         * @param {ICMsgItemAcknowledged__DEPRECATED=} [properties] Properties to set
         * @returns {CMsgItemAcknowledged__DEPRECATED} CMsgItemAcknowledged__DEPRECATED instance
         */
        CMsgItemAcknowledged__DEPRECATED.create = function create(properties) {
            return new CMsgItemAcknowledged__DEPRECATED(properties);
        };
    
        /**
         * Encodes the specified CMsgItemAcknowledged__DEPRECATED message. Does not implicitly {@link CMsgItemAcknowledged__DEPRECATED.verify|verify} messages.
         * @function encode
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @static
         * @param {ICMsgItemAcknowledged__DEPRECATED} message CMsgItemAcknowledged__DEPRECATED message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgItemAcknowledged__DEPRECATED.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.accountId != null && Object.hasOwnProperty.call(message, "accountId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.accountId);
            if (message.inventory != null && Object.hasOwnProperty.call(message, "inventory"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.inventory);
            if (message.defIndex != null && Object.hasOwnProperty.call(message, "defIndex"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.defIndex);
            if (message.quality != null && Object.hasOwnProperty.call(message, "quality"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.quality);
            if (message.rarity != null && Object.hasOwnProperty.call(message, "rarity"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.rarity);
            if (message.origin != null && Object.hasOwnProperty.call(message, "origin"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.origin);
            if (message.itemId != null && Object.hasOwnProperty.call(message, "itemId"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint64(message.itemId);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgItemAcknowledged__DEPRECATED message, length delimited. Does not implicitly {@link CMsgItemAcknowledged__DEPRECATED.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @static
         * @param {ICMsgItemAcknowledged__DEPRECATED} message CMsgItemAcknowledged__DEPRECATED message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgItemAcknowledged__DEPRECATED.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgItemAcknowledged__DEPRECATED message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgItemAcknowledged__DEPRECATED} CMsgItemAcknowledged__DEPRECATED
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgItemAcknowledged__DEPRECATED.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgItemAcknowledged__DEPRECATED();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.accountId = reader.uint32();
                        break;
                    }
                case 2: {
                        message.inventory = reader.uint32();
                        break;
                    }
                case 3: {
                        message.defIndex = reader.uint32();
                        break;
                    }
                case 4: {
                        message.quality = reader.uint32();
                        break;
                    }
                case 5: {
                        message.rarity = reader.uint32();
                        break;
                    }
                case 6: {
                        message.origin = reader.uint32();
                        break;
                    }
                case 7: {
                        message.itemId = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgItemAcknowledged__DEPRECATED message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgItemAcknowledged__DEPRECATED} CMsgItemAcknowledged__DEPRECATED
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgItemAcknowledged__DEPRECATED.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgItemAcknowledged__DEPRECATED message.
         * @function verify
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgItemAcknowledged__DEPRECATED.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.accountId != null && message.hasOwnProperty("accountId"))
                if (!$util.isInteger(message.accountId))
                    return "accountId: integer expected";
            if (message.inventory != null && message.hasOwnProperty("inventory"))
                if (!$util.isInteger(message.inventory))
                    return "inventory: integer expected";
            if (message.defIndex != null && message.hasOwnProperty("defIndex"))
                if (!$util.isInteger(message.defIndex))
                    return "defIndex: integer expected";
            if (message.quality != null && message.hasOwnProperty("quality"))
                if (!$util.isInteger(message.quality))
                    return "quality: integer expected";
            if (message.rarity != null && message.hasOwnProperty("rarity"))
                if (!$util.isInteger(message.rarity))
                    return "rarity: integer expected";
            if (message.origin != null && message.hasOwnProperty("origin"))
                if (!$util.isInteger(message.origin))
                    return "origin: integer expected";
            if (message.itemId != null && message.hasOwnProperty("itemId"))
                if (!$util.isInteger(message.itemId) && !(message.itemId && $util.isInteger(message.itemId.low) && $util.isInteger(message.itemId.high)))
                    return "itemId: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgItemAcknowledged__DEPRECATED message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgItemAcknowledged__DEPRECATED} CMsgItemAcknowledged__DEPRECATED
         */
        CMsgItemAcknowledged__DEPRECATED.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgItemAcknowledged__DEPRECATED)
                return object;
            var message = new $root.CMsgItemAcknowledged__DEPRECATED();
            if (object.accountId != null)
                message.accountId = object.accountId >>> 0;
            if (object.inventory != null)
                message.inventory = object.inventory >>> 0;
            if (object.defIndex != null)
                message.defIndex = object.defIndex >>> 0;
            if (object.quality != null)
                message.quality = object.quality >>> 0;
            if (object.rarity != null)
                message.rarity = object.rarity >>> 0;
            if (object.origin != null)
                message.origin = object.origin >>> 0;
            if (object.itemId != null)
                if ($util.Long)
                    (message.itemId = $util.Long.fromValue(object.itemId)).unsigned = true;
                else if (typeof object.itemId === "string")
                    message.itemId = parseInt(object.itemId, 10);
                else if (typeof object.itemId === "number")
                    message.itemId = object.itemId;
                else if (typeof object.itemId === "object")
                    message.itemId = new $util.LongBits(object.itemId.low >>> 0, object.itemId.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgItemAcknowledged__DEPRECATED message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @static
         * @param {CMsgItemAcknowledged__DEPRECATED} message CMsgItemAcknowledged__DEPRECATED
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgItemAcknowledged__DEPRECATED.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.accountId = 0;
                object.inventory = 0;
                object.defIndex = 0;
                object.quality = 0;
                object.rarity = 0;
                object.origin = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.itemId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.itemId = options.longs === String ? "0" : 0;
            }
            if (message.accountId != null && message.hasOwnProperty("accountId"))
                object.accountId = message.accountId;
            if (message.inventory != null && message.hasOwnProperty("inventory"))
                object.inventory = message.inventory;
            if (message.defIndex != null && message.hasOwnProperty("defIndex"))
                object.defIndex = message.defIndex;
            if (message.quality != null && message.hasOwnProperty("quality"))
                object.quality = message.quality;
            if (message.rarity != null && message.hasOwnProperty("rarity"))
                object.rarity = message.rarity;
            if (message.origin != null && message.hasOwnProperty("origin"))
                object.origin = message.origin;
            if (message.itemId != null && message.hasOwnProperty("itemId"))
                if (typeof message.itemId === "number")
                    object.itemId = options.longs === String ? String(message.itemId) : message.itemId;
                else
                    object.itemId = options.longs === String ? $util.Long.prototype.toString.call(message.itemId) : options.longs === Number ? new $util.LongBits(message.itemId.low >>> 0, message.itemId.high >>> 0).toNumber(true) : message.itemId;
            return object;
        };
    
        /**
         * Converts this CMsgItemAcknowledged__DEPRECATED to JSON.
         * @function toJSON
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgItemAcknowledged__DEPRECATED.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgItemAcknowledged__DEPRECATED
         * @function getTypeUrl
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgItemAcknowledged__DEPRECATED.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgItemAcknowledged__DEPRECATED";
        };
    
        return CMsgItemAcknowledged__DEPRECATED;
    })();
    
    $root.CMsgSetItemPositions = (function() {
    
        /**
         * Properties of a CMsgSetItemPositions.
         * @exports ICMsgSetItemPositions
         * @interface ICMsgSetItemPositions
         * @property {Array.<CMsgSetItemPositions.IItemPosition>|null} [itemPositions] CMsgSetItemPositions itemPositions
         */
    
        /**
         * Constructs a new CMsgSetItemPositions.
         * @exports CMsgSetItemPositions
         * @classdesc Represents a CMsgSetItemPositions.
         * @implements ICMsgSetItemPositions
         * @constructor
         * @param {ICMsgSetItemPositions=} [properties] Properties to set
         */
        function CMsgSetItemPositions(properties) {
            this.itemPositions = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgSetItemPositions itemPositions.
         * @member {Array.<CMsgSetItemPositions.IItemPosition>} itemPositions
         * @memberof CMsgSetItemPositions
         * @instance
         */
        CMsgSetItemPositions.prototype.itemPositions = $util.emptyArray;
    
        /**
         * Creates a new CMsgSetItemPositions instance using the specified properties.
         * @function create
         * @memberof CMsgSetItemPositions
         * @static
         * @param {ICMsgSetItemPositions=} [properties] Properties to set
         * @returns {CMsgSetItemPositions} CMsgSetItemPositions instance
         */
        CMsgSetItemPositions.create = function create(properties) {
            return new CMsgSetItemPositions(properties);
        };
    
        /**
         * Encodes the specified CMsgSetItemPositions message. Does not implicitly {@link CMsgSetItemPositions.verify|verify} messages.
         * @function encode
         * @memberof CMsgSetItemPositions
         * @static
         * @param {ICMsgSetItemPositions} message CMsgSetItemPositions message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSetItemPositions.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.itemPositions != null && message.itemPositions.length)
                for (var i = 0; i < message.itemPositions.length; ++i)
                    $root.CMsgSetItemPositions.ItemPosition.encode(message.itemPositions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgSetItemPositions message, length delimited. Does not implicitly {@link CMsgSetItemPositions.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgSetItemPositions
         * @static
         * @param {ICMsgSetItemPositions} message CMsgSetItemPositions message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSetItemPositions.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgSetItemPositions message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgSetItemPositions
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgSetItemPositions} CMsgSetItemPositions
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSetItemPositions.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSetItemPositions();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.itemPositions && message.itemPositions.length))
                            message.itemPositions = [];
                        message.itemPositions.push($root.CMsgSetItemPositions.ItemPosition.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgSetItemPositions message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgSetItemPositions
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgSetItemPositions} CMsgSetItemPositions
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSetItemPositions.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgSetItemPositions message.
         * @function verify
         * @memberof CMsgSetItemPositions
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgSetItemPositions.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.itemPositions != null && message.hasOwnProperty("itemPositions")) {
                if (!Array.isArray(message.itemPositions))
                    return "itemPositions: array expected";
                for (var i = 0; i < message.itemPositions.length; ++i) {
                    var error = $root.CMsgSetItemPositions.ItemPosition.verify(message.itemPositions[i]);
                    if (error)
                        return "itemPositions." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgSetItemPositions message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgSetItemPositions
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgSetItemPositions} CMsgSetItemPositions
         */
        CMsgSetItemPositions.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgSetItemPositions)
                return object;
            var message = new $root.CMsgSetItemPositions();
            if (object.itemPositions) {
                if (!Array.isArray(object.itemPositions))
                    throw TypeError(".CMsgSetItemPositions.itemPositions: array expected");
                message.itemPositions = [];
                for (var i = 0; i < object.itemPositions.length; ++i) {
                    if (typeof object.itemPositions[i] !== "object")
                        throw TypeError(".CMsgSetItemPositions.itemPositions: object expected");
                    message.itemPositions[i] = $root.CMsgSetItemPositions.ItemPosition.fromObject(object.itemPositions[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgSetItemPositions message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgSetItemPositions
         * @static
         * @param {CMsgSetItemPositions} message CMsgSetItemPositions
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgSetItemPositions.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.itemPositions = [];
            if (message.itemPositions && message.itemPositions.length) {
                object.itemPositions = [];
                for (var j = 0; j < message.itemPositions.length; ++j)
                    object.itemPositions[j] = $root.CMsgSetItemPositions.ItemPosition.toObject(message.itemPositions[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgSetItemPositions to JSON.
         * @function toJSON
         * @memberof CMsgSetItemPositions
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgSetItemPositions.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgSetItemPositions
         * @function getTypeUrl
         * @memberof CMsgSetItemPositions
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgSetItemPositions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgSetItemPositions";
        };
    
        CMsgSetItemPositions.ItemPosition = (function() {
    
            /**
             * Properties of an ItemPosition.
             * @memberof CMsgSetItemPositions
             * @interface IItemPosition
             * @property {number|null} [legacyItemId] ItemPosition legacyItemId
             * @property {number|null} [position] ItemPosition position
             * @property {number|Long|null} [itemId] ItemPosition itemId
             */
    
            /**
             * Constructs a new ItemPosition.
             * @memberof CMsgSetItemPositions
             * @classdesc Represents an ItemPosition.
             * @implements IItemPosition
             * @constructor
             * @param {CMsgSetItemPositions.IItemPosition=} [properties] Properties to set
             */
            function ItemPosition(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * ItemPosition legacyItemId.
             * @member {number} legacyItemId
             * @memberof CMsgSetItemPositions.ItemPosition
             * @instance
             */
            ItemPosition.prototype.legacyItemId = 0;
    
            /**
             * ItemPosition position.
             * @member {number} position
             * @memberof CMsgSetItemPositions.ItemPosition
             * @instance
             */
            ItemPosition.prototype.position = 0;
    
            /**
             * ItemPosition itemId.
             * @member {number|Long} itemId
             * @memberof CMsgSetItemPositions.ItemPosition
             * @instance
             */
            ItemPosition.prototype.itemId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Creates a new ItemPosition instance using the specified properties.
             * @function create
             * @memberof CMsgSetItemPositions.ItemPosition
             * @static
             * @param {CMsgSetItemPositions.IItemPosition=} [properties] Properties to set
             * @returns {CMsgSetItemPositions.ItemPosition} ItemPosition instance
             */
            ItemPosition.create = function create(properties) {
                return new ItemPosition(properties);
            };
    
            /**
             * Encodes the specified ItemPosition message. Does not implicitly {@link CMsgSetItemPositions.ItemPosition.verify|verify} messages.
             * @function encode
             * @memberof CMsgSetItemPositions.ItemPosition
             * @static
             * @param {CMsgSetItemPositions.IItemPosition} message ItemPosition message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ItemPosition.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.legacyItemId != null && Object.hasOwnProperty.call(message, "legacyItemId"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.legacyItemId);
                if (message.position != null && Object.hasOwnProperty.call(message, "position"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.position);
                if (message.itemId != null && Object.hasOwnProperty.call(message, "itemId"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.itemId);
                return writer;
            };
    
            /**
             * Encodes the specified ItemPosition message, length delimited. Does not implicitly {@link CMsgSetItemPositions.ItemPosition.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgSetItemPositions.ItemPosition
             * @static
             * @param {CMsgSetItemPositions.IItemPosition} message ItemPosition message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ItemPosition.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an ItemPosition message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgSetItemPositions.ItemPosition
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgSetItemPositions.ItemPosition} ItemPosition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ItemPosition.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSetItemPositions.ItemPosition();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.legacyItemId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.position = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.itemId = reader.uint64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an ItemPosition message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgSetItemPositions.ItemPosition
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgSetItemPositions.ItemPosition} ItemPosition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ItemPosition.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an ItemPosition message.
             * @function verify
             * @memberof CMsgSetItemPositions.ItemPosition
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ItemPosition.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.legacyItemId != null && message.hasOwnProperty("legacyItemId"))
                    if (!$util.isInteger(message.legacyItemId))
                        return "legacyItemId: integer expected";
                if (message.position != null && message.hasOwnProperty("position"))
                    if (!$util.isInteger(message.position))
                        return "position: integer expected";
                if (message.itemId != null && message.hasOwnProperty("itemId"))
                    if (!$util.isInteger(message.itemId) && !(message.itemId && $util.isInteger(message.itemId.low) && $util.isInteger(message.itemId.high)))
                        return "itemId: integer|Long expected";
                return null;
            };
    
            /**
             * Creates an ItemPosition message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgSetItemPositions.ItemPosition
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgSetItemPositions.ItemPosition} ItemPosition
             */
            ItemPosition.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgSetItemPositions.ItemPosition)
                    return object;
                var message = new $root.CMsgSetItemPositions.ItemPosition();
                if (object.legacyItemId != null)
                    message.legacyItemId = object.legacyItemId >>> 0;
                if (object.position != null)
                    message.position = object.position >>> 0;
                if (object.itemId != null)
                    if ($util.Long)
                        (message.itemId = $util.Long.fromValue(object.itemId)).unsigned = true;
                    else if (typeof object.itemId === "string")
                        message.itemId = parseInt(object.itemId, 10);
                    else if (typeof object.itemId === "number")
                        message.itemId = object.itemId;
                    else if (typeof object.itemId === "object")
                        message.itemId = new $util.LongBits(object.itemId.low >>> 0, object.itemId.high >>> 0).toNumber(true);
                return message;
            };
    
            /**
             * Creates a plain object from an ItemPosition message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgSetItemPositions.ItemPosition
             * @static
             * @param {CMsgSetItemPositions.ItemPosition} message ItemPosition
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ItemPosition.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.legacyItemId = 0;
                    object.position = 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.itemId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.itemId = options.longs === String ? "0" : 0;
                }
                if (message.legacyItemId != null && message.hasOwnProperty("legacyItemId"))
                    object.legacyItemId = message.legacyItemId;
                if (message.position != null && message.hasOwnProperty("position"))
                    object.position = message.position;
                if (message.itemId != null && message.hasOwnProperty("itemId"))
                    if (typeof message.itemId === "number")
                        object.itemId = options.longs === String ? String(message.itemId) : message.itemId;
                    else
                        object.itemId = options.longs === String ? $util.Long.prototype.toString.call(message.itemId) : options.longs === Number ? new $util.LongBits(message.itemId.low >>> 0, message.itemId.high >>> 0).toNumber(true) : message.itemId;
                return object;
            };
    
            /**
             * Converts this ItemPosition to JSON.
             * @function toJSON
             * @memberof CMsgSetItemPositions.ItemPosition
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ItemPosition.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for ItemPosition
             * @function getTypeUrl
             * @memberof CMsgSetItemPositions.ItemPosition
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ItemPosition.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgSetItemPositions.ItemPosition";
            };
    
            return ItemPosition;
        })();
    
        return CMsgSetItemPositions;
    })();
    
    $root.CMsgGCReportAbuse = (function() {
    
        /**
         * Properties of a CMsgGCReportAbuse.
         * @exports ICMsgGCReportAbuse
         * @interface ICMsgGCReportAbuse
         * @property {number|Long|null} [targetSteamId] CMsgGCReportAbuse targetSteamId
         * @property {string|null} [description] CMsgGCReportAbuse description
         * @property {number|Long|null} [gid] CMsgGCReportAbuse gid
         * @property {number|null} [abuseType] CMsgGCReportAbuse abuseType
         * @property {number|null} [contentType] CMsgGCReportAbuse contentType
         * @property {number|null} [targetGameServerIp] CMsgGCReportAbuse targetGameServerIp
         * @property {number|null} [targetGameServerPort] CMsgGCReportAbuse targetGameServerPort
         */
    
        /**
         * Constructs a new CMsgGCReportAbuse.
         * @exports CMsgGCReportAbuse
         * @classdesc Represents a CMsgGCReportAbuse.
         * @implements ICMsgGCReportAbuse
         * @constructor
         * @param {ICMsgGCReportAbuse=} [properties] Properties to set
         */
        function CMsgGCReportAbuse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCReportAbuse targetSteamId.
         * @member {number|Long} targetSteamId
         * @memberof CMsgGCReportAbuse
         * @instance
         */
        CMsgGCReportAbuse.prototype.targetSteamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGCReportAbuse description.
         * @member {string} description
         * @memberof CMsgGCReportAbuse
         * @instance
         */
        CMsgGCReportAbuse.prototype.description = "";
    
        /**
         * CMsgGCReportAbuse gid.
         * @member {number|Long} gid
         * @memberof CMsgGCReportAbuse
         * @instance
         */
        CMsgGCReportAbuse.prototype.gid = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgGCReportAbuse abuseType.
         * @member {number} abuseType
         * @memberof CMsgGCReportAbuse
         * @instance
         */
        CMsgGCReportAbuse.prototype.abuseType = 0;
    
        /**
         * CMsgGCReportAbuse contentType.
         * @member {number} contentType
         * @memberof CMsgGCReportAbuse
         * @instance
         */
        CMsgGCReportAbuse.prototype.contentType = 0;
    
        /**
         * CMsgGCReportAbuse targetGameServerIp.
         * @member {number} targetGameServerIp
         * @memberof CMsgGCReportAbuse
         * @instance
         */
        CMsgGCReportAbuse.prototype.targetGameServerIp = 0;
    
        /**
         * CMsgGCReportAbuse targetGameServerPort.
         * @member {number} targetGameServerPort
         * @memberof CMsgGCReportAbuse
         * @instance
         */
        CMsgGCReportAbuse.prototype.targetGameServerPort = 0;
    
        /**
         * Creates a new CMsgGCReportAbuse instance using the specified properties.
         * @function create
         * @memberof CMsgGCReportAbuse
         * @static
         * @param {ICMsgGCReportAbuse=} [properties] Properties to set
         * @returns {CMsgGCReportAbuse} CMsgGCReportAbuse instance
         */
        CMsgGCReportAbuse.create = function create(properties) {
            return new CMsgGCReportAbuse(properties);
        };
    
        /**
         * Encodes the specified CMsgGCReportAbuse message. Does not implicitly {@link CMsgGCReportAbuse.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCReportAbuse
         * @static
         * @param {ICMsgGCReportAbuse} message CMsgGCReportAbuse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCReportAbuse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.targetSteamId != null && Object.hasOwnProperty.call(message, "targetSteamId"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.targetSteamId);
            if (message.abuseType != null && Object.hasOwnProperty.call(message, "abuseType"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.abuseType);
            if (message.contentType != null && Object.hasOwnProperty.call(message, "contentType"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.contentType);
            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.description);
            if (message.gid != null && Object.hasOwnProperty.call(message, "gid"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint64(message.gid);
            if (message.targetGameServerIp != null && Object.hasOwnProperty.call(message, "targetGameServerIp"))
                writer.uint32(/* id 6, wireType 5 =*/53).fixed32(message.targetGameServerIp);
            if (message.targetGameServerPort != null && Object.hasOwnProperty.call(message, "targetGameServerPort"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.targetGameServerPort);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCReportAbuse message, length delimited. Does not implicitly {@link CMsgGCReportAbuse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCReportAbuse
         * @static
         * @param {ICMsgGCReportAbuse} message CMsgGCReportAbuse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCReportAbuse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCReportAbuse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCReportAbuse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCReportAbuse} CMsgGCReportAbuse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCReportAbuse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCReportAbuse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.targetSteamId = reader.fixed64();
                        break;
                    }
                case 4: {
                        message.description = reader.string();
                        break;
                    }
                case 5: {
                        message.gid = reader.uint64();
                        break;
                    }
                case 2: {
                        message.abuseType = reader.uint32();
                        break;
                    }
                case 3: {
                        message.contentType = reader.uint32();
                        break;
                    }
                case 6: {
                        message.targetGameServerIp = reader.fixed32();
                        break;
                    }
                case 7: {
                        message.targetGameServerPort = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCReportAbuse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCReportAbuse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCReportAbuse} CMsgGCReportAbuse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCReportAbuse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCReportAbuse message.
         * @function verify
         * @memberof CMsgGCReportAbuse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCReportAbuse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.targetSteamId != null && message.hasOwnProperty("targetSteamId"))
                if (!$util.isInteger(message.targetSteamId) && !(message.targetSteamId && $util.isInteger(message.targetSteamId.low) && $util.isInteger(message.targetSteamId.high)))
                    return "targetSteamId: integer|Long expected";
            if (message.description != null && message.hasOwnProperty("description"))
                if (!$util.isString(message.description))
                    return "description: string expected";
            if (message.gid != null && message.hasOwnProperty("gid"))
                if (!$util.isInteger(message.gid) && !(message.gid && $util.isInteger(message.gid.low) && $util.isInteger(message.gid.high)))
                    return "gid: integer|Long expected";
            if (message.abuseType != null && message.hasOwnProperty("abuseType"))
                if (!$util.isInteger(message.abuseType))
                    return "abuseType: integer expected";
            if (message.contentType != null && message.hasOwnProperty("contentType"))
                if (!$util.isInteger(message.contentType))
                    return "contentType: integer expected";
            if (message.targetGameServerIp != null && message.hasOwnProperty("targetGameServerIp"))
                if (!$util.isInteger(message.targetGameServerIp))
                    return "targetGameServerIp: integer expected";
            if (message.targetGameServerPort != null && message.hasOwnProperty("targetGameServerPort"))
                if (!$util.isInteger(message.targetGameServerPort))
                    return "targetGameServerPort: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCReportAbuse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCReportAbuse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCReportAbuse} CMsgGCReportAbuse
         */
        CMsgGCReportAbuse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCReportAbuse)
                return object;
            var message = new $root.CMsgGCReportAbuse();
            if (object.targetSteamId != null)
                if ($util.Long)
                    (message.targetSteamId = $util.Long.fromValue(object.targetSteamId)).unsigned = false;
                else if (typeof object.targetSteamId === "string")
                    message.targetSteamId = parseInt(object.targetSteamId, 10);
                else if (typeof object.targetSteamId === "number")
                    message.targetSteamId = object.targetSteamId;
                else if (typeof object.targetSteamId === "object")
                    message.targetSteamId = new $util.LongBits(object.targetSteamId.low >>> 0, object.targetSteamId.high >>> 0).toNumber();
            if (object.description != null)
                message.description = String(object.description);
            if (object.gid != null)
                if ($util.Long)
                    (message.gid = $util.Long.fromValue(object.gid)).unsigned = true;
                else if (typeof object.gid === "string")
                    message.gid = parseInt(object.gid, 10);
                else if (typeof object.gid === "number")
                    message.gid = object.gid;
                else if (typeof object.gid === "object")
                    message.gid = new $util.LongBits(object.gid.low >>> 0, object.gid.high >>> 0).toNumber(true);
            if (object.abuseType != null)
                message.abuseType = object.abuseType >>> 0;
            if (object.contentType != null)
                message.contentType = object.contentType >>> 0;
            if (object.targetGameServerIp != null)
                message.targetGameServerIp = object.targetGameServerIp >>> 0;
            if (object.targetGameServerPort != null)
                message.targetGameServerPort = object.targetGameServerPort >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCReportAbuse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCReportAbuse
         * @static
         * @param {CMsgGCReportAbuse} message CMsgGCReportAbuse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCReportAbuse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.targetSteamId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.targetSteamId = options.longs === String ? "0" : 0;
                object.abuseType = 0;
                object.contentType = 0;
                object.description = "";
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.gid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.gid = options.longs === String ? "0" : 0;
                object.targetGameServerIp = 0;
                object.targetGameServerPort = 0;
            }
            if (message.targetSteamId != null && message.hasOwnProperty("targetSteamId"))
                if (typeof message.targetSteamId === "number")
                    object.targetSteamId = options.longs === String ? String(message.targetSteamId) : message.targetSteamId;
                else
                    object.targetSteamId = options.longs === String ? $util.Long.prototype.toString.call(message.targetSteamId) : options.longs === Number ? new $util.LongBits(message.targetSteamId.low >>> 0, message.targetSteamId.high >>> 0).toNumber() : message.targetSteamId;
            if (message.abuseType != null && message.hasOwnProperty("abuseType"))
                object.abuseType = message.abuseType;
            if (message.contentType != null && message.hasOwnProperty("contentType"))
                object.contentType = message.contentType;
            if (message.description != null && message.hasOwnProperty("description"))
                object.description = message.description;
            if (message.gid != null && message.hasOwnProperty("gid"))
                if (typeof message.gid === "number")
                    object.gid = options.longs === String ? String(message.gid) : message.gid;
                else
                    object.gid = options.longs === String ? $util.Long.prototype.toString.call(message.gid) : options.longs === Number ? new $util.LongBits(message.gid.low >>> 0, message.gid.high >>> 0).toNumber(true) : message.gid;
            if (message.targetGameServerIp != null && message.hasOwnProperty("targetGameServerIp"))
                object.targetGameServerIp = message.targetGameServerIp;
            if (message.targetGameServerPort != null && message.hasOwnProperty("targetGameServerPort"))
                object.targetGameServerPort = message.targetGameServerPort;
            return object;
        };
    
        /**
         * Converts this CMsgGCReportAbuse to JSON.
         * @function toJSON
         * @memberof CMsgGCReportAbuse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCReportAbuse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCReportAbuse
         * @function getTypeUrl
         * @memberof CMsgGCReportAbuse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCReportAbuse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCReportAbuse";
        };
    
        return CMsgGCReportAbuse;
    })();
    
    $root.CMsgGCReportAbuseResponse = (function() {
    
        /**
         * Properties of a CMsgGCReportAbuseResponse.
         * @exports ICMsgGCReportAbuseResponse
         * @interface ICMsgGCReportAbuseResponse
         * @property {number|Long|null} [targetSteamId] CMsgGCReportAbuseResponse targetSteamId
         * @property {number|null} [result] CMsgGCReportAbuseResponse result
         * @property {string|null} [errorMessage] CMsgGCReportAbuseResponse errorMessage
         */
    
        /**
         * Constructs a new CMsgGCReportAbuseResponse.
         * @exports CMsgGCReportAbuseResponse
         * @classdesc Represents a CMsgGCReportAbuseResponse.
         * @implements ICMsgGCReportAbuseResponse
         * @constructor
         * @param {ICMsgGCReportAbuseResponse=} [properties] Properties to set
         */
        function CMsgGCReportAbuseResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCReportAbuseResponse targetSteamId.
         * @member {number|Long} targetSteamId
         * @memberof CMsgGCReportAbuseResponse
         * @instance
         */
        CMsgGCReportAbuseResponse.prototype.targetSteamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGCReportAbuseResponse result.
         * @member {number} result
         * @memberof CMsgGCReportAbuseResponse
         * @instance
         */
        CMsgGCReportAbuseResponse.prototype.result = 0;
    
        /**
         * CMsgGCReportAbuseResponse errorMessage.
         * @member {string} errorMessage
         * @memberof CMsgGCReportAbuseResponse
         * @instance
         */
        CMsgGCReportAbuseResponse.prototype.errorMessage = "";
    
        /**
         * Creates a new CMsgGCReportAbuseResponse instance using the specified properties.
         * @function create
         * @memberof CMsgGCReportAbuseResponse
         * @static
         * @param {ICMsgGCReportAbuseResponse=} [properties] Properties to set
         * @returns {CMsgGCReportAbuseResponse} CMsgGCReportAbuseResponse instance
         */
        CMsgGCReportAbuseResponse.create = function create(properties) {
            return new CMsgGCReportAbuseResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgGCReportAbuseResponse message. Does not implicitly {@link CMsgGCReportAbuseResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCReportAbuseResponse
         * @static
         * @param {ICMsgGCReportAbuseResponse} message CMsgGCReportAbuseResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCReportAbuseResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.targetSteamId != null && Object.hasOwnProperty.call(message, "targetSteamId"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.targetSteamId);
            if (message.result != null && Object.hasOwnProperty.call(message, "result"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.result);
            if (message.errorMessage != null && Object.hasOwnProperty.call(message, "errorMessage"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.errorMessage);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCReportAbuseResponse message, length delimited. Does not implicitly {@link CMsgGCReportAbuseResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCReportAbuseResponse
         * @static
         * @param {ICMsgGCReportAbuseResponse} message CMsgGCReportAbuseResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCReportAbuseResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCReportAbuseResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCReportAbuseResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCReportAbuseResponse} CMsgGCReportAbuseResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCReportAbuseResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCReportAbuseResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.targetSteamId = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.result = reader.uint32();
                        break;
                    }
                case 3: {
                        message.errorMessage = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCReportAbuseResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCReportAbuseResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCReportAbuseResponse} CMsgGCReportAbuseResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCReportAbuseResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCReportAbuseResponse message.
         * @function verify
         * @memberof CMsgGCReportAbuseResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCReportAbuseResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.targetSteamId != null && message.hasOwnProperty("targetSteamId"))
                if (!$util.isInteger(message.targetSteamId) && !(message.targetSteamId && $util.isInteger(message.targetSteamId.low) && $util.isInteger(message.targetSteamId.high)))
                    return "targetSteamId: integer|Long expected";
            if (message.result != null && message.hasOwnProperty("result"))
                if (!$util.isInteger(message.result))
                    return "result: integer expected";
            if (message.errorMessage != null && message.hasOwnProperty("errorMessage"))
                if (!$util.isString(message.errorMessage))
                    return "errorMessage: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCReportAbuseResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCReportAbuseResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCReportAbuseResponse} CMsgGCReportAbuseResponse
         */
        CMsgGCReportAbuseResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCReportAbuseResponse)
                return object;
            var message = new $root.CMsgGCReportAbuseResponse();
            if (object.targetSteamId != null)
                if ($util.Long)
                    (message.targetSteamId = $util.Long.fromValue(object.targetSteamId)).unsigned = false;
                else if (typeof object.targetSteamId === "string")
                    message.targetSteamId = parseInt(object.targetSteamId, 10);
                else if (typeof object.targetSteamId === "number")
                    message.targetSteamId = object.targetSteamId;
                else if (typeof object.targetSteamId === "object")
                    message.targetSteamId = new $util.LongBits(object.targetSteamId.low >>> 0, object.targetSteamId.high >>> 0).toNumber();
            if (object.result != null)
                message.result = object.result >>> 0;
            if (object.errorMessage != null)
                message.errorMessage = String(object.errorMessage);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCReportAbuseResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCReportAbuseResponse
         * @static
         * @param {CMsgGCReportAbuseResponse} message CMsgGCReportAbuseResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCReportAbuseResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.targetSteamId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.targetSteamId = options.longs === String ? "0" : 0;
                object.result = 0;
                object.errorMessage = "";
            }
            if (message.targetSteamId != null && message.hasOwnProperty("targetSteamId"))
                if (typeof message.targetSteamId === "number")
                    object.targetSteamId = options.longs === String ? String(message.targetSteamId) : message.targetSteamId;
                else
                    object.targetSteamId = options.longs === String ? $util.Long.prototype.toString.call(message.targetSteamId) : options.longs === Number ? new $util.LongBits(message.targetSteamId.low >>> 0, message.targetSteamId.high >>> 0).toNumber() : message.targetSteamId;
            if (message.result != null && message.hasOwnProperty("result"))
                object.result = message.result;
            if (message.errorMessage != null && message.hasOwnProperty("errorMessage"))
                object.errorMessage = message.errorMessage;
            return object;
        };
    
        /**
         * Converts this CMsgGCReportAbuseResponse to JSON.
         * @function toJSON
         * @memberof CMsgGCReportAbuseResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCReportAbuseResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCReportAbuseResponse
         * @function getTypeUrl
         * @memberof CMsgGCReportAbuseResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCReportAbuseResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCReportAbuseResponse";
        };
    
        return CMsgGCReportAbuseResponse;
    })();
    
    $root.CMsgGCNameItemNotification = (function() {
    
        /**
         * Properties of a CMsgGCNameItemNotification.
         * @exports ICMsgGCNameItemNotification
         * @interface ICMsgGCNameItemNotification
         * @property {number|Long|null} [playerSteamid] CMsgGCNameItemNotification playerSteamid
         * @property {number|null} [itemDefIndex] CMsgGCNameItemNotification itemDefIndex
         * @property {string|null} [itemNameCustom] CMsgGCNameItemNotification itemNameCustom
         */
    
        /**
         * Constructs a new CMsgGCNameItemNotification.
         * @exports CMsgGCNameItemNotification
         * @classdesc Represents a CMsgGCNameItemNotification.
         * @implements ICMsgGCNameItemNotification
         * @constructor
         * @param {ICMsgGCNameItemNotification=} [properties] Properties to set
         */
        function CMsgGCNameItemNotification(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCNameItemNotification playerSteamid.
         * @member {number|Long} playerSteamid
         * @memberof CMsgGCNameItemNotification
         * @instance
         */
        CMsgGCNameItemNotification.prototype.playerSteamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGCNameItemNotification itemDefIndex.
         * @member {number} itemDefIndex
         * @memberof CMsgGCNameItemNotification
         * @instance
         */
        CMsgGCNameItemNotification.prototype.itemDefIndex = 0;
    
        /**
         * CMsgGCNameItemNotification itemNameCustom.
         * @member {string} itemNameCustom
         * @memberof CMsgGCNameItemNotification
         * @instance
         */
        CMsgGCNameItemNotification.prototype.itemNameCustom = "";
    
        /**
         * Creates a new CMsgGCNameItemNotification instance using the specified properties.
         * @function create
         * @memberof CMsgGCNameItemNotification
         * @static
         * @param {ICMsgGCNameItemNotification=} [properties] Properties to set
         * @returns {CMsgGCNameItemNotification} CMsgGCNameItemNotification instance
         */
        CMsgGCNameItemNotification.create = function create(properties) {
            return new CMsgGCNameItemNotification(properties);
        };
    
        /**
         * Encodes the specified CMsgGCNameItemNotification message. Does not implicitly {@link CMsgGCNameItemNotification.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCNameItemNotification
         * @static
         * @param {ICMsgGCNameItemNotification} message CMsgGCNameItemNotification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCNameItemNotification.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.playerSteamid != null && Object.hasOwnProperty.call(message, "playerSteamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.playerSteamid);
            if (message.itemDefIndex != null && Object.hasOwnProperty.call(message, "itemDefIndex"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.itemDefIndex);
            if (message.itemNameCustom != null && Object.hasOwnProperty.call(message, "itemNameCustom"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.itemNameCustom);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCNameItemNotification message, length delimited. Does not implicitly {@link CMsgGCNameItemNotification.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCNameItemNotification
         * @static
         * @param {ICMsgGCNameItemNotification} message CMsgGCNameItemNotification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCNameItemNotification.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCNameItemNotification message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCNameItemNotification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCNameItemNotification} CMsgGCNameItemNotification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCNameItemNotification.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCNameItemNotification();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.playerSteamid = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.itemDefIndex = reader.uint32();
                        break;
                    }
                case 3: {
                        message.itemNameCustom = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCNameItemNotification message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCNameItemNotification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCNameItemNotification} CMsgGCNameItemNotification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCNameItemNotification.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCNameItemNotification message.
         * @function verify
         * @memberof CMsgGCNameItemNotification
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCNameItemNotification.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.playerSteamid != null && message.hasOwnProperty("playerSteamid"))
                if (!$util.isInteger(message.playerSteamid) && !(message.playerSteamid && $util.isInteger(message.playerSteamid.low) && $util.isInteger(message.playerSteamid.high)))
                    return "playerSteamid: integer|Long expected";
            if (message.itemDefIndex != null && message.hasOwnProperty("itemDefIndex"))
                if (!$util.isInteger(message.itemDefIndex))
                    return "itemDefIndex: integer expected";
            if (message.itemNameCustom != null && message.hasOwnProperty("itemNameCustom"))
                if (!$util.isString(message.itemNameCustom))
                    return "itemNameCustom: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCNameItemNotification message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCNameItemNotification
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCNameItemNotification} CMsgGCNameItemNotification
         */
        CMsgGCNameItemNotification.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCNameItemNotification)
                return object;
            var message = new $root.CMsgGCNameItemNotification();
            if (object.playerSteamid != null)
                if ($util.Long)
                    (message.playerSteamid = $util.Long.fromValue(object.playerSteamid)).unsigned = false;
                else if (typeof object.playerSteamid === "string")
                    message.playerSteamid = parseInt(object.playerSteamid, 10);
                else if (typeof object.playerSteamid === "number")
                    message.playerSteamid = object.playerSteamid;
                else if (typeof object.playerSteamid === "object")
                    message.playerSteamid = new $util.LongBits(object.playerSteamid.low >>> 0, object.playerSteamid.high >>> 0).toNumber();
            if (object.itemDefIndex != null)
                message.itemDefIndex = object.itemDefIndex >>> 0;
            if (object.itemNameCustom != null)
                message.itemNameCustom = String(object.itemNameCustom);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCNameItemNotification message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCNameItemNotification
         * @static
         * @param {CMsgGCNameItemNotification} message CMsgGCNameItemNotification
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCNameItemNotification.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.playerSteamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.playerSteamid = options.longs === String ? "0" : 0;
                object.itemDefIndex = 0;
                object.itemNameCustom = "";
            }
            if (message.playerSteamid != null && message.hasOwnProperty("playerSteamid"))
                if (typeof message.playerSteamid === "number")
                    object.playerSteamid = options.longs === String ? String(message.playerSteamid) : message.playerSteamid;
                else
                    object.playerSteamid = options.longs === String ? $util.Long.prototype.toString.call(message.playerSteamid) : options.longs === Number ? new $util.LongBits(message.playerSteamid.low >>> 0, message.playerSteamid.high >>> 0).toNumber() : message.playerSteamid;
            if (message.itemDefIndex != null && message.hasOwnProperty("itemDefIndex"))
                object.itemDefIndex = message.itemDefIndex;
            if (message.itemNameCustom != null && message.hasOwnProperty("itemNameCustom"))
                object.itemNameCustom = message.itemNameCustom;
            return object;
        };
    
        /**
         * Converts this CMsgGCNameItemNotification to JSON.
         * @function toJSON
         * @memberof CMsgGCNameItemNotification
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCNameItemNotification.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCNameItemNotification
         * @function getTypeUrl
         * @memberof CMsgGCNameItemNotification
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCNameItemNotification.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCNameItemNotification";
        };
    
        return CMsgGCNameItemNotification;
    })();
    
    $root.CMsgGCClientDisplayNotification = (function() {
    
        /**
         * Properties of a CMsgGCClientDisplayNotification.
         * @exports ICMsgGCClientDisplayNotification
         * @interface ICMsgGCClientDisplayNotification
         * @property {string|null} [notificationTitleLocalizationKey] CMsgGCClientDisplayNotification notificationTitleLocalizationKey
         * @property {string|null} [notificationBodyLocalizationKey] CMsgGCClientDisplayNotification notificationBodyLocalizationKey
         * @property {Array.<string>|null} [bodySubstringKeys] CMsgGCClientDisplayNotification bodySubstringKeys
         * @property {Array.<string>|null} [bodySubstringValues] CMsgGCClientDisplayNotification bodySubstringValues
         */
    
        /**
         * Constructs a new CMsgGCClientDisplayNotification.
         * @exports CMsgGCClientDisplayNotification
         * @classdesc Represents a CMsgGCClientDisplayNotification.
         * @implements ICMsgGCClientDisplayNotification
         * @constructor
         * @param {ICMsgGCClientDisplayNotification=} [properties] Properties to set
         */
        function CMsgGCClientDisplayNotification(properties) {
            this.bodySubstringKeys = [];
            this.bodySubstringValues = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCClientDisplayNotification notificationTitleLocalizationKey.
         * @member {string} notificationTitleLocalizationKey
         * @memberof CMsgGCClientDisplayNotification
         * @instance
         */
        CMsgGCClientDisplayNotification.prototype.notificationTitleLocalizationKey = "";
    
        /**
         * CMsgGCClientDisplayNotification notificationBodyLocalizationKey.
         * @member {string} notificationBodyLocalizationKey
         * @memberof CMsgGCClientDisplayNotification
         * @instance
         */
        CMsgGCClientDisplayNotification.prototype.notificationBodyLocalizationKey = "";
    
        /**
         * CMsgGCClientDisplayNotification bodySubstringKeys.
         * @member {Array.<string>} bodySubstringKeys
         * @memberof CMsgGCClientDisplayNotification
         * @instance
         */
        CMsgGCClientDisplayNotification.prototype.bodySubstringKeys = $util.emptyArray;
    
        /**
         * CMsgGCClientDisplayNotification bodySubstringValues.
         * @member {Array.<string>} bodySubstringValues
         * @memberof CMsgGCClientDisplayNotification
         * @instance
         */
        CMsgGCClientDisplayNotification.prototype.bodySubstringValues = $util.emptyArray;
    
        /**
         * Creates a new CMsgGCClientDisplayNotification instance using the specified properties.
         * @function create
         * @memberof CMsgGCClientDisplayNotification
         * @static
         * @param {ICMsgGCClientDisplayNotification=} [properties] Properties to set
         * @returns {CMsgGCClientDisplayNotification} CMsgGCClientDisplayNotification instance
         */
        CMsgGCClientDisplayNotification.create = function create(properties) {
            return new CMsgGCClientDisplayNotification(properties);
        };
    
        /**
         * Encodes the specified CMsgGCClientDisplayNotification message. Does not implicitly {@link CMsgGCClientDisplayNotification.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCClientDisplayNotification
         * @static
         * @param {ICMsgGCClientDisplayNotification} message CMsgGCClientDisplayNotification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCClientDisplayNotification.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.notificationTitleLocalizationKey != null && Object.hasOwnProperty.call(message, "notificationTitleLocalizationKey"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.notificationTitleLocalizationKey);
            if (message.notificationBodyLocalizationKey != null && Object.hasOwnProperty.call(message, "notificationBodyLocalizationKey"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.notificationBodyLocalizationKey);
            if (message.bodySubstringKeys != null && message.bodySubstringKeys.length)
                for (var i = 0; i < message.bodySubstringKeys.length; ++i)
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.bodySubstringKeys[i]);
            if (message.bodySubstringValues != null && message.bodySubstringValues.length)
                for (var i = 0; i < message.bodySubstringValues.length; ++i)
                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.bodySubstringValues[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCClientDisplayNotification message, length delimited. Does not implicitly {@link CMsgGCClientDisplayNotification.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCClientDisplayNotification
         * @static
         * @param {ICMsgGCClientDisplayNotification} message CMsgGCClientDisplayNotification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCClientDisplayNotification.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCClientDisplayNotification message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCClientDisplayNotification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCClientDisplayNotification} CMsgGCClientDisplayNotification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCClientDisplayNotification.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCClientDisplayNotification();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.notificationTitleLocalizationKey = reader.string();
                        break;
                    }
                case 2: {
                        message.notificationBodyLocalizationKey = reader.string();
                        break;
                    }
                case 3: {
                        if (!(message.bodySubstringKeys && message.bodySubstringKeys.length))
                            message.bodySubstringKeys = [];
                        message.bodySubstringKeys.push(reader.string());
                        break;
                    }
                case 4: {
                        if (!(message.bodySubstringValues && message.bodySubstringValues.length))
                            message.bodySubstringValues = [];
                        message.bodySubstringValues.push(reader.string());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCClientDisplayNotification message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCClientDisplayNotification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCClientDisplayNotification} CMsgGCClientDisplayNotification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCClientDisplayNotification.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCClientDisplayNotification message.
         * @function verify
         * @memberof CMsgGCClientDisplayNotification
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCClientDisplayNotification.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.notificationTitleLocalizationKey != null && message.hasOwnProperty("notificationTitleLocalizationKey"))
                if (!$util.isString(message.notificationTitleLocalizationKey))
                    return "notificationTitleLocalizationKey: string expected";
            if (message.notificationBodyLocalizationKey != null && message.hasOwnProperty("notificationBodyLocalizationKey"))
                if (!$util.isString(message.notificationBodyLocalizationKey))
                    return "notificationBodyLocalizationKey: string expected";
            if (message.bodySubstringKeys != null && message.hasOwnProperty("bodySubstringKeys")) {
                if (!Array.isArray(message.bodySubstringKeys))
                    return "bodySubstringKeys: array expected";
                for (var i = 0; i < message.bodySubstringKeys.length; ++i)
                    if (!$util.isString(message.bodySubstringKeys[i]))
                        return "bodySubstringKeys: string[] expected";
            }
            if (message.bodySubstringValues != null && message.hasOwnProperty("bodySubstringValues")) {
                if (!Array.isArray(message.bodySubstringValues))
                    return "bodySubstringValues: array expected";
                for (var i = 0; i < message.bodySubstringValues.length; ++i)
                    if (!$util.isString(message.bodySubstringValues[i]))
                        return "bodySubstringValues: string[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCClientDisplayNotification message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCClientDisplayNotification
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCClientDisplayNotification} CMsgGCClientDisplayNotification
         */
        CMsgGCClientDisplayNotification.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCClientDisplayNotification)
                return object;
            var message = new $root.CMsgGCClientDisplayNotification();
            if (object.notificationTitleLocalizationKey != null)
                message.notificationTitleLocalizationKey = String(object.notificationTitleLocalizationKey);
            if (object.notificationBodyLocalizationKey != null)
                message.notificationBodyLocalizationKey = String(object.notificationBodyLocalizationKey);
            if (object.bodySubstringKeys) {
                if (!Array.isArray(object.bodySubstringKeys))
                    throw TypeError(".CMsgGCClientDisplayNotification.bodySubstringKeys: array expected");
                message.bodySubstringKeys = [];
                for (var i = 0; i < object.bodySubstringKeys.length; ++i)
                    message.bodySubstringKeys[i] = String(object.bodySubstringKeys[i]);
            }
            if (object.bodySubstringValues) {
                if (!Array.isArray(object.bodySubstringValues))
                    throw TypeError(".CMsgGCClientDisplayNotification.bodySubstringValues: array expected");
                message.bodySubstringValues = [];
                for (var i = 0; i < object.bodySubstringValues.length; ++i)
                    message.bodySubstringValues[i] = String(object.bodySubstringValues[i]);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCClientDisplayNotification message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCClientDisplayNotification
         * @static
         * @param {CMsgGCClientDisplayNotification} message CMsgGCClientDisplayNotification
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCClientDisplayNotification.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.bodySubstringKeys = [];
                object.bodySubstringValues = [];
            }
            if (options.defaults) {
                object.notificationTitleLocalizationKey = "";
                object.notificationBodyLocalizationKey = "";
            }
            if (message.notificationTitleLocalizationKey != null && message.hasOwnProperty("notificationTitleLocalizationKey"))
                object.notificationTitleLocalizationKey = message.notificationTitleLocalizationKey;
            if (message.notificationBodyLocalizationKey != null && message.hasOwnProperty("notificationBodyLocalizationKey"))
                object.notificationBodyLocalizationKey = message.notificationBodyLocalizationKey;
            if (message.bodySubstringKeys && message.bodySubstringKeys.length) {
                object.bodySubstringKeys = [];
                for (var j = 0; j < message.bodySubstringKeys.length; ++j)
                    object.bodySubstringKeys[j] = message.bodySubstringKeys[j];
            }
            if (message.bodySubstringValues && message.bodySubstringValues.length) {
                object.bodySubstringValues = [];
                for (var j = 0; j < message.bodySubstringValues.length; ++j)
                    object.bodySubstringValues[j] = message.bodySubstringValues[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgGCClientDisplayNotification to JSON.
         * @function toJSON
         * @memberof CMsgGCClientDisplayNotification
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCClientDisplayNotification.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCClientDisplayNotification
         * @function getTypeUrl
         * @memberof CMsgGCClientDisplayNotification
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCClientDisplayNotification.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCClientDisplayNotification";
        };
    
        return CMsgGCClientDisplayNotification;
    })();
    
    $root.CMsgGCShowItemsPickedUp = (function() {
    
        /**
         * Properties of a CMsgGCShowItemsPickedUp.
         * @exports ICMsgGCShowItemsPickedUp
         * @interface ICMsgGCShowItemsPickedUp
         * @property {number|Long|null} [playerSteamid] CMsgGCShowItemsPickedUp playerSteamid
         */
    
        /**
         * Constructs a new CMsgGCShowItemsPickedUp.
         * @exports CMsgGCShowItemsPickedUp
         * @classdesc Represents a CMsgGCShowItemsPickedUp.
         * @implements ICMsgGCShowItemsPickedUp
         * @constructor
         * @param {ICMsgGCShowItemsPickedUp=} [properties] Properties to set
         */
        function CMsgGCShowItemsPickedUp(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCShowItemsPickedUp playerSteamid.
         * @member {number|Long} playerSteamid
         * @memberof CMsgGCShowItemsPickedUp
         * @instance
         */
        CMsgGCShowItemsPickedUp.prototype.playerSteamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgGCShowItemsPickedUp instance using the specified properties.
         * @function create
         * @memberof CMsgGCShowItemsPickedUp
         * @static
         * @param {ICMsgGCShowItemsPickedUp=} [properties] Properties to set
         * @returns {CMsgGCShowItemsPickedUp} CMsgGCShowItemsPickedUp instance
         */
        CMsgGCShowItemsPickedUp.create = function create(properties) {
            return new CMsgGCShowItemsPickedUp(properties);
        };
    
        /**
         * Encodes the specified CMsgGCShowItemsPickedUp message. Does not implicitly {@link CMsgGCShowItemsPickedUp.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCShowItemsPickedUp
         * @static
         * @param {ICMsgGCShowItemsPickedUp} message CMsgGCShowItemsPickedUp message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCShowItemsPickedUp.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.playerSteamid != null && Object.hasOwnProperty.call(message, "playerSteamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.playerSteamid);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCShowItemsPickedUp message, length delimited. Does not implicitly {@link CMsgGCShowItemsPickedUp.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCShowItemsPickedUp
         * @static
         * @param {ICMsgGCShowItemsPickedUp} message CMsgGCShowItemsPickedUp message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCShowItemsPickedUp.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCShowItemsPickedUp message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCShowItemsPickedUp
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCShowItemsPickedUp} CMsgGCShowItemsPickedUp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCShowItemsPickedUp.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCShowItemsPickedUp();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.playerSteamid = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCShowItemsPickedUp message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCShowItemsPickedUp
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCShowItemsPickedUp} CMsgGCShowItemsPickedUp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCShowItemsPickedUp.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCShowItemsPickedUp message.
         * @function verify
         * @memberof CMsgGCShowItemsPickedUp
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCShowItemsPickedUp.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.playerSteamid != null && message.hasOwnProperty("playerSteamid"))
                if (!$util.isInteger(message.playerSteamid) && !(message.playerSteamid && $util.isInteger(message.playerSteamid.low) && $util.isInteger(message.playerSteamid.high)))
                    return "playerSteamid: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCShowItemsPickedUp message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCShowItemsPickedUp
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCShowItemsPickedUp} CMsgGCShowItemsPickedUp
         */
        CMsgGCShowItemsPickedUp.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCShowItemsPickedUp)
                return object;
            var message = new $root.CMsgGCShowItemsPickedUp();
            if (object.playerSteamid != null)
                if ($util.Long)
                    (message.playerSteamid = $util.Long.fromValue(object.playerSteamid)).unsigned = false;
                else if (typeof object.playerSteamid === "string")
                    message.playerSteamid = parseInt(object.playerSteamid, 10);
                else if (typeof object.playerSteamid === "number")
                    message.playerSteamid = object.playerSteamid;
                else if (typeof object.playerSteamid === "object")
                    message.playerSteamid = new $util.LongBits(object.playerSteamid.low >>> 0, object.playerSteamid.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCShowItemsPickedUp message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCShowItemsPickedUp
         * @static
         * @param {CMsgGCShowItemsPickedUp} message CMsgGCShowItemsPickedUp
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCShowItemsPickedUp.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.playerSteamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.playerSteamid = options.longs === String ? "0" : 0;
            if (message.playerSteamid != null && message.hasOwnProperty("playerSteamid"))
                if (typeof message.playerSteamid === "number")
                    object.playerSteamid = options.longs === String ? String(message.playerSteamid) : message.playerSteamid;
                else
                    object.playerSteamid = options.longs === String ? $util.Long.prototype.toString.call(message.playerSteamid) : options.longs === Number ? new $util.LongBits(message.playerSteamid.low >>> 0, message.playerSteamid.high >>> 0).toNumber() : message.playerSteamid;
            return object;
        };
    
        /**
         * Converts this CMsgGCShowItemsPickedUp to JSON.
         * @function toJSON
         * @memberof CMsgGCShowItemsPickedUp
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCShowItemsPickedUp.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCShowItemsPickedUp
         * @function getTypeUrl
         * @memberof CMsgGCShowItemsPickedUp
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCShowItemsPickedUp.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCShowItemsPickedUp";
        };
    
        return CMsgGCShowItemsPickedUp;
    })();
    
    $root.CMsgGCIncrementKillCountResponse = (function() {
    
        /**
         * Properties of a CMsgGCIncrementKillCountResponse.
         * @exports ICMsgGCIncrementKillCountResponse
         * @interface ICMsgGCIncrementKillCountResponse
         * @property {number|null} [killerAccountId] CMsgGCIncrementKillCountResponse killerAccountId
         * @property {number|null} [numKills] CMsgGCIncrementKillCountResponse numKills
         * @property {number|null} [itemDef] CMsgGCIncrementKillCountResponse itemDef
         * @property {number|null} [levelType] CMsgGCIncrementKillCountResponse levelType
         */
    
        /**
         * Constructs a new CMsgGCIncrementKillCountResponse.
         * @exports CMsgGCIncrementKillCountResponse
         * @classdesc Represents a CMsgGCIncrementKillCountResponse.
         * @implements ICMsgGCIncrementKillCountResponse
         * @constructor
         * @param {ICMsgGCIncrementKillCountResponse=} [properties] Properties to set
         */
        function CMsgGCIncrementKillCountResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCIncrementKillCountResponse killerAccountId.
         * @member {number} killerAccountId
         * @memberof CMsgGCIncrementKillCountResponse
         * @instance
         */
        CMsgGCIncrementKillCountResponse.prototype.killerAccountId = 0;
    
        /**
         * CMsgGCIncrementKillCountResponse numKills.
         * @member {number} numKills
         * @memberof CMsgGCIncrementKillCountResponse
         * @instance
         */
        CMsgGCIncrementKillCountResponse.prototype.numKills = 0;
    
        /**
         * CMsgGCIncrementKillCountResponse itemDef.
         * @member {number} itemDef
         * @memberof CMsgGCIncrementKillCountResponse
         * @instance
         */
        CMsgGCIncrementKillCountResponse.prototype.itemDef = 0;
    
        /**
         * CMsgGCIncrementKillCountResponse levelType.
         * @member {number} levelType
         * @memberof CMsgGCIncrementKillCountResponse
         * @instance
         */
        CMsgGCIncrementKillCountResponse.prototype.levelType = 0;
    
        /**
         * Creates a new CMsgGCIncrementKillCountResponse instance using the specified properties.
         * @function create
         * @memberof CMsgGCIncrementKillCountResponse
         * @static
         * @param {ICMsgGCIncrementKillCountResponse=} [properties] Properties to set
         * @returns {CMsgGCIncrementKillCountResponse} CMsgGCIncrementKillCountResponse instance
         */
        CMsgGCIncrementKillCountResponse.create = function create(properties) {
            return new CMsgGCIncrementKillCountResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgGCIncrementKillCountResponse message. Does not implicitly {@link CMsgGCIncrementKillCountResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCIncrementKillCountResponse
         * @static
         * @param {ICMsgGCIncrementKillCountResponse} message CMsgGCIncrementKillCountResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCIncrementKillCountResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.killerAccountId != null && Object.hasOwnProperty.call(message, "killerAccountId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.killerAccountId);
            if (message.numKills != null && Object.hasOwnProperty.call(message, "numKills"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.numKills);
            if (message.itemDef != null && Object.hasOwnProperty.call(message, "itemDef"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.itemDef);
            if (message.levelType != null && Object.hasOwnProperty.call(message, "levelType"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.levelType);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCIncrementKillCountResponse message, length delimited. Does not implicitly {@link CMsgGCIncrementKillCountResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCIncrementKillCountResponse
         * @static
         * @param {ICMsgGCIncrementKillCountResponse} message CMsgGCIncrementKillCountResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCIncrementKillCountResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCIncrementKillCountResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCIncrementKillCountResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCIncrementKillCountResponse} CMsgGCIncrementKillCountResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCIncrementKillCountResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCIncrementKillCountResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.killerAccountId = reader.uint32();
                        break;
                    }
                case 2: {
                        message.numKills = reader.uint32();
                        break;
                    }
                case 3: {
                        message.itemDef = reader.uint32();
                        break;
                    }
                case 4: {
                        message.levelType = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCIncrementKillCountResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCIncrementKillCountResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCIncrementKillCountResponse} CMsgGCIncrementKillCountResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCIncrementKillCountResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCIncrementKillCountResponse message.
         * @function verify
         * @memberof CMsgGCIncrementKillCountResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCIncrementKillCountResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.killerAccountId != null && message.hasOwnProperty("killerAccountId"))
                if (!$util.isInteger(message.killerAccountId))
                    return "killerAccountId: integer expected";
            if (message.numKills != null && message.hasOwnProperty("numKills"))
                if (!$util.isInteger(message.numKills))
                    return "numKills: integer expected";
            if (message.itemDef != null && message.hasOwnProperty("itemDef"))
                if (!$util.isInteger(message.itemDef))
                    return "itemDef: integer expected";
            if (message.levelType != null && message.hasOwnProperty("levelType"))
                if (!$util.isInteger(message.levelType))
                    return "levelType: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCIncrementKillCountResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCIncrementKillCountResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCIncrementKillCountResponse} CMsgGCIncrementKillCountResponse
         */
        CMsgGCIncrementKillCountResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCIncrementKillCountResponse)
                return object;
            var message = new $root.CMsgGCIncrementKillCountResponse();
            if (object.killerAccountId != null)
                message.killerAccountId = object.killerAccountId >>> 0;
            if (object.numKills != null)
                message.numKills = object.numKills >>> 0;
            if (object.itemDef != null)
                message.itemDef = object.itemDef >>> 0;
            if (object.levelType != null)
                message.levelType = object.levelType >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCIncrementKillCountResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCIncrementKillCountResponse
         * @static
         * @param {CMsgGCIncrementKillCountResponse} message CMsgGCIncrementKillCountResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCIncrementKillCountResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.killerAccountId = 0;
                object.numKills = 0;
                object.itemDef = 0;
                object.levelType = 0;
            }
            if (message.killerAccountId != null && message.hasOwnProperty("killerAccountId"))
                object.killerAccountId = message.killerAccountId;
            if (message.numKills != null && message.hasOwnProperty("numKills"))
                object.numKills = message.numKills;
            if (message.itemDef != null && message.hasOwnProperty("itemDef"))
                object.itemDef = message.itemDef;
            if (message.levelType != null && message.hasOwnProperty("levelType"))
                object.levelType = message.levelType;
            return object;
        };
    
        /**
         * Converts this CMsgGCIncrementKillCountResponse to JSON.
         * @function toJSON
         * @memberof CMsgGCIncrementKillCountResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCIncrementKillCountResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCIncrementKillCountResponse
         * @function getTypeUrl
         * @memberof CMsgGCIncrementKillCountResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCIncrementKillCountResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCIncrementKillCountResponse";
        };
    
        return CMsgGCIncrementKillCountResponse;
    })();
    
    $root.CSOEconItemDropRateBonus = (function() {
    
        /**
         * Properties of a CSOEconItemDropRateBonus.
         * @exports ICSOEconItemDropRateBonus
         * @interface ICSOEconItemDropRateBonus
         * @property {number|null} [accountId] CSOEconItemDropRateBonus accountId
         * @property {number|null} [expirationDate] CSOEconItemDropRateBonus expirationDate
         * @property {number|null} [bonus] CSOEconItemDropRateBonus bonus
         * @property {number|null} [bonusCount] CSOEconItemDropRateBonus bonusCount
         * @property {number|Long|null} [itemId] CSOEconItemDropRateBonus itemId
         * @property {number|null} [defIndex] CSOEconItemDropRateBonus defIndex
         */
    
        /**
         * Constructs a new CSOEconItemDropRateBonus.
         * @exports CSOEconItemDropRateBonus
         * @classdesc Represents a CSOEconItemDropRateBonus.
         * @implements ICSOEconItemDropRateBonus
         * @constructor
         * @param {ICSOEconItemDropRateBonus=} [properties] Properties to set
         */
        function CSOEconItemDropRateBonus(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOEconItemDropRateBonus accountId.
         * @member {number} accountId
         * @memberof CSOEconItemDropRateBonus
         * @instance
         */
        CSOEconItemDropRateBonus.prototype.accountId = 0;
    
        /**
         * CSOEconItemDropRateBonus expirationDate.
         * @member {number} expirationDate
         * @memberof CSOEconItemDropRateBonus
         * @instance
         */
        CSOEconItemDropRateBonus.prototype.expirationDate = 0;
    
        /**
         * CSOEconItemDropRateBonus bonus.
         * @member {number} bonus
         * @memberof CSOEconItemDropRateBonus
         * @instance
         */
        CSOEconItemDropRateBonus.prototype.bonus = 0;
    
        /**
         * CSOEconItemDropRateBonus bonusCount.
         * @member {number} bonusCount
         * @memberof CSOEconItemDropRateBonus
         * @instance
         */
        CSOEconItemDropRateBonus.prototype.bonusCount = 0;
    
        /**
         * CSOEconItemDropRateBonus itemId.
         * @member {number|Long} itemId
         * @memberof CSOEconItemDropRateBonus
         * @instance
         */
        CSOEconItemDropRateBonus.prototype.itemId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CSOEconItemDropRateBonus defIndex.
         * @member {number} defIndex
         * @memberof CSOEconItemDropRateBonus
         * @instance
         */
        CSOEconItemDropRateBonus.prototype.defIndex = 0;
    
        /**
         * Creates a new CSOEconItemDropRateBonus instance using the specified properties.
         * @function create
         * @memberof CSOEconItemDropRateBonus
         * @static
         * @param {ICSOEconItemDropRateBonus=} [properties] Properties to set
         * @returns {CSOEconItemDropRateBonus} CSOEconItemDropRateBonus instance
         */
        CSOEconItemDropRateBonus.create = function create(properties) {
            return new CSOEconItemDropRateBonus(properties);
        };
    
        /**
         * Encodes the specified CSOEconItemDropRateBonus message. Does not implicitly {@link CSOEconItemDropRateBonus.verify|verify} messages.
         * @function encode
         * @memberof CSOEconItemDropRateBonus
         * @static
         * @param {ICSOEconItemDropRateBonus} message CSOEconItemDropRateBonus message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconItemDropRateBonus.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.accountId != null && Object.hasOwnProperty.call(message, "accountId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.accountId);
            if (message.expirationDate != null && Object.hasOwnProperty.call(message, "expirationDate"))
                writer.uint32(/* id 2, wireType 5 =*/21).fixed32(message.expirationDate);
            if (message.bonus != null && Object.hasOwnProperty.call(message, "bonus"))
                writer.uint32(/* id 3, wireType 5 =*/29).float(message.bonus);
            if (message.bonusCount != null && Object.hasOwnProperty.call(message, "bonusCount"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.bonusCount);
            if (message.itemId != null && Object.hasOwnProperty.call(message, "itemId"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint64(message.itemId);
            if (message.defIndex != null && Object.hasOwnProperty.call(message, "defIndex"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.defIndex);
            return writer;
        };
    
        /**
         * Encodes the specified CSOEconItemDropRateBonus message, length delimited. Does not implicitly {@link CSOEconItemDropRateBonus.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOEconItemDropRateBonus
         * @static
         * @param {ICSOEconItemDropRateBonus} message CSOEconItemDropRateBonus message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconItemDropRateBonus.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOEconItemDropRateBonus message from the specified reader or buffer.
         * @function decode
         * @memberof CSOEconItemDropRateBonus
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOEconItemDropRateBonus} CSOEconItemDropRateBonus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconItemDropRateBonus.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOEconItemDropRateBonus();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.accountId = reader.uint32();
                        break;
                    }
                case 2: {
                        message.expirationDate = reader.fixed32();
                        break;
                    }
                case 3: {
                        message.bonus = reader.float();
                        break;
                    }
                case 4: {
                        message.bonusCount = reader.uint32();
                        break;
                    }
                case 5: {
                        message.itemId = reader.uint64();
                        break;
                    }
                case 6: {
                        message.defIndex = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOEconItemDropRateBonus message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOEconItemDropRateBonus
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOEconItemDropRateBonus} CSOEconItemDropRateBonus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconItemDropRateBonus.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOEconItemDropRateBonus message.
         * @function verify
         * @memberof CSOEconItemDropRateBonus
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOEconItemDropRateBonus.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.accountId != null && message.hasOwnProperty("accountId"))
                if (!$util.isInteger(message.accountId))
                    return "accountId: integer expected";
            if (message.expirationDate != null && message.hasOwnProperty("expirationDate"))
                if (!$util.isInteger(message.expirationDate))
                    return "expirationDate: integer expected";
            if (message.bonus != null && message.hasOwnProperty("bonus"))
                if (typeof message.bonus !== "number")
                    return "bonus: number expected";
            if (message.bonusCount != null && message.hasOwnProperty("bonusCount"))
                if (!$util.isInteger(message.bonusCount))
                    return "bonusCount: integer expected";
            if (message.itemId != null && message.hasOwnProperty("itemId"))
                if (!$util.isInteger(message.itemId) && !(message.itemId && $util.isInteger(message.itemId.low) && $util.isInteger(message.itemId.high)))
                    return "itemId: integer|Long expected";
            if (message.defIndex != null && message.hasOwnProperty("defIndex"))
                if (!$util.isInteger(message.defIndex))
                    return "defIndex: integer expected";
            return null;
        };
    
        /**
         * Creates a CSOEconItemDropRateBonus message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOEconItemDropRateBonus
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOEconItemDropRateBonus} CSOEconItemDropRateBonus
         */
        CSOEconItemDropRateBonus.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOEconItemDropRateBonus)
                return object;
            var message = new $root.CSOEconItemDropRateBonus();
            if (object.accountId != null)
                message.accountId = object.accountId >>> 0;
            if (object.expirationDate != null)
                message.expirationDate = object.expirationDate >>> 0;
            if (object.bonus != null)
                message.bonus = Number(object.bonus);
            if (object.bonusCount != null)
                message.bonusCount = object.bonusCount >>> 0;
            if (object.itemId != null)
                if ($util.Long)
                    (message.itemId = $util.Long.fromValue(object.itemId)).unsigned = true;
                else if (typeof object.itemId === "string")
                    message.itemId = parseInt(object.itemId, 10);
                else if (typeof object.itemId === "number")
                    message.itemId = object.itemId;
                else if (typeof object.itemId === "object")
                    message.itemId = new $util.LongBits(object.itemId.low >>> 0, object.itemId.high >>> 0).toNumber(true);
            if (object.defIndex != null)
                message.defIndex = object.defIndex >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CSOEconItemDropRateBonus message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOEconItemDropRateBonus
         * @static
         * @param {CSOEconItemDropRateBonus} message CSOEconItemDropRateBonus
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOEconItemDropRateBonus.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.accountId = 0;
                object.expirationDate = 0;
                object.bonus = 0;
                object.bonusCount = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.itemId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.itemId = options.longs === String ? "0" : 0;
                object.defIndex = 0;
            }
            if (message.accountId != null && message.hasOwnProperty("accountId"))
                object.accountId = message.accountId;
            if (message.expirationDate != null && message.hasOwnProperty("expirationDate"))
                object.expirationDate = message.expirationDate;
            if (message.bonus != null && message.hasOwnProperty("bonus"))
                object.bonus = options.json && !isFinite(message.bonus) ? String(message.bonus) : message.bonus;
            if (message.bonusCount != null && message.hasOwnProperty("bonusCount"))
                object.bonusCount = message.bonusCount;
            if (message.itemId != null && message.hasOwnProperty("itemId"))
                if (typeof message.itemId === "number")
                    object.itemId = options.longs === String ? String(message.itemId) : message.itemId;
                else
                    object.itemId = options.longs === String ? $util.Long.prototype.toString.call(message.itemId) : options.longs === Number ? new $util.LongBits(message.itemId.low >>> 0, message.itemId.high >>> 0).toNumber(true) : message.itemId;
            if (message.defIndex != null && message.hasOwnProperty("defIndex"))
                object.defIndex = message.defIndex;
            return object;
        };
    
        /**
         * Converts this CSOEconItemDropRateBonus to JSON.
         * @function toJSON
         * @memberof CSOEconItemDropRateBonus
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOEconItemDropRateBonus.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOEconItemDropRateBonus
         * @function getTypeUrl
         * @memberof CSOEconItemDropRateBonus
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOEconItemDropRateBonus.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOEconItemDropRateBonus";
        };
    
        return CSOEconItemDropRateBonus;
    })();
    
    $root.CSOEconItemLeagueViewPass = (function() {
    
        /**
         * Properties of a CSOEconItemLeagueViewPass.
         * @exports ICSOEconItemLeagueViewPass
         * @interface ICSOEconItemLeagueViewPass
         * @property {number|null} [accountId] CSOEconItemLeagueViewPass accountId
         * @property {number|null} [leagueId] CSOEconItemLeagueViewPass leagueId
         * @property {number|null} [admin] CSOEconItemLeagueViewPass admin
         * @property {number|null} [itemindex] CSOEconItemLeagueViewPass itemindex
         */
    
        /**
         * Constructs a new CSOEconItemLeagueViewPass.
         * @exports CSOEconItemLeagueViewPass
         * @classdesc Represents a CSOEconItemLeagueViewPass.
         * @implements ICSOEconItemLeagueViewPass
         * @constructor
         * @param {ICSOEconItemLeagueViewPass=} [properties] Properties to set
         */
        function CSOEconItemLeagueViewPass(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOEconItemLeagueViewPass accountId.
         * @member {number} accountId
         * @memberof CSOEconItemLeagueViewPass
         * @instance
         */
        CSOEconItemLeagueViewPass.prototype.accountId = 0;
    
        /**
         * CSOEconItemLeagueViewPass leagueId.
         * @member {number} leagueId
         * @memberof CSOEconItemLeagueViewPass
         * @instance
         */
        CSOEconItemLeagueViewPass.prototype.leagueId = 0;
    
        /**
         * CSOEconItemLeagueViewPass admin.
         * @member {number} admin
         * @memberof CSOEconItemLeagueViewPass
         * @instance
         */
        CSOEconItemLeagueViewPass.prototype.admin = 0;
    
        /**
         * CSOEconItemLeagueViewPass itemindex.
         * @member {number} itemindex
         * @memberof CSOEconItemLeagueViewPass
         * @instance
         */
        CSOEconItemLeagueViewPass.prototype.itemindex = 0;
    
        /**
         * Creates a new CSOEconItemLeagueViewPass instance using the specified properties.
         * @function create
         * @memberof CSOEconItemLeagueViewPass
         * @static
         * @param {ICSOEconItemLeagueViewPass=} [properties] Properties to set
         * @returns {CSOEconItemLeagueViewPass} CSOEconItemLeagueViewPass instance
         */
        CSOEconItemLeagueViewPass.create = function create(properties) {
            return new CSOEconItemLeagueViewPass(properties);
        };
    
        /**
         * Encodes the specified CSOEconItemLeagueViewPass message. Does not implicitly {@link CSOEconItemLeagueViewPass.verify|verify} messages.
         * @function encode
         * @memberof CSOEconItemLeagueViewPass
         * @static
         * @param {ICSOEconItemLeagueViewPass} message CSOEconItemLeagueViewPass message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconItemLeagueViewPass.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.accountId != null && Object.hasOwnProperty.call(message, "accountId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.accountId);
            if (message.leagueId != null && Object.hasOwnProperty.call(message, "leagueId"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.leagueId);
            if (message.admin != null && Object.hasOwnProperty.call(message, "admin"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.admin);
            if (message.itemindex != null && Object.hasOwnProperty.call(message, "itemindex"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.itemindex);
            return writer;
        };
    
        /**
         * Encodes the specified CSOEconItemLeagueViewPass message, length delimited. Does not implicitly {@link CSOEconItemLeagueViewPass.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOEconItemLeagueViewPass
         * @static
         * @param {ICSOEconItemLeagueViewPass} message CSOEconItemLeagueViewPass message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconItemLeagueViewPass.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOEconItemLeagueViewPass message from the specified reader or buffer.
         * @function decode
         * @memberof CSOEconItemLeagueViewPass
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOEconItemLeagueViewPass} CSOEconItemLeagueViewPass
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconItemLeagueViewPass.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOEconItemLeagueViewPass();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.accountId = reader.uint32();
                        break;
                    }
                case 2: {
                        message.leagueId = reader.uint32();
                        break;
                    }
                case 3: {
                        message.admin = reader.uint32();
                        break;
                    }
                case 4: {
                        message.itemindex = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOEconItemLeagueViewPass message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOEconItemLeagueViewPass
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOEconItemLeagueViewPass} CSOEconItemLeagueViewPass
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconItemLeagueViewPass.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOEconItemLeagueViewPass message.
         * @function verify
         * @memberof CSOEconItemLeagueViewPass
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOEconItemLeagueViewPass.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.accountId != null && message.hasOwnProperty("accountId"))
                if (!$util.isInteger(message.accountId))
                    return "accountId: integer expected";
            if (message.leagueId != null && message.hasOwnProperty("leagueId"))
                if (!$util.isInteger(message.leagueId))
                    return "leagueId: integer expected";
            if (message.admin != null && message.hasOwnProperty("admin"))
                if (!$util.isInteger(message.admin))
                    return "admin: integer expected";
            if (message.itemindex != null && message.hasOwnProperty("itemindex"))
                if (!$util.isInteger(message.itemindex))
                    return "itemindex: integer expected";
            return null;
        };
    
        /**
         * Creates a CSOEconItemLeagueViewPass message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOEconItemLeagueViewPass
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOEconItemLeagueViewPass} CSOEconItemLeagueViewPass
         */
        CSOEconItemLeagueViewPass.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOEconItemLeagueViewPass)
                return object;
            var message = new $root.CSOEconItemLeagueViewPass();
            if (object.accountId != null)
                message.accountId = object.accountId >>> 0;
            if (object.leagueId != null)
                message.leagueId = object.leagueId >>> 0;
            if (object.admin != null)
                message.admin = object.admin >>> 0;
            if (object.itemindex != null)
                message.itemindex = object.itemindex >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CSOEconItemLeagueViewPass message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOEconItemLeagueViewPass
         * @static
         * @param {CSOEconItemLeagueViewPass} message CSOEconItemLeagueViewPass
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOEconItemLeagueViewPass.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.accountId = 0;
                object.leagueId = 0;
                object.admin = 0;
                object.itemindex = 0;
            }
            if (message.accountId != null && message.hasOwnProperty("accountId"))
                object.accountId = message.accountId;
            if (message.leagueId != null && message.hasOwnProperty("leagueId"))
                object.leagueId = message.leagueId;
            if (message.admin != null && message.hasOwnProperty("admin"))
                object.admin = message.admin;
            if (message.itemindex != null && message.hasOwnProperty("itemindex"))
                object.itemindex = message.itemindex;
            return object;
        };
    
        /**
         * Converts this CSOEconItemLeagueViewPass to JSON.
         * @function toJSON
         * @memberof CSOEconItemLeagueViewPass
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOEconItemLeagueViewPass.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOEconItemLeagueViewPass
         * @function getTypeUrl
         * @memberof CSOEconItemLeagueViewPass
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOEconItemLeagueViewPass.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOEconItemLeagueViewPass";
        };
    
        return CSOEconItemLeagueViewPass;
    })();
    
    $root.CSOEconItemEventTicket = (function() {
    
        /**
         * Properties of a CSOEconItemEventTicket.
         * @exports ICSOEconItemEventTicket
         * @interface ICSOEconItemEventTicket
         * @property {number|null} [accountId] CSOEconItemEventTicket accountId
         * @property {number|null} [eventId] CSOEconItemEventTicket eventId
         * @property {number|Long|null} [itemId] CSOEconItemEventTicket itemId
         */
    
        /**
         * Constructs a new CSOEconItemEventTicket.
         * @exports CSOEconItemEventTicket
         * @classdesc Represents a CSOEconItemEventTicket.
         * @implements ICSOEconItemEventTicket
         * @constructor
         * @param {ICSOEconItemEventTicket=} [properties] Properties to set
         */
        function CSOEconItemEventTicket(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOEconItemEventTicket accountId.
         * @member {number} accountId
         * @memberof CSOEconItemEventTicket
         * @instance
         */
        CSOEconItemEventTicket.prototype.accountId = 0;
    
        /**
         * CSOEconItemEventTicket eventId.
         * @member {number} eventId
         * @memberof CSOEconItemEventTicket
         * @instance
         */
        CSOEconItemEventTicket.prototype.eventId = 0;
    
        /**
         * CSOEconItemEventTicket itemId.
         * @member {number|Long} itemId
         * @memberof CSOEconItemEventTicket
         * @instance
         */
        CSOEconItemEventTicket.prototype.itemId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CSOEconItemEventTicket instance using the specified properties.
         * @function create
         * @memberof CSOEconItemEventTicket
         * @static
         * @param {ICSOEconItemEventTicket=} [properties] Properties to set
         * @returns {CSOEconItemEventTicket} CSOEconItemEventTicket instance
         */
        CSOEconItemEventTicket.create = function create(properties) {
            return new CSOEconItemEventTicket(properties);
        };
    
        /**
         * Encodes the specified CSOEconItemEventTicket message. Does not implicitly {@link CSOEconItemEventTicket.verify|verify} messages.
         * @function encode
         * @memberof CSOEconItemEventTicket
         * @static
         * @param {ICSOEconItemEventTicket} message CSOEconItemEventTicket message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconItemEventTicket.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.accountId != null && Object.hasOwnProperty.call(message, "accountId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.accountId);
            if (message.eventId != null && Object.hasOwnProperty.call(message, "eventId"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.eventId);
            if (message.itemId != null && Object.hasOwnProperty.call(message, "itemId"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.itemId);
            return writer;
        };
    
        /**
         * Encodes the specified CSOEconItemEventTicket message, length delimited. Does not implicitly {@link CSOEconItemEventTicket.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOEconItemEventTicket
         * @static
         * @param {ICSOEconItemEventTicket} message CSOEconItemEventTicket message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconItemEventTicket.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOEconItemEventTicket message from the specified reader or buffer.
         * @function decode
         * @memberof CSOEconItemEventTicket
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOEconItemEventTicket} CSOEconItemEventTicket
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconItemEventTicket.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOEconItemEventTicket();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.accountId = reader.uint32();
                        break;
                    }
                case 2: {
                        message.eventId = reader.uint32();
                        break;
                    }
                case 3: {
                        message.itemId = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOEconItemEventTicket message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOEconItemEventTicket
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOEconItemEventTicket} CSOEconItemEventTicket
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconItemEventTicket.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOEconItemEventTicket message.
         * @function verify
         * @memberof CSOEconItemEventTicket
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOEconItemEventTicket.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.accountId != null && message.hasOwnProperty("accountId"))
                if (!$util.isInteger(message.accountId))
                    return "accountId: integer expected";
            if (message.eventId != null && message.hasOwnProperty("eventId"))
                if (!$util.isInteger(message.eventId))
                    return "eventId: integer expected";
            if (message.itemId != null && message.hasOwnProperty("itemId"))
                if (!$util.isInteger(message.itemId) && !(message.itemId && $util.isInteger(message.itemId.low) && $util.isInteger(message.itemId.high)))
                    return "itemId: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CSOEconItemEventTicket message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOEconItemEventTicket
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOEconItemEventTicket} CSOEconItemEventTicket
         */
        CSOEconItemEventTicket.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOEconItemEventTicket)
                return object;
            var message = new $root.CSOEconItemEventTicket();
            if (object.accountId != null)
                message.accountId = object.accountId >>> 0;
            if (object.eventId != null)
                message.eventId = object.eventId >>> 0;
            if (object.itemId != null)
                if ($util.Long)
                    (message.itemId = $util.Long.fromValue(object.itemId)).unsigned = true;
                else if (typeof object.itemId === "string")
                    message.itemId = parseInt(object.itemId, 10);
                else if (typeof object.itemId === "number")
                    message.itemId = object.itemId;
                else if (typeof object.itemId === "object")
                    message.itemId = new $util.LongBits(object.itemId.low >>> 0, object.itemId.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CSOEconItemEventTicket message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOEconItemEventTicket
         * @static
         * @param {CSOEconItemEventTicket} message CSOEconItemEventTicket
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOEconItemEventTicket.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.accountId = 0;
                object.eventId = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.itemId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.itemId = options.longs === String ? "0" : 0;
            }
            if (message.accountId != null && message.hasOwnProperty("accountId"))
                object.accountId = message.accountId;
            if (message.eventId != null && message.hasOwnProperty("eventId"))
                object.eventId = message.eventId;
            if (message.itemId != null && message.hasOwnProperty("itemId"))
                if (typeof message.itemId === "number")
                    object.itemId = options.longs === String ? String(message.itemId) : message.itemId;
                else
                    object.itemId = options.longs === String ? $util.Long.prototype.toString.call(message.itemId) : options.longs === Number ? new $util.LongBits(message.itemId.low >>> 0, message.itemId.high >>> 0).toNumber(true) : message.itemId;
            return object;
        };
    
        /**
         * Converts this CSOEconItemEventTicket to JSON.
         * @function toJSON
         * @memberof CSOEconItemEventTicket
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOEconItemEventTicket.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOEconItemEventTicket
         * @function getTypeUrl
         * @memberof CSOEconItemEventTicket
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOEconItemEventTicket.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOEconItemEventTicket";
        };
    
        return CSOEconItemEventTicket;
    })();
    
    $root.CMsgGCItemPreviewItemBoughtNotification = (function() {
    
        /**
         * Properties of a CMsgGCItemPreviewItemBoughtNotification.
         * @exports ICMsgGCItemPreviewItemBoughtNotification
         * @interface ICMsgGCItemPreviewItemBoughtNotification
         * @property {number|null} [itemDefIndex] CMsgGCItemPreviewItemBoughtNotification itemDefIndex
         */
    
        /**
         * Constructs a new CMsgGCItemPreviewItemBoughtNotification.
         * @exports CMsgGCItemPreviewItemBoughtNotification
         * @classdesc Represents a CMsgGCItemPreviewItemBoughtNotification.
         * @implements ICMsgGCItemPreviewItemBoughtNotification
         * @constructor
         * @param {ICMsgGCItemPreviewItemBoughtNotification=} [properties] Properties to set
         */
        function CMsgGCItemPreviewItemBoughtNotification(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCItemPreviewItemBoughtNotification itemDefIndex.
         * @member {number} itemDefIndex
         * @memberof CMsgGCItemPreviewItemBoughtNotification
         * @instance
         */
        CMsgGCItemPreviewItemBoughtNotification.prototype.itemDefIndex = 0;
    
        /**
         * Creates a new CMsgGCItemPreviewItemBoughtNotification instance using the specified properties.
         * @function create
         * @memberof CMsgGCItemPreviewItemBoughtNotification
         * @static
         * @param {ICMsgGCItemPreviewItemBoughtNotification=} [properties] Properties to set
         * @returns {CMsgGCItemPreviewItemBoughtNotification} CMsgGCItemPreviewItemBoughtNotification instance
         */
        CMsgGCItemPreviewItemBoughtNotification.create = function create(properties) {
            return new CMsgGCItemPreviewItemBoughtNotification(properties);
        };
    
        /**
         * Encodes the specified CMsgGCItemPreviewItemBoughtNotification message. Does not implicitly {@link CMsgGCItemPreviewItemBoughtNotification.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCItemPreviewItemBoughtNotification
         * @static
         * @param {ICMsgGCItemPreviewItemBoughtNotification} message CMsgGCItemPreviewItemBoughtNotification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCItemPreviewItemBoughtNotification.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.itemDefIndex != null && Object.hasOwnProperty.call(message, "itemDefIndex"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.itemDefIndex);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCItemPreviewItemBoughtNotification message, length delimited. Does not implicitly {@link CMsgGCItemPreviewItemBoughtNotification.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCItemPreviewItemBoughtNotification
         * @static
         * @param {ICMsgGCItemPreviewItemBoughtNotification} message CMsgGCItemPreviewItemBoughtNotification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCItemPreviewItemBoughtNotification.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCItemPreviewItemBoughtNotification message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCItemPreviewItemBoughtNotification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCItemPreviewItemBoughtNotification} CMsgGCItemPreviewItemBoughtNotification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCItemPreviewItemBoughtNotification.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCItemPreviewItemBoughtNotification();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.itemDefIndex = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCItemPreviewItemBoughtNotification message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCItemPreviewItemBoughtNotification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCItemPreviewItemBoughtNotification} CMsgGCItemPreviewItemBoughtNotification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCItemPreviewItemBoughtNotification.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCItemPreviewItemBoughtNotification message.
         * @function verify
         * @memberof CMsgGCItemPreviewItemBoughtNotification
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCItemPreviewItemBoughtNotification.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.itemDefIndex != null && message.hasOwnProperty("itemDefIndex"))
                if (!$util.isInteger(message.itemDefIndex))
                    return "itemDefIndex: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCItemPreviewItemBoughtNotification message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCItemPreviewItemBoughtNotification
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCItemPreviewItemBoughtNotification} CMsgGCItemPreviewItemBoughtNotification
         */
        CMsgGCItemPreviewItemBoughtNotification.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCItemPreviewItemBoughtNotification)
                return object;
            var message = new $root.CMsgGCItemPreviewItemBoughtNotification();
            if (object.itemDefIndex != null)
                message.itemDefIndex = object.itemDefIndex >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCItemPreviewItemBoughtNotification message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCItemPreviewItemBoughtNotification
         * @static
         * @param {CMsgGCItemPreviewItemBoughtNotification} message CMsgGCItemPreviewItemBoughtNotification
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCItemPreviewItemBoughtNotification.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.itemDefIndex = 0;
            if (message.itemDefIndex != null && message.hasOwnProperty("itemDefIndex"))
                object.itemDefIndex = message.itemDefIndex;
            return object;
        };
    
        /**
         * Converts this CMsgGCItemPreviewItemBoughtNotification to JSON.
         * @function toJSON
         * @memberof CMsgGCItemPreviewItemBoughtNotification
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCItemPreviewItemBoughtNotification.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCItemPreviewItemBoughtNotification
         * @function getTypeUrl
         * @memberof CMsgGCItemPreviewItemBoughtNotification
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCItemPreviewItemBoughtNotification.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCItemPreviewItemBoughtNotification";
        };
    
        return CMsgGCItemPreviewItemBoughtNotification;
    })();
    
    $root.CMsgGCStorePurchaseCancel = (function() {
    
        /**
         * Properties of a CMsgGCStorePurchaseCancel.
         * @exports ICMsgGCStorePurchaseCancel
         * @interface ICMsgGCStorePurchaseCancel
         * @property {number|Long|null} [txnId] CMsgGCStorePurchaseCancel txnId
         */
    
        /**
         * Constructs a new CMsgGCStorePurchaseCancel.
         * @exports CMsgGCStorePurchaseCancel
         * @classdesc Represents a CMsgGCStorePurchaseCancel.
         * @implements ICMsgGCStorePurchaseCancel
         * @constructor
         * @param {ICMsgGCStorePurchaseCancel=} [properties] Properties to set
         */
        function CMsgGCStorePurchaseCancel(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCStorePurchaseCancel txnId.
         * @member {number|Long} txnId
         * @memberof CMsgGCStorePurchaseCancel
         * @instance
         */
        CMsgGCStorePurchaseCancel.prototype.txnId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgGCStorePurchaseCancel instance using the specified properties.
         * @function create
         * @memberof CMsgGCStorePurchaseCancel
         * @static
         * @param {ICMsgGCStorePurchaseCancel=} [properties] Properties to set
         * @returns {CMsgGCStorePurchaseCancel} CMsgGCStorePurchaseCancel instance
         */
        CMsgGCStorePurchaseCancel.create = function create(properties) {
            return new CMsgGCStorePurchaseCancel(properties);
        };
    
        /**
         * Encodes the specified CMsgGCStorePurchaseCancel message. Does not implicitly {@link CMsgGCStorePurchaseCancel.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCStorePurchaseCancel
         * @static
         * @param {ICMsgGCStorePurchaseCancel} message CMsgGCStorePurchaseCancel message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCStorePurchaseCancel.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.txnId != null && Object.hasOwnProperty.call(message, "txnId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.txnId);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCStorePurchaseCancel message, length delimited. Does not implicitly {@link CMsgGCStorePurchaseCancel.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCStorePurchaseCancel
         * @static
         * @param {ICMsgGCStorePurchaseCancel} message CMsgGCStorePurchaseCancel message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCStorePurchaseCancel.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCStorePurchaseCancel message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCStorePurchaseCancel
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCStorePurchaseCancel} CMsgGCStorePurchaseCancel
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCStorePurchaseCancel.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCStorePurchaseCancel();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.txnId = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCStorePurchaseCancel message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCStorePurchaseCancel
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCStorePurchaseCancel} CMsgGCStorePurchaseCancel
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCStorePurchaseCancel.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCStorePurchaseCancel message.
         * @function verify
         * @memberof CMsgGCStorePurchaseCancel
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCStorePurchaseCancel.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.txnId != null && message.hasOwnProperty("txnId"))
                if (!$util.isInteger(message.txnId) && !(message.txnId && $util.isInteger(message.txnId.low) && $util.isInteger(message.txnId.high)))
                    return "txnId: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCStorePurchaseCancel message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCStorePurchaseCancel
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCStorePurchaseCancel} CMsgGCStorePurchaseCancel
         */
        CMsgGCStorePurchaseCancel.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCStorePurchaseCancel)
                return object;
            var message = new $root.CMsgGCStorePurchaseCancel();
            if (object.txnId != null)
                if ($util.Long)
                    (message.txnId = $util.Long.fromValue(object.txnId)).unsigned = true;
                else if (typeof object.txnId === "string")
                    message.txnId = parseInt(object.txnId, 10);
                else if (typeof object.txnId === "number")
                    message.txnId = object.txnId;
                else if (typeof object.txnId === "object")
                    message.txnId = new $util.LongBits(object.txnId.low >>> 0, object.txnId.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCStorePurchaseCancel message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCStorePurchaseCancel
         * @static
         * @param {CMsgGCStorePurchaseCancel} message CMsgGCStorePurchaseCancel
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCStorePurchaseCancel.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.txnId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.txnId = options.longs === String ? "0" : 0;
            if (message.txnId != null && message.hasOwnProperty("txnId"))
                if (typeof message.txnId === "number")
                    object.txnId = options.longs === String ? String(message.txnId) : message.txnId;
                else
                    object.txnId = options.longs === String ? $util.Long.prototype.toString.call(message.txnId) : options.longs === Number ? new $util.LongBits(message.txnId.low >>> 0, message.txnId.high >>> 0).toNumber(true) : message.txnId;
            return object;
        };
    
        /**
         * Converts this CMsgGCStorePurchaseCancel to JSON.
         * @function toJSON
         * @memberof CMsgGCStorePurchaseCancel
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCStorePurchaseCancel.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCStorePurchaseCancel
         * @function getTypeUrl
         * @memberof CMsgGCStorePurchaseCancel
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCStorePurchaseCancel.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCStorePurchaseCancel";
        };
    
        return CMsgGCStorePurchaseCancel;
    })();
    
    $root.CMsgGCStorePurchaseCancelResponse = (function() {
    
        /**
         * Properties of a CMsgGCStorePurchaseCancelResponse.
         * @exports ICMsgGCStorePurchaseCancelResponse
         * @interface ICMsgGCStorePurchaseCancelResponse
         * @property {number|null} [result] CMsgGCStorePurchaseCancelResponse result
         */
    
        /**
         * Constructs a new CMsgGCStorePurchaseCancelResponse.
         * @exports CMsgGCStorePurchaseCancelResponse
         * @classdesc Represents a CMsgGCStorePurchaseCancelResponse.
         * @implements ICMsgGCStorePurchaseCancelResponse
         * @constructor
         * @param {ICMsgGCStorePurchaseCancelResponse=} [properties] Properties to set
         */
        function CMsgGCStorePurchaseCancelResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCStorePurchaseCancelResponse result.
         * @member {number} result
         * @memberof CMsgGCStorePurchaseCancelResponse
         * @instance
         */
        CMsgGCStorePurchaseCancelResponse.prototype.result = 0;
    
        /**
         * Creates a new CMsgGCStorePurchaseCancelResponse instance using the specified properties.
         * @function create
         * @memberof CMsgGCStorePurchaseCancelResponse
         * @static
         * @param {ICMsgGCStorePurchaseCancelResponse=} [properties] Properties to set
         * @returns {CMsgGCStorePurchaseCancelResponse} CMsgGCStorePurchaseCancelResponse instance
         */
        CMsgGCStorePurchaseCancelResponse.create = function create(properties) {
            return new CMsgGCStorePurchaseCancelResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgGCStorePurchaseCancelResponse message. Does not implicitly {@link CMsgGCStorePurchaseCancelResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCStorePurchaseCancelResponse
         * @static
         * @param {ICMsgGCStorePurchaseCancelResponse} message CMsgGCStorePurchaseCancelResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCStorePurchaseCancelResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.result != null && Object.hasOwnProperty.call(message, "result"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.result);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCStorePurchaseCancelResponse message, length delimited. Does not implicitly {@link CMsgGCStorePurchaseCancelResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCStorePurchaseCancelResponse
         * @static
         * @param {ICMsgGCStorePurchaseCancelResponse} message CMsgGCStorePurchaseCancelResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCStorePurchaseCancelResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCStorePurchaseCancelResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCStorePurchaseCancelResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCStorePurchaseCancelResponse} CMsgGCStorePurchaseCancelResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCStorePurchaseCancelResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCStorePurchaseCancelResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.result = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCStorePurchaseCancelResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCStorePurchaseCancelResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCStorePurchaseCancelResponse} CMsgGCStorePurchaseCancelResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCStorePurchaseCancelResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCStorePurchaseCancelResponse message.
         * @function verify
         * @memberof CMsgGCStorePurchaseCancelResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCStorePurchaseCancelResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.result != null && message.hasOwnProperty("result"))
                if (!$util.isInteger(message.result))
                    return "result: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCStorePurchaseCancelResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCStorePurchaseCancelResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCStorePurchaseCancelResponse} CMsgGCStorePurchaseCancelResponse
         */
        CMsgGCStorePurchaseCancelResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCStorePurchaseCancelResponse)
                return object;
            var message = new $root.CMsgGCStorePurchaseCancelResponse();
            if (object.result != null)
                message.result = object.result >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCStorePurchaseCancelResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCStorePurchaseCancelResponse
         * @static
         * @param {CMsgGCStorePurchaseCancelResponse} message CMsgGCStorePurchaseCancelResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCStorePurchaseCancelResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.result = 0;
            if (message.result != null && message.hasOwnProperty("result"))
                object.result = message.result;
            return object;
        };
    
        /**
         * Converts this CMsgGCStorePurchaseCancelResponse to JSON.
         * @function toJSON
         * @memberof CMsgGCStorePurchaseCancelResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCStorePurchaseCancelResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCStorePurchaseCancelResponse
         * @function getTypeUrl
         * @memberof CMsgGCStorePurchaseCancelResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCStorePurchaseCancelResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCStorePurchaseCancelResponse";
        };
    
        return CMsgGCStorePurchaseCancelResponse;
    })();
    
    $root.CMsgGCStorePurchaseFinalize = (function() {
    
        /**
         * Properties of a CMsgGCStorePurchaseFinalize.
         * @exports ICMsgGCStorePurchaseFinalize
         * @interface ICMsgGCStorePurchaseFinalize
         * @property {number|Long|null} [txnId] CMsgGCStorePurchaseFinalize txnId
         */
    
        /**
         * Constructs a new CMsgGCStorePurchaseFinalize.
         * @exports CMsgGCStorePurchaseFinalize
         * @classdesc Represents a CMsgGCStorePurchaseFinalize.
         * @implements ICMsgGCStorePurchaseFinalize
         * @constructor
         * @param {ICMsgGCStorePurchaseFinalize=} [properties] Properties to set
         */
        function CMsgGCStorePurchaseFinalize(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCStorePurchaseFinalize txnId.
         * @member {number|Long} txnId
         * @memberof CMsgGCStorePurchaseFinalize
         * @instance
         */
        CMsgGCStorePurchaseFinalize.prototype.txnId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgGCStorePurchaseFinalize instance using the specified properties.
         * @function create
         * @memberof CMsgGCStorePurchaseFinalize
         * @static
         * @param {ICMsgGCStorePurchaseFinalize=} [properties] Properties to set
         * @returns {CMsgGCStorePurchaseFinalize} CMsgGCStorePurchaseFinalize instance
         */
        CMsgGCStorePurchaseFinalize.create = function create(properties) {
            return new CMsgGCStorePurchaseFinalize(properties);
        };
    
        /**
         * Encodes the specified CMsgGCStorePurchaseFinalize message. Does not implicitly {@link CMsgGCStorePurchaseFinalize.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCStorePurchaseFinalize
         * @static
         * @param {ICMsgGCStorePurchaseFinalize} message CMsgGCStorePurchaseFinalize message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCStorePurchaseFinalize.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.txnId != null && Object.hasOwnProperty.call(message, "txnId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.txnId);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCStorePurchaseFinalize message, length delimited. Does not implicitly {@link CMsgGCStorePurchaseFinalize.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCStorePurchaseFinalize
         * @static
         * @param {ICMsgGCStorePurchaseFinalize} message CMsgGCStorePurchaseFinalize message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCStorePurchaseFinalize.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCStorePurchaseFinalize message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCStorePurchaseFinalize
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCStorePurchaseFinalize} CMsgGCStorePurchaseFinalize
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCStorePurchaseFinalize.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCStorePurchaseFinalize();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.txnId = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCStorePurchaseFinalize message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCStorePurchaseFinalize
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCStorePurchaseFinalize} CMsgGCStorePurchaseFinalize
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCStorePurchaseFinalize.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCStorePurchaseFinalize message.
         * @function verify
         * @memberof CMsgGCStorePurchaseFinalize
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCStorePurchaseFinalize.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.txnId != null && message.hasOwnProperty("txnId"))
                if (!$util.isInteger(message.txnId) && !(message.txnId && $util.isInteger(message.txnId.low) && $util.isInteger(message.txnId.high)))
                    return "txnId: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCStorePurchaseFinalize message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCStorePurchaseFinalize
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCStorePurchaseFinalize} CMsgGCStorePurchaseFinalize
         */
        CMsgGCStorePurchaseFinalize.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCStorePurchaseFinalize)
                return object;
            var message = new $root.CMsgGCStorePurchaseFinalize();
            if (object.txnId != null)
                if ($util.Long)
                    (message.txnId = $util.Long.fromValue(object.txnId)).unsigned = true;
                else if (typeof object.txnId === "string")
                    message.txnId = parseInt(object.txnId, 10);
                else if (typeof object.txnId === "number")
                    message.txnId = object.txnId;
                else if (typeof object.txnId === "object")
                    message.txnId = new $util.LongBits(object.txnId.low >>> 0, object.txnId.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCStorePurchaseFinalize message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCStorePurchaseFinalize
         * @static
         * @param {CMsgGCStorePurchaseFinalize} message CMsgGCStorePurchaseFinalize
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCStorePurchaseFinalize.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.txnId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.txnId = options.longs === String ? "0" : 0;
            if (message.txnId != null && message.hasOwnProperty("txnId"))
                if (typeof message.txnId === "number")
                    object.txnId = options.longs === String ? String(message.txnId) : message.txnId;
                else
                    object.txnId = options.longs === String ? $util.Long.prototype.toString.call(message.txnId) : options.longs === Number ? new $util.LongBits(message.txnId.low >>> 0, message.txnId.high >>> 0).toNumber(true) : message.txnId;
            return object;
        };
    
        /**
         * Converts this CMsgGCStorePurchaseFinalize to JSON.
         * @function toJSON
         * @memberof CMsgGCStorePurchaseFinalize
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCStorePurchaseFinalize.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCStorePurchaseFinalize
         * @function getTypeUrl
         * @memberof CMsgGCStorePurchaseFinalize
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCStorePurchaseFinalize.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCStorePurchaseFinalize";
        };
    
        return CMsgGCStorePurchaseFinalize;
    })();
    
    $root.CMsgGCStorePurchaseFinalizeResponse = (function() {
    
        /**
         * Properties of a CMsgGCStorePurchaseFinalizeResponse.
         * @exports ICMsgGCStorePurchaseFinalizeResponse
         * @interface ICMsgGCStorePurchaseFinalizeResponse
         * @property {number|null} [result] CMsgGCStorePurchaseFinalizeResponse result
         * @property {Array.<number|Long>|null} [itemIds] CMsgGCStorePurchaseFinalizeResponse itemIds
         */
    
        /**
         * Constructs a new CMsgGCStorePurchaseFinalizeResponse.
         * @exports CMsgGCStorePurchaseFinalizeResponse
         * @classdesc Represents a CMsgGCStorePurchaseFinalizeResponse.
         * @implements ICMsgGCStorePurchaseFinalizeResponse
         * @constructor
         * @param {ICMsgGCStorePurchaseFinalizeResponse=} [properties] Properties to set
         */
        function CMsgGCStorePurchaseFinalizeResponse(properties) {
            this.itemIds = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCStorePurchaseFinalizeResponse result.
         * @member {number} result
         * @memberof CMsgGCStorePurchaseFinalizeResponse
         * @instance
         */
        CMsgGCStorePurchaseFinalizeResponse.prototype.result = 0;
    
        /**
         * CMsgGCStorePurchaseFinalizeResponse itemIds.
         * @member {Array.<number|Long>} itemIds
         * @memberof CMsgGCStorePurchaseFinalizeResponse
         * @instance
         */
        CMsgGCStorePurchaseFinalizeResponse.prototype.itemIds = $util.emptyArray;
    
        /**
         * Creates a new CMsgGCStorePurchaseFinalizeResponse instance using the specified properties.
         * @function create
         * @memberof CMsgGCStorePurchaseFinalizeResponse
         * @static
         * @param {ICMsgGCStorePurchaseFinalizeResponse=} [properties] Properties to set
         * @returns {CMsgGCStorePurchaseFinalizeResponse} CMsgGCStorePurchaseFinalizeResponse instance
         */
        CMsgGCStorePurchaseFinalizeResponse.create = function create(properties) {
            return new CMsgGCStorePurchaseFinalizeResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgGCStorePurchaseFinalizeResponse message. Does not implicitly {@link CMsgGCStorePurchaseFinalizeResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCStorePurchaseFinalizeResponse
         * @static
         * @param {ICMsgGCStorePurchaseFinalizeResponse} message CMsgGCStorePurchaseFinalizeResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCStorePurchaseFinalizeResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.result != null && Object.hasOwnProperty.call(message, "result"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.result);
            if (message.itemIds != null && message.itemIds.length)
                for (var i = 0; i < message.itemIds.length; ++i)
                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.itemIds[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCStorePurchaseFinalizeResponse message, length delimited. Does not implicitly {@link CMsgGCStorePurchaseFinalizeResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCStorePurchaseFinalizeResponse
         * @static
         * @param {ICMsgGCStorePurchaseFinalizeResponse} message CMsgGCStorePurchaseFinalizeResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCStorePurchaseFinalizeResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCStorePurchaseFinalizeResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCStorePurchaseFinalizeResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCStorePurchaseFinalizeResponse} CMsgGCStorePurchaseFinalizeResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCStorePurchaseFinalizeResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCStorePurchaseFinalizeResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.result = reader.uint32();
                        break;
                    }
                case 2: {
                        if (!(message.itemIds && message.itemIds.length))
                            message.itemIds = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.itemIds.push(reader.uint64());
                        } else
                            message.itemIds.push(reader.uint64());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCStorePurchaseFinalizeResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCStorePurchaseFinalizeResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCStorePurchaseFinalizeResponse} CMsgGCStorePurchaseFinalizeResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCStorePurchaseFinalizeResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCStorePurchaseFinalizeResponse message.
         * @function verify
         * @memberof CMsgGCStorePurchaseFinalizeResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCStorePurchaseFinalizeResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.result != null && message.hasOwnProperty("result"))
                if (!$util.isInteger(message.result))
                    return "result: integer expected";
            if (message.itemIds != null && message.hasOwnProperty("itemIds")) {
                if (!Array.isArray(message.itemIds))
                    return "itemIds: array expected";
                for (var i = 0; i < message.itemIds.length; ++i)
                    if (!$util.isInteger(message.itemIds[i]) && !(message.itemIds[i] && $util.isInteger(message.itemIds[i].low) && $util.isInteger(message.itemIds[i].high)))
                        return "itemIds: integer|Long[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCStorePurchaseFinalizeResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCStorePurchaseFinalizeResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCStorePurchaseFinalizeResponse} CMsgGCStorePurchaseFinalizeResponse
         */
        CMsgGCStorePurchaseFinalizeResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCStorePurchaseFinalizeResponse)
                return object;
            var message = new $root.CMsgGCStorePurchaseFinalizeResponse();
            if (object.result != null)
                message.result = object.result >>> 0;
            if (object.itemIds) {
                if (!Array.isArray(object.itemIds))
                    throw TypeError(".CMsgGCStorePurchaseFinalizeResponse.itemIds: array expected");
                message.itemIds = [];
                for (var i = 0; i < object.itemIds.length; ++i)
                    if ($util.Long)
                        (message.itemIds[i] = $util.Long.fromValue(object.itemIds[i])).unsigned = true;
                    else if (typeof object.itemIds[i] === "string")
                        message.itemIds[i] = parseInt(object.itemIds[i], 10);
                    else if (typeof object.itemIds[i] === "number")
                        message.itemIds[i] = object.itemIds[i];
                    else if (typeof object.itemIds[i] === "object")
                        message.itemIds[i] = new $util.LongBits(object.itemIds[i].low >>> 0, object.itemIds[i].high >>> 0).toNumber(true);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCStorePurchaseFinalizeResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCStorePurchaseFinalizeResponse
         * @static
         * @param {CMsgGCStorePurchaseFinalizeResponse} message CMsgGCStorePurchaseFinalizeResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCStorePurchaseFinalizeResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.itemIds = [];
            if (options.defaults)
                object.result = 0;
            if (message.result != null && message.hasOwnProperty("result"))
                object.result = message.result;
            if (message.itemIds && message.itemIds.length) {
                object.itemIds = [];
                for (var j = 0; j < message.itemIds.length; ++j)
                    if (typeof message.itemIds[j] === "number")
                        object.itemIds[j] = options.longs === String ? String(message.itemIds[j]) : message.itemIds[j];
                    else
                        object.itemIds[j] = options.longs === String ? $util.Long.prototype.toString.call(message.itemIds[j]) : options.longs === Number ? new $util.LongBits(message.itemIds[j].low >>> 0, message.itemIds[j].high >>> 0).toNumber(true) : message.itemIds[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgGCStorePurchaseFinalizeResponse to JSON.
         * @function toJSON
         * @memberof CMsgGCStorePurchaseFinalizeResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCStorePurchaseFinalizeResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCStorePurchaseFinalizeResponse
         * @function getTypeUrl
         * @memberof CMsgGCStorePurchaseFinalizeResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCStorePurchaseFinalizeResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCStorePurchaseFinalizeResponse";
        };
    
        return CMsgGCStorePurchaseFinalizeResponse;
    })();
    
    $root.CMsgGCBannedWordListRequest = (function() {
    
        /**
         * Properties of a CMsgGCBannedWordListRequest.
         * @exports ICMsgGCBannedWordListRequest
         * @interface ICMsgGCBannedWordListRequest
         * @property {number|null} [banListGroupId] CMsgGCBannedWordListRequest banListGroupId
         * @property {number|null} [wordId] CMsgGCBannedWordListRequest wordId
         */
    
        /**
         * Constructs a new CMsgGCBannedWordListRequest.
         * @exports CMsgGCBannedWordListRequest
         * @classdesc Represents a CMsgGCBannedWordListRequest.
         * @implements ICMsgGCBannedWordListRequest
         * @constructor
         * @param {ICMsgGCBannedWordListRequest=} [properties] Properties to set
         */
        function CMsgGCBannedWordListRequest(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCBannedWordListRequest banListGroupId.
         * @member {number} banListGroupId
         * @memberof CMsgGCBannedWordListRequest
         * @instance
         */
        CMsgGCBannedWordListRequest.prototype.banListGroupId = 0;
    
        /**
         * CMsgGCBannedWordListRequest wordId.
         * @member {number} wordId
         * @memberof CMsgGCBannedWordListRequest
         * @instance
         */
        CMsgGCBannedWordListRequest.prototype.wordId = 0;
    
        /**
         * Creates a new CMsgGCBannedWordListRequest instance using the specified properties.
         * @function create
         * @memberof CMsgGCBannedWordListRequest
         * @static
         * @param {ICMsgGCBannedWordListRequest=} [properties] Properties to set
         * @returns {CMsgGCBannedWordListRequest} CMsgGCBannedWordListRequest instance
         */
        CMsgGCBannedWordListRequest.create = function create(properties) {
            return new CMsgGCBannedWordListRequest(properties);
        };
    
        /**
         * Encodes the specified CMsgGCBannedWordListRequest message. Does not implicitly {@link CMsgGCBannedWordListRequest.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCBannedWordListRequest
         * @static
         * @param {ICMsgGCBannedWordListRequest} message CMsgGCBannedWordListRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCBannedWordListRequest.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.banListGroupId != null && Object.hasOwnProperty.call(message, "banListGroupId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.banListGroupId);
            if (message.wordId != null && Object.hasOwnProperty.call(message, "wordId"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.wordId);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCBannedWordListRequest message, length delimited. Does not implicitly {@link CMsgGCBannedWordListRequest.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCBannedWordListRequest
         * @static
         * @param {ICMsgGCBannedWordListRequest} message CMsgGCBannedWordListRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCBannedWordListRequest.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCBannedWordListRequest message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCBannedWordListRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCBannedWordListRequest} CMsgGCBannedWordListRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCBannedWordListRequest.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCBannedWordListRequest();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.banListGroupId = reader.uint32();
                        break;
                    }
                case 2: {
                        message.wordId = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCBannedWordListRequest message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCBannedWordListRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCBannedWordListRequest} CMsgGCBannedWordListRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCBannedWordListRequest.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCBannedWordListRequest message.
         * @function verify
         * @memberof CMsgGCBannedWordListRequest
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCBannedWordListRequest.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.banListGroupId != null && message.hasOwnProperty("banListGroupId"))
                if (!$util.isInteger(message.banListGroupId))
                    return "banListGroupId: integer expected";
            if (message.wordId != null && message.hasOwnProperty("wordId"))
                if (!$util.isInteger(message.wordId))
                    return "wordId: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCBannedWordListRequest message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCBannedWordListRequest
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCBannedWordListRequest} CMsgGCBannedWordListRequest
         */
        CMsgGCBannedWordListRequest.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCBannedWordListRequest)
                return object;
            var message = new $root.CMsgGCBannedWordListRequest();
            if (object.banListGroupId != null)
                message.banListGroupId = object.banListGroupId >>> 0;
            if (object.wordId != null)
                message.wordId = object.wordId >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCBannedWordListRequest message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCBannedWordListRequest
         * @static
         * @param {CMsgGCBannedWordListRequest} message CMsgGCBannedWordListRequest
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCBannedWordListRequest.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.banListGroupId = 0;
                object.wordId = 0;
            }
            if (message.banListGroupId != null && message.hasOwnProperty("banListGroupId"))
                object.banListGroupId = message.banListGroupId;
            if (message.wordId != null && message.hasOwnProperty("wordId"))
                object.wordId = message.wordId;
            return object;
        };
    
        /**
         * Converts this CMsgGCBannedWordListRequest to JSON.
         * @function toJSON
         * @memberof CMsgGCBannedWordListRequest
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCBannedWordListRequest.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCBannedWordListRequest
         * @function getTypeUrl
         * @memberof CMsgGCBannedWordListRequest
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCBannedWordListRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCBannedWordListRequest";
        };
    
        return CMsgGCBannedWordListRequest;
    })();
    
    $root.CMsgGCRequestAnnouncements = (function() {
    
        /**
         * Properties of a CMsgGCRequestAnnouncements.
         * @exports ICMsgGCRequestAnnouncements
         * @interface ICMsgGCRequestAnnouncements
         */
    
        /**
         * Constructs a new CMsgGCRequestAnnouncements.
         * @exports CMsgGCRequestAnnouncements
         * @classdesc Represents a CMsgGCRequestAnnouncements.
         * @implements ICMsgGCRequestAnnouncements
         * @constructor
         * @param {ICMsgGCRequestAnnouncements=} [properties] Properties to set
         */
        function CMsgGCRequestAnnouncements(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CMsgGCRequestAnnouncements instance using the specified properties.
         * @function create
         * @memberof CMsgGCRequestAnnouncements
         * @static
         * @param {ICMsgGCRequestAnnouncements=} [properties] Properties to set
         * @returns {CMsgGCRequestAnnouncements} CMsgGCRequestAnnouncements instance
         */
        CMsgGCRequestAnnouncements.create = function create(properties) {
            return new CMsgGCRequestAnnouncements(properties);
        };
    
        /**
         * Encodes the specified CMsgGCRequestAnnouncements message. Does not implicitly {@link CMsgGCRequestAnnouncements.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCRequestAnnouncements
         * @static
         * @param {ICMsgGCRequestAnnouncements} message CMsgGCRequestAnnouncements message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCRequestAnnouncements.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCRequestAnnouncements message, length delimited. Does not implicitly {@link CMsgGCRequestAnnouncements.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCRequestAnnouncements
         * @static
         * @param {ICMsgGCRequestAnnouncements} message CMsgGCRequestAnnouncements message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCRequestAnnouncements.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCRequestAnnouncements message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCRequestAnnouncements
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCRequestAnnouncements} CMsgGCRequestAnnouncements
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCRequestAnnouncements.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCRequestAnnouncements();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCRequestAnnouncements message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCRequestAnnouncements
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCRequestAnnouncements} CMsgGCRequestAnnouncements
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCRequestAnnouncements.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCRequestAnnouncements message.
         * @function verify
         * @memberof CMsgGCRequestAnnouncements
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCRequestAnnouncements.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCRequestAnnouncements message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCRequestAnnouncements
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCRequestAnnouncements} CMsgGCRequestAnnouncements
         */
        CMsgGCRequestAnnouncements.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCRequestAnnouncements)
                return object;
            return new $root.CMsgGCRequestAnnouncements();
        };
    
        /**
         * Creates a plain object from a CMsgGCRequestAnnouncements message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCRequestAnnouncements
         * @static
         * @param {CMsgGCRequestAnnouncements} message CMsgGCRequestAnnouncements
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCRequestAnnouncements.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CMsgGCRequestAnnouncements to JSON.
         * @function toJSON
         * @memberof CMsgGCRequestAnnouncements
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCRequestAnnouncements.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCRequestAnnouncements
         * @function getTypeUrl
         * @memberof CMsgGCRequestAnnouncements
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCRequestAnnouncements.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCRequestAnnouncements";
        };
    
        return CMsgGCRequestAnnouncements;
    })();
    
    $root.CMsgGCRequestAnnouncementsResponse = (function() {
    
        /**
         * Properties of a CMsgGCRequestAnnouncementsResponse.
         * @exports ICMsgGCRequestAnnouncementsResponse
         * @interface ICMsgGCRequestAnnouncementsResponse
         * @property {string|null} [announcementTitle] CMsgGCRequestAnnouncementsResponse announcementTitle
         * @property {string|null} [announcement] CMsgGCRequestAnnouncementsResponse announcement
         * @property {string|null} [nextmatchTitle] CMsgGCRequestAnnouncementsResponse nextmatchTitle
         * @property {string|null} [nextmatch] CMsgGCRequestAnnouncementsResponse nextmatch
         */
    
        /**
         * Constructs a new CMsgGCRequestAnnouncementsResponse.
         * @exports CMsgGCRequestAnnouncementsResponse
         * @classdesc Represents a CMsgGCRequestAnnouncementsResponse.
         * @implements ICMsgGCRequestAnnouncementsResponse
         * @constructor
         * @param {ICMsgGCRequestAnnouncementsResponse=} [properties] Properties to set
         */
        function CMsgGCRequestAnnouncementsResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCRequestAnnouncementsResponse announcementTitle.
         * @member {string} announcementTitle
         * @memberof CMsgGCRequestAnnouncementsResponse
         * @instance
         */
        CMsgGCRequestAnnouncementsResponse.prototype.announcementTitle = "";
    
        /**
         * CMsgGCRequestAnnouncementsResponse announcement.
         * @member {string} announcement
         * @memberof CMsgGCRequestAnnouncementsResponse
         * @instance
         */
        CMsgGCRequestAnnouncementsResponse.prototype.announcement = "";
    
        /**
         * CMsgGCRequestAnnouncementsResponse nextmatchTitle.
         * @member {string} nextmatchTitle
         * @memberof CMsgGCRequestAnnouncementsResponse
         * @instance
         */
        CMsgGCRequestAnnouncementsResponse.prototype.nextmatchTitle = "";
    
        /**
         * CMsgGCRequestAnnouncementsResponse nextmatch.
         * @member {string} nextmatch
         * @memberof CMsgGCRequestAnnouncementsResponse
         * @instance
         */
        CMsgGCRequestAnnouncementsResponse.prototype.nextmatch = "";
    
        /**
         * Creates a new CMsgGCRequestAnnouncementsResponse instance using the specified properties.
         * @function create
         * @memberof CMsgGCRequestAnnouncementsResponse
         * @static
         * @param {ICMsgGCRequestAnnouncementsResponse=} [properties] Properties to set
         * @returns {CMsgGCRequestAnnouncementsResponse} CMsgGCRequestAnnouncementsResponse instance
         */
        CMsgGCRequestAnnouncementsResponse.create = function create(properties) {
            return new CMsgGCRequestAnnouncementsResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgGCRequestAnnouncementsResponse message. Does not implicitly {@link CMsgGCRequestAnnouncementsResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCRequestAnnouncementsResponse
         * @static
         * @param {ICMsgGCRequestAnnouncementsResponse} message CMsgGCRequestAnnouncementsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCRequestAnnouncementsResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.announcementTitle != null && Object.hasOwnProperty.call(message, "announcementTitle"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.announcementTitle);
            if (message.announcement != null && Object.hasOwnProperty.call(message, "announcement"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.announcement);
            if (message.nextmatchTitle != null && Object.hasOwnProperty.call(message, "nextmatchTitle"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.nextmatchTitle);
            if (message.nextmatch != null && Object.hasOwnProperty.call(message, "nextmatch"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.nextmatch);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCRequestAnnouncementsResponse message, length delimited. Does not implicitly {@link CMsgGCRequestAnnouncementsResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCRequestAnnouncementsResponse
         * @static
         * @param {ICMsgGCRequestAnnouncementsResponse} message CMsgGCRequestAnnouncementsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCRequestAnnouncementsResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCRequestAnnouncementsResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCRequestAnnouncementsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCRequestAnnouncementsResponse} CMsgGCRequestAnnouncementsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCRequestAnnouncementsResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCRequestAnnouncementsResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.announcementTitle = reader.string();
                        break;
                    }
                case 2: {
                        message.announcement = reader.string();
                        break;
                    }
                case 3: {
                        message.nextmatchTitle = reader.string();
                        break;
                    }
                case 4: {
                        message.nextmatch = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCRequestAnnouncementsResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCRequestAnnouncementsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCRequestAnnouncementsResponse} CMsgGCRequestAnnouncementsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCRequestAnnouncementsResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCRequestAnnouncementsResponse message.
         * @function verify
         * @memberof CMsgGCRequestAnnouncementsResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCRequestAnnouncementsResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.announcementTitle != null && message.hasOwnProperty("announcementTitle"))
                if (!$util.isString(message.announcementTitle))
                    return "announcementTitle: string expected";
            if (message.announcement != null && message.hasOwnProperty("announcement"))
                if (!$util.isString(message.announcement))
                    return "announcement: string expected";
            if (message.nextmatchTitle != null && message.hasOwnProperty("nextmatchTitle"))
                if (!$util.isString(message.nextmatchTitle))
                    return "nextmatchTitle: string expected";
            if (message.nextmatch != null && message.hasOwnProperty("nextmatch"))
                if (!$util.isString(message.nextmatch))
                    return "nextmatch: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCRequestAnnouncementsResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCRequestAnnouncementsResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCRequestAnnouncementsResponse} CMsgGCRequestAnnouncementsResponse
         */
        CMsgGCRequestAnnouncementsResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCRequestAnnouncementsResponse)
                return object;
            var message = new $root.CMsgGCRequestAnnouncementsResponse();
            if (object.announcementTitle != null)
                message.announcementTitle = String(object.announcementTitle);
            if (object.announcement != null)
                message.announcement = String(object.announcement);
            if (object.nextmatchTitle != null)
                message.nextmatchTitle = String(object.nextmatchTitle);
            if (object.nextmatch != null)
                message.nextmatch = String(object.nextmatch);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCRequestAnnouncementsResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCRequestAnnouncementsResponse
         * @static
         * @param {CMsgGCRequestAnnouncementsResponse} message CMsgGCRequestAnnouncementsResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCRequestAnnouncementsResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.announcementTitle = "";
                object.announcement = "";
                object.nextmatchTitle = "";
                object.nextmatch = "";
            }
            if (message.announcementTitle != null && message.hasOwnProperty("announcementTitle"))
                object.announcementTitle = message.announcementTitle;
            if (message.announcement != null && message.hasOwnProperty("announcement"))
                object.announcement = message.announcement;
            if (message.nextmatchTitle != null && message.hasOwnProperty("nextmatchTitle"))
                object.nextmatchTitle = message.nextmatchTitle;
            if (message.nextmatch != null && message.hasOwnProperty("nextmatch"))
                object.nextmatch = message.nextmatch;
            return object;
        };
    
        /**
         * Converts this CMsgGCRequestAnnouncementsResponse to JSON.
         * @function toJSON
         * @memberof CMsgGCRequestAnnouncementsResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCRequestAnnouncementsResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCRequestAnnouncementsResponse
         * @function getTypeUrl
         * @memberof CMsgGCRequestAnnouncementsResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCRequestAnnouncementsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCRequestAnnouncementsResponse";
        };
    
        return CMsgGCRequestAnnouncementsResponse;
    })();
    
    $root.CMsgGCBannedWord = (function() {
    
        /**
         * Properties of a CMsgGCBannedWord.
         * @exports ICMsgGCBannedWord
         * @interface ICMsgGCBannedWord
         * @property {number|null} [wordId] CMsgGCBannedWord wordId
         * @property {GC_BannedWordType|null} [wordType] CMsgGCBannedWord wordType
         * @property {string|null} [word] CMsgGCBannedWord word
         */
    
        /**
         * Constructs a new CMsgGCBannedWord.
         * @exports CMsgGCBannedWord
         * @classdesc Represents a CMsgGCBannedWord.
         * @implements ICMsgGCBannedWord
         * @constructor
         * @param {ICMsgGCBannedWord=} [properties] Properties to set
         */
        function CMsgGCBannedWord(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCBannedWord wordId.
         * @member {number} wordId
         * @memberof CMsgGCBannedWord
         * @instance
         */
        CMsgGCBannedWord.prototype.wordId = 0;
    
        /**
         * CMsgGCBannedWord wordType.
         * @member {GC_BannedWordType} wordType
         * @memberof CMsgGCBannedWord
         * @instance
         */
        CMsgGCBannedWord.prototype.wordType = 0;
    
        /**
         * CMsgGCBannedWord word.
         * @member {string} word
         * @memberof CMsgGCBannedWord
         * @instance
         */
        CMsgGCBannedWord.prototype.word = "";
    
        /**
         * Creates a new CMsgGCBannedWord instance using the specified properties.
         * @function create
         * @memberof CMsgGCBannedWord
         * @static
         * @param {ICMsgGCBannedWord=} [properties] Properties to set
         * @returns {CMsgGCBannedWord} CMsgGCBannedWord instance
         */
        CMsgGCBannedWord.create = function create(properties) {
            return new CMsgGCBannedWord(properties);
        };
    
        /**
         * Encodes the specified CMsgGCBannedWord message. Does not implicitly {@link CMsgGCBannedWord.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCBannedWord
         * @static
         * @param {ICMsgGCBannedWord} message CMsgGCBannedWord message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCBannedWord.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.wordId != null && Object.hasOwnProperty.call(message, "wordId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.wordId);
            if (message.wordType != null && Object.hasOwnProperty.call(message, "wordType"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.wordType);
            if (message.word != null && Object.hasOwnProperty.call(message, "word"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.word);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCBannedWord message, length delimited. Does not implicitly {@link CMsgGCBannedWord.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCBannedWord
         * @static
         * @param {ICMsgGCBannedWord} message CMsgGCBannedWord message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCBannedWord.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCBannedWord message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCBannedWord
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCBannedWord} CMsgGCBannedWord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCBannedWord.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCBannedWord();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.wordId = reader.uint32();
                        break;
                    }
                case 2: {
                        message.wordType = reader.int32();
                        break;
                    }
                case 3: {
                        message.word = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCBannedWord message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCBannedWord
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCBannedWord} CMsgGCBannedWord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCBannedWord.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCBannedWord message.
         * @function verify
         * @memberof CMsgGCBannedWord
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCBannedWord.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.wordId != null && message.hasOwnProperty("wordId"))
                if (!$util.isInteger(message.wordId))
                    return "wordId: integer expected";
            if (message.wordType != null && message.hasOwnProperty("wordType"))
                switch (message.wordType) {
                default:
                    return "wordType: enum value expected";
                case 0:
                case 1:
                    break;
                }
            if (message.word != null && message.hasOwnProperty("word"))
                if (!$util.isString(message.word))
                    return "word: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCBannedWord message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCBannedWord
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCBannedWord} CMsgGCBannedWord
         */
        CMsgGCBannedWord.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCBannedWord)
                return object;
            var message = new $root.CMsgGCBannedWord();
            if (object.wordId != null)
                message.wordId = object.wordId >>> 0;
            switch (object.wordType) {
            default:
                if (typeof object.wordType === "number") {
                    message.wordType = object.wordType;
                    break;
                }
                break;
            case "GC_BANNED_WORD_DISABLE_WORD":
            case 0:
                message.wordType = 0;
                break;
            case "GC_BANNED_WORD_ENABLE_WORD":
            case 1:
                message.wordType = 1;
                break;
            }
            if (object.word != null)
                message.word = String(object.word);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCBannedWord message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCBannedWord
         * @static
         * @param {CMsgGCBannedWord} message CMsgGCBannedWord
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCBannedWord.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.wordId = 0;
                object.wordType = options.enums === String ? "GC_BANNED_WORD_DISABLE_WORD" : 0;
                object.word = "";
            }
            if (message.wordId != null && message.hasOwnProperty("wordId"))
                object.wordId = message.wordId;
            if (message.wordType != null && message.hasOwnProperty("wordType"))
                object.wordType = options.enums === String ? $root.GC_BannedWordType[message.wordType] === undefined ? message.wordType : $root.GC_BannedWordType[message.wordType] : message.wordType;
            if (message.word != null && message.hasOwnProperty("word"))
                object.word = message.word;
            return object;
        };
    
        /**
         * Converts this CMsgGCBannedWord to JSON.
         * @function toJSON
         * @memberof CMsgGCBannedWord
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCBannedWord.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCBannedWord
         * @function getTypeUrl
         * @memberof CMsgGCBannedWord
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCBannedWord.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCBannedWord";
        };
    
        return CMsgGCBannedWord;
    })();
    
    $root.CMsgGCBannedWordListResponse = (function() {
    
        /**
         * Properties of a CMsgGCBannedWordListResponse.
         * @exports ICMsgGCBannedWordListResponse
         * @interface ICMsgGCBannedWordListResponse
         * @property {number|null} [banListGroupId] CMsgGCBannedWordListResponse banListGroupId
         * @property {Array.<ICMsgGCBannedWord>|null} [wordList] CMsgGCBannedWordListResponse wordList
         */
    
        /**
         * Constructs a new CMsgGCBannedWordListResponse.
         * @exports CMsgGCBannedWordListResponse
         * @classdesc Represents a CMsgGCBannedWordListResponse.
         * @implements ICMsgGCBannedWordListResponse
         * @constructor
         * @param {ICMsgGCBannedWordListResponse=} [properties] Properties to set
         */
        function CMsgGCBannedWordListResponse(properties) {
            this.wordList = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCBannedWordListResponse banListGroupId.
         * @member {number} banListGroupId
         * @memberof CMsgGCBannedWordListResponse
         * @instance
         */
        CMsgGCBannedWordListResponse.prototype.banListGroupId = 0;
    
        /**
         * CMsgGCBannedWordListResponse wordList.
         * @member {Array.<ICMsgGCBannedWord>} wordList
         * @memberof CMsgGCBannedWordListResponse
         * @instance
         */
        CMsgGCBannedWordListResponse.prototype.wordList = $util.emptyArray;
    
        /**
         * Creates a new CMsgGCBannedWordListResponse instance using the specified properties.
         * @function create
         * @memberof CMsgGCBannedWordListResponse
         * @static
         * @param {ICMsgGCBannedWordListResponse=} [properties] Properties to set
         * @returns {CMsgGCBannedWordListResponse} CMsgGCBannedWordListResponse instance
         */
        CMsgGCBannedWordListResponse.create = function create(properties) {
            return new CMsgGCBannedWordListResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgGCBannedWordListResponse message. Does not implicitly {@link CMsgGCBannedWordListResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCBannedWordListResponse
         * @static
         * @param {ICMsgGCBannedWordListResponse} message CMsgGCBannedWordListResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCBannedWordListResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.banListGroupId != null && Object.hasOwnProperty.call(message, "banListGroupId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.banListGroupId);
            if (message.wordList != null && message.wordList.length)
                for (var i = 0; i < message.wordList.length; ++i)
                    $root.CMsgGCBannedWord.encode(message.wordList[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCBannedWordListResponse message, length delimited. Does not implicitly {@link CMsgGCBannedWordListResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCBannedWordListResponse
         * @static
         * @param {ICMsgGCBannedWordListResponse} message CMsgGCBannedWordListResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCBannedWordListResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCBannedWordListResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCBannedWordListResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCBannedWordListResponse} CMsgGCBannedWordListResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCBannedWordListResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCBannedWordListResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.banListGroupId = reader.uint32();
                        break;
                    }
                case 2: {
                        if (!(message.wordList && message.wordList.length))
                            message.wordList = [];
                        message.wordList.push($root.CMsgGCBannedWord.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCBannedWordListResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCBannedWordListResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCBannedWordListResponse} CMsgGCBannedWordListResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCBannedWordListResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCBannedWordListResponse message.
         * @function verify
         * @memberof CMsgGCBannedWordListResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCBannedWordListResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.banListGroupId != null && message.hasOwnProperty("banListGroupId"))
                if (!$util.isInteger(message.banListGroupId))
                    return "banListGroupId: integer expected";
            if (message.wordList != null && message.hasOwnProperty("wordList")) {
                if (!Array.isArray(message.wordList))
                    return "wordList: array expected";
                for (var i = 0; i < message.wordList.length; ++i) {
                    var error = $root.CMsgGCBannedWord.verify(message.wordList[i]);
                    if (error)
                        return "wordList." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCBannedWordListResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCBannedWordListResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCBannedWordListResponse} CMsgGCBannedWordListResponse
         */
        CMsgGCBannedWordListResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCBannedWordListResponse)
                return object;
            var message = new $root.CMsgGCBannedWordListResponse();
            if (object.banListGroupId != null)
                message.banListGroupId = object.banListGroupId >>> 0;
            if (object.wordList) {
                if (!Array.isArray(object.wordList))
                    throw TypeError(".CMsgGCBannedWordListResponse.wordList: array expected");
                message.wordList = [];
                for (var i = 0; i < object.wordList.length; ++i) {
                    if (typeof object.wordList[i] !== "object")
                        throw TypeError(".CMsgGCBannedWordListResponse.wordList: object expected");
                    message.wordList[i] = $root.CMsgGCBannedWord.fromObject(object.wordList[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCBannedWordListResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCBannedWordListResponse
         * @static
         * @param {CMsgGCBannedWordListResponse} message CMsgGCBannedWordListResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCBannedWordListResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.wordList = [];
            if (options.defaults)
                object.banListGroupId = 0;
            if (message.banListGroupId != null && message.hasOwnProperty("banListGroupId"))
                object.banListGroupId = message.banListGroupId;
            if (message.wordList && message.wordList.length) {
                object.wordList = [];
                for (var j = 0; j < message.wordList.length; ++j)
                    object.wordList[j] = $root.CMsgGCBannedWord.toObject(message.wordList[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgGCBannedWordListResponse to JSON.
         * @function toJSON
         * @memberof CMsgGCBannedWordListResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCBannedWordListResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCBannedWordListResponse
         * @function getTypeUrl
         * @memberof CMsgGCBannedWordListResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCBannedWordListResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCBannedWordListResponse";
        };
    
        return CMsgGCBannedWordListResponse;
    })();
    
    $root.CMsgGCToGCBannedWordListBroadcast = (function() {
    
        /**
         * Properties of a CMsgGCToGCBannedWordListBroadcast.
         * @exports ICMsgGCToGCBannedWordListBroadcast
         * @interface ICMsgGCToGCBannedWordListBroadcast
         * @property {ICMsgGCBannedWordListResponse|null} [broadcast] CMsgGCToGCBannedWordListBroadcast broadcast
         */
    
        /**
         * Constructs a new CMsgGCToGCBannedWordListBroadcast.
         * @exports CMsgGCToGCBannedWordListBroadcast
         * @classdesc Represents a CMsgGCToGCBannedWordListBroadcast.
         * @implements ICMsgGCToGCBannedWordListBroadcast
         * @constructor
         * @param {ICMsgGCToGCBannedWordListBroadcast=} [properties] Properties to set
         */
        function CMsgGCToGCBannedWordListBroadcast(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCToGCBannedWordListBroadcast broadcast.
         * @member {ICMsgGCBannedWordListResponse|null|undefined} broadcast
         * @memberof CMsgGCToGCBannedWordListBroadcast
         * @instance
         */
        CMsgGCToGCBannedWordListBroadcast.prototype.broadcast = null;
    
        /**
         * Creates a new CMsgGCToGCBannedWordListBroadcast instance using the specified properties.
         * @function create
         * @memberof CMsgGCToGCBannedWordListBroadcast
         * @static
         * @param {ICMsgGCToGCBannedWordListBroadcast=} [properties] Properties to set
         * @returns {CMsgGCToGCBannedWordListBroadcast} CMsgGCToGCBannedWordListBroadcast instance
         */
        CMsgGCToGCBannedWordListBroadcast.create = function create(properties) {
            return new CMsgGCToGCBannedWordListBroadcast(properties);
        };
    
        /**
         * Encodes the specified CMsgGCToGCBannedWordListBroadcast message. Does not implicitly {@link CMsgGCToGCBannedWordListBroadcast.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCToGCBannedWordListBroadcast
         * @static
         * @param {ICMsgGCToGCBannedWordListBroadcast} message CMsgGCToGCBannedWordListBroadcast message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCBannedWordListBroadcast.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.broadcast != null && Object.hasOwnProperty.call(message, "broadcast"))
                $root.CMsgGCBannedWordListResponse.encode(message.broadcast, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCToGCBannedWordListBroadcast message, length delimited. Does not implicitly {@link CMsgGCToGCBannedWordListBroadcast.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCToGCBannedWordListBroadcast
         * @static
         * @param {ICMsgGCToGCBannedWordListBroadcast} message CMsgGCToGCBannedWordListBroadcast message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCBannedWordListBroadcast.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCToGCBannedWordListBroadcast message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCToGCBannedWordListBroadcast
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCToGCBannedWordListBroadcast} CMsgGCToGCBannedWordListBroadcast
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCBannedWordListBroadcast.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCToGCBannedWordListBroadcast();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.broadcast = $root.CMsgGCBannedWordListResponse.decode(reader, reader.uint32());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCToGCBannedWordListBroadcast message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCToGCBannedWordListBroadcast
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCToGCBannedWordListBroadcast} CMsgGCToGCBannedWordListBroadcast
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCBannedWordListBroadcast.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCToGCBannedWordListBroadcast message.
         * @function verify
         * @memberof CMsgGCToGCBannedWordListBroadcast
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCToGCBannedWordListBroadcast.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.broadcast != null && message.hasOwnProperty("broadcast")) {
                var error = $root.CMsgGCBannedWordListResponse.verify(message.broadcast);
                if (error)
                    return "broadcast." + error;
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCToGCBannedWordListBroadcast message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCToGCBannedWordListBroadcast
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCToGCBannedWordListBroadcast} CMsgGCToGCBannedWordListBroadcast
         */
        CMsgGCToGCBannedWordListBroadcast.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCToGCBannedWordListBroadcast)
                return object;
            var message = new $root.CMsgGCToGCBannedWordListBroadcast();
            if (object.broadcast != null) {
                if (typeof object.broadcast !== "object")
                    throw TypeError(".CMsgGCToGCBannedWordListBroadcast.broadcast: object expected");
                message.broadcast = $root.CMsgGCBannedWordListResponse.fromObject(object.broadcast);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCToGCBannedWordListBroadcast message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCToGCBannedWordListBroadcast
         * @static
         * @param {CMsgGCToGCBannedWordListBroadcast} message CMsgGCToGCBannedWordListBroadcast
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCToGCBannedWordListBroadcast.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.broadcast = null;
            if (message.broadcast != null && message.hasOwnProperty("broadcast"))
                object.broadcast = $root.CMsgGCBannedWordListResponse.toObject(message.broadcast, options);
            return object;
        };
    
        /**
         * Converts this CMsgGCToGCBannedWordListBroadcast to JSON.
         * @function toJSON
         * @memberof CMsgGCToGCBannedWordListBroadcast
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCToGCBannedWordListBroadcast.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCToGCBannedWordListBroadcast
         * @function getTypeUrl
         * @memberof CMsgGCToGCBannedWordListBroadcast
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCToGCBannedWordListBroadcast.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCToGCBannedWordListBroadcast";
        };
    
        return CMsgGCToGCBannedWordListBroadcast;
    })();
    
    $root.CMsgGCToGCBannedWordListUpdated = (function() {
    
        /**
         * Properties of a CMsgGCToGCBannedWordListUpdated.
         * @exports ICMsgGCToGCBannedWordListUpdated
         * @interface ICMsgGCToGCBannedWordListUpdated
         * @property {number|null} [groupId] CMsgGCToGCBannedWordListUpdated groupId
         */
    
        /**
         * Constructs a new CMsgGCToGCBannedWordListUpdated.
         * @exports CMsgGCToGCBannedWordListUpdated
         * @classdesc Represents a CMsgGCToGCBannedWordListUpdated.
         * @implements ICMsgGCToGCBannedWordListUpdated
         * @constructor
         * @param {ICMsgGCToGCBannedWordListUpdated=} [properties] Properties to set
         */
        function CMsgGCToGCBannedWordListUpdated(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCToGCBannedWordListUpdated groupId.
         * @member {number} groupId
         * @memberof CMsgGCToGCBannedWordListUpdated
         * @instance
         */
        CMsgGCToGCBannedWordListUpdated.prototype.groupId = 0;
    
        /**
         * Creates a new CMsgGCToGCBannedWordListUpdated instance using the specified properties.
         * @function create
         * @memberof CMsgGCToGCBannedWordListUpdated
         * @static
         * @param {ICMsgGCToGCBannedWordListUpdated=} [properties] Properties to set
         * @returns {CMsgGCToGCBannedWordListUpdated} CMsgGCToGCBannedWordListUpdated instance
         */
        CMsgGCToGCBannedWordListUpdated.create = function create(properties) {
            return new CMsgGCToGCBannedWordListUpdated(properties);
        };
    
        /**
         * Encodes the specified CMsgGCToGCBannedWordListUpdated message. Does not implicitly {@link CMsgGCToGCBannedWordListUpdated.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCToGCBannedWordListUpdated
         * @static
         * @param {ICMsgGCToGCBannedWordListUpdated} message CMsgGCToGCBannedWordListUpdated message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCBannedWordListUpdated.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.groupId != null && Object.hasOwnProperty.call(message, "groupId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.groupId);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCToGCBannedWordListUpdated message, length delimited. Does not implicitly {@link CMsgGCToGCBannedWordListUpdated.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCToGCBannedWordListUpdated
         * @static
         * @param {ICMsgGCToGCBannedWordListUpdated} message CMsgGCToGCBannedWordListUpdated message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCBannedWordListUpdated.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCToGCBannedWordListUpdated message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCToGCBannedWordListUpdated
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCToGCBannedWordListUpdated} CMsgGCToGCBannedWordListUpdated
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCBannedWordListUpdated.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCToGCBannedWordListUpdated();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.groupId = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCToGCBannedWordListUpdated message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCToGCBannedWordListUpdated
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCToGCBannedWordListUpdated} CMsgGCToGCBannedWordListUpdated
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCBannedWordListUpdated.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCToGCBannedWordListUpdated message.
         * @function verify
         * @memberof CMsgGCToGCBannedWordListUpdated
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCToGCBannedWordListUpdated.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.groupId != null && message.hasOwnProperty("groupId"))
                if (!$util.isInteger(message.groupId))
                    return "groupId: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCToGCBannedWordListUpdated message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCToGCBannedWordListUpdated
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCToGCBannedWordListUpdated} CMsgGCToGCBannedWordListUpdated
         */
        CMsgGCToGCBannedWordListUpdated.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCToGCBannedWordListUpdated)
                return object;
            var message = new $root.CMsgGCToGCBannedWordListUpdated();
            if (object.groupId != null)
                message.groupId = object.groupId >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCToGCBannedWordListUpdated message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCToGCBannedWordListUpdated
         * @static
         * @param {CMsgGCToGCBannedWordListUpdated} message CMsgGCToGCBannedWordListUpdated
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCToGCBannedWordListUpdated.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.groupId = 0;
            if (message.groupId != null && message.hasOwnProperty("groupId"))
                object.groupId = message.groupId;
            return object;
        };
    
        /**
         * Converts this CMsgGCToGCBannedWordListUpdated to JSON.
         * @function toJSON
         * @memberof CMsgGCToGCBannedWordListUpdated
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCToGCBannedWordListUpdated.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCToGCBannedWordListUpdated
         * @function getTypeUrl
         * @memberof CMsgGCToGCBannedWordListUpdated
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCToGCBannedWordListUpdated.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCToGCBannedWordListUpdated";
        };
    
        return CMsgGCToGCBannedWordListUpdated;
    })();
    
    $root.CSOEconDefaultEquippedDefinitionInstanceClient = (function() {
    
        /**
         * Properties of a CSOEconDefaultEquippedDefinitionInstanceClient.
         * @exports ICSOEconDefaultEquippedDefinitionInstanceClient
         * @interface ICSOEconDefaultEquippedDefinitionInstanceClient
         * @property {number|null} [accountId] CSOEconDefaultEquippedDefinitionInstanceClient accountId
         * @property {number|null} [itemDefinition] CSOEconDefaultEquippedDefinitionInstanceClient itemDefinition
         * @property {number|null} [classId] CSOEconDefaultEquippedDefinitionInstanceClient classId
         * @property {number|null} [slotId] CSOEconDefaultEquippedDefinitionInstanceClient slotId
         */
    
        /**
         * Constructs a new CSOEconDefaultEquippedDefinitionInstanceClient.
         * @exports CSOEconDefaultEquippedDefinitionInstanceClient
         * @classdesc Represents a CSOEconDefaultEquippedDefinitionInstanceClient.
         * @implements ICSOEconDefaultEquippedDefinitionInstanceClient
         * @constructor
         * @param {ICSOEconDefaultEquippedDefinitionInstanceClient=} [properties] Properties to set
         */
        function CSOEconDefaultEquippedDefinitionInstanceClient(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOEconDefaultEquippedDefinitionInstanceClient accountId.
         * @member {number} accountId
         * @memberof CSOEconDefaultEquippedDefinitionInstanceClient
         * @instance
         */
        CSOEconDefaultEquippedDefinitionInstanceClient.prototype.accountId = 0;
    
        /**
         * CSOEconDefaultEquippedDefinitionInstanceClient itemDefinition.
         * @member {number} itemDefinition
         * @memberof CSOEconDefaultEquippedDefinitionInstanceClient
         * @instance
         */
        CSOEconDefaultEquippedDefinitionInstanceClient.prototype.itemDefinition = 0;
    
        /**
         * CSOEconDefaultEquippedDefinitionInstanceClient classId.
         * @member {number} classId
         * @memberof CSOEconDefaultEquippedDefinitionInstanceClient
         * @instance
         */
        CSOEconDefaultEquippedDefinitionInstanceClient.prototype.classId = 0;
    
        /**
         * CSOEconDefaultEquippedDefinitionInstanceClient slotId.
         * @member {number} slotId
         * @memberof CSOEconDefaultEquippedDefinitionInstanceClient
         * @instance
         */
        CSOEconDefaultEquippedDefinitionInstanceClient.prototype.slotId = 0;
    
        /**
         * Creates a new CSOEconDefaultEquippedDefinitionInstanceClient instance using the specified properties.
         * @function create
         * @memberof CSOEconDefaultEquippedDefinitionInstanceClient
         * @static
         * @param {ICSOEconDefaultEquippedDefinitionInstanceClient=} [properties] Properties to set
         * @returns {CSOEconDefaultEquippedDefinitionInstanceClient} CSOEconDefaultEquippedDefinitionInstanceClient instance
         */
        CSOEconDefaultEquippedDefinitionInstanceClient.create = function create(properties) {
            return new CSOEconDefaultEquippedDefinitionInstanceClient(properties);
        };
    
        /**
         * Encodes the specified CSOEconDefaultEquippedDefinitionInstanceClient message. Does not implicitly {@link CSOEconDefaultEquippedDefinitionInstanceClient.verify|verify} messages.
         * @function encode
         * @memberof CSOEconDefaultEquippedDefinitionInstanceClient
         * @static
         * @param {ICSOEconDefaultEquippedDefinitionInstanceClient} message CSOEconDefaultEquippedDefinitionInstanceClient message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconDefaultEquippedDefinitionInstanceClient.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.accountId != null && Object.hasOwnProperty.call(message, "accountId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.accountId);
            if (message.itemDefinition != null && Object.hasOwnProperty.call(message, "itemDefinition"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.itemDefinition);
            if (message.classId != null && Object.hasOwnProperty.call(message, "classId"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.classId);
            if (message.slotId != null && Object.hasOwnProperty.call(message, "slotId"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.slotId);
            return writer;
        };
    
        /**
         * Encodes the specified CSOEconDefaultEquippedDefinitionInstanceClient message, length delimited. Does not implicitly {@link CSOEconDefaultEquippedDefinitionInstanceClient.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOEconDefaultEquippedDefinitionInstanceClient
         * @static
         * @param {ICSOEconDefaultEquippedDefinitionInstanceClient} message CSOEconDefaultEquippedDefinitionInstanceClient message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconDefaultEquippedDefinitionInstanceClient.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOEconDefaultEquippedDefinitionInstanceClient message from the specified reader or buffer.
         * @function decode
         * @memberof CSOEconDefaultEquippedDefinitionInstanceClient
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOEconDefaultEquippedDefinitionInstanceClient} CSOEconDefaultEquippedDefinitionInstanceClient
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconDefaultEquippedDefinitionInstanceClient.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOEconDefaultEquippedDefinitionInstanceClient();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.accountId = reader.uint32();
                        break;
                    }
                case 2: {
                        message.itemDefinition = reader.uint32();
                        break;
                    }
                case 3: {
                        message.classId = reader.uint32();
                        break;
                    }
                case 4: {
                        message.slotId = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOEconDefaultEquippedDefinitionInstanceClient message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOEconDefaultEquippedDefinitionInstanceClient
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOEconDefaultEquippedDefinitionInstanceClient} CSOEconDefaultEquippedDefinitionInstanceClient
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconDefaultEquippedDefinitionInstanceClient.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOEconDefaultEquippedDefinitionInstanceClient message.
         * @function verify
         * @memberof CSOEconDefaultEquippedDefinitionInstanceClient
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOEconDefaultEquippedDefinitionInstanceClient.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.accountId != null && message.hasOwnProperty("accountId"))
                if (!$util.isInteger(message.accountId))
                    return "accountId: integer expected";
            if (message.itemDefinition != null && message.hasOwnProperty("itemDefinition"))
                if (!$util.isInteger(message.itemDefinition))
                    return "itemDefinition: integer expected";
            if (message.classId != null && message.hasOwnProperty("classId"))
                if (!$util.isInteger(message.classId))
                    return "classId: integer expected";
            if (message.slotId != null && message.hasOwnProperty("slotId"))
                if (!$util.isInteger(message.slotId))
                    return "slotId: integer expected";
            return null;
        };
    
        /**
         * Creates a CSOEconDefaultEquippedDefinitionInstanceClient message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOEconDefaultEquippedDefinitionInstanceClient
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOEconDefaultEquippedDefinitionInstanceClient} CSOEconDefaultEquippedDefinitionInstanceClient
         */
        CSOEconDefaultEquippedDefinitionInstanceClient.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOEconDefaultEquippedDefinitionInstanceClient)
                return object;
            var message = new $root.CSOEconDefaultEquippedDefinitionInstanceClient();
            if (object.accountId != null)
                message.accountId = object.accountId >>> 0;
            if (object.itemDefinition != null)
                message.itemDefinition = object.itemDefinition >>> 0;
            if (object.classId != null)
                message.classId = object.classId >>> 0;
            if (object.slotId != null)
                message.slotId = object.slotId >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CSOEconDefaultEquippedDefinitionInstanceClient message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOEconDefaultEquippedDefinitionInstanceClient
         * @static
         * @param {CSOEconDefaultEquippedDefinitionInstanceClient} message CSOEconDefaultEquippedDefinitionInstanceClient
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOEconDefaultEquippedDefinitionInstanceClient.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.accountId = 0;
                object.itemDefinition = 0;
                object.classId = 0;
                object.slotId = 0;
            }
            if (message.accountId != null && message.hasOwnProperty("accountId"))
                object.accountId = message.accountId;
            if (message.itemDefinition != null && message.hasOwnProperty("itemDefinition"))
                object.itemDefinition = message.itemDefinition;
            if (message.classId != null && message.hasOwnProperty("classId"))
                object.classId = message.classId;
            if (message.slotId != null && message.hasOwnProperty("slotId"))
                object.slotId = message.slotId;
            return object;
        };
    
        /**
         * Converts this CSOEconDefaultEquippedDefinitionInstanceClient to JSON.
         * @function toJSON
         * @memberof CSOEconDefaultEquippedDefinitionInstanceClient
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOEconDefaultEquippedDefinitionInstanceClient.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOEconDefaultEquippedDefinitionInstanceClient
         * @function getTypeUrl
         * @memberof CSOEconDefaultEquippedDefinitionInstanceClient
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOEconDefaultEquippedDefinitionInstanceClient.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOEconDefaultEquippedDefinitionInstanceClient";
        };
    
        return CSOEconDefaultEquippedDefinitionInstanceClient;
    })();
    
    $root.CMsgGCToGCDirtySDOCache = (function() {
    
        /**
         * Properties of a CMsgGCToGCDirtySDOCache.
         * @exports ICMsgGCToGCDirtySDOCache
         * @interface ICMsgGCToGCDirtySDOCache
         * @property {number|null} [sdoType] CMsgGCToGCDirtySDOCache sdoType
         * @property {number|Long|null} [keyUint64] CMsgGCToGCDirtySDOCache keyUint64
         */
    
        /**
         * Constructs a new CMsgGCToGCDirtySDOCache.
         * @exports CMsgGCToGCDirtySDOCache
         * @classdesc Represents a CMsgGCToGCDirtySDOCache.
         * @implements ICMsgGCToGCDirtySDOCache
         * @constructor
         * @param {ICMsgGCToGCDirtySDOCache=} [properties] Properties to set
         */
        function CMsgGCToGCDirtySDOCache(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCToGCDirtySDOCache sdoType.
         * @member {number} sdoType
         * @memberof CMsgGCToGCDirtySDOCache
         * @instance
         */
        CMsgGCToGCDirtySDOCache.prototype.sdoType = 0;
    
        /**
         * CMsgGCToGCDirtySDOCache keyUint64.
         * @member {number|Long} keyUint64
         * @memberof CMsgGCToGCDirtySDOCache
         * @instance
         */
        CMsgGCToGCDirtySDOCache.prototype.keyUint64 = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgGCToGCDirtySDOCache instance using the specified properties.
         * @function create
         * @memberof CMsgGCToGCDirtySDOCache
         * @static
         * @param {ICMsgGCToGCDirtySDOCache=} [properties] Properties to set
         * @returns {CMsgGCToGCDirtySDOCache} CMsgGCToGCDirtySDOCache instance
         */
        CMsgGCToGCDirtySDOCache.create = function create(properties) {
            return new CMsgGCToGCDirtySDOCache(properties);
        };
    
        /**
         * Encodes the specified CMsgGCToGCDirtySDOCache message. Does not implicitly {@link CMsgGCToGCDirtySDOCache.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCToGCDirtySDOCache
         * @static
         * @param {ICMsgGCToGCDirtySDOCache} message CMsgGCToGCDirtySDOCache message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCDirtySDOCache.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.sdoType != null && Object.hasOwnProperty.call(message, "sdoType"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.sdoType);
            if (message.keyUint64 != null && Object.hasOwnProperty.call(message, "keyUint64"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.keyUint64);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCToGCDirtySDOCache message, length delimited. Does not implicitly {@link CMsgGCToGCDirtySDOCache.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCToGCDirtySDOCache
         * @static
         * @param {ICMsgGCToGCDirtySDOCache} message CMsgGCToGCDirtySDOCache message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCDirtySDOCache.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCToGCDirtySDOCache message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCToGCDirtySDOCache
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCToGCDirtySDOCache} CMsgGCToGCDirtySDOCache
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCDirtySDOCache.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCToGCDirtySDOCache();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.sdoType = reader.uint32();
                        break;
                    }
                case 2: {
                        message.keyUint64 = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCToGCDirtySDOCache message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCToGCDirtySDOCache
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCToGCDirtySDOCache} CMsgGCToGCDirtySDOCache
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCDirtySDOCache.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCToGCDirtySDOCache message.
         * @function verify
         * @memberof CMsgGCToGCDirtySDOCache
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCToGCDirtySDOCache.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.sdoType != null && message.hasOwnProperty("sdoType"))
                if (!$util.isInteger(message.sdoType))
                    return "sdoType: integer expected";
            if (message.keyUint64 != null && message.hasOwnProperty("keyUint64"))
                if (!$util.isInteger(message.keyUint64) && !(message.keyUint64 && $util.isInteger(message.keyUint64.low) && $util.isInteger(message.keyUint64.high)))
                    return "keyUint64: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCToGCDirtySDOCache message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCToGCDirtySDOCache
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCToGCDirtySDOCache} CMsgGCToGCDirtySDOCache
         */
        CMsgGCToGCDirtySDOCache.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCToGCDirtySDOCache)
                return object;
            var message = new $root.CMsgGCToGCDirtySDOCache();
            if (object.sdoType != null)
                message.sdoType = object.sdoType >>> 0;
            if (object.keyUint64 != null)
                if ($util.Long)
                    (message.keyUint64 = $util.Long.fromValue(object.keyUint64)).unsigned = true;
                else if (typeof object.keyUint64 === "string")
                    message.keyUint64 = parseInt(object.keyUint64, 10);
                else if (typeof object.keyUint64 === "number")
                    message.keyUint64 = object.keyUint64;
                else if (typeof object.keyUint64 === "object")
                    message.keyUint64 = new $util.LongBits(object.keyUint64.low >>> 0, object.keyUint64.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCToGCDirtySDOCache message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCToGCDirtySDOCache
         * @static
         * @param {CMsgGCToGCDirtySDOCache} message CMsgGCToGCDirtySDOCache
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCToGCDirtySDOCache.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.sdoType = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.keyUint64 = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.keyUint64 = options.longs === String ? "0" : 0;
            }
            if (message.sdoType != null && message.hasOwnProperty("sdoType"))
                object.sdoType = message.sdoType;
            if (message.keyUint64 != null && message.hasOwnProperty("keyUint64"))
                if (typeof message.keyUint64 === "number")
                    object.keyUint64 = options.longs === String ? String(message.keyUint64) : message.keyUint64;
                else
                    object.keyUint64 = options.longs === String ? $util.Long.prototype.toString.call(message.keyUint64) : options.longs === Number ? new $util.LongBits(message.keyUint64.low >>> 0, message.keyUint64.high >>> 0).toNumber(true) : message.keyUint64;
            return object;
        };
    
        /**
         * Converts this CMsgGCToGCDirtySDOCache to JSON.
         * @function toJSON
         * @memberof CMsgGCToGCDirtySDOCache
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCToGCDirtySDOCache.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCToGCDirtySDOCache
         * @function getTypeUrl
         * @memberof CMsgGCToGCDirtySDOCache
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCToGCDirtySDOCache.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCToGCDirtySDOCache";
        };
    
        return CMsgGCToGCDirtySDOCache;
    })();
    
    $root.CMsgGCToGCDirtyMultipleSDOCache = (function() {
    
        /**
         * Properties of a CMsgGCToGCDirtyMultipleSDOCache.
         * @exports ICMsgGCToGCDirtyMultipleSDOCache
         * @interface ICMsgGCToGCDirtyMultipleSDOCache
         * @property {number|null} [sdoType] CMsgGCToGCDirtyMultipleSDOCache sdoType
         * @property {Array.<number|Long>|null} [keyUint64] CMsgGCToGCDirtyMultipleSDOCache keyUint64
         */
    
        /**
         * Constructs a new CMsgGCToGCDirtyMultipleSDOCache.
         * @exports CMsgGCToGCDirtyMultipleSDOCache
         * @classdesc Represents a CMsgGCToGCDirtyMultipleSDOCache.
         * @implements ICMsgGCToGCDirtyMultipleSDOCache
         * @constructor
         * @param {ICMsgGCToGCDirtyMultipleSDOCache=} [properties] Properties to set
         */
        function CMsgGCToGCDirtyMultipleSDOCache(properties) {
            this.keyUint64 = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCToGCDirtyMultipleSDOCache sdoType.
         * @member {number} sdoType
         * @memberof CMsgGCToGCDirtyMultipleSDOCache
         * @instance
         */
        CMsgGCToGCDirtyMultipleSDOCache.prototype.sdoType = 0;
    
        /**
         * CMsgGCToGCDirtyMultipleSDOCache keyUint64.
         * @member {Array.<number|Long>} keyUint64
         * @memberof CMsgGCToGCDirtyMultipleSDOCache
         * @instance
         */
        CMsgGCToGCDirtyMultipleSDOCache.prototype.keyUint64 = $util.emptyArray;
    
        /**
         * Creates a new CMsgGCToGCDirtyMultipleSDOCache instance using the specified properties.
         * @function create
         * @memberof CMsgGCToGCDirtyMultipleSDOCache
         * @static
         * @param {ICMsgGCToGCDirtyMultipleSDOCache=} [properties] Properties to set
         * @returns {CMsgGCToGCDirtyMultipleSDOCache} CMsgGCToGCDirtyMultipleSDOCache instance
         */
        CMsgGCToGCDirtyMultipleSDOCache.create = function create(properties) {
            return new CMsgGCToGCDirtyMultipleSDOCache(properties);
        };
    
        /**
         * Encodes the specified CMsgGCToGCDirtyMultipleSDOCache message. Does not implicitly {@link CMsgGCToGCDirtyMultipleSDOCache.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCToGCDirtyMultipleSDOCache
         * @static
         * @param {ICMsgGCToGCDirtyMultipleSDOCache} message CMsgGCToGCDirtyMultipleSDOCache message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCDirtyMultipleSDOCache.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.sdoType != null && Object.hasOwnProperty.call(message, "sdoType"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.sdoType);
            if (message.keyUint64 != null && message.keyUint64.length)
                for (var i = 0; i < message.keyUint64.length; ++i)
                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.keyUint64[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCToGCDirtyMultipleSDOCache message, length delimited. Does not implicitly {@link CMsgGCToGCDirtyMultipleSDOCache.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCToGCDirtyMultipleSDOCache
         * @static
         * @param {ICMsgGCToGCDirtyMultipleSDOCache} message CMsgGCToGCDirtyMultipleSDOCache message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCDirtyMultipleSDOCache.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCToGCDirtyMultipleSDOCache message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCToGCDirtyMultipleSDOCache
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCToGCDirtyMultipleSDOCache} CMsgGCToGCDirtyMultipleSDOCache
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCDirtyMultipleSDOCache.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCToGCDirtyMultipleSDOCache();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.sdoType = reader.uint32();
                        break;
                    }
                case 2: {
                        if (!(message.keyUint64 && message.keyUint64.length))
                            message.keyUint64 = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.keyUint64.push(reader.uint64());
                        } else
                            message.keyUint64.push(reader.uint64());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCToGCDirtyMultipleSDOCache message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCToGCDirtyMultipleSDOCache
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCToGCDirtyMultipleSDOCache} CMsgGCToGCDirtyMultipleSDOCache
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCDirtyMultipleSDOCache.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCToGCDirtyMultipleSDOCache message.
         * @function verify
         * @memberof CMsgGCToGCDirtyMultipleSDOCache
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCToGCDirtyMultipleSDOCache.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.sdoType != null && message.hasOwnProperty("sdoType"))
                if (!$util.isInteger(message.sdoType))
                    return "sdoType: integer expected";
            if (message.keyUint64 != null && message.hasOwnProperty("keyUint64")) {
                if (!Array.isArray(message.keyUint64))
                    return "keyUint64: array expected";
                for (var i = 0; i < message.keyUint64.length; ++i)
                    if (!$util.isInteger(message.keyUint64[i]) && !(message.keyUint64[i] && $util.isInteger(message.keyUint64[i].low) && $util.isInteger(message.keyUint64[i].high)))
                        return "keyUint64: integer|Long[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCToGCDirtyMultipleSDOCache message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCToGCDirtyMultipleSDOCache
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCToGCDirtyMultipleSDOCache} CMsgGCToGCDirtyMultipleSDOCache
         */
        CMsgGCToGCDirtyMultipleSDOCache.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCToGCDirtyMultipleSDOCache)
                return object;
            var message = new $root.CMsgGCToGCDirtyMultipleSDOCache();
            if (object.sdoType != null)
                message.sdoType = object.sdoType >>> 0;
            if (object.keyUint64) {
                if (!Array.isArray(object.keyUint64))
                    throw TypeError(".CMsgGCToGCDirtyMultipleSDOCache.keyUint64: array expected");
                message.keyUint64 = [];
                for (var i = 0; i < object.keyUint64.length; ++i)
                    if ($util.Long)
                        (message.keyUint64[i] = $util.Long.fromValue(object.keyUint64[i])).unsigned = true;
                    else if (typeof object.keyUint64[i] === "string")
                        message.keyUint64[i] = parseInt(object.keyUint64[i], 10);
                    else if (typeof object.keyUint64[i] === "number")
                        message.keyUint64[i] = object.keyUint64[i];
                    else if (typeof object.keyUint64[i] === "object")
                        message.keyUint64[i] = new $util.LongBits(object.keyUint64[i].low >>> 0, object.keyUint64[i].high >>> 0).toNumber(true);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCToGCDirtyMultipleSDOCache message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCToGCDirtyMultipleSDOCache
         * @static
         * @param {CMsgGCToGCDirtyMultipleSDOCache} message CMsgGCToGCDirtyMultipleSDOCache
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCToGCDirtyMultipleSDOCache.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.keyUint64 = [];
            if (options.defaults)
                object.sdoType = 0;
            if (message.sdoType != null && message.hasOwnProperty("sdoType"))
                object.sdoType = message.sdoType;
            if (message.keyUint64 && message.keyUint64.length) {
                object.keyUint64 = [];
                for (var j = 0; j < message.keyUint64.length; ++j)
                    if (typeof message.keyUint64[j] === "number")
                        object.keyUint64[j] = options.longs === String ? String(message.keyUint64[j]) : message.keyUint64[j];
                    else
                        object.keyUint64[j] = options.longs === String ? $util.Long.prototype.toString.call(message.keyUint64[j]) : options.longs === Number ? new $util.LongBits(message.keyUint64[j].low >>> 0, message.keyUint64[j].high >>> 0).toNumber(true) : message.keyUint64[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgGCToGCDirtyMultipleSDOCache to JSON.
         * @function toJSON
         * @memberof CMsgGCToGCDirtyMultipleSDOCache
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCToGCDirtyMultipleSDOCache.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCToGCDirtyMultipleSDOCache
         * @function getTypeUrl
         * @memberof CMsgGCToGCDirtyMultipleSDOCache
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCToGCDirtyMultipleSDOCache.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCToGCDirtyMultipleSDOCache";
        };
    
        return CMsgGCToGCDirtyMultipleSDOCache;
    })();
    
    $root.CMsgGCCollectItem = (function() {
    
        /**
         * Properties of a CMsgGCCollectItem.
         * @exports ICMsgGCCollectItem
         * @interface ICMsgGCCollectItem
         * @property {number|Long|null} [collectionItemId] CMsgGCCollectItem collectionItemId
         * @property {number|Long|null} [subjectItemId] CMsgGCCollectItem subjectItemId
         */
    
        /**
         * Constructs a new CMsgGCCollectItem.
         * @exports CMsgGCCollectItem
         * @classdesc Represents a CMsgGCCollectItem.
         * @implements ICMsgGCCollectItem
         * @constructor
         * @param {ICMsgGCCollectItem=} [properties] Properties to set
         */
        function CMsgGCCollectItem(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCCollectItem collectionItemId.
         * @member {number|Long} collectionItemId
         * @memberof CMsgGCCollectItem
         * @instance
         */
        CMsgGCCollectItem.prototype.collectionItemId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgGCCollectItem subjectItemId.
         * @member {number|Long} subjectItemId
         * @memberof CMsgGCCollectItem
         * @instance
         */
        CMsgGCCollectItem.prototype.subjectItemId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgGCCollectItem instance using the specified properties.
         * @function create
         * @memberof CMsgGCCollectItem
         * @static
         * @param {ICMsgGCCollectItem=} [properties] Properties to set
         * @returns {CMsgGCCollectItem} CMsgGCCollectItem instance
         */
        CMsgGCCollectItem.create = function create(properties) {
            return new CMsgGCCollectItem(properties);
        };
    
        /**
         * Encodes the specified CMsgGCCollectItem message. Does not implicitly {@link CMsgGCCollectItem.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCCollectItem
         * @static
         * @param {ICMsgGCCollectItem} message CMsgGCCollectItem message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCCollectItem.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.collectionItemId != null && Object.hasOwnProperty.call(message, "collectionItemId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.collectionItemId);
            if (message.subjectItemId != null && Object.hasOwnProperty.call(message, "subjectItemId"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.subjectItemId);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCCollectItem message, length delimited. Does not implicitly {@link CMsgGCCollectItem.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCCollectItem
         * @static
         * @param {ICMsgGCCollectItem} message CMsgGCCollectItem message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCCollectItem.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCCollectItem message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCCollectItem
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCCollectItem} CMsgGCCollectItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCCollectItem.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCCollectItem();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.collectionItemId = reader.uint64();
                        break;
                    }
                case 2: {
                        message.subjectItemId = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCCollectItem message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCCollectItem
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCCollectItem} CMsgGCCollectItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCCollectItem.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCCollectItem message.
         * @function verify
         * @memberof CMsgGCCollectItem
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCCollectItem.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.collectionItemId != null && message.hasOwnProperty("collectionItemId"))
                if (!$util.isInteger(message.collectionItemId) && !(message.collectionItemId && $util.isInteger(message.collectionItemId.low) && $util.isInteger(message.collectionItemId.high)))
                    return "collectionItemId: integer|Long expected";
            if (message.subjectItemId != null && message.hasOwnProperty("subjectItemId"))
                if (!$util.isInteger(message.subjectItemId) && !(message.subjectItemId && $util.isInteger(message.subjectItemId.low) && $util.isInteger(message.subjectItemId.high)))
                    return "subjectItemId: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCCollectItem message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCCollectItem
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCCollectItem} CMsgGCCollectItem
         */
        CMsgGCCollectItem.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCCollectItem)
                return object;
            var message = new $root.CMsgGCCollectItem();
            if (object.collectionItemId != null)
                if ($util.Long)
                    (message.collectionItemId = $util.Long.fromValue(object.collectionItemId)).unsigned = true;
                else if (typeof object.collectionItemId === "string")
                    message.collectionItemId = parseInt(object.collectionItemId, 10);
                else if (typeof object.collectionItemId === "number")
                    message.collectionItemId = object.collectionItemId;
                else if (typeof object.collectionItemId === "object")
                    message.collectionItemId = new $util.LongBits(object.collectionItemId.low >>> 0, object.collectionItemId.high >>> 0).toNumber(true);
            if (object.subjectItemId != null)
                if ($util.Long)
                    (message.subjectItemId = $util.Long.fromValue(object.subjectItemId)).unsigned = true;
                else if (typeof object.subjectItemId === "string")
                    message.subjectItemId = parseInt(object.subjectItemId, 10);
                else if (typeof object.subjectItemId === "number")
                    message.subjectItemId = object.subjectItemId;
                else if (typeof object.subjectItemId === "object")
                    message.subjectItemId = new $util.LongBits(object.subjectItemId.low >>> 0, object.subjectItemId.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCCollectItem message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCCollectItem
         * @static
         * @param {CMsgGCCollectItem} message CMsgGCCollectItem
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCCollectItem.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.collectionItemId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.collectionItemId = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.subjectItemId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.subjectItemId = options.longs === String ? "0" : 0;
            }
            if (message.collectionItemId != null && message.hasOwnProperty("collectionItemId"))
                if (typeof message.collectionItemId === "number")
                    object.collectionItemId = options.longs === String ? String(message.collectionItemId) : message.collectionItemId;
                else
                    object.collectionItemId = options.longs === String ? $util.Long.prototype.toString.call(message.collectionItemId) : options.longs === Number ? new $util.LongBits(message.collectionItemId.low >>> 0, message.collectionItemId.high >>> 0).toNumber(true) : message.collectionItemId;
            if (message.subjectItemId != null && message.hasOwnProperty("subjectItemId"))
                if (typeof message.subjectItemId === "number")
                    object.subjectItemId = options.longs === String ? String(message.subjectItemId) : message.subjectItemId;
                else
                    object.subjectItemId = options.longs === String ? $util.Long.prototype.toString.call(message.subjectItemId) : options.longs === Number ? new $util.LongBits(message.subjectItemId.low >>> 0, message.subjectItemId.high >>> 0).toNumber(true) : message.subjectItemId;
            return object;
        };
    
        /**
         * Converts this CMsgGCCollectItem to JSON.
         * @function toJSON
         * @memberof CMsgGCCollectItem
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCCollectItem.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCCollectItem
         * @function getTypeUrl
         * @memberof CMsgGCCollectItem
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCCollectItem.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCCollectItem";
        };
    
        return CMsgGCCollectItem;
    })();
    
    $root.CMsgSDONoMemcached = (function() {
    
        /**
         * Properties of a CMsgSDONoMemcached.
         * @exports ICMsgSDONoMemcached
         * @interface ICMsgSDONoMemcached
         */
    
        /**
         * Constructs a new CMsgSDONoMemcached.
         * @exports CMsgSDONoMemcached
         * @classdesc Represents a CMsgSDONoMemcached.
         * @implements ICMsgSDONoMemcached
         * @constructor
         * @param {ICMsgSDONoMemcached=} [properties] Properties to set
         */
        function CMsgSDONoMemcached(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CMsgSDONoMemcached instance using the specified properties.
         * @function create
         * @memberof CMsgSDONoMemcached
         * @static
         * @param {ICMsgSDONoMemcached=} [properties] Properties to set
         * @returns {CMsgSDONoMemcached} CMsgSDONoMemcached instance
         */
        CMsgSDONoMemcached.create = function create(properties) {
            return new CMsgSDONoMemcached(properties);
        };
    
        /**
         * Encodes the specified CMsgSDONoMemcached message. Does not implicitly {@link CMsgSDONoMemcached.verify|verify} messages.
         * @function encode
         * @memberof CMsgSDONoMemcached
         * @static
         * @param {ICMsgSDONoMemcached} message CMsgSDONoMemcached message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSDONoMemcached.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgSDONoMemcached message, length delimited. Does not implicitly {@link CMsgSDONoMemcached.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgSDONoMemcached
         * @static
         * @param {ICMsgSDONoMemcached} message CMsgSDONoMemcached message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSDONoMemcached.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgSDONoMemcached message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgSDONoMemcached
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgSDONoMemcached} CMsgSDONoMemcached
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSDONoMemcached.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSDONoMemcached();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgSDONoMemcached message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgSDONoMemcached
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgSDONoMemcached} CMsgSDONoMemcached
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSDONoMemcached.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgSDONoMemcached message.
         * @function verify
         * @memberof CMsgSDONoMemcached
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgSDONoMemcached.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CMsgSDONoMemcached message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgSDONoMemcached
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgSDONoMemcached} CMsgSDONoMemcached
         */
        CMsgSDONoMemcached.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgSDONoMemcached)
                return object;
            return new $root.CMsgSDONoMemcached();
        };
    
        /**
         * Creates a plain object from a CMsgSDONoMemcached message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgSDONoMemcached
         * @static
         * @param {CMsgSDONoMemcached} message CMsgSDONoMemcached
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgSDONoMemcached.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CMsgSDONoMemcached to JSON.
         * @function toJSON
         * @memberof CMsgSDONoMemcached
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgSDONoMemcached.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgSDONoMemcached
         * @function getTypeUrl
         * @memberof CMsgSDONoMemcached
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgSDONoMemcached.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgSDONoMemcached";
        };
    
        return CMsgSDONoMemcached;
    })();
    
    $root.CMsgGCToGCUpdateSQLKeyValue = (function() {
    
        /**
         * Properties of a CMsgGCToGCUpdateSQLKeyValue.
         * @exports ICMsgGCToGCUpdateSQLKeyValue
         * @interface ICMsgGCToGCUpdateSQLKeyValue
         * @property {string|null} [keyName] CMsgGCToGCUpdateSQLKeyValue keyName
         */
    
        /**
         * Constructs a new CMsgGCToGCUpdateSQLKeyValue.
         * @exports CMsgGCToGCUpdateSQLKeyValue
         * @classdesc Represents a CMsgGCToGCUpdateSQLKeyValue.
         * @implements ICMsgGCToGCUpdateSQLKeyValue
         * @constructor
         * @param {ICMsgGCToGCUpdateSQLKeyValue=} [properties] Properties to set
         */
        function CMsgGCToGCUpdateSQLKeyValue(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCToGCUpdateSQLKeyValue keyName.
         * @member {string} keyName
         * @memberof CMsgGCToGCUpdateSQLKeyValue
         * @instance
         */
        CMsgGCToGCUpdateSQLKeyValue.prototype.keyName = "";
    
        /**
         * Creates a new CMsgGCToGCUpdateSQLKeyValue instance using the specified properties.
         * @function create
         * @memberof CMsgGCToGCUpdateSQLKeyValue
         * @static
         * @param {ICMsgGCToGCUpdateSQLKeyValue=} [properties] Properties to set
         * @returns {CMsgGCToGCUpdateSQLKeyValue} CMsgGCToGCUpdateSQLKeyValue instance
         */
        CMsgGCToGCUpdateSQLKeyValue.create = function create(properties) {
            return new CMsgGCToGCUpdateSQLKeyValue(properties);
        };
    
        /**
         * Encodes the specified CMsgGCToGCUpdateSQLKeyValue message. Does not implicitly {@link CMsgGCToGCUpdateSQLKeyValue.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCToGCUpdateSQLKeyValue
         * @static
         * @param {ICMsgGCToGCUpdateSQLKeyValue} message CMsgGCToGCUpdateSQLKeyValue message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCUpdateSQLKeyValue.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.keyName != null && Object.hasOwnProperty.call(message, "keyName"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.keyName);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCToGCUpdateSQLKeyValue message, length delimited. Does not implicitly {@link CMsgGCToGCUpdateSQLKeyValue.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCToGCUpdateSQLKeyValue
         * @static
         * @param {ICMsgGCToGCUpdateSQLKeyValue} message CMsgGCToGCUpdateSQLKeyValue message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCUpdateSQLKeyValue.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCToGCUpdateSQLKeyValue message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCToGCUpdateSQLKeyValue
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCToGCUpdateSQLKeyValue} CMsgGCToGCUpdateSQLKeyValue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCUpdateSQLKeyValue.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCToGCUpdateSQLKeyValue();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.keyName = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCToGCUpdateSQLKeyValue message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCToGCUpdateSQLKeyValue
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCToGCUpdateSQLKeyValue} CMsgGCToGCUpdateSQLKeyValue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCUpdateSQLKeyValue.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCToGCUpdateSQLKeyValue message.
         * @function verify
         * @memberof CMsgGCToGCUpdateSQLKeyValue
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCToGCUpdateSQLKeyValue.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.keyName != null && message.hasOwnProperty("keyName"))
                if (!$util.isString(message.keyName))
                    return "keyName: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCToGCUpdateSQLKeyValue message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCToGCUpdateSQLKeyValue
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCToGCUpdateSQLKeyValue} CMsgGCToGCUpdateSQLKeyValue
         */
        CMsgGCToGCUpdateSQLKeyValue.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCToGCUpdateSQLKeyValue)
                return object;
            var message = new $root.CMsgGCToGCUpdateSQLKeyValue();
            if (object.keyName != null)
                message.keyName = String(object.keyName);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCToGCUpdateSQLKeyValue message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCToGCUpdateSQLKeyValue
         * @static
         * @param {CMsgGCToGCUpdateSQLKeyValue} message CMsgGCToGCUpdateSQLKeyValue
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCToGCUpdateSQLKeyValue.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.keyName = "";
            if (message.keyName != null && message.hasOwnProperty("keyName"))
                object.keyName = message.keyName;
            return object;
        };
    
        /**
         * Converts this CMsgGCToGCUpdateSQLKeyValue to JSON.
         * @function toJSON
         * @memberof CMsgGCToGCUpdateSQLKeyValue
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCToGCUpdateSQLKeyValue.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCToGCUpdateSQLKeyValue
         * @function getTypeUrl
         * @memberof CMsgGCToGCUpdateSQLKeyValue
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCToGCUpdateSQLKeyValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCToGCUpdateSQLKeyValue";
        };
    
        return CMsgGCToGCUpdateSQLKeyValue;
    })();
    
    $root.CMsgGCToGCIsTrustedServer = (function() {
    
        /**
         * Properties of a CMsgGCToGCIsTrustedServer.
         * @exports ICMsgGCToGCIsTrustedServer
         * @interface ICMsgGCToGCIsTrustedServer
         * @property {number|Long|null} [steamId] CMsgGCToGCIsTrustedServer steamId
         */
    
        /**
         * Constructs a new CMsgGCToGCIsTrustedServer.
         * @exports CMsgGCToGCIsTrustedServer
         * @classdesc Represents a CMsgGCToGCIsTrustedServer.
         * @implements ICMsgGCToGCIsTrustedServer
         * @constructor
         * @param {ICMsgGCToGCIsTrustedServer=} [properties] Properties to set
         */
        function CMsgGCToGCIsTrustedServer(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCToGCIsTrustedServer steamId.
         * @member {number|Long} steamId
         * @memberof CMsgGCToGCIsTrustedServer
         * @instance
         */
        CMsgGCToGCIsTrustedServer.prototype.steamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgGCToGCIsTrustedServer instance using the specified properties.
         * @function create
         * @memberof CMsgGCToGCIsTrustedServer
         * @static
         * @param {ICMsgGCToGCIsTrustedServer=} [properties] Properties to set
         * @returns {CMsgGCToGCIsTrustedServer} CMsgGCToGCIsTrustedServer instance
         */
        CMsgGCToGCIsTrustedServer.create = function create(properties) {
            return new CMsgGCToGCIsTrustedServer(properties);
        };
    
        /**
         * Encodes the specified CMsgGCToGCIsTrustedServer message. Does not implicitly {@link CMsgGCToGCIsTrustedServer.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCToGCIsTrustedServer
         * @static
         * @param {ICMsgGCToGCIsTrustedServer} message CMsgGCToGCIsTrustedServer message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCIsTrustedServer.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamId != null && Object.hasOwnProperty.call(message, "steamId"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamId);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCToGCIsTrustedServer message, length delimited. Does not implicitly {@link CMsgGCToGCIsTrustedServer.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCToGCIsTrustedServer
         * @static
         * @param {ICMsgGCToGCIsTrustedServer} message CMsgGCToGCIsTrustedServer message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCIsTrustedServer.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCToGCIsTrustedServer message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCToGCIsTrustedServer
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCToGCIsTrustedServer} CMsgGCToGCIsTrustedServer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCIsTrustedServer.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCToGCIsTrustedServer();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamId = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCToGCIsTrustedServer message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCToGCIsTrustedServer
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCToGCIsTrustedServer} CMsgGCToGCIsTrustedServer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCIsTrustedServer.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCToGCIsTrustedServer message.
         * @function verify
         * @memberof CMsgGCToGCIsTrustedServer
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCToGCIsTrustedServer.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (!$util.isInteger(message.steamId) && !(message.steamId && $util.isInteger(message.steamId.low) && $util.isInteger(message.steamId.high)))
                    return "steamId: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCToGCIsTrustedServer message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCToGCIsTrustedServer
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCToGCIsTrustedServer} CMsgGCToGCIsTrustedServer
         */
        CMsgGCToGCIsTrustedServer.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCToGCIsTrustedServer)
                return object;
            var message = new $root.CMsgGCToGCIsTrustedServer();
            if (object.steamId != null)
                if ($util.Long)
                    (message.steamId = $util.Long.fromValue(object.steamId)).unsigned = false;
                else if (typeof object.steamId === "string")
                    message.steamId = parseInt(object.steamId, 10);
                else if (typeof object.steamId === "number")
                    message.steamId = object.steamId;
                else if (typeof object.steamId === "object")
                    message.steamId = new $util.LongBits(object.steamId.low >>> 0, object.steamId.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCToGCIsTrustedServer message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCToGCIsTrustedServer
         * @static
         * @param {CMsgGCToGCIsTrustedServer} message CMsgGCToGCIsTrustedServer
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCToGCIsTrustedServer.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamId = options.longs === String ? "0" : 0;
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (typeof message.steamId === "number")
                    object.steamId = options.longs === String ? String(message.steamId) : message.steamId;
                else
                    object.steamId = options.longs === String ? $util.Long.prototype.toString.call(message.steamId) : options.longs === Number ? new $util.LongBits(message.steamId.low >>> 0, message.steamId.high >>> 0).toNumber() : message.steamId;
            return object;
        };
    
        /**
         * Converts this CMsgGCToGCIsTrustedServer to JSON.
         * @function toJSON
         * @memberof CMsgGCToGCIsTrustedServer
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCToGCIsTrustedServer.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCToGCIsTrustedServer
         * @function getTypeUrl
         * @memberof CMsgGCToGCIsTrustedServer
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCToGCIsTrustedServer.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCToGCIsTrustedServer";
        };
    
        return CMsgGCToGCIsTrustedServer;
    })();
    
    $root.CMsgGCToGCIsTrustedServerResponse = (function() {
    
        /**
         * Properties of a CMsgGCToGCIsTrustedServerResponse.
         * @exports ICMsgGCToGCIsTrustedServerResponse
         * @interface ICMsgGCToGCIsTrustedServerResponse
         * @property {boolean|null} [isTrusted] CMsgGCToGCIsTrustedServerResponse isTrusted
         */
    
        /**
         * Constructs a new CMsgGCToGCIsTrustedServerResponse.
         * @exports CMsgGCToGCIsTrustedServerResponse
         * @classdesc Represents a CMsgGCToGCIsTrustedServerResponse.
         * @implements ICMsgGCToGCIsTrustedServerResponse
         * @constructor
         * @param {ICMsgGCToGCIsTrustedServerResponse=} [properties] Properties to set
         */
        function CMsgGCToGCIsTrustedServerResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCToGCIsTrustedServerResponse isTrusted.
         * @member {boolean} isTrusted
         * @memberof CMsgGCToGCIsTrustedServerResponse
         * @instance
         */
        CMsgGCToGCIsTrustedServerResponse.prototype.isTrusted = false;
    
        /**
         * Creates a new CMsgGCToGCIsTrustedServerResponse instance using the specified properties.
         * @function create
         * @memberof CMsgGCToGCIsTrustedServerResponse
         * @static
         * @param {ICMsgGCToGCIsTrustedServerResponse=} [properties] Properties to set
         * @returns {CMsgGCToGCIsTrustedServerResponse} CMsgGCToGCIsTrustedServerResponse instance
         */
        CMsgGCToGCIsTrustedServerResponse.create = function create(properties) {
            return new CMsgGCToGCIsTrustedServerResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgGCToGCIsTrustedServerResponse message. Does not implicitly {@link CMsgGCToGCIsTrustedServerResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCToGCIsTrustedServerResponse
         * @static
         * @param {ICMsgGCToGCIsTrustedServerResponse} message CMsgGCToGCIsTrustedServerResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCIsTrustedServerResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.isTrusted != null && Object.hasOwnProperty.call(message, "isTrusted"))
                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.isTrusted);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCToGCIsTrustedServerResponse message, length delimited. Does not implicitly {@link CMsgGCToGCIsTrustedServerResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCToGCIsTrustedServerResponse
         * @static
         * @param {ICMsgGCToGCIsTrustedServerResponse} message CMsgGCToGCIsTrustedServerResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCIsTrustedServerResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCToGCIsTrustedServerResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCToGCIsTrustedServerResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCToGCIsTrustedServerResponse} CMsgGCToGCIsTrustedServerResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCIsTrustedServerResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCToGCIsTrustedServerResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.isTrusted = reader.bool();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCToGCIsTrustedServerResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCToGCIsTrustedServerResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCToGCIsTrustedServerResponse} CMsgGCToGCIsTrustedServerResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCIsTrustedServerResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCToGCIsTrustedServerResponse message.
         * @function verify
         * @memberof CMsgGCToGCIsTrustedServerResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCToGCIsTrustedServerResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.isTrusted != null && message.hasOwnProperty("isTrusted"))
                if (typeof message.isTrusted !== "boolean")
                    return "isTrusted: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCToGCIsTrustedServerResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCToGCIsTrustedServerResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCToGCIsTrustedServerResponse} CMsgGCToGCIsTrustedServerResponse
         */
        CMsgGCToGCIsTrustedServerResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCToGCIsTrustedServerResponse)
                return object;
            var message = new $root.CMsgGCToGCIsTrustedServerResponse();
            if (object.isTrusted != null)
                message.isTrusted = Boolean(object.isTrusted);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCToGCIsTrustedServerResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCToGCIsTrustedServerResponse
         * @static
         * @param {CMsgGCToGCIsTrustedServerResponse} message CMsgGCToGCIsTrustedServerResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCToGCIsTrustedServerResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.isTrusted = false;
            if (message.isTrusted != null && message.hasOwnProperty("isTrusted"))
                object.isTrusted = message.isTrusted;
            return object;
        };
    
        /**
         * Converts this CMsgGCToGCIsTrustedServerResponse to JSON.
         * @function toJSON
         * @memberof CMsgGCToGCIsTrustedServerResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCToGCIsTrustedServerResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCToGCIsTrustedServerResponse
         * @function getTypeUrl
         * @memberof CMsgGCToGCIsTrustedServerResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCToGCIsTrustedServerResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCToGCIsTrustedServerResponse";
        };
    
        return CMsgGCToGCIsTrustedServerResponse;
    })();
    
    $root.CMsgGCToGCBroadcastConsoleCommand = (function() {
    
        /**
         * Properties of a CMsgGCToGCBroadcastConsoleCommand.
         * @exports ICMsgGCToGCBroadcastConsoleCommand
         * @interface ICMsgGCToGCBroadcastConsoleCommand
         * @property {string|null} [conCommand] CMsgGCToGCBroadcastConsoleCommand conCommand
         */
    
        /**
         * Constructs a new CMsgGCToGCBroadcastConsoleCommand.
         * @exports CMsgGCToGCBroadcastConsoleCommand
         * @classdesc Represents a CMsgGCToGCBroadcastConsoleCommand.
         * @implements ICMsgGCToGCBroadcastConsoleCommand
         * @constructor
         * @param {ICMsgGCToGCBroadcastConsoleCommand=} [properties] Properties to set
         */
        function CMsgGCToGCBroadcastConsoleCommand(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCToGCBroadcastConsoleCommand conCommand.
         * @member {string} conCommand
         * @memberof CMsgGCToGCBroadcastConsoleCommand
         * @instance
         */
        CMsgGCToGCBroadcastConsoleCommand.prototype.conCommand = "";
    
        /**
         * Creates a new CMsgGCToGCBroadcastConsoleCommand instance using the specified properties.
         * @function create
         * @memberof CMsgGCToGCBroadcastConsoleCommand
         * @static
         * @param {ICMsgGCToGCBroadcastConsoleCommand=} [properties] Properties to set
         * @returns {CMsgGCToGCBroadcastConsoleCommand} CMsgGCToGCBroadcastConsoleCommand instance
         */
        CMsgGCToGCBroadcastConsoleCommand.create = function create(properties) {
            return new CMsgGCToGCBroadcastConsoleCommand(properties);
        };
    
        /**
         * Encodes the specified CMsgGCToGCBroadcastConsoleCommand message. Does not implicitly {@link CMsgGCToGCBroadcastConsoleCommand.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCToGCBroadcastConsoleCommand
         * @static
         * @param {ICMsgGCToGCBroadcastConsoleCommand} message CMsgGCToGCBroadcastConsoleCommand message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCBroadcastConsoleCommand.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.conCommand != null && Object.hasOwnProperty.call(message, "conCommand"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.conCommand);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCToGCBroadcastConsoleCommand message, length delimited. Does not implicitly {@link CMsgGCToGCBroadcastConsoleCommand.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCToGCBroadcastConsoleCommand
         * @static
         * @param {ICMsgGCToGCBroadcastConsoleCommand} message CMsgGCToGCBroadcastConsoleCommand message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCBroadcastConsoleCommand.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCToGCBroadcastConsoleCommand message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCToGCBroadcastConsoleCommand
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCToGCBroadcastConsoleCommand} CMsgGCToGCBroadcastConsoleCommand
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCBroadcastConsoleCommand.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCToGCBroadcastConsoleCommand();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.conCommand = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCToGCBroadcastConsoleCommand message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCToGCBroadcastConsoleCommand
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCToGCBroadcastConsoleCommand} CMsgGCToGCBroadcastConsoleCommand
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCBroadcastConsoleCommand.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCToGCBroadcastConsoleCommand message.
         * @function verify
         * @memberof CMsgGCToGCBroadcastConsoleCommand
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCToGCBroadcastConsoleCommand.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.conCommand != null && message.hasOwnProperty("conCommand"))
                if (!$util.isString(message.conCommand))
                    return "conCommand: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCToGCBroadcastConsoleCommand message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCToGCBroadcastConsoleCommand
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCToGCBroadcastConsoleCommand} CMsgGCToGCBroadcastConsoleCommand
         */
        CMsgGCToGCBroadcastConsoleCommand.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCToGCBroadcastConsoleCommand)
                return object;
            var message = new $root.CMsgGCToGCBroadcastConsoleCommand();
            if (object.conCommand != null)
                message.conCommand = String(object.conCommand);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCToGCBroadcastConsoleCommand message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCToGCBroadcastConsoleCommand
         * @static
         * @param {CMsgGCToGCBroadcastConsoleCommand} message CMsgGCToGCBroadcastConsoleCommand
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCToGCBroadcastConsoleCommand.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.conCommand = "";
            if (message.conCommand != null && message.hasOwnProperty("conCommand"))
                object.conCommand = message.conCommand;
            return object;
        };
    
        /**
         * Converts this CMsgGCToGCBroadcastConsoleCommand to JSON.
         * @function toJSON
         * @memberof CMsgGCToGCBroadcastConsoleCommand
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCToGCBroadcastConsoleCommand.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCToGCBroadcastConsoleCommand
         * @function getTypeUrl
         * @memberof CMsgGCToGCBroadcastConsoleCommand
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCToGCBroadcastConsoleCommand.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCToGCBroadcastConsoleCommand";
        };
    
        return CMsgGCToGCBroadcastConsoleCommand;
    })();
    
    $root.CMsgGCServerVersionUpdated = (function() {
    
        /**
         * Properties of a CMsgGCServerVersionUpdated.
         * @exports ICMsgGCServerVersionUpdated
         * @interface ICMsgGCServerVersionUpdated
         * @property {number|null} [serverVersion] CMsgGCServerVersionUpdated serverVersion
         */
    
        /**
         * Constructs a new CMsgGCServerVersionUpdated.
         * @exports CMsgGCServerVersionUpdated
         * @classdesc Represents a CMsgGCServerVersionUpdated.
         * @implements ICMsgGCServerVersionUpdated
         * @constructor
         * @param {ICMsgGCServerVersionUpdated=} [properties] Properties to set
         */
        function CMsgGCServerVersionUpdated(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCServerVersionUpdated serverVersion.
         * @member {number} serverVersion
         * @memberof CMsgGCServerVersionUpdated
         * @instance
         */
        CMsgGCServerVersionUpdated.prototype.serverVersion = 0;
    
        /**
         * Creates a new CMsgGCServerVersionUpdated instance using the specified properties.
         * @function create
         * @memberof CMsgGCServerVersionUpdated
         * @static
         * @param {ICMsgGCServerVersionUpdated=} [properties] Properties to set
         * @returns {CMsgGCServerVersionUpdated} CMsgGCServerVersionUpdated instance
         */
        CMsgGCServerVersionUpdated.create = function create(properties) {
            return new CMsgGCServerVersionUpdated(properties);
        };
    
        /**
         * Encodes the specified CMsgGCServerVersionUpdated message. Does not implicitly {@link CMsgGCServerVersionUpdated.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCServerVersionUpdated
         * @static
         * @param {ICMsgGCServerVersionUpdated} message CMsgGCServerVersionUpdated message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCServerVersionUpdated.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.serverVersion != null && Object.hasOwnProperty.call(message, "serverVersion"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.serverVersion);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCServerVersionUpdated message, length delimited. Does not implicitly {@link CMsgGCServerVersionUpdated.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCServerVersionUpdated
         * @static
         * @param {ICMsgGCServerVersionUpdated} message CMsgGCServerVersionUpdated message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCServerVersionUpdated.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCServerVersionUpdated message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCServerVersionUpdated
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCServerVersionUpdated} CMsgGCServerVersionUpdated
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCServerVersionUpdated.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCServerVersionUpdated();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.serverVersion = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCServerVersionUpdated message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCServerVersionUpdated
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCServerVersionUpdated} CMsgGCServerVersionUpdated
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCServerVersionUpdated.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCServerVersionUpdated message.
         * @function verify
         * @memberof CMsgGCServerVersionUpdated
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCServerVersionUpdated.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.serverVersion != null && message.hasOwnProperty("serverVersion"))
                if (!$util.isInteger(message.serverVersion))
                    return "serverVersion: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCServerVersionUpdated message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCServerVersionUpdated
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCServerVersionUpdated} CMsgGCServerVersionUpdated
         */
        CMsgGCServerVersionUpdated.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCServerVersionUpdated)
                return object;
            var message = new $root.CMsgGCServerVersionUpdated();
            if (object.serverVersion != null)
                message.serverVersion = object.serverVersion >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCServerVersionUpdated message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCServerVersionUpdated
         * @static
         * @param {CMsgGCServerVersionUpdated} message CMsgGCServerVersionUpdated
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCServerVersionUpdated.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.serverVersion = 0;
            if (message.serverVersion != null && message.hasOwnProperty("serverVersion"))
                object.serverVersion = message.serverVersion;
            return object;
        };
    
        /**
         * Converts this CMsgGCServerVersionUpdated to JSON.
         * @function toJSON
         * @memberof CMsgGCServerVersionUpdated
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCServerVersionUpdated.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCServerVersionUpdated
         * @function getTypeUrl
         * @memberof CMsgGCServerVersionUpdated
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCServerVersionUpdated.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCServerVersionUpdated";
        };
    
        return CMsgGCServerVersionUpdated;
    })();
    
    $root.CMsgGCClientVersionUpdated = (function() {
    
        /**
         * Properties of a CMsgGCClientVersionUpdated.
         * @exports ICMsgGCClientVersionUpdated
         * @interface ICMsgGCClientVersionUpdated
         * @property {number|null} [clientVersion] CMsgGCClientVersionUpdated clientVersion
         */
    
        /**
         * Constructs a new CMsgGCClientVersionUpdated.
         * @exports CMsgGCClientVersionUpdated
         * @classdesc Represents a CMsgGCClientVersionUpdated.
         * @implements ICMsgGCClientVersionUpdated
         * @constructor
         * @param {ICMsgGCClientVersionUpdated=} [properties] Properties to set
         */
        function CMsgGCClientVersionUpdated(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCClientVersionUpdated clientVersion.
         * @member {number} clientVersion
         * @memberof CMsgGCClientVersionUpdated
         * @instance
         */
        CMsgGCClientVersionUpdated.prototype.clientVersion = 0;
    
        /**
         * Creates a new CMsgGCClientVersionUpdated instance using the specified properties.
         * @function create
         * @memberof CMsgGCClientVersionUpdated
         * @static
         * @param {ICMsgGCClientVersionUpdated=} [properties] Properties to set
         * @returns {CMsgGCClientVersionUpdated} CMsgGCClientVersionUpdated instance
         */
        CMsgGCClientVersionUpdated.create = function create(properties) {
            return new CMsgGCClientVersionUpdated(properties);
        };
    
        /**
         * Encodes the specified CMsgGCClientVersionUpdated message. Does not implicitly {@link CMsgGCClientVersionUpdated.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCClientVersionUpdated
         * @static
         * @param {ICMsgGCClientVersionUpdated} message CMsgGCClientVersionUpdated message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCClientVersionUpdated.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.clientVersion != null && Object.hasOwnProperty.call(message, "clientVersion"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.clientVersion);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCClientVersionUpdated message, length delimited. Does not implicitly {@link CMsgGCClientVersionUpdated.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCClientVersionUpdated
         * @static
         * @param {ICMsgGCClientVersionUpdated} message CMsgGCClientVersionUpdated message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCClientVersionUpdated.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCClientVersionUpdated message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCClientVersionUpdated
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCClientVersionUpdated} CMsgGCClientVersionUpdated
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCClientVersionUpdated.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCClientVersionUpdated();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.clientVersion = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCClientVersionUpdated message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCClientVersionUpdated
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCClientVersionUpdated} CMsgGCClientVersionUpdated
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCClientVersionUpdated.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCClientVersionUpdated message.
         * @function verify
         * @memberof CMsgGCClientVersionUpdated
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCClientVersionUpdated.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.clientVersion != null && message.hasOwnProperty("clientVersion"))
                if (!$util.isInteger(message.clientVersion))
                    return "clientVersion: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCClientVersionUpdated message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCClientVersionUpdated
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCClientVersionUpdated} CMsgGCClientVersionUpdated
         */
        CMsgGCClientVersionUpdated.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCClientVersionUpdated)
                return object;
            var message = new $root.CMsgGCClientVersionUpdated();
            if (object.clientVersion != null)
                message.clientVersion = object.clientVersion >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCClientVersionUpdated message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCClientVersionUpdated
         * @static
         * @param {CMsgGCClientVersionUpdated} message CMsgGCClientVersionUpdated
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCClientVersionUpdated.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.clientVersion = 0;
            if (message.clientVersion != null && message.hasOwnProperty("clientVersion"))
                object.clientVersion = message.clientVersion;
            return object;
        };
    
        /**
         * Converts this CMsgGCClientVersionUpdated to JSON.
         * @function toJSON
         * @memberof CMsgGCClientVersionUpdated
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCClientVersionUpdated.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCClientVersionUpdated
         * @function getTypeUrl
         * @memberof CMsgGCClientVersionUpdated
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCClientVersionUpdated.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCClientVersionUpdated";
        };
    
        return CMsgGCClientVersionUpdated;
    })();
    
    $root.CMsgGCToGCWebAPIAccountChanged = (function() {
    
        /**
         * Properties of a CMsgGCToGCWebAPIAccountChanged.
         * @exports ICMsgGCToGCWebAPIAccountChanged
         * @interface ICMsgGCToGCWebAPIAccountChanged
         */
    
        /**
         * Constructs a new CMsgGCToGCWebAPIAccountChanged.
         * @exports CMsgGCToGCWebAPIAccountChanged
         * @classdesc Represents a CMsgGCToGCWebAPIAccountChanged.
         * @implements ICMsgGCToGCWebAPIAccountChanged
         * @constructor
         * @param {ICMsgGCToGCWebAPIAccountChanged=} [properties] Properties to set
         */
        function CMsgGCToGCWebAPIAccountChanged(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CMsgGCToGCWebAPIAccountChanged instance using the specified properties.
         * @function create
         * @memberof CMsgGCToGCWebAPIAccountChanged
         * @static
         * @param {ICMsgGCToGCWebAPIAccountChanged=} [properties] Properties to set
         * @returns {CMsgGCToGCWebAPIAccountChanged} CMsgGCToGCWebAPIAccountChanged instance
         */
        CMsgGCToGCWebAPIAccountChanged.create = function create(properties) {
            return new CMsgGCToGCWebAPIAccountChanged(properties);
        };
    
        /**
         * Encodes the specified CMsgGCToGCWebAPIAccountChanged message. Does not implicitly {@link CMsgGCToGCWebAPIAccountChanged.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCToGCWebAPIAccountChanged
         * @static
         * @param {ICMsgGCToGCWebAPIAccountChanged} message CMsgGCToGCWebAPIAccountChanged message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCWebAPIAccountChanged.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCToGCWebAPIAccountChanged message, length delimited. Does not implicitly {@link CMsgGCToGCWebAPIAccountChanged.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCToGCWebAPIAccountChanged
         * @static
         * @param {ICMsgGCToGCWebAPIAccountChanged} message CMsgGCToGCWebAPIAccountChanged message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCWebAPIAccountChanged.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCToGCWebAPIAccountChanged message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCToGCWebAPIAccountChanged
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCToGCWebAPIAccountChanged} CMsgGCToGCWebAPIAccountChanged
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCWebAPIAccountChanged.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCToGCWebAPIAccountChanged();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCToGCWebAPIAccountChanged message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCToGCWebAPIAccountChanged
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCToGCWebAPIAccountChanged} CMsgGCToGCWebAPIAccountChanged
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCWebAPIAccountChanged.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCToGCWebAPIAccountChanged message.
         * @function verify
         * @memberof CMsgGCToGCWebAPIAccountChanged
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCToGCWebAPIAccountChanged.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCToGCWebAPIAccountChanged message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCToGCWebAPIAccountChanged
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCToGCWebAPIAccountChanged} CMsgGCToGCWebAPIAccountChanged
         */
        CMsgGCToGCWebAPIAccountChanged.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCToGCWebAPIAccountChanged)
                return object;
            return new $root.CMsgGCToGCWebAPIAccountChanged();
        };
    
        /**
         * Creates a plain object from a CMsgGCToGCWebAPIAccountChanged message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCToGCWebAPIAccountChanged
         * @static
         * @param {CMsgGCToGCWebAPIAccountChanged} message CMsgGCToGCWebAPIAccountChanged
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCToGCWebAPIAccountChanged.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CMsgGCToGCWebAPIAccountChanged to JSON.
         * @function toJSON
         * @memberof CMsgGCToGCWebAPIAccountChanged
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCToGCWebAPIAccountChanged.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCToGCWebAPIAccountChanged
         * @function getTypeUrl
         * @memberof CMsgGCToGCWebAPIAccountChanged
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCToGCWebAPIAccountChanged.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCToGCWebAPIAccountChanged";
        };
    
        return CMsgGCToGCWebAPIAccountChanged;
    })();
    
    $root.CMsgGCToGCRequestPassportItemGrant = (function() {
    
        /**
         * Properties of a CMsgGCToGCRequestPassportItemGrant.
         * @exports ICMsgGCToGCRequestPassportItemGrant
         * @interface ICMsgGCToGCRequestPassportItemGrant
         * @property {number|Long|null} [steamId] CMsgGCToGCRequestPassportItemGrant steamId
         * @property {number|null} [leagueId] CMsgGCToGCRequestPassportItemGrant leagueId
         * @property {number|null} [rewardFlag] CMsgGCToGCRequestPassportItemGrant rewardFlag
         */
    
        /**
         * Constructs a new CMsgGCToGCRequestPassportItemGrant.
         * @exports CMsgGCToGCRequestPassportItemGrant
         * @classdesc Represents a CMsgGCToGCRequestPassportItemGrant.
         * @implements ICMsgGCToGCRequestPassportItemGrant
         * @constructor
         * @param {ICMsgGCToGCRequestPassportItemGrant=} [properties] Properties to set
         */
        function CMsgGCToGCRequestPassportItemGrant(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCToGCRequestPassportItemGrant steamId.
         * @member {number|Long} steamId
         * @memberof CMsgGCToGCRequestPassportItemGrant
         * @instance
         */
        CMsgGCToGCRequestPassportItemGrant.prototype.steamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGCToGCRequestPassportItemGrant leagueId.
         * @member {number} leagueId
         * @memberof CMsgGCToGCRequestPassportItemGrant
         * @instance
         */
        CMsgGCToGCRequestPassportItemGrant.prototype.leagueId = 0;
    
        /**
         * CMsgGCToGCRequestPassportItemGrant rewardFlag.
         * @member {number} rewardFlag
         * @memberof CMsgGCToGCRequestPassportItemGrant
         * @instance
         */
        CMsgGCToGCRequestPassportItemGrant.prototype.rewardFlag = 0;
    
        /**
         * Creates a new CMsgGCToGCRequestPassportItemGrant instance using the specified properties.
         * @function create
         * @memberof CMsgGCToGCRequestPassportItemGrant
         * @static
         * @param {ICMsgGCToGCRequestPassportItemGrant=} [properties] Properties to set
         * @returns {CMsgGCToGCRequestPassportItemGrant} CMsgGCToGCRequestPassportItemGrant instance
         */
        CMsgGCToGCRequestPassportItemGrant.create = function create(properties) {
            return new CMsgGCToGCRequestPassportItemGrant(properties);
        };
    
        /**
         * Encodes the specified CMsgGCToGCRequestPassportItemGrant message. Does not implicitly {@link CMsgGCToGCRequestPassportItemGrant.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCToGCRequestPassportItemGrant
         * @static
         * @param {ICMsgGCToGCRequestPassportItemGrant} message CMsgGCToGCRequestPassportItemGrant message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCRequestPassportItemGrant.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamId != null && Object.hasOwnProperty.call(message, "steamId"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamId);
            if (message.leagueId != null && Object.hasOwnProperty.call(message, "leagueId"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.leagueId);
            if (message.rewardFlag != null && Object.hasOwnProperty.call(message, "rewardFlag"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.rewardFlag);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCToGCRequestPassportItemGrant message, length delimited. Does not implicitly {@link CMsgGCToGCRequestPassportItemGrant.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCToGCRequestPassportItemGrant
         * @static
         * @param {ICMsgGCToGCRequestPassportItemGrant} message CMsgGCToGCRequestPassportItemGrant message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCRequestPassportItemGrant.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCToGCRequestPassportItemGrant message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCToGCRequestPassportItemGrant
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCToGCRequestPassportItemGrant} CMsgGCToGCRequestPassportItemGrant
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCRequestPassportItemGrant.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCToGCRequestPassportItemGrant();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamId = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.leagueId = reader.uint32();
                        break;
                    }
                case 3: {
                        message.rewardFlag = reader.int32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCToGCRequestPassportItemGrant message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCToGCRequestPassportItemGrant
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCToGCRequestPassportItemGrant} CMsgGCToGCRequestPassportItemGrant
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCRequestPassportItemGrant.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCToGCRequestPassportItemGrant message.
         * @function verify
         * @memberof CMsgGCToGCRequestPassportItemGrant
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCToGCRequestPassportItemGrant.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (!$util.isInteger(message.steamId) && !(message.steamId && $util.isInteger(message.steamId.low) && $util.isInteger(message.steamId.high)))
                    return "steamId: integer|Long expected";
            if (message.leagueId != null && message.hasOwnProperty("leagueId"))
                if (!$util.isInteger(message.leagueId))
                    return "leagueId: integer expected";
            if (message.rewardFlag != null && message.hasOwnProperty("rewardFlag"))
                if (!$util.isInteger(message.rewardFlag))
                    return "rewardFlag: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCToGCRequestPassportItemGrant message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCToGCRequestPassportItemGrant
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCToGCRequestPassportItemGrant} CMsgGCToGCRequestPassportItemGrant
         */
        CMsgGCToGCRequestPassportItemGrant.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCToGCRequestPassportItemGrant)
                return object;
            var message = new $root.CMsgGCToGCRequestPassportItemGrant();
            if (object.steamId != null)
                if ($util.Long)
                    (message.steamId = $util.Long.fromValue(object.steamId)).unsigned = false;
                else if (typeof object.steamId === "string")
                    message.steamId = parseInt(object.steamId, 10);
                else if (typeof object.steamId === "number")
                    message.steamId = object.steamId;
                else if (typeof object.steamId === "object")
                    message.steamId = new $util.LongBits(object.steamId.low >>> 0, object.steamId.high >>> 0).toNumber();
            if (object.leagueId != null)
                message.leagueId = object.leagueId >>> 0;
            if (object.rewardFlag != null)
                message.rewardFlag = object.rewardFlag | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCToGCRequestPassportItemGrant message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCToGCRequestPassportItemGrant
         * @static
         * @param {CMsgGCToGCRequestPassportItemGrant} message CMsgGCToGCRequestPassportItemGrant
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCToGCRequestPassportItemGrant.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamId = options.longs === String ? "0" : 0;
                object.leagueId = 0;
                object.rewardFlag = 0;
            }
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (typeof message.steamId === "number")
                    object.steamId = options.longs === String ? String(message.steamId) : message.steamId;
                else
                    object.steamId = options.longs === String ? $util.Long.prototype.toString.call(message.steamId) : options.longs === Number ? new $util.LongBits(message.steamId.low >>> 0, message.steamId.high >>> 0).toNumber() : message.steamId;
            if (message.leagueId != null && message.hasOwnProperty("leagueId"))
                object.leagueId = message.leagueId;
            if (message.rewardFlag != null && message.hasOwnProperty("rewardFlag"))
                object.rewardFlag = message.rewardFlag;
            return object;
        };
    
        /**
         * Converts this CMsgGCToGCRequestPassportItemGrant to JSON.
         * @function toJSON
         * @memberof CMsgGCToGCRequestPassportItemGrant
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCToGCRequestPassportItemGrant.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCToGCRequestPassportItemGrant
         * @function getTypeUrl
         * @memberof CMsgGCToGCRequestPassportItemGrant
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCToGCRequestPassportItemGrant.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCToGCRequestPassportItemGrant";
        };
    
        return CMsgGCToGCRequestPassportItemGrant;
    })();
    
    $root.CMsgGameServerInfo = (function() {
    
        /**
         * Properties of a CMsgGameServerInfo.
         * @exports ICMsgGameServerInfo
         * @interface ICMsgGameServerInfo
         * @property {number|null} [serverPublicIpAddr] CMsgGameServerInfo serverPublicIpAddr
         * @property {number|null} [serverPrivateIpAddr] CMsgGameServerInfo serverPrivateIpAddr
         * @property {number|null} [serverPort] CMsgGameServerInfo serverPort
         * @property {number|null} [serverTvPort] CMsgGameServerInfo serverTvPort
         * @property {string|null} [serverKey] CMsgGameServerInfo serverKey
         * @property {boolean|null} [serverHibernation] CMsgGameServerInfo serverHibernation
         * @property {CMsgGameServerInfo.ServerType|null} [serverType] CMsgGameServerInfo serverType
         * @property {number|null} [serverRegion] CMsgGameServerInfo serverRegion
         * @property {number|null} [serverLoadavg] CMsgGameServerInfo serverLoadavg
         * @property {number|null} [serverTvBroadcastTime] CMsgGameServerInfo serverTvBroadcastTime
         * @property {number|null} [serverGameTime] CMsgGameServerInfo serverGameTime
         * @property {number|Long|null} [serverRelayConnectedSteamId] CMsgGameServerInfo serverRelayConnectedSteamId
         * @property {number|null} [relaySlotsMax] CMsgGameServerInfo relaySlotsMax
         * @property {number|null} [relaysConnected] CMsgGameServerInfo relaysConnected
         * @property {number|null} [relayClientsConnected] CMsgGameServerInfo relayClientsConnected
         * @property {number|Long|null} [relayedGameServerSteamId] CMsgGameServerInfo relayedGameServerSteamId
         * @property {number|null} [parentRelayCount] CMsgGameServerInfo parentRelayCount
         * @property {number|Long|null} [tvSecretCode] CMsgGameServerInfo tvSecretCode
         */
    
        /**
         * Constructs a new CMsgGameServerInfo.
         * @exports CMsgGameServerInfo
         * @classdesc Represents a CMsgGameServerInfo.
         * @implements ICMsgGameServerInfo
         * @constructor
         * @param {ICMsgGameServerInfo=} [properties] Properties to set
         */
        function CMsgGameServerInfo(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGameServerInfo serverPublicIpAddr.
         * @member {number} serverPublicIpAddr
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.serverPublicIpAddr = 0;
    
        /**
         * CMsgGameServerInfo serverPrivateIpAddr.
         * @member {number} serverPrivateIpAddr
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.serverPrivateIpAddr = 0;
    
        /**
         * CMsgGameServerInfo serverPort.
         * @member {number} serverPort
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.serverPort = 0;
    
        /**
         * CMsgGameServerInfo serverTvPort.
         * @member {number} serverTvPort
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.serverTvPort = 0;
    
        /**
         * CMsgGameServerInfo serverKey.
         * @member {string} serverKey
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.serverKey = "";
    
        /**
         * CMsgGameServerInfo serverHibernation.
         * @member {boolean} serverHibernation
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.serverHibernation = false;
    
        /**
         * CMsgGameServerInfo serverType.
         * @member {CMsgGameServerInfo.ServerType} serverType
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.serverType = 0;
    
        /**
         * CMsgGameServerInfo serverRegion.
         * @member {number} serverRegion
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.serverRegion = 0;
    
        /**
         * CMsgGameServerInfo serverLoadavg.
         * @member {number} serverLoadavg
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.serverLoadavg = 0;
    
        /**
         * CMsgGameServerInfo serverTvBroadcastTime.
         * @member {number} serverTvBroadcastTime
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.serverTvBroadcastTime = 0;
    
        /**
         * CMsgGameServerInfo serverGameTime.
         * @member {number} serverGameTime
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.serverGameTime = 0;
    
        /**
         * CMsgGameServerInfo serverRelayConnectedSteamId.
         * @member {number|Long} serverRelayConnectedSteamId
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.serverRelayConnectedSteamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGameServerInfo relaySlotsMax.
         * @member {number} relaySlotsMax
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.relaySlotsMax = 0;
    
        /**
         * CMsgGameServerInfo relaysConnected.
         * @member {number} relaysConnected
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.relaysConnected = 0;
    
        /**
         * CMsgGameServerInfo relayClientsConnected.
         * @member {number} relayClientsConnected
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.relayClientsConnected = 0;
    
        /**
         * CMsgGameServerInfo relayedGameServerSteamId.
         * @member {number|Long} relayedGameServerSteamId
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.relayedGameServerSteamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGameServerInfo parentRelayCount.
         * @member {number} parentRelayCount
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.parentRelayCount = 0;
    
        /**
         * CMsgGameServerInfo tvSecretCode.
         * @member {number|Long} tvSecretCode
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.tvSecretCode = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgGameServerInfo instance using the specified properties.
         * @function create
         * @memberof CMsgGameServerInfo
         * @static
         * @param {ICMsgGameServerInfo=} [properties] Properties to set
         * @returns {CMsgGameServerInfo} CMsgGameServerInfo instance
         */
        CMsgGameServerInfo.create = function create(properties) {
            return new CMsgGameServerInfo(properties);
        };
    
        /**
         * Encodes the specified CMsgGameServerInfo message. Does not implicitly {@link CMsgGameServerInfo.verify|verify} messages.
         * @function encode
         * @memberof CMsgGameServerInfo
         * @static
         * @param {ICMsgGameServerInfo} message CMsgGameServerInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGameServerInfo.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.serverPublicIpAddr != null && Object.hasOwnProperty.call(message, "serverPublicIpAddr"))
                writer.uint32(/* id 1, wireType 5 =*/13).fixed32(message.serverPublicIpAddr);
            if (message.serverPrivateIpAddr != null && Object.hasOwnProperty.call(message, "serverPrivateIpAddr"))
                writer.uint32(/* id 2, wireType 5 =*/21).fixed32(message.serverPrivateIpAddr);
            if (message.serverPort != null && Object.hasOwnProperty.call(message, "serverPort"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.serverPort);
            if (message.serverTvPort != null && Object.hasOwnProperty.call(message, "serverTvPort"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.serverTvPort);
            if (message.serverKey != null && Object.hasOwnProperty.call(message, "serverKey"))
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.serverKey);
            if (message.serverHibernation != null && Object.hasOwnProperty.call(message, "serverHibernation"))
                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverHibernation);
            if (message.serverType != null && Object.hasOwnProperty.call(message, "serverType"))
                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.serverType);
            if (message.serverRegion != null && Object.hasOwnProperty.call(message, "serverRegion"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.serverRegion);
            if (message.serverLoadavg != null && Object.hasOwnProperty.call(message, "serverLoadavg"))
                writer.uint32(/* id 9, wireType 5 =*/77).float(message.serverLoadavg);
            if (message.serverTvBroadcastTime != null && Object.hasOwnProperty.call(message, "serverTvBroadcastTime"))
                writer.uint32(/* id 10, wireType 5 =*/85).float(message.serverTvBroadcastTime);
            if (message.serverGameTime != null && Object.hasOwnProperty.call(message, "serverGameTime"))
                writer.uint32(/* id 11, wireType 5 =*/93).float(message.serverGameTime);
            if (message.serverRelayConnectedSteamId != null && Object.hasOwnProperty.call(message, "serverRelayConnectedSteamId"))
                writer.uint32(/* id 12, wireType 1 =*/97).fixed64(message.serverRelayConnectedSteamId);
            if (message.relaySlotsMax != null && Object.hasOwnProperty.call(message, "relaySlotsMax"))
                writer.uint32(/* id 13, wireType 0 =*/104).uint32(message.relaySlotsMax);
            if (message.relaysConnected != null && Object.hasOwnProperty.call(message, "relaysConnected"))
                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.relaysConnected);
            if (message.relayClientsConnected != null && Object.hasOwnProperty.call(message, "relayClientsConnected"))
                writer.uint32(/* id 15, wireType 0 =*/120).int32(message.relayClientsConnected);
            if (message.relayedGameServerSteamId != null && Object.hasOwnProperty.call(message, "relayedGameServerSteamId"))
                writer.uint32(/* id 16, wireType 1 =*/129).fixed64(message.relayedGameServerSteamId);
            if (message.parentRelayCount != null && Object.hasOwnProperty.call(message, "parentRelayCount"))
                writer.uint32(/* id 17, wireType 0 =*/136).uint32(message.parentRelayCount);
            if (message.tvSecretCode != null && Object.hasOwnProperty.call(message, "tvSecretCode"))
                writer.uint32(/* id 18, wireType 1 =*/145).fixed64(message.tvSecretCode);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGameServerInfo message, length delimited. Does not implicitly {@link CMsgGameServerInfo.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGameServerInfo
         * @static
         * @param {ICMsgGameServerInfo} message CMsgGameServerInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGameServerInfo.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGameServerInfo message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGameServerInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGameServerInfo} CMsgGameServerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGameServerInfo.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGameServerInfo();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.serverPublicIpAddr = reader.fixed32();
                        break;
                    }
                case 2: {
                        message.serverPrivateIpAddr = reader.fixed32();
                        break;
                    }
                case 3: {
                        message.serverPort = reader.uint32();
                        break;
                    }
                case 4: {
                        message.serverTvPort = reader.uint32();
                        break;
                    }
                case 5: {
                        message.serverKey = reader.string();
                        break;
                    }
                case 6: {
                        message.serverHibernation = reader.bool();
                        break;
                    }
                case 7: {
                        message.serverType = reader.int32();
                        break;
                    }
                case 8: {
                        message.serverRegion = reader.uint32();
                        break;
                    }
                case 9: {
                        message.serverLoadavg = reader.float();
                        break;
                    }
                case 10: {
                        message.serverTvBroadcastTime = reader.float();
                        break;
                    }
                case 11: {
                        message.serverGameTime = reader.float();
                        break;
                    }
                case 12: {
                        message.serverRelayConnectedSteamId = reader.fixed64();
                        break;
                    }
                case 13: {
                        message.relaySlotsMax = reader.uint32();
                        break;
                    }
                case 14: {
                        message.relaysConnected = reader.int32();
                        break;
                    }
                case 15: {
                        message.relayClientsConnected = reader.int32();
                        break;
                    }
                case 16: {
                        message.relayedGameServerSteamId = reader.fixed64();
                        break;
                    }
                case 17: {
                        message.parentRelayCount = reader.uint32();
                        break;
                    }
                case 18: {
                        message.tvSecretCode = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGameServerInfo message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGameServerInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGameServerInfo} CMsgGameServerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGameServerInfo.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGameServerInfo message.
         * @function verify
         * @memberof CMsgGameServerInfo
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGameServerInfo.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.serverPublicIpAddr != null && message.hasOwnProperty("serverPublicIpAddr"))
                if (!$util.isInteger(message.serverPublicIpAddr))
                    return "serverPublicIpAddr: integer expected";
            if (message.serverPrivateIpAddr != null && message.hasOwnProperty("serverPrivateIpAddr"))
                if (!$util.isInteger(message.serverPrivateIpAddr))
                    return "serverPrivateIpAddr: integer expected";
            if (message.serverPort != null && message.hasOwnProperty("serverPort"))
                if (!$util.isInteger(message.serverPort))
                    return "serverPort: integer expected";
            if (message.serverTvPort != null && message.hasOwnProperty("serverTvPort"))
                if (!$util.isInteger(message.serverTvPort))
                    return "serverTvPort: integer expected";
            if (message.serverKey != null && message.hasOwnProperty("serverKey"))
                if (!$util.isString(message.serverKey))
                    return "serverKey: string expected";
            if (message.serverHibernation != null && message.hasOwnProperty("serverHibernation"))
                if (typeof message.serverHibernation !== "boolean")
                    return "serverHibernation: boolean expected";
            if (message.serverType != null && message.hasOwnProperty("serverType"))
                switch (message.serverType) {
                default:
                    return "serverType: enum value expected";
                case 0:
                case 1:
                case 2:
                    break;
                }
            if (message.serverRegion != null && message.hasOwnProperty("serverRegion"))
                if (!$util.isInteger(message.serverRegion))
                    return "serverRegion: integer expected";
            if (message.serverLoadavg != null && message.hasOwnProperty("serverLoadavg"))
                if (typeof message.serverLoadavg !== "number")
                    return "serverLoadavg: number expected";
            if (message.serverTvBroadcastTime != null && message.hasOwnProperty("serverTvBroadcastTime"))
                if (typeof message.serverTvBroadcastTime !== "number")
                    return "serverTvBroadcastTime: number expected";
            if (message.serverGameTime != null && message.hasOwnProperty("serverGameTime"))
                if (typeof message.serverGameTime !== "number")
                    return "serverGameTime: number expected";
            if (message.serverRelayConnectedSteamId != null && message.hasOwnProperty("serverRelayConnectedSteamId"))
                if (!$util.isInteger(message.serverRelayConnectedSteamId) && !(message.serverRelayConnectedSteamId && $util.isInteger(message.serverRelayConnectedSteamId.low) && $util.isInteger(message.serverRelayConnectedSteamId.high)))
                    return "serverRelayConnectedSteamId: integer|Long expected";
            if (message.relaySlotsMax != null && message.hasOwnProperty("relaySlotsMax"))
                if (!$util.isInteger(message.relaySlotsMax))
                    return "relaySlotsMax: integer expected";
            if (message.relaysConnected != null && message.hasOwnProperty("relaysConnected"))
                if (!$util.isInteger(message.relaysConnected))
                    return "relaysConnected: integer expected";
            if (message.relayClientsConnected != null && message.hasOwnProperty("relayClientsConnected"))
                if (!$util.isInteger(message.relayClientsConnected))
                    return "relayClientsConnected: integer expected";
            if (message.relayedGameServerSteamId != null && message.hasOwnProperty("relayedGameServerSteamId"))
                if (!$util.isInteger(message.relayedGameServerSteamId) && !(message.relayedGameServerSteamId && $util.isInteger(message.relayedGameServerSteamId.low) && $util.isInteger(message.relayedGameServerSteamId.high)))
                    return "relayedGameServerSteamId: integer|Long expected";
            if (message.parentRelayCount != null && message.hasOwnProperty("parentRelayCount"))
                if (!$util.isInteger(message.parentRelayCount))
                    return "parentRelayCount: integer expected";
            if (message.tvSecretCode != null && message.hasOwnProperty("tvSecretCode"))
                if (!$util.isInteger(message.tvSecretCode) && !(message.tvSecretCode && $util.isInteger(message.tvSecretCode.low) && $util.isInteger(message.tvSecretCode.high)))
                    return "tvSecretCode: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgGameServerInfo message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGameServerInfo
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGameServerInfo} CMsgGameServerInfo
         */
        CMsgGameServerInfo.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGameServerInfo)
                return object;
            var message = new $root.CMsgGameServerInfo();
            if (object.serverPublicIpAddr != null)
                message.serverPublicIpAddr = object.serverPublicIpAddr >>> 0;
            if (object.serverPrivateIpAddr != null)
                message.serverPrivateIpAddr = object.serverPrivateIpAddr >>> 0;
            if (object.serverPort != null)
                message.serverPort = object.serverPort >>> 0;
            if (object.serverTvPort != null)
                message.serverTvPort = object.serverTvPort >>> 0;
            if (object.serverKey != null)
                message.serverKey = String(object.serverKey);
            if (object.serverHibernation != null)
                message.serverHibernation = Boolean(object.serverHibernation);
            switch (object.serverType) {
            default:
                if (typeof object.serverType === "number") {
                    message.serverType = object.serverType;
                    break;
                }
                break;
            case "UNSPECIFIED":
            case 0:
                message.serverType = 0;
                break;
            case "GAME":
            case 1:
                message.serverType = 1;
                break;
            case "PROXY":
            case 2:
                message.serverType = 2;
                break;
            }
            if (object.serverRegion != null)
                message.serverRegion = object.serverRegion >>> 0;
            if (object.serverLoadavg != null)
                message.serverLoadavg = Number(object.serverLoadavg);
            if (object.serverTvBroadcastTime != null)
                message.serverTvBroadcastTime = Number(object.serverTvBroadcastTime);
            if (object.serverGameTime != null)
                message.serverGameTime = Number(object.serverGameTime);
            if (object.serverRelayConnectedSteamId != null)
                if ($util.Long)
                    (message.serverRelayConnectedSteamId = $util.Long.fromValue(object.serverRelayConnectedSteamId)).unsigned = false;
                else if (typeof object.serverRelayConnectedSteamId === "string")
                    message.serverRelayConnectedSteamId = parseInt(object.serverRelayConnectedSteamId, 10);
                else if (typeof object.serverRelayConnectedSteamId === "number")
                    message.serverRelayConnectedSteamId = object.serverRelayConnectedSteamId;
                else if (typeof object.serverRelayConnectedSteamId === "object")
                    message.serverRelayConnectedSteamId = new $util.LongBits(object.serverRelayConnectedSteamId.low >>> 0, object.serverRelayConnectedSteamId.high >>> 0).toNumber();
            if (object.relaySlotsMax != null)
                message.relaySlotsMax = object.relaySlotsMax >>> 0;
            if (object.relaysConnected != null)
                message.relaysConnected = object.relaysConnected | 0;
            if (object.relayClientsConnected != null)
                message.relayClientsConnected = object.relayClientsConnected | 0;
            if (object.relayedGameServerSteamId != null)
                if ($util.Long)
                    (message.relayedGameServerSteamId = $util.Long.fromValue(object.relayedGameServerSteamId)).unsigned = false;
                else if (typeof object.relayedGameServerSteamId === "string")
                    message.relayedGameServerSteamId = parseInt(object.relayedGameServerSteamId, 10);
                else if (typeof object.relayedGameServerSteamId === "number")
                    message.relayedGameServerSteamId = object.relayedGameServerSteamId;
                else if (typeof object.relayedGameServerSteamId === "object")
                    message.relayedGameServerSteamId = new $util.LongBits(object.relayedGameServerSteamId.low >>> 0, object.relayedGameServerSteamId.high >>> 0).toNumber();
            if (object.parentRelayCount != null)
                message.parentRelayCount = object.parentRelayCount >>> 0;
            if (object.tvSecretCode != null)
                if ($util.Long)
                    (message.tvSecretCode = $util.Long.fromValue(object.tvSecretCode)).unsigned = false;
                else if (typeof object.tvSecretCode === "string")
                    message.tvSecretCode = parseInt(object.tvSecretCode, 10);
                else if (typeof object.tvSecretCode === "number")
                    message.tvSecretCode = object.tvSecretCode;
                else if (typeof object.tvSecretCode === "object")
                    message.tvSecretCode = new $util.LongBits(object.tvSecretCode.low >>> 0, object.tvSecretCode.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGameServerInfo message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGameServerInfo
         * @static
         * @param {CMsgGameServerInfo} message CMsgGameServerInfo
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGameServerInfo.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.serverPublicIpAddr = 0;
                object.serverPrivateIpAddr = 0;
                object.serverPort = 0;
                object.serverTvPort = 0;
                object.serverKey = "";
                object.serverHibernation = false;
                object.serverType = options.enums === String ? "UNSPECIFIED" : 0;
                object.serverRegion = 0;
                object.serverLoadavg = 0;
                object.serverTvBroadcastTime = 0;
                object.serverGameTime = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.serverRelayConnectedSteamId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.serverRelayConnectedSteamId = options.longs === String ? "0" : 0;
                object.relaySlotsMax = 0;
                object.relaysConnected = 0;
                object.relayClientsConnected = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.relayedGameServerSteamId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.relayedGameServerSteamId = options.longs === String ? "0" : 0;
                object.parentRelayCount = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.tvSecretCode = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.tvSecretCode = options.longs === String ? "0" : 0;
            }
            if (message.serverPublicIpAddr != null && message.hasOwnProperty("serverPublicIpAddr"))
                object.serverPublicIpAddr = message.serverPublicIpAddr;
            if (message.serverPrivateIpAddr != null && message.hasOwnProperty("serverPrivateIpAddr"))
                object.serverPrivateIpAddr = message.serverPrivateIpAddr;
            if (message.serverPort != null && message.hasOwnProperty("serverPort"))
                object.serverPort = message.serverPort;
            if (message.serverTvPort != null && message.hasOwnProperty("serverTvPort"))
                object.serverTvPort = message.serverTvPort;
            if (message.serverKey != null && message.hasOwnProperty("serverKey"))
                object.serverKey = message.serverKey;
            if (message.serverHibernation != null && message.hasOwnProperty("serverHibernation"))
                object.serverHibernation = message.serverHibernation;
            if (message.serverType != null && message.hasOwnProperty("serverType"))
                object.serverType = options.enums === String ? $root.CMsgGameServerInfo.ServerType[message.serverType] === undefined ? message.serverType : $root.CMsgGameServerInfo.ServerType[message.serverType] : message.serverType;
            if (message.serverRegion != null && message.hasOwnProperty("serverRegion"))
                object.serverRegion = message.serverRegion;
            if (message.serverLoadavg != null && message.hasOwnProperty("serverLoadavg"))
                object.serverLoadavg = options.json && !isFinite(message.serverLoadavg) ? String(message.serverLoadavg) : message.serverLoadavg;
            if (message.serverTvBroadcastTime != null && message.hasOwnProperty("serverTvBroadcastTime"))
                object.serverTvBroadcastTime = options.json && !isFinite(message.serverTvBroadcastTime) ? String(message.serverTvBroadcastTime) : message.serverTvBroadcastTime;
            if (message.serverGameTime != null && message.hasOwnProperty("serverGameTime"))
                object.serverGameTime = options.json && !isFinite(message.serverGameTime) ? String(message.serverGameTime) : message.serverGameTime;
            if (message.serverRelayConnectedSteamId != null && message.hasOwnProperty("serverRelayConnectedSteamId"))
                if (typeof message.serverRelayConnectedSteamId === "number")
                    object.serverRelayConnectedSteamId = options.longs === String ? String(message.serverRelayConnectedSteamId) : message.serverRelayConnectedSteamId;
                else
                    object.serverRelayConnectedSteamId = options.longs === String ? $util.Long.prototype.toString.call(message.serverRelayConnectedSteamId) : options.longs === Number ? new $util.LongBits(message.serverRelayConnectedSteamId.low >>> 0, message.serverRelayConnectedSteamId.high >>> 0).toNumber() : message.serverRelayConnectedSteamId;
            if (message.relaySlotsMax != null && message.hasOwnProperty("relaySlotsMax"))
                object.relaySlotsMax = message.relaySlotsMax;
            if (message.relaysConnected != null && message.hasOwnProperty("relaysConnected"))
                object.relaysConnected = message.relaysConnected;
            if (message.relayClientsConnected != null && message.hasOwnProperty("relayClientsConnected"))
                object.relayClientsConnected = message.relayClientsConnected;
            if (message.relayedGameServerSteamId != null && message.hasOwnProperty("relayedGameServerSteamId"))
                if (typeof message.relayedGameServerSteamId === "number")
                    object.relayedGameServerSteamId = options.longs === String ? String(message.relayedGameServerSteamId) : message.relayedGameServerSteamId;
                else
                    object.relayedGameServerSteamId = options.longs === String ? $util.Long.prototype.toString.call(message.relayedGameServerSteamId) : options.longs === Number ? new $util.LongBits(message.relayedGameServerSteamId.low >>> 0, message.relayedGameServerSteamId.high >>> 0).toNumber() : message.relayedGameServerSteamId;
            if (message.parentRelayCount != null && message.hasOwnProperty("parentRelayCount"))
                object.parentRelayCount = message.parentRelayCount;
            if (message.tvSecretCode != null && message.hasOwnProperty("tvSecretCode"))
                if (typeof message.tvSecretCode === "number")
                    object.tvSecretCode = options.longs === String ? String(message.tvSecretCode) : message.tvSecretCode;
                else
                    object.tvSecretCode = options.longs === String ? $util.Long.prototype.toString.call(message.tvSecretCode) : options.longs === Number ? new $util.LongBits(message.tvSecretCode.low >>> 0, message.tvSecretCode.high >>> 0).toNumber() : message.tvSecretCode;
            return object;
        };
    
        /**
         * Converts this CMsgGameServerInfo to JSON.
         * @function toJSON
         * @memberof CMsgGameServerInfo
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGameServerInfo.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGameServerInfo
         * @function getTypeUrl
         * @memberof CMsgGameServerInfo
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGameServerInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGameServerInfo";
        };
    
        /**
         * ServerType enum.
         * @name CMsgGameServerInfo.ServerType
         * @enum {number}
         * @property {number} UNSPECIFIED=0 UNSPECIFIED value
         * @property {number} GAME=1 GAME value
         * @property {number} PROXY=2 PROXY value
         */
        CMsgGameServerInfo.ServerType = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "UNSPECIFIED"] = 0;
            values[valuesById[1] = "GAME"] = 1;
            values[valuesById[2] = "PROXY"] = 2;
            return values;
        })();
    
        return CMsgGameServerInfo;
    })();
    
    $root.CSOEconEquipSlot = (function() {
    
        /**
         * Properties of a CSOEconEquipSlot.
         * @exports ICSOEconEquipSlot
         * @interface ICSOEconEquipSlot
         * @property {number|null} [accountId] CSOEconEquipSlot accountId
         * @property {number|null} [classId] CSOEconEquipSlot classId
         * @property {number|null} [slotId] CSOEconEquipSlot slotId
         * @property {number|Long|null} [itemId] CSOEconEquipSlot itemId
         * @property {number|null} [itemDefinition] CSOEconEquipSlot itemDefinition
         */
    
        /**
         * Constructs a new CSOEconEquipSlot.
         * @exports CSOEconEquipSlot
         * @classdesc Represents a CSOEconEquipSlot.
         * @implements ICSOEconEquipSlot
         * @constructor
         * @param {ICSOEconEquipSlot=} [properties] Properties to set
         */
        function CSOEconEquipSlot(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOEconEquipSlot accountId.
         * @member {number} accountId
         * @memberof CSOEconEquipSlot
         * @instance
         */
        CSOEconEquipSlot.prototype.accountId = 0;
    
        /**
         * CSOEconEquipSlot classId.
         * @member {number} classId
         * @memberof CSOEconEquipSlot
         * @instance
         */
        CSOEconEquipSlot.prototype.classId = 0;
    
        /**
         * CSOEconEquipSlot slotId.
         * @member {number} slotId
         * @memberof CSOEconEquipSlot
         * @instance
         */
        CSOEconEquipSlot.prototype.slotId = 0;
    
        /**
         * CSOEconEquipSlot itemId.
         * @member {number|Long} itemId
         * @memberof CSOEconEquipSlot
         * @instance
         */
        CSOEconEquipSlot.prototype.itemId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CSOEconEquipSlot itemDefinition.
         * @member {number} itemDefinition
         * @memberof CSOEconEquipSlot
         * @instance
         */
        CSOEconEquipSlot.prototype.itemDefinition = 0;
    
        /**
         * Creates a new CSOEconEquipSlot instance using the specified properties.
         * @function create
         * @memberof CSOEconEquipSlot
         * @static
         * @param {ICSOEconEquipSlot=} [properties] Properties to set
         * @returns {CSOEconEquipSlot} CSOEconEquipSlot instance
         */
        CSOEconEquipSlot.create = function create(properties) {
            return new CSOEconEquipSlot(properties);
        };
    
        /**
         * Encodes the specified CSOEconEquipSlot message. Does not implicitly {@link CSOEconEquipSlot.verify|verify} messages.
         * @function encode
         * @memberof CSOEconEquipSlot
         * @static
         * @param {ICSOEconEquipSlot} message CSOEconEquipSlot message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconEquipSlot.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.accountId != null && Object.hasOwnProperty.call(message, "accountId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.accountId);
            if (message.classId != null && Object.hasOwnProperty.call(message, "classId"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.classId);
            if (message.slotId != null && Object.hasOwnProperty.call(message, "slotId"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.slotId);
            if (message.itemId != null && Object.hasOwnProperty.call(message, "itemId"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.itemId);
            if (message.itemDefinition != null && Object.hasOwnProperty.call(message, "itemDefinition"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.itemDefinition);
            return writer;
        };
    
        /**
         * Encodes the specified CSOEconEquipSlot message, length delimited. Does not implicitly {@link CSOEconEquipSlot.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOEconEquipSlot
         * @static
         * @param {ICSOEconEquipSlot} message CSOEconEquipSlot message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconEquipSlot.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOEconEquipSlot message from the specified reader or buffer.
         * @function decode
         * @memberof CSOEconEquipSlot
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOEconEquipSlot} CSOEconEquipSlot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconEquipSlot.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOEconEquipSlot();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.accountId = reader.uint32();
                        break;
                    }
                case 2: {
                        message.classId = reader.uint32();
                        break;
                    }
                case 3: {
                        message.slotId = reader.uint32();
                        break;
                    }
                case 4: {
                        message.itemId = reader.uint64();
                        break;
                    }
                case 5: {
                        message.itemDefinition = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOEconEquipSlot message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOEconEquipSlot
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOEconEquipSlot} CSOEconEquipSlot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconEquipSlot.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOEconEquipSlot message.
         * @function verify
         * @memberof CSOEconEquipSlot
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOEconEquipSlot.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.accountId != null && message.hasOwnProperty("accountId"))
                if (!$util.isInteger(message.accountId))
                    return "accountId: integer expected";
            if (message.classId != null && message.hasOwnProperty("classId"))
                if (!$util.isInteger(message.classId))
                    return "classId: integer expected";
            if (message.slotId != null && message.hasOwnProperty("slotId"))
                if (!$util.isInteger(message.slotId))
                    return "slotId: integer expected";
            if (message.itemId != null && message.hasOwnProperty("itemId"))
                if (!$util.isInteger(message.itemId) && !(message.itemId && $util.isInteger(message.itemId.low) && $util.isInteger(message.itemId.high)))
                    return "itemId: integer|Long expected";
            if (message.itemDefinition != null && message.hasOwnProperty("itemDefinition"))
                if (!$util.isInteger(message.itemDefinition))
                    return "itemDefinition: integer expected";
            return null;
        };
    
        /**
         * Creates a CSOEconEquipSlot message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOEconEquipSlot
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOEconEquipSlot} CSOEconEquipSlot
         */
        CSOEconEquipSlot.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOEconEquipSlot)
                return object;
            var message = new $root.CSOEconEquipSlot();
            if (object.accountId != null)
                message.accountId = object.accountId >>> 0;
            if (object.classId != null)
                message.classId = object.classId >>> 0;
            if (object.slotId != null)
                message.slotId = object.slotId >>> 0;
            if (object.itemId != null)
                if ($util.Long)
                    (message.itemId = $util.Long.fromValue(object.itemId)).unsigned = true;
                else if (typeof object.itemId === "string")
                    message.itemId = parseInt(object.itemId, 10);
                else if (typeof object.itemId === "number")
                    message.itemId = object.itemId;
                else if (typeof object.itemId === "object")
                    message.itemId = new $util.LongBits(object.itemId.low >>> 0, object.itemId.high >>> 0).toNumber(true);
            if (object.itemDefinition != null)
                message.itemDefinition = object.itemDefinition >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CSOEconEquipSlot message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOEconEquipSlot
         * @static
         * @param {CSOEconEquipSlot} message CSOEconEquipSlot
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOEconEquipSlot.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.accountId = 0;
                object.classId = 0;
                object.slotId = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.itemId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.itemId = options.longs === String ? "0" : 0;
                object.itemDefinition = 0;
            }
            if (message.accountId != null && message.hasOwnProperty("accountId"))
                object.accountId = message.accountId;
            if (message.classId != null && message.hasOwnProperty("classId"))
                object.classId = message.classId;
            if (message.slotId != null && message.hasOwnProperty("slotId"))
                object.slotId = message.slotId;
            if (message.itemId != null && message.hasOwnProperty("itemId"))
                if (typeof message.itemId === "number")
                    object.itemId = options.longs === String ? String(message.itemId) : message.itemId;
                else
                    object.itemId = options.longs === String ? $util.Long.prototype.toString.call(message.itemId) : options.longs === Number ? new $util.LongBits(message.itemId.low >>> 0, message.itemId.high >>> 0).toNumber(true) : message.itemId;
            if (message.itemDefinition != null && message.hasOwnProperty("itemDefinition"))
                object.itemDefinition = message.itemDefinition;
            return object;
        };
    
        /**
         * Converts this CSOEconEquipSlot to JSON.
         * @function toJSON
         * @memberof CSOEconEquipSlot
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOEconEquipSlot.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOEconEquipSlot
         * @function getTypeUrl
         * @memberof CSOEconEquipSlot
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOEconEquipSlot.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOEconEquipSlot";
        };
    
        return CSOEconEquipSlot;
    })();
    
    $root.CMsgAdjustEquipSlot = (function() {
    
        /**
         * Properties of a CMsgAdjustEquipSlot.
         * @exports ICMsgAdjustEquipSlot
         * @interface ICMsgAdjustEquipSlot
         * @property {number|null} [classId] CMsgAdjustEquipSlot classId
         * @property {number|null} [slotId] CMsgAdjustEquipSlot slotId
         * @property {number|Long|null} [itemId] CMsgAdjustEquipSlot itemId
         */
    
        /**
         * Constructs a new CMsgAdjustEquipSlot.
         * @exports CMsgAdjustEquipSlot
         * @classdesc Represents a CMsgAdjustEquipSlot.
         * @implements ICMsgAdjustEquipSlot
         * @constructor
         * @param {ICMsgAdjustEquipSlot=} [properties] Properties to set
         */
        function CMsgAdjustEquipSlot(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAdjustEquipSlot classId.
         * @member {number} classId
         * @memberof CMsgAdjustEquipSlot
         * @instance
         */
        CMsgAdjustEquipSlot.prototype.classId = 0;
    
        /**
         * CMsgAdjustEquipSlot slotId.
         * @member {number} slotId
         * @memberof CMsgAdjustEquipSlot
         * @instance
         */
        CMsgAdjustEquipSlot.prototype.slotId = 0;
    
        /**
         * CMsgAdjustEquipSlot itemId.
         * @member {number|Long} itemId
         * @memberof CMsgAdjustEquipSlot
         * @instance
         */
        CMsgAdjustEquipSlot.prototype.itemId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgAdjustEquipSlot instance using the specified properties.
         * @function create
         * @memberof CMsgAdjustEquipSlot
         * @static
         * @param {ICMsgAdjustEquipSlot=} [properties] Properties to set
         * @returns {CMsgAdjustEquipSlot} CMsgAdjustEquipSlot instance
         */
        CMsgAdjustEquipSlot.create = function create(properties) {
            return new CMsgAdjustEquipSlot(properties);
        };
    
        /**
         * Encodes the specified CMsgAdjustEquipSlot message. Does not implicitly {@link CMsgAdjustEquipSlot.verify|verify} messages.
         * @function encode
         * @memberof CMsgAdjustEquipSlot
         * @static
         * @param {ICMsgAdjustEquipSlot} message CMsgAdjustEquipSlot message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAdjustEquipSlot.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.classId != null && Object.hasOwnProperty.call(message, "classId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.classId);
            if (message.slotId != null && Object.hasOwnProperty.call(message, "slotId"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.slotId);
            if (message.itemId != null && Object.hasOwnProperty.call(message, "itemId"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.itemId);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAdjustEquipSlot message, length delimited. Does not implicitly {@link CMsgAdjustEquipSlot.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAdjustEquipSlot
         * @static
         * @param {ICMsgAdjustEquipSlot} message CMsgAdjustEquipSlot message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAdjustEquipSlot.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAdjustEquipSlot message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAdjustEquipSlot
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAdjustEquipSlot} CMsgAdjustEquipSlot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAdjustEquipSlot.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAdjustEquipSlot();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.classId = reader.uint32();
                        break;
                    }
                case 2: {
                        message.slotId = reader.uint32();
                        break;
                    }
                case 3: {
                        message.itemId = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAdjustEquipSlot message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAdjustEquipSlot
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAdjustEquipSlot} CMsgAdjustEquipSlot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAdjustEquipSlot.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAdjustEquipSlot message.
         * @function verify
         * @memberof CMsgAdjustEquipSlot
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAdjustEquipSlot.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.classId != null && message.hasOwnProperty("classId"))
                if (!$util.isInteger(message.classId))
                    return "classId: integer expected";
            if (message.slotId != null && message.hasOwnProperty("slotId"))
                if (!$util.isInteger(message.slotId))
                    return "slotId: integer expected";
            if (message.itemId != null && message.hasOwnProperty("itemId"))
                if (!$util.isInteger(message.itemId) && !(message.itemId && $util.isInteger(message.itemId.low) && $util.isInteger(message.itemId.high)))
                    return "itemId: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgAdjustEquipSlot message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAdjustEquipSlot
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAdjustEquipSlot} CMsgAdjustEquipSlot
         */
        CMsgAdjustEquipSlot.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAdjustEquipSlot)
                return object;
            var message = new $root.CMsgAdjustEquipSlot();
            if (object.classId != null)
                message.classId = object.classId >>> 0;
            if (object.slotId != null)
                message.slotId = object.slotId >>> 0;
            if (object.itemId != null)
                if ($util.Long)
                    (message.itemId = $util.Long.fromValue(object.itemId)).unsigned = true;
                else if (typeof object.itemId === "string")
                    message.itemId = parseInt(object.itemId, 10);
                else if (typeof object.itemId === "number")
                    message.itemId = object.itemId;
                else if (typeof object.itemId === "object")
                    message.itemId = new $util.LongBits(object.itemId.low >>> 0, object.itemId.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAdjustEquipSlot message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAdjustEquipSlot
         * @static
         * @param {CMsgAdjustEquipSlot} message CMsgAdjustEquipSlot
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAdjustEquipSlot.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.classId = 0;
                object.slotId = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.itemId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.itemId = options.longs === String ? "0" : 0;
            }
            if (message.classId != null && message.hasOwnProperty("classId"))
                object.classId = message.classId;
            if (message.slotId != null && message.hasOwnProperty("slotId"))
                object.slotId = message.slotId;
            if (message.itemId != null && message.hasOwnProperty("itemId"))
                if (typeof message.itemId === "number")
                    object.itemId = options.longs === String ? String(message.itemId) : message.itemId;
                else
                    object.itemId = options.longs === String ? $util.Long.prototype.toString.call(message.itemId) : options.longs === Number ? new $util.LongBits(message.itemId.low >>> 0, message.itemId.high >>> 0).toNumber(true) : message.itemId;
            return object;
        };
    
        /**
         * Converts this CMsgAdjustEquipSlot to JSON.
         * @function toJSON
         * @memberof CMsgAdjustEquipSlot
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAdjustEquipSlot.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAdjustEquipSlot
         * @function getTypeUrl
         * @memberof CMsgAdjustEquipSlot
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAdjustEquipSlot.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAdjustEquipSlot";
        };
    
        return CMsgAdjustEquipSlot;
    })();
    
    $root.CMsgAdjustEquipSlots = (function() {
    
        /**
         * Properties of a CMsgAdjustEquipSlots.
         * @exports ICMsgAdjustEquipSlots
         * @interface ICMsgAdjustEquipSlots
         * @property {Array.<ICMsgAdjustEquipSlot>|null} [slots] CMsgAdjustEquipSlots slots
         */
    
        /**
         * Constructs a new CMsgAdjustEquipSlots.
         * @exports CMsgAdjustEquipSlots
         * @classdesc Represents a CMsgAdjustEquipSlots.
         * @implements ICMsgAdjustEquipSlots
         * @constructor
         * @param {ICMsgAdjustEquipSlots=} [properties] Properties to set
         */
        function CMsgAdjustEquipSlots(properties) {
            this.slots = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAdjustEquipSlots slots.
         * @member {Array.<ICMsgAdjustEquipSlot>} slots
         * @memberof CMsgAdjustEquipSlots
         * @instance
         */
        CMsgAdjustEquipSlots.prototype.slots = $util.emptyArray;
    
        /**
         * Creates a new CMsgAdjustEquipSlots instance using the specified properties.
         * @function create
         * @memberof CMsgAdjustEquipSlots
         * @static
         * @param {ICMsgAdjustEquipSlots=} [properties] Properties to set
         * @returns {CMsgAdjustEquipSlots} CMsgAdjustEquipSlots instance
         */
        CMsgAdjustEquipSlots.create = function create(properties) {
            return new CMsgAdjustEquipSlots(properties);
        };
    
        /**
         * Encodes the specified CMsgAdjustEquipSlots message. Does not implicitly {@link CMsgAdjustEquipSlots.verify|verify} messages.
         * @function encode
         * @memberof CMsgAdjustEquipSlots
         * @static
         * @param {ICMsgAdjustEquipSlots} message CMsgAdjustEquipSlots message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAdjustEquipSlots.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.slots != null && message.slots.length)
                for (var i = 0; i < message.slots.length; ++i)
                    $root.CMsgAdjustEquipSlot.encode(message.slots[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAdjustEquipSlots message, length delimited. Does not implicitly {@link CMsgAdjustEquipSlots.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAdjustEquipSlots
         * @static
         * @param {ICMsgAdjustEquipSlots} message CMsgAdjustEquipSlots message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAdjustEquipSlots.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAdjustEquipSlots message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAdjustEquipSlots
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAdjustEquipSlots} CMsgAdjustEquipSlots
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAdjustEquipSlots.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAdjustEquipSlots();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.slots && message.slots.length))
                            message.slots = [];
                        message.slots.push($root.CMsgAdjustEquipSlot.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAdjustEquipSlots message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAdjustEquipSlots
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAdjustEquipSlots} CMsgAdjustEquipSlots
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAdjustEquipSlots.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAdjustEquipSlots message.
         * @function verify
         * @memberof CMsgAdjustEquipSlots
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAdjustEquipSlots.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.slots != null && message.hasOwnProperty("slots")) {
                if (!Array.isArray(message.slots))
                    return "slots: array expected";
                for (var i = 0; i < message.slots.length; ++i) {
                    var error = $root.CMsgAdjustEquipSlot.verify(message.slots[i]);
                    if (error)
                        return "slots." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgAdjustEquipSlots message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAdjustEquipSlots
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAdjustEquipSlots} CMsgAdjustEquipSlots
         */
        CMsgAdjustEquipSlots.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAdjustEquipSlots)
                return object;
            var message = new $root.CMsgAdjustEquipSlots();
            if (object.slots) {
                if (!Array.isArray(object.slots))
                    throw TypeError(".CMsgAdjustEquipSlots.slots: array expected");
                message.slots = [];
                for (var i = 0; i < object.slots.length; ++i) {
                    if (typeof object.slots[i] !== "object")
                        throw TypeError(".CMsgAdjustEquipSlots.slots: object expected");
                    message.slots[i] = $root.CMsgAdjustEquipSlot.fromObject(object.slots[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAdjustEquipSlots message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAdjustEquipSlots
         * @static
         * @param {CMsgAdjustEquipSlots} message CMsgAdjustEquipSlots
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAdjustEquipSlots.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.slots = [];
            if (message.slots && message.slots.length) {
                object.slots = [];
                for (var j = 0; j < message.slots.length; ++j)
                    object.slots[j] = $root.CMsgAdjustEquipSlot.toObject(message.slots[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgAdjustEquipSlots to JSON.
         * @function toJSON
         * @memberof CMsgAdjustEquipSlots
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAdjustEquipSlots.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAdjustEquipSlots
         * @function getTypeUrl
         * @memberof CMsgAdjustEquipSlots
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAdjustEquipSlots.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAdjustEquipSlots";
        };
    
        return CMsgAdjustEquipSlots;
    })();
    
    /**
     * GCProtoBufMsgSrc enum.
     * @exports GCProtoBufMsgSrc
     * @enum {number}
     * @property {number} GCProtoBufMsgSrc_Unspecified=0 GCProtoBufMsgSrc_Unspecified value
     * @property {number} GCProtoBufMsgSrc_FromSystem=1 GCProtoBufMsgSrc_FromSystem value
     * @property {number} GCProtoBufMsgSrc_FromSteamID=2 GCProtoBufMsgSrc_FromSteamID value
     * @property {number} GCProtoBufMsgSrc_FromGC=3 GCProtoBufMsgSrc_FromGC value
     * @property {number} GCProtoBufMsgSrc_ReplySystem=4 GCProtoBufMsgSrc_ReplySystem value
     */
    $root.GCProtoBufMsgSrc = (function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[0] = "GCProtoBufMsgSrc_Unspecified"] = 0;
        values[valuesById[1] = "GCProtoBufMsgSrc_FromSystem"] = 1;
        values[valuesById[2] = "GCProtoBufMsgSrc_FromSteamID"] = 2;
        values[valuesById[3] = "GCProtoBufMsgSrc_FromGC"] = 3;
        values[valuesById[4] = "GCProtoBufMsgSrc_ReplySystem"] = 4;
        return values;
    })();
    
    $root.CMsgProtoBufHeader = (function() {
    
        /**
         * Properties of a CMsgProtoBufHeader.
         * @exports ICMsgProtoBufHeader
         * @interface ICMsgProtoBufHeader
         * @property {number|Long|null} [clientSteamId] CMsgProtoBufHeader clientSteamId
         * @property {number|null} [clientSessionId] CMsgProtoBufHeader clientSessionId
         * @property {number|null} [sourceAppId] CMsgProtoBufHeader sourceAppId
         * @property {number|Long|null} [jobIdSource] CMsgProtoBufHeader jobIdSource
         * @property {number|Long|null} [jobIdTarget] CMsgProtoBufHeader jobIdTarget
         * @property {string|null} [targetJobName] CMsgProtoBufHeader targetJobName
         * @property {number|null} [eresult] CMsgProtoBufHeader eresult
         * @property {string|null} [errorMessage] CMsgProtoBufHeader errorMessage
         * @property {number|null} [ip] CMsgProtoBufHeader ip
         * @property {GCProtoBufMsgSrc|null} [gcMsgSrc] CMsgProtoBufHeader gcMsgSrc
         * @property {number|null} [gcDirIndexSource] CMsgProtoBufHeader gcDirIndexSource
         */
    
        /**
         * Constructs a new CMsgProtoBufHeader.
         * @exports CMsgProtoBufHeader
         * @classdesc Represents a CMsgProtoBufHeader.
         * @implements ICMsgProtoBufHeader
         * @constructor
         * @param {ICMsgProtoBufHeader=} [properties] Properties to set
         */
        function CMsgProtoBufHeader(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgProtoBufHeader clientSteamId.
         * @member {number|Long} clientSteamId
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.clientSteamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgProtoBufHeader clientSessionId.
         * @member {number} clientSessionId
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.clientSessionId = 0;
    
        /**
         * CMsgProtoBufHeader sourceAppId.
         * @member {number} sourceAppId
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.sourceAppId = 0;
    
        /**
         * CMsgProtoBufHeader jobIdSource.
         * @member {number|Long} jobIdSource
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.jobIdSource = $util.Long ? $util.Long.fromBits(-1,2147483647,false) : 9223372036854776000;
    
        /**
         * CMsgProtoBufHeader jobIdTarget.
         * @member {number|Long} jobIdTarget
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.jobIdTarget = $util.Long ? $util.Long.fromBits(-1,2147483647,false) : 9223372036854776000;
    
        /**
         * CMsgProtoBufHeader targetJobName.
         * @member {string} targetJobName
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.targetJobName = "";
    
        /**
         * CMsgProtoBufHeader eresult.
         * @member {number} eresult
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.eresult = 2;
    
        /**
         * CMsgProtoBufHeader errorMessage.
         * @member {string} errorMessage
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.errorMessage = "";
    
        /**
         * CMsgProtoBufHeader ip.
         * @member {number} ip
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.ip = 0;
    
        /**
         * CMsgProtoBufHeader gcMsgSrc.
         * @member {GCProtoBufMsgSrc} gcMsgSrc
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.gcMsgSrc = 0;
    
        /**
         * CMsgProtoBufHeader gcDirIndexSource.
         * @member {number} gcDirIndexSource
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.gcDirIndexSource = 0;
    
        /**
         * Creates a new CMsgProtoBufHeader instance using the specified properties.
         * @function create
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {ICMsgProtoBufHeader=} [properties] Properties to set
         * @returns {CMsgProtoBufHeader} CMsgProtoBufHeader instance
         */
        CMsgProtoBufHeader.create = function create(properties) {
            return new CMsgProtoBufHeader(properties);
        };
    
        /**
         * Encodes the specified CMsgProtoBufHeader message. Does not implicitly {@link CMsgProtoBufHeader.verify|verify} messages.
         * @function encode
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {ICMsgProtoBufHeader} message CMsgProtoBufHeader message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgProtoBufHeader.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.clientSteamId != null && Object.hasOwnProperty.call(message, "clientSteamId"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.clientSteamId);
            if (message.clientSessionId != null && Object.hasOwnProperty.call(message, "clientSessionId"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.clientSessionId);
            if (message.sourceAppId != null && Object.hasOwnProperty.call(message, "sourceAppId"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.sourceAppId);
            if (message.jobIdSource != null && Object.hasOwnProperty.call(message, "jobIdSource"))
                writer.uint32(/* id 10, wireType 1 =*/81).fixed64(message.jobIdSource);
            if (message.jobIdTarget != null && Object.hasOwnProperty.call(message, "jobIdTarget"))
                writer.uint32(/* id 11, wireType 1 =*/89).fixed64(message.jobIdTarget);
            if (message.targetJobName != null && Object.hasOwnProperty.call(message, "targetJobName"))
                writer.uint32(/* id 12, wireType 2 =*/98).string(message.targetJobName);
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 13, wireType 0 =*/104).int32(message.eresult);
            if (message.errorMessage != null && Object.hasOwnProperty.call(message, "errorMessage"))
                writer.uint32(/* id 14, wireType 2 =*/114).string(message.errorMessage);
            if (message.ip != null && Object.hasOwnProperty.call(message, "ip"))
                writer.uint32(/* id 15, wireType 0 =*/120).uint32(message.ip);
            if (message.gcMsgSrc != null && Object.hasOwnProperty.call(message, "gcMsgSrc"))
                writer.uint32(/* id 200, wireType 0 =*/1600).int32(message.gcMsgSrc);
            if (message.gcDirIndexSource != null && Object.hasOwnProperty.call(message, "gcDirIndexSource"))
                writer.uint32(/* id 201, wireType 0 =*/1608).uint32(message.gcDirIndexSource);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgProtoBufHeader message, length delimited. Does not implicitly {@link CMsgProtoBufHeader.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {ICMsgProtoBufHeader} message CMsgProtoBufHeader message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgProtoBufHeader.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgProtoBufHeader message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgProtoBufHeader} CMsgProtoBufHeader
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgProtoBufHeader.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgProtoBufHeader();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.clientSteamId = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.clientSessionId = reader.int32();
                        break;
                    }
                case 3: {
                        message.sourceAppId = reader.uint32();
                        break;
                    }
                case 10: {
                        message.jobIdSource = reader.fixed64();
                        break;
                    }
                case 11: {
                        message.jobIdTarget = reader.fixed64();
                        break;
                    }
                case 12: {
                        message.targetJobName = reader.string();
                        break;
                    }
                case 13: {
                        message.eresult = reader.int32();
                        break;
                    }
                case 14: {
                        message.errorMessage = reader.string();
                        break;
                    }
                case 15: {
                        message.ip = reader.uint32();
                        break;
                    }
                case 200: {
                        message.gcMsgSrc = reader.int32();
                        break;
                    }
                case 201: {
                        message.gcDirIndexSource = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgProtoBufHeader message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgProtoBufHeader} CMsgProtoBufHeader
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgProtoBufHeader.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgProtoBufHeader message.
         * @function verify
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgProtoBufHeader.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.clientSteamId != null && message.hasOwnProperty("clientSteamId"))
                if (!$util.isInteger(message.clientSteamId) && !(message.clientSteamId && $util.isInteger(message.clientSteamId.low) && $util.isInteger(message.clientSteamId.high)))
                    return "clientSteamId: integer|Long expected";
            if (message.clientSessionId != null && message.hasOwnProperty("clientSessionId"))
                if (!$util.isInteger(message.clientSessionId))
                    return "clientSessionId: integer expected";
            if (message.sourceAppId != null && message.hasOwnProperty("sourceAppId"))
                if (!$util.isInteger(message.sourceAppId))
                    return "sourceAppId: integer expected";
            if (message.jobIdSource != null && message.hasOwnProperty("jobIdSource"))
                if (!$util.isInteger(message.jobIdSource) && !(message.jobIdSource && $util.isInteger(message.jobIdSource.low) && $util.isInteger(message.jobIdSource.high)))
                    return "jobIdSource: integer|Long expected";
            if (message.jobIdTarget != null && message.hasOwnProperty("jobIdTarget"))
                if (!$util.isInteger(message.jobIdTarget) && !(message.jobIdTarget && $util.isInteger(message.jobIdTarget.low) && $util.isInteger(message.jobIdTarget.high)))
                    return "jobIdTarget: integer|Long expected";
            if (message.targetJobName != null && message.hasOwnProperty("targetJobName"))
                if (!$util.isString(message.targetJobName))
                    return "targetJobName: string expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.errorMessage != null && message.hasOwnProperty("errorMessage"))
                if (!$util.isString(message.errorMessage))
                    return "errorMessage: string expected";
            if (message.ip != null && message.hasOwnProperty("ip"))
                if (!$util.isInteger(message.ip))
                    return "ip: integer expected";
            if (message.gcMsgSrc != null && message.hasOwnProperty("gcMsgSrc"))
                switch (message.gcMsgSrc) {
                default:
                    return "gcMsgSrc: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                    break;
                }
            if (message.gcDirIndexSource != null && message.hasOwnProperty("gcDirIndexSource"))
                if (!$util.isInteger(message.gcDirIndexSource))
                    return "gcDirIndexSource: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgProtoBufHeader message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgProtoBufHeader} CMsgProtoBufHeader
         */
        CMsgProtoBufHeader.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgProtoBufHeader)
                return object;
            var message = new $root.CMsgProtoBufHeader();
            if (object.clientSteamId != null)
                if ($util.Long)
                    (message.clientSteamId = $util.Long.fromValue(object.clientSteamId)).unsigned = false;
                else if (typeof object.clientSteamId === "string")
                    message.clientSteamId = parseInt(object.clientSteamId, 10);
                else if (typeof object.clientSteamId === "number")
                    message.clientSteamId = object.clientSteamId;
                else if (typeof object.clientSteamId === "object")
                    message.clientSteamId = new $util.LongBits(object.clientSteamId.low >>> 0, object.clientSteamId.high >>> 0).toNumber();
            if (object.clientSessionId != null)
                message.clientSessionId = object.clientSessionId | 0;
            if (object.sourceAppId != null)
                message.sourceAppId = object.sourceAppId >>> 0;
            if (object.jobIdSource != null)
                if ($util.Long)
                    (message.jobIdSource = $util.Long.fromValue(object.jobIdSource)).unsigned = false;
                else if (typeof object.jobIdSource === "string")
                    message.jobIdSource = parseInt(object.jobIdSource, 10);
                else if (typeof object.jobIdSource === "number")
                    message.jobIdSource = object.jobIdSource;
                else if (typeof object.jobIdSource === "object")
                    message.jobIdSource = new $util.LongBits(object.jobIdSource.low >>> 0, object.jobIdSource.high >>> 0).toNumber();
            if (object.jobIdTarget != null)
                if ($util.Long)
                    (message.jobIdTarget = $util.Long.fromValue(object.jobIdTarget)).unsigned = false;
                else if (typeof object.jobIdTarget === "string")
                    message.jobIdTarget = parseInt(object.jobIdTarget, 10);
                else if (typeof object.jobIdTarget === "number")
                    message.jobIdTarget = object.jobIdTarget;
                else if (typeof object.jobIdTarget === "object")
                    message.jobIdTarget = new $util.LongBits(object.jobIdTarget.low >>> 0, object.jobIdTarget.high >>> 0).toNumber();
            if (object.targetJobName != null)
                message.targetJobName = String(object.targetJobName);
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.errorMessage != null)
                message.errorMessage = String(object.errorMessage);
            if (object.ip != null)
                message.ip = object.ip >>> 0;
            switch (object.gcMsgSrc) {
            default:
                if (typeof object.gcMsgSrc === "number") {
                    message.gcMsgSrc = object.gcMsgSrc;
                    break;
                }
                break;
            case "GCProtoBufMsgSrc_Unspecified":
            case 0:
                message.gcMsgSrc = 0;
                break;
            case "GCProtoBufMsgSrc_FromSystem":
            case 1:
                message.gcMsgSrc = 1;
                break;
            case "GCProtoBufMsgSrc_FromSteamID":
            case 2:
                message.gcMsgSrc = 2;
                break;
            case "GCProtoBufMsgSrc_FromGC":
            case 3:
                message.gcMsgSrc = 3;
                break;
            case "GCProtoBufMsgSrc_ReplySystem":
            case 4:
                message.gcMsgSrc = 4;
                break;
            }
            if (object.gcDirIndexSource != null)
                message.gcDirIndexSource = object.gcDirIndexSource >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgProtoBufHeader message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {CMsgProtoBufHeader} message CMsgProtoBufHeader
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgProtoBufHeader.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.clientSteamId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.clientSteamId = options.longs === String ? "0" : 0;
                object.clientSessionId = 0;
                object.sourceAppId = 0;
                if ($util.Long) {
                    var long = new $util.Long(-1, 2147483647, false);
                    object.jobIdSource = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.jobIdSource = options.longs === String ? "9223372036854775807" : 9223372036854776000;
                if ($util.Long) {
                    var long = new $util.Long(-1, 2147483647, false);
                    object.jobIdTarget = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.jobIdTarget = options.longs === String ? "9223372036854775807" : 9223372036854776000;
                object.targetJobName = "";
                object.eresult = 2;
                object.errorMessage = "";
                object.ip = 0;
                object.gcMsgSrc = options.enums === String ? "GCProtoBufMsgSrc_Unspecified" : 0;
                object.gcDirIndexSource = 0;
            }
            if (message.clientSteamId != null && message.hasOwnProperty("clientSteamId"))
                if (typeof message.clientSteamId === "number")
                    object.clientSteamId = options.longs === String ? String(message.clientSteamId) : message.clientSteamId;
                else
                    object.clientSteamId = options.longs === String ? $util.Long.prototype.toString.call(message.clientSteamId) : options.longs === Number ? new $util.LongBits(message.clientSteamId.low >>> 0, message.clientSteamId.high >>> 0).toNumber() : message.clientSteamId;
            if (message.clientSessionId != null && message.hasOwnProperty("clientSessionId"))
                object.clientSessionId = message.clientSessionId;
            if (message.sourceAppId != null && message.hasOwnProperty("sourceAppId"))
                object.sourceAppId = message.sourceAppId;
            if (message.jobIdSource != null && message.hasOwnProperty("jobIdSource"))
                if (typeof message.jobIdSource === "number")
                    object.jobIdSource = options.longs === String ? String(message.jobIdSource) : message.jobIdSource;
                else
                    object.jobIdSource = options.longs === String ? $util.Long.prototype.toString.call(message.jobIdSource) : options.longs === Number ? new $util.LongBits(message.jobIdSource.low >>> 0, message.jobIdSource.high >>> 0).toNumber() : message.jobIdSource;
            if (message.jobIdTarget != null && message.hasOwnProperty("jobIdTarget"))
                if (typeof message.jobIdTarget === "number")
                    object.jobIdTarget = options.longs === String ? String(message.jobIdTarget) : message.jobIdTarget;
                else
                    object.jobIdTarget = options.longs === String ? $util.Long.prototype.toString.call(message.jobIdTarget) : options.longs === Number ? new $util.LongBits(message.jobIdTarget.low >>> 0, message.jobIdTarget.high >>> 0).toNumber() : message.jobIdTarget;
            if (message.targetJobName != null && message.hasOwnProperty("targetJobName"))
                object.targetJobName = message.targetJobName;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.errorMessage != null && message.hasOwnProperty("errorMessage"))
                object.errorMessage = message.errorMessage;
            if (message.ip != null && message.hasOwnProperty("ip"))
                object.ip = message.ip;
            if (message.gcMsgSrc != null && message.hasOwnProperty("gcMsgSrc"))
                object.gcMsgSrc = options.enums === String ? $root.GCProtoBufMsgSrc[message.gcMsgSrc] === undefined ? message.gcMsgSrc : $root.GCProtoBufMsgSrc[message.gcMsgSrc] : message.gcMsgSrc;
            if (message.gcDirIndexSource != null && message.hasOwnProperty("gcDirIndexSource"))
                object.gcDirIndexSource = message.gcDirIndexSource;
            return object;
        };
    
        /**
         * Converts this CMsgProtoBufHeader to JSON.
         * @function toJSON
         * @memberof CMsgProtoBufHeader
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgProtoBufHeader.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgProtoBufHeader
         * @function getTypeUrl
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgProtoBufHeader.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgProtoBufHeader";
        };
    
        return CMsgProtoBufHeader;
    })();
    
    $root.CMsgWebAPIKey = (function() {
    
        /**
         * Properties of a CMsgWebAPIKey.
         * @exports ICMsgWebAPIKey
         * @interface ICMsgWebAPIKey
         * @property {number|null} [status] CMsgWebAPIKey status
         * @property {number|null} [accountId] CMsgWebAPIKey accountId
         * @property {number|null} [publisherGroupId] CMsgWebAPIKey publisherGroupId
         * @property {number|null} [keyId] CMsgWebAPIKey keyId
         * @property {string|null} [domain] CMsgWebAPIKey domain
         */
    
        /**
         * Constructs a new CMsgWebAPIKey.
         * @exports CMsgWebAPIKey
         * @classdesc Represents a CMsgWebAPIKey.
         * @implements ICMsgWebAPIKey
         * @constructor
         * @param {ICMsgWebAPIKey=} [properties] Properties to set
         */
        function CMsgWebAPIKey(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgWebAPIKey status.
         * @member {number} status
         * @memberof CMsgWebAPIKey
         * @instance
         */
        CMsgWebAPIKey.prototype.status = 255;
    
        /**
         * CMsgWebAPIKey accountId.
         * @member {number} accountId
         * @memberof CMsgWebAPIKey
         * @instance
         */
        CMsgWebAPIKey.prototype.accountId = 0;
    
        /**
         * CMsgWebAPIKey publisherGroupId.
         * @member {number} publisherGroupId
         * @memberof CMsgWebAPIKey
         * @instance
         */
        CMsgWebAPIKey.prototype.publisherGroupId = 0;
    
        /**
         * CMsgWebAPIKey keyId.
         * @member {number} keyId
         * @memberof CMsgWebAPIKey
         * @instance
         */
        CMsgWebAPIKey.prototype.keyId = 0;
    
        /**
         * CMsgWebAPIKey domain.
         * @member {string} domain
         * @memberof CMsgWebAPIKey
         * @instance
         */
        CMsgWebAPIKey.prototype.domain = "";
    
        /**
         * Creates a new CMsgWebAPIKey instance using the specified properties.
         * @function create
         * @memberof CMsgWebAPIKey
         * @static
         * @param {ICMsgWebAPIKey=} [properties] Properties to set
         * @returns {CMsgWebAPIKey} CMsgWebAPIKey instance
         */
        CMsgWebAPIKey.create = function create(properties) {
            return new CMsgWebAPIKey(properties);
        };
    
        /**
         * Encodes the specified CMsgWebAPIKey message. Does not implicitly {@link CMsgWebAPIKey.verify|verify} messages.
         * @function encode
         * @memberof CMsgWebAPIKey
         * @static
         * @param {ICMsgWebAPIKey} message CMsgWebAPIKey message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgWebAPIKey.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.status);
            if (message.accountId != null && Object.hasOwnProperty.call(message, "accountId"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.accountId);
            if (message.publisherGroupId != null && Object.hasOwnProperty.call(message, "publisherGroupId"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.publisherGroupId);
            if (message.keyId != null && Object.hasOwnProperty.call(message, "keyId"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.keyId);
            if (message.domain != null && Object.hasOwnProperty.call(message, "domain"))
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.domain);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgWebAPIKey message, length delimited. Does not implicitly {@link CMsgWebAPIKey.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgWebAPIKey
         * @static
         * @param {ICMsgWebAPIKey} message CMsgWebAPIKey message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgWebAPIKey.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgWebAPIKey message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgWebAPIKey
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgWebAPIKey} CMsgWebAPIKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgWebAPIKey.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgWebAPIKey();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.status = reader.uint32();
                        break;
                    }
                case 2: {
                        message.accountId = reader.uint32();
                        break;
                    }
                case 3: {
                        message.publisherGroupId = reader.uint32();
                        break;
                    }
                case 4: {
                        message.keyId = reader.uint32();
                        break;
                    }
                case 5: {
                        message.domain = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgWebAPIKey message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgWebAPIKey
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgWebAPIKey} CMsgWebAPIKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgWebAPIKey.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgWebAPIKey message.
         * @function verify
         * @memberof CMsgWebAPIKey
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgWebAPIKey.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.status != null && message.hasOwnProperty("status"))
                if (!$util.isInteger(message.status))
                    return "status: integer expected";
            if (message.accountId != null && message.hasOwnProperty("accountId"))
                if (!$util.isInteger(message.accountId))
                    return "accountId: integer expected";
            if (message.publisherGroupId != null && message.hasOwnProperty("publisherGroupId"))
                if (!$util.isInteger(message.publisherGroupId))
                    return "publisherGroupId: integer expected";
            if (message.keyId != null && message.hasOwnProperty("keyId"))
                if (!$util.isInteger(message.keyId))
                    return "keyId: integer expected";
            if (message.domain != null && message.hasOwnProperty("domain"))
                if (!$util.isString(message.domain))
                    return "domain: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgWebAPIKey message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgWebAPIKey
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgWebAPIKey} CMsgWebAPIKey
         */
        CMsgWebAPIKey.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgWebAPIKey)
                return object;
            var message = new $root.CMsgWebAPIKey();
            if (object.status != null)
                message.status = object.status >>> 0;
            if (object.accountId != null)
                message.accountId = object.accountId >>> 0;
            if (object.publisherGroupId != null)
                message.publisherGroupId = object.publisherGroupId >>> 0;
            if (object.keyId != null)
                message.keyId = object.keyId >>> 0;
            if (object.domain != null)
                message.domain = String(object.domain);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgWebAPIKey message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgWebAPIKey
         * @static
         * @param {CMsgWebAPIKey} message CMsgWebAPIKey
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgWebAPIKey.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.status = 255;
                object.accountId = 0;
                object.publisherGroupId = 0;
                object.keyId = 0;
                object.domain = "";
            }
            if (message.status != null && message.hasOwnProperty("status"))
                object.status = message.status;
            if (message.accountId != null && message.hasOwnProperty("accountId"))
                object.accountId = message.accountId;
            if (message.publisherGroupId != null && message.hasOwnProperty("publisherGroupId"))
                object.publisherGroupId = message.publisherGroupId;
            if (message.keyId != null && message.hasOwnProperty("keyId"))
                object.keyId = message.keyId;
            if (message.domain != null && message.hasOwnProperty("domain"))
                object.domain = message.domain;
            return object;
        };
    
        /**
         * Converts this CMsgWebAPIKey to JSON.
         * @function toJSON
         * @memberof CMsgWebAPIKey
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgWebAPIKey.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgWebAPIKey
         * @function getTypeUrl
         * @memberof CMsgWebAPIKey
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgWebAPIKey.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgWebAPIKey";
        };
    
        return CMsgWebAPIKey;
    })();
    
    $root.CMsgHttpRequest = (function() {
    
        /**
         * Properties of a CMsgHttpRequest.
         * @exports ICMsgHttpRequest
         * @interface ICMsgHttpRequest
         * @property {number|null} [requestMethod] CMsgHttpRequest requestMethod
         * @property {string|null} [hostname] CMsgHttpRequest hostname
         * @property {string|null} [url] CMsgHttpRequest url
         * @property {Array.<CMsgHttpRequest.IRequestHeader>|null} [headers] CMsgHttpRequest headers
         * @property {Array.<CMsgHttpRequest.IQueryParam>|null} [getParams] CMsgHttpRequest getParams
         * @property {Array.<CMsgHttpRequest.IQueryParam>|null} [postParams] CMsgHttpRequest postParams
         * @property {Uint8Array|null} [body] CMsgHttpRequest body
         * @property {number|null} [absoluteTimeout] CMsgHttpRequest absoluteTimeout
         */
    
        /**
         * Constructs a new CMsgHttpRequest.
         * @exports CMsgHttpRequest
         * @classdesc Represents a CMsgHttpRequest.
         * @implements ICMsgHttpRequest
         * @constructor
         * @param {ICMsgHttpRequest=} [properties] Properties to set
         */
        function CMsgHttpRequest(properties) {
            this.headers = [];
            this.getParams = [];
            this.postParams = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgHttpRequest requestMethod.
         * @member {number} requestMethod
         * @memberof CMsgHttpRequest
         * @instance
         */
        CMsgHttpRequest.prototype.requestMethod = 0;
    
        /**
         * CMsgHttpRequest hostname.
         * @member {string} hostname
         * @memberof CMsgHttpRequest
         * @instance
         */
        CMsgHttpRequest.prototype.hostname = "";
    
        /**
         * CMsgHttpRequest url.
         * @member {string} url
         * @memberof CMsgHttpRequest
         * @instance
         */
        CMsgHttpRequest.prototype.url = "";
    
        /**
         * CMsgHttpRequest headers.
         * @member {Array.<CMsgHttpRequest.IRequestHeader>} headers
         * @memberof CMsgHttpRequest
         * @instance
         */
        CMsgHttpRequest.prototype.headers = $util.emptyArray;
    
        /**
         * CMsgHttpRequest getParams.
         * @member {Array.<CMsgHttpRequest.IQueryParam>} getParams
         * @memberof CMsgHttpRequest
         * @instance
         */
        CMsgHttpRequest.prototype.getParams = $util.emptyArray;
    
        /**
         * CMsgHttpRequest postParams.
         * @member {Array.<CMsgHttpRequest.IQueryParam>} postParams
         * @memberof CMsgHttpRequest
         * @instance
         */
        CMsgHttpRequest.prototype.postParams = $util.emptyArray;
    
        /**
         * CMsgHttpRequest body.
         * @member {Uint8Array} body
         * @memberof CMsgHttpRequest
         * @instance
         */
        CMsgHttpRequest.prototype.body = $util.newBuffer([]);
    
        /**
         * CMsgHttpRequest absoluteTimeout.
         * @member {number} absoluteTimeout
         * @memberof CMsgHttpRequest
         * @instance
         */
        CMsgHttpRequest.prototype.absoluteTimeout = 0;
    
        /**
         * Creates a new CMsgHttpRequest instance using the specified properties.
         * @function create
         * @memberof CMsgHttpRequest
         * @static
         * @param {ICMsgHttpRequest=} [properties] Properties to set
         * @returns {CMsgHttpRequest} CMsgHttpRequest instance
         */
        CMsgHttpRequest.create = function create(properties) {
            return new CMsgHttpRequest(properties);
        };
    
        /**
         * Encodes the specified CMsgHttpRequest message. Does not implicitly {@link CMsgHttpRequest.verify|verify} messages.
         * @function encode
         * @memberof CMsgHttpRequest
         * @static
         * @param {ICMsgHttpRequest} message CMsgHttpRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgHttpRequest.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.requestMethod != null && Object.hasOwnProperty.call(message, "requestMethod"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.requestMethod);
            if (message.hostname != null && Object.hasOwnProperty.call(message, "hostname"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.hostname);
            if (message.url != null && Object.hasOwnProperty.call(message, "url"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.url);
            if (message.headers != null && message.headers.length)
                for (var i = 0; i < message.headers.length; ++i)
                    $root.CMsgHttpRequest.RequestHeader.encode(message.headers[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            if (message.getParams != null && message.getParams.length)
                for (var i = 0; i < message.getParams.length; ++i)
                    $root.CMsgHttpRequest.QueryParam.encode(message.getParams[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
            if (message.postParams != null && message.postParams.length)
                for (var i = 0; i < message.postParams.length; ++i)
                    $root.CMsgHttpRequest.QueryParam.encode(message.postParams[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.body);
            if (message.absoluteTimeout != null && Object.hasOwnProperty.call(message, "absoluteTimeout"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.absoluteTimeout);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgHttpRequest message, length delimited. Does not implicitly {@link CMsgHttpRequest.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgHttpRequest
         * @static
         * @param {ICMsgHttpRequest} message CMsgHttpRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgHttpRequest.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgHttpRequest message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgHttpRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgHttpRequest} CMsgHttpRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgHttpRequest.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgHttpRequest();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.requestMethod = reader.uint32();
                        break;
                    }
                case 2: {
                        message.hostname = reader.string();
                        break;
                    }
                case 3: {
                        message.url = reader.string();
                        break;
                    }
                case 4: {
                        if (!(message.headers && message.headers.length))
                            message.headers = [];
                        message.headers.push($root.CMsgHttpRequest.RequestHeader.decode(reader, reader.uint32()));
                        break;
                    }
                case 5: {
                        if (!(message.getParams && message.getParams.length))
                            message.getParams = [];
                        message.getParams.push($root.CMsgHttpRequest.QueryParam.decode(reader, reader.uint32()));
                        break;
                    }
                case 6: {
                        if (!(message.postParams && message.postParams.length))
                            message.postParams = [];
                        message.postParams.push($root.CMsgHttpRequest.QueryParam.decode(reader, reader.uint32()));
                        break;
                    }
                case 7: {
                        message.body = reader.bytes();
                        break;
                    }
                case 8: {
                        message.absoluteTimeout = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgHttpRequest message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgHttpRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgHttpRequest} CMsgHttpRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgHttpRequest.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgHttpRequest message.
         * @function verify
         * @memberof CMsgHttpRequest
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgHttpRequest.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.requestMethod != null && message.hasOwnProperty("requestMethod"))
                if (!$util.isInteger(message.requestMethod))
                    return "requestMethod: integer expected";
            if (message.hostname != null && message.hasOwnProperty("hostname"))
                if (!$util.isString(message.hostname))
                    return "hostname: string expected";
            if (message.url != null && message.hasOwnProperty("url"))
                if (!$util.isString(message.url))
                    return "url: string expected";
            if (message.headers != null && message.hasOwnProperty("headers")) {
                if (!Array.isArray(message.headers))
                    return "headers: array expected";
                for (var i = 0; i < message.headers.length; ++i) {
                    var error = $root.CMsgHttpRequest.RequestHeader.verify(message.headers[i]);
                    if (error)
                        return "headers." + error;
                }
            }
            if (message.getParams != null && message.hasOwnProperty("getParams")) {
                if (!Array.isArray(message.getParams))
                    return "getParams: array expected";
                for (var i = 0; i < message.getParams.length; ++i) {
                    var error = $root.CMsgHttpRequest.QueryParam.verify(message.getParams[i]);
                    if (error)
                        return "getParams." + error;
                }
            }
            if (message.postParams != null && message.hasOwnProperty("postParams")) {
                if (!Array.isArray(message.postParams))
                    return "postParams: array expected";
                for (var i = 0; i < message.postParams.length; ++i) {
                    var error = $root.CMsgHttpRequest.QueryParam.verify(message.postParams[i]);
                    if (error)
                        return "postParams." + error;
                }
            }
            if (message.body != null && message.hasOwnProperty("body"))
                if (!(message.body && typeof message.body.length === "number" || $util.isString(message.body)))
                    return "body: buffer expected";
            if (message.absoluteTimeout != null && message.hasOwnProperty("absoluteTimeout"))
                if (!$util.isInteger(message.absoluteTimeout))
                    return "absoluteTimeout: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgHttpRequest message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgHttpRequest
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgHttpRequest} CMsgHttpRequest
         */
        CMsgHttpRequest.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgHttpRequest)
                return object;
            var message = new $root.CMsgHttpRequest();
            if (object.requestMethod != null)
                message.requestMethod = object.requestMethod >>> 0;
            if (object.hostname != null)
                message.hostname = String(object.hostname);
            if (object.url != null)
                message.url = String(object.url);
            if (object.headers) {
                if (!Array.isArray(object.headers))
                    throw TypeError(".CMsgHttpRequest.headers: array expected");
                message.headers = [];
                for (var i = 0; i < object.headers.length; ++i) {
                    if (typeof object.headers[i] !== "object")
                        throw TypeError(".CMsgHttpRequest.headers: object expected");
                    message.headers[i] = $root.CMsgHttpRequest.RequestHeader.fromObject(object.headers[i]);
                }
            }
            if (object.getParams) {
                if (!Array.isArray(object.getParams))
                    throw TypeError(".CMsgHttpRequest.getParams: array expected");
                message.getParams = [];
                for (var i = 0; i < object.getParams.length; ++i) {
                    if (typeof object.getParams[i] !== "object")
                        throw TypeError(".CMsgHttpRequest.getParams: object expected");
                    message.getParams[i] = $root.CMsgHttpRequest.QueryParam.fromObject(object.getParams[i]);
                }
            }
            if (object.postParams) {
                if (!Array.isArray(object.postParams))
                    throw TypeError(".CMsgHttpRequest.postParams: array expected");
                message.postParams = [];
                for (var i = 0; i < object.postParams.length; ++i) {
                    if (typeof object.postParams[i] !== "object")
                        throw TypeError(".CMsgHttpRequest.postParams: object expected");
                    message.postParams[i] = $root.CMsgHttpRequest.QueryParam.fromObject(object.postParams[i]);
                }
            }
            if (object.body != null)
                if (typeof object.body === "string")
                    $util.base64.decode(object.body, message.body = $util.newBuffer($util.base64.length(object.body)), 0);
                else if (object.body.length >= 0)
                    message.body = object.body;
            if (object.absoluteTimeout != null)
                message.absoluteTimeout = object.absoluteTimeout >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgHttpRequest message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgHttpRequest
         * @static
         * @param {CMsgHttpRequest} message CMsgHttpRequest
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgHttpRequest.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.headers = [];
                object.getParams = [];
                object.postParams = [];
            }
            if (options.defaults) {
                object.requestMethod = 0;
                object.hostname = "";
                object.url = "";
                if (options.bytes === String)
                    object.body = "";
                else {
                    object.body = [];
                    if (options.bytes !== Array)
                        object.body = $util.newBuffer(object.body);
                }
                object.absoluteTimeout = 0;
            }
            if (message.requestMethod != null && message.hasOwnProperty("requestMethod"))
                object.requestMethod = message.requestMethod;
            if (message.hostname != null && message.hasOwnProperty("hostname"))
                object.hostname = message.hostname;
            if (message.url != null && message.hasOwnProperty("url"))
                object.url = message.url;
            if (message.headers && message.headers.length) {
                object.headers = [];
                for (var j = 0; j < message.headers.length; ++j)
                    object.headers[j] = $root.CMsgHttpRequest.RequestHeader.toObject(message.headers[j], options);
            }
            if (message.getParams && message.getParams.length) {
                object.getParams = [];
                for (var j = 0; j < message.getParams.length; ++j)
                    object.getParams[j] = $root.CMsgHttpRequest.QueryParam.toObject(message.getParams[j], options);
            }
            if (message.postParams && message.postParams.length) {
                object.postParams = [];
                for (var j = 0; j < message.postParams.length; ++j)
                    object.postParams[j] = $root.CMsgHttpRequest.QueryParam.toObject(message.postParams[j], options);
            }
            if (message.body != null && message.hasOwnProperty("body"))
                object.body = options.bytes === String ? $util.base64.encode(message.body, 0, message.body.length) : options.bytes === Array ? Array.prototype.slice.call(message.body) : message.body;
            if (message.absoluteTimeout != null && message.hasOwnProperty("absoluteTimeout"))
                object.absoluteTimeout = message.absoluteTimeout;
            return object;
        };
    
        /**
         * Converts this CMsgHttpRequest to JSON.
         * @function toJSON
         * @memberof CMsgHttpRequest
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgHttpRequest.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgHttpRequest
         * @function getTypeUrl
         * @memberof CMsgHttpRequest
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgHttpRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgHttpRequest";
        };
    
        CMsgHttpRequest.RequestHeader = (function() {
    
            /**
             * Properties of a RequestHeader.
             * @memberof CMsgHttpRequest
             * @interface IRequestHeader
             * @property {string|null} [name] RequestHeader name
             * @property {string|null} [value] RequestHeader value
             */
    
            /**
             * Constructs a new RequestHeader.
             * @memberof CMsgHttpRequest
             * @classdesc Represents a RequestHeader.
             * @implements IRequestHeader
             * @constructor
             * @param {CMsgHttpRequest.IRequestHeader=} [properties] Properties to set
             */
            function RequestHeader(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * RequestHeader name.
             * @member {string} name
             * @memberof CMsgHttpRequest.RequestHeader
             * @instance
             */
            RequestHeader.prototype.name = "";
    
            /**
             * RequestHeader value.
             * @member {string} value
             * @memberof CMsgHttpRequest.RequestHeader
             * @instance
             */
            RequestHeader.prototype.value = "";
    
            /**
             * Creates a new RequestHeader instance using the specified properties.
             * @function create
             * @memberof CMsgHttpRequest.RequestHeader
             * @static
             * @param {CMsgHttpRequest.IRequestHeader=} [properties] Properties to set
             * @returns {CMsgHttpRequest.RequestHeader} RequestHeader instance
             */
            RequestHeader.create = function create(properties) {
                return new RequestHeader(properties);
            };
    
            /**
             * Encodes the specified RequestHeader message. Does not implicitly {@link CMsgHttpRequest.RequestHeader.verify|verify} messages.
             * @function encode
             * @memberof CMsgHttpRequest.RequestHeader
             * @static
             * @param {CMsgHttpRequest.IRequestHeader} message RequestHeader message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RequestHeader.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
                return writer;
            };
    
            /**
             * Encodes the specified RequestHeader message, length delimited. Does not implicitly {@link CMsgHttpRequest.RequestHeader.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgHttpRequest.RequestHeader
             * @static
             * @param {CMsgHttpRequest.IRequestHeader} message RequestHeader message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RequestHeader.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a RequestHeader message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgHttpRequest.RequestHeader
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgHttpRequest.RequestHeader} RequestHeader
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RequestHeader.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgHttpRequest.RequestHeader();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.name = reader.string();
                            break;
                        }
                    case 2: {
                            message.value = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a RequestHeader message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgHttpRequest.RequestHeader
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgHttpRequest.RequestHeader} RequestHeader
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RequestHeader.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a RequestHeader message.
             * @function verify
             * @memberof CMsgHttpRequest.RequestHeader
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            RequestHeader.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.name != null && message.hasOwnProperty("name"))
                    if (!$util.isString(message.name))
                        return "name: string expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (!$util.isString(message.value))
                        return "value: string expected";
                return null;
            };
    
            /**
             * Creates a RequestHeader message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgHttpRequest.RequestHeader
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgHttpRequest.RequestHeader} RequestHeader
             */
            RequestHeader.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgHttpRequest.RequestHeader)
                    return object;
                var message = new $root.CMsgHttpRequest.RequestHeader();
                if (object.name != null)
                    message.name = String(object.name);
                if (object.value != null)
                    message.value = String(object.value);
                return message;
            };
    
            /**
             * Creates a plain object from a RequestHeader message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgHttpRequest.RequestHeader
             * @static
             * @param {CMsgHttpRequest.RequestHeader} message RequestHeader
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            RequestHeader.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.name = "";
                    object.value = "";
                }
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = message.value;
                return object;
            };
    
            /**
             * Converts this RequestHeader to JSON.
             * @function toJSON
             * @memberof CMsgHttpRequest.RequestHeader
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            RequestHeader.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for RequestHeader
             * @function getTypeUrl
             * @memberof CMsgHttpRequest.RequestHeader
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            RequestHeader.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgHttpRequest.RequestHeader";
            };
    
            return RequestHeader;
        })();
    
        CMsgHttpRequest.QueryParam = (function() {
    
            /**
             * Properties of a QueryParam.
             * @memberof CMsgHttpRequest
             * @interface IQueryParam
             * @property {string|null} [name] QueryParam name
             * @property {Uint8Array|null} [value] QueryParam value
             */
    
            /**
             * Constructs a new QueryParam.
             * @memberof CMsgHttpRequest
             * @classdesc Represents a QueryParam.
             * @implements IQueryParam
             * @constructor
             * @param {CMsgHttpRequest.IQueryParam=} [properties] Properties to set
             */
            function QueryParam(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * QueryParam name.
             * @member {string} name
             * @memberof CMsgHttpRequest.QueryParam
             * @instance
             */
            QueryParam.prototype.name = "";
    
            /**
             * QueryParam value.
             * @member {Uint8Array} value
             * @memberof CMsgHttpRequest.QueryParam
             * @instance
             */
            QueryParam.prototype.value = $util.newBuffer([]);
    
            /**
             * Creates a new QueryParam instance using the specified properties.
             * @function create
             * @memberof CMsgHttpRequest.QueryParam
             * @static
             * @param {CMsgHttpRequest.IQueryParam=} [properties] Properties to set
             * @returns {CMsgHttpRequest.QueryParam} QueryParam instance
             */
            QueryParam.create = function create(properties) {
                return new QueryParam(properties);
            };
    
            /**
             * Encodes the specified QueryParam message. Does not implicitly {@link CMsgHttpRequest.QueryParam.verify|verify} messages.
             * @function encode
             * @memberof CMsgHttpRequest.QueryParam
             * @static
             * @param {CMsgHttpRequest.IQueryParam} message QueryParam message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryParam.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                return writer;
            };
    
            /**
             * Encodes the specified QueryParam message, length delimited. Does not implicitly {@link CMsgHttpRequest.QueryParam.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgHttpRequest.QueryParam
             * @static
             * @param {CMsgHttpRequest.IQueryParam} message QueryParam message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryParam.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a QueryParam message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgHttpRequest.QueryParam
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgHttpRequest.QueryParam} QueryParam
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryParam.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgHttpRequest.QueryParam();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.name = reader.string();
                            break;
                        }
                    case 2: {
                            message.value = reader.bytes();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a QueryParam message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgHttpRequest.QueryParam
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgHttpRequest.QueryParam} QueryParam
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryParam.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a QueryParam message.
             * @function verify
             * @memberof CMsgHttpRequest.QueryParam
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryParam.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.name != null && message.hasOwnProperty("name"))
                    if (!$util.isString(message.name))
                        return "name: string expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                        return "value: buffer expected";
                return null;
            };
    
            /**
             * Creates a QueryParam message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgHttpRequest.QueryParam
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgHttpRequest.QueryParam} QueryParam
             */
            QueryParam.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgHttpRequest.QueryParam)
                    return object;
                var message = new $root.CMsgHttpRequest.QueryParam();
                if (object.name != null)
                    message.name = String(object.name);
                if (object.value != null)
                    if (typeof object.value === "string")
                        $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                    else if (object.value.length >= 0)
                        message.value = object.value;
                return message;
            };
    
            /**
             * Creates a plain object from a QueryParam message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgHttpRequest.QueryParam
             * @static
             * @param {CMsgHttpRequest.QueryParam} message QueryParam
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryParam.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.name = "";
                    if (options.bytes === String)
                        object.value = "";
                    else {
                        object.value = [];
                        if (options.bytes !== Array)
                            object.value = $util.newBuffer(object.value);
                    }
                }
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                return object;
            };
    
            /**
             * Converts this QueryParam to JSON.
             * @function toJSON
             * @memberof CMsgHttpRequest.QueryParam
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryParam.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for QueryParam
             * @function getTypeUrl
             * @memberof CMsgHttpRequest.QueryParam
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            QueryParam.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgHttpRequest.QueryParam";
            };
    
            return QueryParam;
        })();
    
        return CMsgHttpRequest;
    })();
    
    $root.CMsgWebAPIRequest = (function() {
    
        /**
         * Properties of a CMsgWebAPIRequest.
         * @exports ICMsgWebAPIRequest
         * @interface ICMsgWebAPIRequest
         * @property {string|null} [interfaceName] CMsgWebAPIRequest interfaceName
         * @property {string|null} [methodName] CMsgWebAPIRequest methodName
         * @property {number|null} [version] CMsgWebAPIRequest version
         * @property {ICMsgWebAPIKey|null} [apiKey] CMsgWebAPIRequest apiKey
         * @property {ICMsgHttpRequest|null} [request] CMsgWebAPIRequest request
         * @property {number|null} [routingAppId] CMsgWebAPIRequest routingAppId
         */
    
        /**
         * Constructs a new CMsgWebAPIRequest.
         * @exports CMsgWebAPIRequest
         * @classdesc Represents a CMsgWebAPIRequest.
         * @implements ICMsgWebAPIRequest
         * @constructor
         * @param {ICMsgWebAPIRequest=} [properties] Properties to set
         */
        function CMsgWebAPIRequest(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgWebAPIRequest interfaceName.
         * @member {string} interfaceName
         * @memberof CMsgWebAPIRequest
         * @instance
         */
        CMsgWebAPIRequest.prototype.interfaceName = "";
    
        /**
         * CMsgWebAPIRequest methodName.
         * @member {string} methodName
         * @memberof CMsgWebAPIRequest
         * @instance
         */
        CMsgWebAPIRequest.prototype.methodName = "";
    
        /**
         * CMsgWebAPIRequest version.
         * @member {number} version
         * @memberof CMsgWebAPIRequest
         * @instance
         */
        CMsgWebAPIRequest.prototype.version = 0;
    
        /**
         * CMsgWebAPIRequest apiKey.
         * @member {ICMsgWebAPIKey|null|undefined} apiKey
         * @memberof CMsgWebAPIRequest
         * @instance
         */
        CMsgWebAPIRequest.prototype.apiKey = null;
    
        /**
         * CMsgWebAPIRequest request.
         * @member {ICMsgHttpRequest|null|undefined} request
         * @memberof CMsgWebAPIRequest
         * @instance
         */
        CMsgWebAPIRequest.prototype.request = null;
    
        /**
         * CMsgWebAPIRequest routingAppId.
         * @member {number} routingAppId
         * @memberof CMsgWebAPIRequest
         * @instance
         */
        CMsgWebAPIRequest.prototype.routingAppId = 0;
    
        /**
         * Creates a new CMsgWebAPIRequest instance using the specified properties.
         * @function create
         * @memberof CMsgWebAPIRequest
         * @static
         * @param {ICMsgWebAPIRequest=} [properties] Properties to set
         * @returns {CMsgWebAPIRequest} CMsgWebAPIRequest instance
         */
        CMsgWebAPIRequest.create = function create(properties) {
            return new CMsgWebAPIRequest(properties);
        };
    
        /**
         * Encodes the specified CMsgWebAPIRequest message. Does not implicitly {@link CMsgWebAPIRequest.verify|verify} messages.
         * @function encode
         * @memberof CMsgWebAPIRequest
         * @static
         * @param {ICMsgWebAPIRequest} message CMsgWebAPIRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgWebAPIRequest.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.interfaceName != null && Object.hasOwnProperty.call(message, "interfaceName"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.interfaceName);
            if (message.methodName != null && Object.hasOwnProperty.call(message, "methodName"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.methodName);
            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.version);
            if (message.apiKey != null && Object.hasOwnProperty.call(message, "apiKey"))
                $root.CMsgWebAPIKey.encode(message.apiKey, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
            if (message.request != null && Object.hasOwnProperty.call(message, "request"))
                $root.CMsgHttpRequest.encode(message.request, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
            if (message.routingAppId != null && Object.hasOwnProperty.call(message, "routingAppId"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.routingAppId);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgWebAPIRequest message, length delimited. Does not implicitly {@link CMsgWebAPIRequest.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgWebAPIRequest
         * @static
         * @param {ICMsgWebAPIRequest} message CMsgWebAPIRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgWebAPIRequest.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgWebAPIRequest message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgWebAPIRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgWebAPIRequest} CMsgWebAPIRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgWebAPIRequest.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgWebAPIRequest();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 2: {
                        message.interfaceName = reader.string();
                        break;
                    }
                case 3: {
                        message.methodName = reader.string();
                        break;
                    }
                case 4: {
                        message.version = reader.uint32();
                        break;
                    }
                case 5: {
                        message.apiKey = $root.CMsgWebAPIKey.decode(reader, reader.uint32());
                        break;
                    }
                case 6: {
                        message.request = $root.CMsgHttpRequest.decode(reader, reader.uint32());
                        break;
                    }
                case 7: {
                        message.routingAppId = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgWebAPIRequest message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgWebAPIRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgWebAPIRequest} CMsgWebAPIRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgWebAPIRequest.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgWebAPIRequest message.
         * @function verify
         * @memberof CMsgWebAPIRequest
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgWebAPIRequest.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.interfaceName != null && message.hasOwnProperty("interfaceName"))
                if (!$util.isString(message.interfaceName))
                    return "interfaceName: string expected";
            if (message.methodName != null && message.hasOwnProperty("methodName"))
                if (!$util.isString(message.methodName))
                    return "methodName: string expected";
            if (message.version != null && message.hasOwnProperty("version"))
                if (!$util.isInteger(message.version))
                    return "version: integer expected";
            if (message.apiKey != null && message.hasOwnProperty("apiKey")) {
                var error = $root.CMsgWebAPIKey.verify(message.apiKey);
                if (error)
                    return "apiKey." + error;
            }
            if (message.request != null && message.hasOwnProperty("request")) {
                var error = $root.CMsgHttpRequest.verify(message.request);
                if (error)
                    return "request." + error;
            }
            if (message.routingAppId != null && message.hasOwnProperty("routingAppId"))
                if (!$util.isInteger(message.routingAppId))
                    return "routingAppId: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgWebAPIRequest message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgWebAPIRequest
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgWebAPIRequest} CMsgWebAPIRequest
         */
        CMsgWebAPIRequest.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgWebAPIRequest)
                return object;
            var message = new $root.CMsgWebAPIRequest();
            if (object.interfaceName != null)
                message.interfaceName = String(object.interfaceName);
            if (object.methodName != null)
                message.methodName = String(object.methodName);
            if (object.version != null)
                message.version = object.version >>> 0;
            if (object.apiKey != null) {
                if (typeof object.apiKey !== "object")
                    throw TypeError(".CMsgWebAPIRequest.apiKey: object expected");
                message.apiKey = $root.CMsgWebAPIKey.fromObject(object.apiKey);
            }
            if (object.request != null) {
                if (typeof object.request !== "object")
                    throw TypeError(".CMsgWebAPIRequest.request: object expected");
                message.request = $root.CMsgHttpRequest.fromObject(object.request);
            }
            if (object.routingAppId != null)
                message.routingAppId = object.routingAppId >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgWebAPIRequest message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgWebAPIRequest
         * @static
         * @param {CMsgWebAPIRequest} message CMsgWebAPIRequest
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgWebAPIRequest.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.interfaceName = "";
                object.methodName = "";
                object.version = 0;
                object.apiKey = null;
                object.request = null;
                object.routingAppId = 0;
            }
            if (message.interfaceName != null && message.hasOwnProperty("interfaceName"))
                object.interfaceName = message.interfaceName;
            if (message.methodName != null && message.hasOwnProperty("methodName"))
                object.methodName = message.methodName;
            if (message.version != null && message.hasOwnProperty("version"))
                object.version = message.version;
            if (message.apiKey != null && message.hasOwnProperty("apiKey"))
                object.apiKey = $root.CMsgWebAPIKey.toObject(message.apiKey, options);
            if (message.request != null && message.hasOwnProperty("request"))
                object.request = $root.CMsgHttpRequest.toObject(message.request, options);
            if (message.routingAppId != null && message.hasOwnProperty("routingAppId"))
                object.routingAppId = message.routingAppId;
            return object;
        };
    
        /**
         * Converts this CMsgWebAPIRequest to JSON.
         * @function toJSON
         * @memberof CMsgWebAPIRequest
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgWebAPIRequest.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgWebAPIRequest
         * @function getTypeUrl
         * @memberof CMsgWebAPIRequest
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgWebAPIRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgWebAPIRequest";
        };
    
        return CMsgWebAPIRequest;
    })();
    
    $root.CMsgHttpResponse = (function() {
    
        /**
         * Properties of a CMsgHttpResponse.
         * @exports ICMsgHttpResponse
         * @interface ICMsgHttpResponse
         * @property {number|null} [statusCode] CMsgHttpResponse statusCode
         * @property {Array.<CMsgHttpResponse.IResponseHeader>|null} [headers] CMsgHttpResponse headers
         * @property {Uint8Array|null} [body] CMsgHttpResponse body
         */
    
        /**
         * Constructs a new CMsgHttpResponse.
         * @exports CMsgHttpResponse
         * @classdesc Represents a CMsgHttpResponse.
         * @implements ICMsgHttpResponse
         * @constructor
         * @param {ICMsgHttpResponse=} [properties] Properties to set
         */
        function CMsgHttpResponse(properties) {
            this.headers = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgHttpResponse statusCode.
         * @member {number} statusCode
         * @memberof CMsgHttpResponse
         * @instance
         */
        CMsgHttpResponse.prototype.statusCode = 0;
    
        /**
         * CMsgHttpResponse headers.
         * @member {Array.<CMsgHttpResponse.IResponseHeader>} headers
         * @memberof CMsgHttpResponse
         * @instance
         */
        CMsgHttpResponse.prototype.headers = $util.emptyArray;
    
        /**
         * CMsgHttpResponse body.
         * @member {Uint8Array} body
         * @memberof CMsgHttpResponse
         * @instance
         */
        CMsgHttpResponse.prototype.body = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgHttpResponse instance using the specified properties.
         * @function create
         * @memberof CMsgHttpResponse
         * @static
         * @param {ICMsgHttpResponse=} [properties] Properties to set
         * @returns {CMsgHttpResponse} CMsgHttpResponse instance
         */
        CMsgHttpResponse.create = function create(properties) {
            return new CMsgHttpResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgHttpResponse message. Does not implicitly {@link CMsgHttpResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgHttpResponse
         * @static
         * @param {ICMsgHttpResponse} message CMsgHttpResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgHttpResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.statusCode != null && Object.hasOwnProperty.call(message, "statusCode"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.statusCode);
            if (message.headers != null && message.headers.length)
                for (var i = 0; i < message.headers.length; ++i)
                    $root.CMsgHttpResponse.ResponseHeader.encode(message.headers[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.body);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgHttpResponse message, length delimited. Does not implicitly {@link CMsgHttpResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgHttpResponse
         * @static
         * @param {ICMsgHttpResponse} message CMsgHttpResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgHttpResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgHttpResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgHttpResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgHttpResponse} CMsgHttpResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgHttpResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgHttpResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.statusCode = reader.uint32();
                        break;
                    }
                case 2: {
                        if (!(message.headers && message.headers.length))
                            message.headers = [];
                        message.headers.push($root.CMsgHttpResponse.ResponseHeader.decode(reader, reader.uint32()));
                        break;
                    }
                case 3: {
                        message.body = reader.bytes();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgHttpResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgHttpResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgHttpResponse} CMsgHttpResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgHttpResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgHttpResponse message.
         * @function verify
         * @memberof CMsgHttpResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgHttpResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.statusCode != null && message.hasOwnProperty("statusCode"))
                if (!$util.isInteger(message.statusCode))
                    return "statusCode: integer expected";
            if (message.headers != null && message.hasOwnProperty("headers")) {
                if (!Array.isArray(message.headers))
                    return "headers: array expected";
                for (var i = 0; i < message.headers.length; ++i) {
                    var error = $root.CMsgHttpResponse.ResponseHeader.verify(message.headers[i]);
                    if (error)
                        return "headers." + error;
                }
            }
            if (message.body != null && message.hasOwnProperty("body"))
                if (!(message.body && typeof message.body.length === "number" || $util.isString(message.body)))
                    return "body: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgHttpResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgHttpResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgHttpResponse} CMsgHttpResponse
         */
        CMsgHttpResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgHttpResponse)
                return object;
            var message = new $root.CMsgHttpResponse();
            if (object.statusCode != null)
                message.statusCode = object.statusCode >>> 0;
            if (object.headers) {
                if (!Array.isArray(object.headers))
                    throw TypeError(".CMsgHttpResponse.headers: array expected");
                message.headers = [];
                for (var i = 0; i < object.headers.length; ++i) {
                    if (typeof object.headers[i] !== "object")
                        throw TypeError(".CMsgHttpResponse.headers: object expected");
                    message.headers[i] = $root.CMsgHttpResponse.ResponseHeader.fromObject(object.headers[i]);
                }
            }
            if (object.body != null)
                if (typeof object.body === "string")
                    $util.base64.decode(object.body, message.body = $util.newBuffer($util.base64.length(object.body)), 0);
                else if (object.body.length >= 0)
                    message.body = object.body;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgHttpResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgHttpResponse
         * @static
         * @param {CMsgHttpResponse} message CMsgHttpResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgHttpResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.headers = [];
            if (options.defaults) {
                object.statusCode = 0;
                if (options.bytes === String)
                    object.body = "";
                else {
                    object.body = [];
                    if (options.bytes !== Array)
                        object.body = $util.newBuffer(object.body);
                }
            }
            if (message.statusCode != null && message.hasOwnProperty("statusCode"))
                object.statusCode = message.statusCode;
            if (message.headers && message.headers.length) {
                object.headers = [];
                for (var j = 0; j < message.headers.length; ++j)
                    object.headers[j] = $root.CMsgHttpResponse.ResponseHeader.toObject(message.headers[j], options);
            }
            if (message.body != null && message.hasOwnProperty("body"))
                object.body = options.bytes === String ? $util.base64.encode(message.body, 0, message.body.length) : options.bytes === Array ? Array.prototype.slice.call(message.body) : message.body;
            return object;
        };
    
        /**
         * Converts this CMsgHttpResponse to JSON.
         * @function toJSON
         * @memberof CMsgHttpResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgHttpResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgHttpResponse
         * @function getTypeUrl
         * @memberof CMsgHttpResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgHttpResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgHttpResponse";
        };
    
        CMsgHttpResponse.ResponseHeader = (function() {
    
            /**
             * Properties of a ResponseHeader.
             * @memberof CMsgHttpResponse
             * @interface IResponseHeader
             * @property {string|null} [name] ResponseHeader name
             * @property {string|null} [value] ResponseHeader value
             */
    
            /**
             * Constructs a new ResponseHeader.
             * @memberof CMsgHttpResponse
             * @classdesc Represents a ResponseHeader.
             * @implements IResponseHeader
             * @constructor
             * @param {CMsgHttpResponse.IResponseHeader=} [properties] Properties to set
             */
            function ResponseHeader(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * ResponseHeader name.
             * @member {string} name
             * @memberof CMsgHttpResponse.ResponseHeader
             * @instance
             */
            ResponseHeader.prototype.name = "";
    
            /**
             * ResponseHeader value.
             * @member {string} value
             * @memberof CMsgHttpResponse.ResponseHeader
             * @instance
             */
            ResponseHeader.prototype.value = "";
    
            /**
             * Creates a new ResponseHeader instance using the specified properties.
             * @function create
             * @memberof CMsgHttpResponse.ResponseHeader
             * @static
             * @param {CMsgHttpResponse.IResponseHeader=} [properties] Properties to set
             * @returns {CMsgHttpResponse.ResponseHeader} ResponseHeader instance
             */
            ResponseHeader.create = function create(properties) {
                return new ResponseHeader(properties);
            };
    
            /**
             * Encodes the specified ResponseHeader message. Does not implicitly {@link CMsgHttpResponse.ResponseHeader.verify|verify} messages.
             * @function encode
             * @memberof CMsgHttpResponse.ResponseHeader
             * @static
             * @param {CMsgHttpResponse.IResponseHeader} message ResponseHeader message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ResponseHeader.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
                return writer;
            };
    
            /**
             * Encodes the specified ResponseHeader message, length delimited. Does not implicitly {@link CMsgHttpResponse.ResponseHeader.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgHttpResponse.ResponseHeader
             * @static
             * @param {CMsgHttpResponse.IResponseHeader} message ResponseHeader message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ResponseHeader.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a ResponseHeader message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgHttpResponse.ResponseHeader
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgHttpResponse.ResponseHeader} ResponseHeader
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ResponseHeader.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgHttpResponse.ResponseHeader();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.name = reader.string();
                            break;
                        }
                    case 2: {
                            message.value = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a ResponseHeader message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgHttpResponse.ResponseHeader
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgHttpResponse.ResponseHeader} ResponseHeader
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ResponseHeader.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a ResponseHeader message.
             * @function verify
             * @memberof CMsgHttpResponse.ResponseHeader
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ResponseHeader.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.name != null && message.hasOwnProperty("name"))
                    if (!$util.isString(message.name))
                        return "name: string expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (!$util.isString(message.value))
                        return "value: string expected";
                return null;
            };
    
            /**
             * Creates a ResponseHeader message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgHttpResponse.ResponseHeader
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgHttpResponse.ResponseHeader} ResponseHeader
             */
            ResponseHeader.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgHttpResponse.ResponseHeader)
                    return object;
                var message = new $root.CMsgHttpResponse.ResponseHeader();
                if (object.name != null)
                    message.name = String(object.name);
                if (object.value != null)
                    message.value = String(object.value);
                return message;
            };
    
            /**
             * Creates a plain object from a ResponseHeader message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgHttpResponse.ResponseHeader
             * @static
             * @param {CMsgHttpResponse.ResponseHeader} message ResponseHeader
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ResponseHeader.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.name = "";
                    object.value = "";
                }
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = message.value;
                return object;
            };
    
            /**
             * Converts this ResponseHeader to JSON.
             * @function toJSON
             * @memberof CMsgHttpResponse.ResponseHeader
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ResponseHeader.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for ResponseHeader
             * @function getTypeUrl
             * @memberof CMsgHttpResponse.ResponseHeader
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ResponseHeader.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgHttpResponse.ResponseHeader";
            };
    
            return ResponseHeader;
        })();
    
        return CMsgHttpResponse;
    })();
    
    $root.CMsgAMFindAccounts = (function() {
    
        /**
         * Properties of a CMsgAMFindAccounts.
         * @exports ICMsgAMFindAccounts
         * @interface ICMsgAMFindAccounts
         * @property {number|null} [searchType] CMsgAMFindAccounts searchType
         * @property {string|null} [searchString] CMsgAMFindAccounts searchString
         */
    
        /**
         * Constructs a new CMsgAMFindAccounts.
         * @exports CMsgAMFindAccounts
         * @classdesc Represents a CMsgAMFindAccounts.
         * @implements ICMsgAMFindAccounts
         * @constructor
         * @param {ICMsgAMFindAccounts=} [properties] Properties to set
         */
        function CMsgAMFindAccounts(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAMFindAccounts searchType.
         * @member {number} searchType
         * @memberof CMsgAMFindAccounts
         * @instance
         */
        CMsgAMFindAccounts.prototype.searchType = 0;
    
        /**
         * CMsgAMFindAccounts searchString.
         * @member {string} searchString
         * @memberof CMsgAMFindAccounts
         * @instance
         */
        CMsgAMFindAccounts.prototype.searchString = "";
    
        /**
         * Creates a new CMsgAMFindAccounts instance using the specified properties.
         * @function create
         * @memberof CMsgAMFindAccounts
         * @static
         * @param {ICMsgAMFindAccounts=} [properties] Properties to set
         * @returns {CMsgAMFindAccounts} CMsgAMFindAccounts instance
         */
        CMsgAMFindAccounts.create = function create(properties) {
            return new CMsgAMFindAccounts(properties);
        };
    
        /**
         * Encodes the specified CMsgAMFindAccounts message. Does not implicitly {@link CMsgAMFindAccounts.verify|verify} messages.
         * @function encode
         * @memberof CMsgAMFindAccounts
         * @static
         * @param {ICMsgAMFindAccounts} message CMsgAMFindAccounts message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMFindAccounts.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.searchType != null && Object.hasOwnProperty.call(message, "searchType"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.searchType);
            if (message.searchString != null && Object.hasOwnProperty.call(message, "searchString"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.searchString);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAMFindAccounts message, length delimited. Does not implicitly {@link CMsgAMFindAccounts.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAMFindAccounts
         * @static
         * @param {ICMsgAMFindAccounts} message CMsgAMFindAccounts message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMFindAccounts.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAMFindAccounts message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAMFindAccounts
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAMFindAccounts} CMsgAMFindAccounts
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMFindAccounts.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMFindAccounts();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.searchType = reader.uint32();
                        break;
                    }
                case 2: {
                        message.searchString = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAMFindAccounts message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAMFindAccounts
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAMFindAccounts} CMsgAMFindAccounts
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMFindAccounts.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAMFindAccounts message.
         * @function verify
         * @memberof CMsgAMFindAccounts
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAMFindAccounts.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.searchType != null && message.hasOwnProperty("searchType"))
                if (!$util.isInteger(message.searchType))
                    return "searchType: integer expected";
            if (message.searchString != null && message.hasOwnProperty("searchString"))
                if (!$util.isString(message.searchString))
                    return "searchString: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgAMFindAccounts message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAMFindAccounts
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAMFindAccounts} CMsgAMFindAccounts
         */
        CMsgAMFindAccounts.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAMFindAccounts)
                return object;
            var message = new $root.CMsgAMFindAccounts();
            if (object.searchType != null)
                message.searchType = object.searchType >>> 0;
            if (object.searchString != null)
                message.searchString = String(object.searchString);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAMFindAccounts message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAMFindAccounts
         * @static
         * @param {CMsgAMFindAccounts} message CMsgAMFindAccounts
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAMFindAccounts.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.searchType = 0;
                object.searchString = "";
            }
            if (message.searchType != null && message.hasOwnProperty("searchType"))
                object.searchType = message.searchType;
            if (message.searchString != null && message.hasOwnProperty("searchString"))
                object.searchString = message.searchString;
            return object;
        };
    
        /**
         * Converts this CMsgAMFindAccounts to JSON.
         * @function toJSON
         * @memberof CMsgAMFindAccounts
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAMFindAccounts.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAMFindAccounts
         * @function getTypeUrl
         * @memberof CMsgAMFindAccounts
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAMFindAccounts.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAMFindAccounts";
        };
    
        return CMsgAMFindAccounts;
    })();
    
    $root.CMsgAMFindAccountsResponse = (function() {
    
        /**
         * Properties of a CMsgAMFindAccountsResponse.
         * @exports ICMsgAMFindAccountsResponse
         * @interface ICMsgAMFindAccountsResponse
         * @property {Array.<number|Long>|null} [steamId] CMsgAMFindAccountsResponse steamId
         */
    
        /**
         * Constructs a new CMsgAMFindAccountsResponse.
         * @exports CMsgAMFindAccountsResponse
         * @classdesc Represents a CMsgAMFindAccountsResponse.
         * @implements ICMsgAMFindAccountsResponse
         * @constructor
         * @param {ICMsgAMFindAccountsResponse=} [properties] Properties to set
         */
        function CMsgAMFindAccountsResponse(properties) {
            this.steamId = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAMFindAccountsResponse steamId.
         * @member {Array.<number|Long>} steamId
         * @memberof CMsgAMFindAccountsResponse
         * @instance
         */
        CMsgAMFindAccountsResponse.prototype.steamId = $util.emptyArray;
    
        /**
         * Creates a new CMsgAMFindAccountsResponse instance using the specified properties.
         * @function create
         * @memberof CMsgAMFindAccountsResponse
         * @static
         * @param {ICMsgAMFindAccountsResponse=} [properties] Properties to set
         * @returns {CMsgAMFindAccountsResponse} CMsgAMFindAccountsResponse instance
         */
        CMsgAMFindAccountsResponse.create = function create(properties) {
            return new CMsgAMFindAccountsResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgAMFindAccountsResponse message. Does not implicitly {@link CMsgAMFindAccountsResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgAMFindAccountsResponse
         * @static
         * @param {ICMsgAMFindAccountsResponse} message CMsgAMFindAccountsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMFindAccountsResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamId != null && message.steamId.length)
                for (var i = 0; i < message.steamId.length; ++i)
                    writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamId[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAMFindAccountsResponse message, length delimited. Does not implicitly {@link CMsgAMFindAccountsResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAMFindAccountsResponse
         * @static
         * @param {ICMsgAMFindAccountsResponse} message CMsgAMFindAccountsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMFindAccountsResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAMFindAccountsResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAMFindAccountsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAMFindAccountsResponse} CMsgAMFindAccountsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMFindAccountsResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMFindAccountsResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.steamId && message.steamId.length))
                            message.steamId = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.steamId.push(reader.fixed64());
                        } else
                            message.steamId.push(reader.fixed64());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAMFindAccountsResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAMFindAccountsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAMFindAccountsResponse} CMsgAMFindAccountsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMFindAccountsResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAMFindAccountsResponse message.
         * @function verify
         * @memberof CMsgAMFindAccountsResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAMFindAccountsResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamId != null && message.hasOwnProperty("steamId")) {
                if (!Array.isArray(message.steamId))
                    return "steamId: array expected";
                for (var i = 0; i < message.steamId.length; ++i)
                    if (!$util.isInteger(message.steamId[i]) && !(message.steamId[i] && $util.isInteger(message.steamId[i].low) && $util.isInteger(message.steamId[i].high)))
                        return "steamId: integer|Long[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgAMFindAccountsResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAMFindAccountsResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAMFindAccountsResponse} CMsgAMFindAccountsResponse
         */
        CMsgAMFindAccountsResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAMFindAccountsResponse)
                return object;
            var message = new $root.CMsgAMFindAccountsResponse();
            if (object.steamId) {
                if (!Array.isArray(object.steamId))
                    throw TypeError(".CMsgAMFindAccountsResponse.steamId: array expected");
                message.steamId = [];
                for (var i = 0; i < object.steamId.length; ++i)
                    if ($util.Long)
                        (message.steamId[i] = $util.Long.fromValue(object.steamId[i])).unsigned = false;
                    else if (typeof object.steamId[i] === "string")
                        message.steamId[i] = parseInt(object.steamId[i], 10);
                    else if (typeof object.steamId[i] === "number")
                        message.steamId[i] = object.steamId[i];
                    else if (typeof object.steamId[i] === "object")
                        message.steamId[i] = new $util.LongBits(object.steamId[i].low >>> 0, object.steamId[i].high >>> 0).toNumber();
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAMFindAccountsResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAMFindAccountsResponse
         * @static
         * @param {CMsgAMFindAccountsResponse} message CMsgAMFindAccountsResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAMFindAccountsResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.steamId = [];
            if (message.steamId && message.steamId.length) {
                object.steamId = [];
                for (var j = 0; j < message.steamId.length; ++j)
                    if (typeof message.steamId[j] === "number")
                        object.steamId[j] = options.longs === String ? String(message.steamId[j]) : message.steamId[j];
                    else
                        object.steamId[j] = options.longs === String ? $util.Long.prototype.toString.call(message.steamId[j]) : options.longs === Number ? new $util.LongBits(message.steamId[j].low >>> 0, message.steamId[j].high >>> 0).toNumber() : message.steamId[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgAMFindAccountsResponse to JSON.
         * @function toJSON
         * @memberof CMsgAMFindAccountsResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAMFindAccountsResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAMFindAccountsResponse
         * @function getTypeUrl
         * @memberof CMsgAMFindAccountsResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAMFindAccountsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAMFindAccountsResponse";
        };
    
        return CMsgAMFindAccountsResponse;
    })();
    
    $root.CMsgNotifyWatchdog = (function() {
    
        /**
         * Properties of a CMsgNotifyWatchdog.
         * @exports ICMsgNotifyWatchdog
         * @interface ICMsgNotifyWatchdog
         * @property {number|null} [source] CMsgNotifyWatchdog source
         * @property {number|null} [alertType] CMsgNotifyWatchdog alertType
         * @property {number|null} [alertDestination] CMsgNotifyWatchdog alertDestination
         * @property {boolean|null} [critical] CMsgNotifyWatchdog critical
         * @property {number|null} [time] CMsgNotifyWatchdog time
         * @property {number|null} [appid] CMsgNotifyWatchdog appid
         * @property {string|null} [text] CMsgNotifyWatchdog text
         */
    
        /**
         * Constructs a new CMsgNotifyWatchdog.
         * @exports CMsgNotifyWatchdog
         * @classdesc Represents a CMsgNotifyWatchdog.
         * @implements ICMsgNotifyWatchdog
         * @constructor
         * @param {ICMsgNotifyWatchdog=} [properties] Properties to set
         */
        function CMsgNotifyWatchdog(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgNotifyWatchdog source.
         * @member {number} source
         * @memberof CMsgNotifyWatchdog
         * @instance
         */
        CMsgNotifyWatchdog.prototype.source = 0;
    
        /**
         * CMsgNotifyWatchdog alertType.
         * @member {number} alertType
         * @memberof CMsgNotifyWatchdog
         * @instance
         */
        CMsgNotifyWatchdog.prototype.alertType = 0;
    
        /**
         * CMsgNotifyWatchdog alertDestination.
         * @member {number} alertDestination
         * @memberof CMsgNotifyWatchdog
         * @instance
         */
        CMsgNotifyWatchdog.prototype.alertDestination = 0;
    
        /**
         * CMsgNotifyWatchdog critical.
         * @member {boolean} critical
         * @memberof CMsgNotifyWatchdog
         * @instance
         */
        CMsgNotifyWatchdog.prototype.critical = false;
    
        /**
         * CMsgNotifyWatchdog time.
         * @member {number} time
         * @memberof CMsgNotifyWatchdog
         * @instance
         */
        CMsgNotifyWatchdog.prototype.time = 0;
    
        /**
         * CMsgNotifyWatchdog appid.
         * @member {number} appid
         * @memberof CMsgNotifyWatchdog
         * @instance
         */
        CMsgNotifyWatchdog.prototype.appid = 0;
    
        /**
         * CMsgNotifyWatchdog text.
         * @member {string} text
         * @memberof CMsgNotifyWatchdog
         * @instance
         */
        CMsgNotifyWatchdog.prototype.text = "";
    
        /**
         * Creates a new CMsgNotifyWatchdog instance using the specified properties.
         * @function create
         * @memberof CMsgNotifyWatchdog
         * @static
         * @param {ICMsgNotifyWatchdog=} [properties] Properties to set
         * @returns {CMsgNotifyWatchdog} CMsgNotifyWatchdog instance
         */
        CMsgNotifyWatchdog.create = function create(properties) {
            return new CMsgNotifyWatchdog(properties);
        };
    
        /**
         * Encodes the specified CMsgNotifyWatchdog message. Does not implicitly {@link CMsgNotifyWatchdog.verify|verify} messages.
         * @function encode
         * @memberof CMsgNotifyWatchdog
         * @static
         * @param {ICMsgNotifyWatchdog} message CMsgNotifyWatchdog message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgNotifyWatchdog.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.source != null && Object.hasOwnProperty.call(message, "source"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.source);
            if (message.alertType != null && Object.hasOwnProperty.call(message, "alertType"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.alertType);
            if (message.alertDestination != null && Object.hasOwnProperty.call(message, "alertDestination"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.alertDestination);
            if (message.critical != null && Object.hasOwnProperty.call(message, "critical"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.critical);
            if (message.time != null && Object.hasOwnProperty.call(message, "time"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.time);
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.appid);
            if (message.text != null && Object.hasOwnProperty.call(message, "text"))
                writer.uint32(/* id 7, wireType 2 =*/58).string(message.text);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgNotifyWatchdog message, length delimited. Does not implicitly {@link CMsgNotifyWatchdog.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgNotifyWatchdog
         * @static
         * @param {ICMsgNotifyWatchdog} message CMsgNotifyWatchdog message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgNotifyWatchdog.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgNotifyWatchdog message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgNotifyWatchdog
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgNotifyWatchdog} CMsgNotifyWatchdog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgNotifyWatchdog.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgNotifyWatchdog();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.source = reader.uint32();
                        break;
                    }
                case 2: {
                        message.alertType = reader.uint32();
                        break;
                    }
                case 3: {
                        message.alertDestination = reader.uint32();
                        break;
                    }
                case 4: {
                        message.critical = reader.bool();
                        break;
                    }
                case 5: {
                        message.time = reader.uint32();
                        break;
                    }
                case 6: {
                        message.appid = reader.uint32();
                        break;
                    }
                case 7: {
                        message.text = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgNotifyWatchdog message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgNotifyWatchdog
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgNotifyWatchdog} CMsgNotifyWatchdog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgNotifyWatchdog.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgNotifyWatchdog message.
         * @function verify
         * @memberof CMsgNotifyWatchdog
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgNotifyWatchdog.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.source != null && message.hasOwnProperty("source"))
                if (!$util.isInteger(message.source))
                    return "source: integer expected";
            if (message.alertType != null && message.hasOwnProperty("alertType"))
                if (!$util.isInteger(message.alertType))
                    return "alertType: integer expected";
            if (message.alertDestination != null && message.hasOwnProperty("alertDestination"))
                if (!$util.isInteger(message.alertDestination))
                    return "alertDestination: integer expected";
            if (message.critical != null && message.hasOwnProperty("critical"))
                if (typeof message.critical !== "boolean")
                    return "critical: boolean expected";
            if (message.time != null && message.hasOwnProperty("time"))
                if (!$util.isInteger(message.time))
                    return "time: integer expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.text != null && message.hasOwnProperty("text"))
                if (!$util.isString(message.text))
                    return "text: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgNotifyWatchdog message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgNotifyWatchdog
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgNotifyWatchdog} CMsgNotifyWatchdog
         */
        CMsgNotifyWatchdog.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgNotifyWatchdog)
                return object;
            var message = new $root.CMsgNotifyWatchdog();
            if (object.source != null)
                message.source = object.source >>> 0;
            if (object.alertType != null)
                message.alertType = object.alertType >>> 0;
            if (object.alertDestination != null)
                message.alertDestination = object.alertDestination >>> 0;
            if (object.critical != null)
                message.critical = Boolean(object.critical);
            if (object.time != null)
                message.time = object.time >>> 0;
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.text != null)
                message.text = String(object.text);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgNotifyWatchdog message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgNotifyWatchdog
         * @static
         * @param {CMsgNotifyWatchdog} message CMsgNotifyWatchdog
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgNotifyWatchdog.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.source = 0;
                object.alertType = 0;
                object.alertDestination = 0;
                object.critical = false;
                object.time = 0;
                object.appid = 0;
                object.text = "";
            }
            if (message.source != null && message.hasOwnProperty("source"))
                object.source = message.source;
            if (message.alertType != null && message.hasOwnProperty("alertType"))
                object.alertType = message.alertType;
            if (message.alertDestination != null && message.hasOwnProperty("alertDestination"))
                object.alertDestination = message.alertDestination;
            if (message.critical != null && message.hasOwnProperty("critical"))
                object.critical = message.critical;
            if (message.time != null && message.hasOwnProperty("time"))
                object.time = message.time;
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.text != null && message.hasOwnProperty("text"))
                object.text = message.text;
            return object;
        };
    
        /**
         * Converts this CMsgNotifyWatchdog to JSON.
         * @function toJSON
         * @memberof CMsgNotifyWatchdog
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgNotifyWatchdog.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgNotifyWatchdog
         * @function getTypeUrl
         * @memberof CMsgNotifyWatchdog
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgNotifyWatchdog.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgNotifyWatchdog";
        };
    
        return CMsgNotifyWatchdog;
    })();
    
    $root.CMsgAMGetLicenses = (function() {
    
        /**
         * Properties of a CMsgAMGetLicenses.
         * @exports ICMsgAMGetLicenses
         * @interface ICMsgAMGetLicenses
         * @property {number|Long|null} [steamid] CMsgAMGetLicenses steamid
         */
    
        /**
         * Constructs a new CMsgAMGetLicenses.
         * @exports CMsgAMGetLicenses
         * @classdesc Represents a CMsgAMGetLicenses.
         * @implements ICMsgAMGetLicenses
         * @constructor
         * @param {ICMsgAMGetLicenses=} [properties] Properties to set
         */
        function CMsgAMGetLicenses(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAMGetLicenses steamid.
         * @member {number|Long} steamid
         * @memberof CMsgAMGetLicenses
         * @instance
         */
        CMsgAMGetLicenses.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgAMGetLicenses instance using the specified properties.
         * @function create
         * @memberof CMsgAMGetLicenses
         * @static
         * @param {ICMsgAMGetLicenses=} [properties] Properties to set
         * @returns {CMsgAMGetLicenses} CMsgAMGetLicenses instance
         */
        CMsgAMGetLicenses.create = function create(properties) {
            return new CMsgAMGetLicenses(properties);
        };
    
        /**
         * Encodes the specified CMsgAMGetLicenses message. Does not implicitly {@link CMsgAMGetLicenses.verify|verify} messages.
         * @function encode
         * @memberof CMsgAMGetLicenses
         * @static
         * @param {ICMsgAMGetLicenses} message CMsgAMGetLicenses message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMGetLicenses.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAMGetLicenses message, length delimited. Does not implicitly {@link CMsgAMGetLicenses.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAMGetLicenses
         * @static
         * @param {ICMsgAMGetLicenses} message CMsgAMGetLicenses message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMGetLicenses.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAMGetLicenses message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAMGetLicenses
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAMGetLicenses} CMsgAMGetLicenses
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMGetLicenses.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMGetLicenses();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamid = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAMGetLicenses message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAMGetLicenses
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAMGetLicenses} CMsgAMGetLicenses
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMGetLicenses.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAMGetLicenses message.
         * @function verify
         * @memberof CMsgAMGetLicenses
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAMGetLicenses.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgAMGetLicenses message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAMGetLicenses
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAMGetLicenses} CMsgAMGetLicenses
         */
        CMsgAMGetLicenses.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAMGetLicenses)
                return object;
            var message = new $root.CMsgAMGetLicenses();
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAMGetLicenses message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAMGetLicenses
         * @static
         * @param {CMsgAMGetLicenses} message CMsgAMGetLicenses
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAMGetLicenses.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            return object;
        };
    
        /**
         * Converts this CMsgAMGetLicenses to JSON.
         * @function toJSON
         * @memberof CMsgAMGetLicenses
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAMGetLicenses.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAMGetLicenses
         * @function getTypeUrl
         * @memberof CMsgAMGetLicenses
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAMGetLicenses.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAMGetLicenses";
        };
    
        return CMsgAMGetLicenses;
    })();
    
    $root.CMsgPackageLicense = (function() {
    
        /**
         * Properties of a CMsgPackageLicense.
         * @exports ICMsgPackageLicense
         * @interface ICMsgPackageLicense
         * @property {number|null} [packageId] CMsgPackageLicense packageId
         * @property {number|null} [timeCreated] CMsgPackageLicense timeCreated
         * @property {number|null} [ownerId] CMsgPackageLicense ownerId
         */
    
        /**
         * Constructs a new CMsgPackageLicense.
         * @exports CMsgPackageLicense
         * @classdesc Represents a CMsgPackageLicense.
         * @implements ICMsgPackageLicense
         * @constructor
         * @param {ICMsgPackageLicense=} [properties] Properties to set
         */
        function CMsgPackageLicense(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgPackageLicense packageId.
         * @member {number} packageId
         * @memberof CMsgPackageLicense
         * @instance
         */
        CMsgPackageLicense.prototype.packageId = 0;
    
        /**
         * CMsgPackageLicense timeCreated.
         * @member {number} timeCreated
         * @memberof CMsgPackageLicense
         * @instance
         */
        CMsgPackageLicense.prototype.timeCreated = 0;
    
        /**
         * CMsgPackageLicense ownerId.
         * @member {number} ownerId
         * @memberof CMsgPackageLicense
         * @instance
         */
        CMsgPackageLicense.prototype.ownerId = 0;
    
        /**
         * Creates a new CMsgPackageLicense instance using the specified properties.
         * @function create
         * @memberof CMsgPackageLicense
         * @static
         * @param {ICMsgPackageLicense=} [properties] Properties to set
         * @returns {CMsgPackageLicense} CMsgPackageLicense instance
         */
        CMsgPackageLicense.create = function create(properties) {
            return new CMsgPackageLicense(properties);
        };
    
        /**
         * Encodes the specified CMsgPackageLicense message. Does not implicitly {@link CMsgPackageLicense.verify|verify} messages.
         * @function encode
         * @memberof CMsgPackageLicense
         * @static
         * @param {ICMsgPackageLicense} message CMsgPackageLicense message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgPackageLicense.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.packageId != null && Object.hasOwnProperty.call(message, "packageId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.packageId);
            if (message.timeCreated != null && Object.hasOwnProperty.call(message, "timeCreated"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.timeCreated);
            if (message.ownerId != null && Object.hasOwnProperty.call(message, "ownerId"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.ownerId);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgPackageLicense message, length delimited. Does not implicitly {@link CMsgPackageLicense.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgPackageLicense
         * @static
         * @param {ICMsgPackageLicense} message CMsgPackageLicense message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgPackageLicense.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgPackageLicense message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgPackageLicense
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgPackageLicense} CMsgPackageLicense
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgPackageLicense.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgPackageLicense();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.packageId = reader.uint32();
                        break;
                    }
                case 2: {
                        message.timeCreated = reader.uint32();
                        break;
                    }
                case 3: {
                        message.ownerId = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgPackageLicense message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgPackageLicense
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgPackageLicense} CMsgPackageLicense
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgPackageLicense.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgPackageLicense message.
         * @function verify
         * @memberof CMsgPackageLicense
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgPackageLicense.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.packageId != null && message.hasOwnProperty("packageId"))
                if (!$util.isInteger(message.packageId))
                    return "packageId: integer expected";
            if (message.timeCreated != null && message.hasOwnProperty("timeCreated"))
                if (!$util.isInteger(message.timeCreated))
                    return "timeCreated: integer expected";
            if (message.ownerId != null && message.hasOwnProperty("ownerId"))
                if (!$util.isInteger(message.ownerId))
                    return "ownerId: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgPackageLicense message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgPackageLicense
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgPackageLicense} CMsgPackageLicense
         */
        CMsgPackageLicense.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgPackageLicense)
                return object;
            var message = new $root.CMsgPackageLicense();
            if (object.packageId != null)
                message.packageId = object.packageId >>> 0;
            if (object.timeCreated != null)
                message.timeCreated = object.timeCreated >>> 0;
            if (object.ownerId != null)
                message.ownerId = object.ownerId >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgPackageLicense message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgPackageLicense
         * @static
         * @param {CMsgPackageLicense} message CMsgPackageLicense
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgPackageLicense.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.packageId = 0;
                object.timeCreated = 0;
                object.ownerId = 0;
            }
            if (message.packageId != null && message.hasOwnProperty("packageId"))
                object.packageId = message.packageId;
            if (message.timeCreated != null && message.hasOwnProperty("timeCreated"))
                object.timeCreated = message.timeCreated;
            if (message.ownerId != null && message.hasOwnProperty("ownerId"))
                object.ownerId = message.ownerId;
            return object;
        };
    
        /**
         * Converts this CMsgPackageLicense to JSON.
         * @function toJSON
         * @memberof CMsgPackageLicense
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgPackageLicense.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgPackageLicense
         * @function getTypeUrl
         * @memberof CMsgPackageLicense
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgPackageLicense.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgPackageLicense";
        };
    
        return CMsgPackageLicense;
    })();
    
    $root.CMsgAMGetLicensesResponse = (function() {
    
        /**
         * Properties of a CMsgAMGetLicensesResponse.
         * @exports ICMsgAMGetLicensesResponse
         * @interface ICMsgAMGetLicensesResponse
         * @property {Array.<ICMsgPackageLicense>|null} [license] CMsgAMGetLicensesResponse license
         * @property {number|null} [result] CMsgAMGetLicensesResponse result
         */
    
        /**
         * Constructs a new CMsgAMGetLicensesResponse.
         * @exports CMsgAMGetLicensesResponse
         * @classdesc Represents a CMsgAMGetLicensesResponse.
         * @implements ICMsgAMGetLicensesResponse
         * @constructor
         * @param {ICMsgAMGetLicensesResponse=} [properties] Properties to set
         */
        function CMsgAMGetLicensesResponse(properties) {
            this.license = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAMGetLicensesResponse license.
         * @member {Array.<ICMsgPackageLicense>} license
         * @memberof CMsgAMGetLicensesResponse
         * @instance
         */
        CMsgAMGetLicensesResponse.prototype.license = $util.emptyArray;
    
        /**
         * CMsgAMGetLicensesResponse result.
         * @member {number} result
         * @memberof CMsgAMGetLicensesResponse
         * @instance
         */
        CMsgAMGetLicensesResponse.prototype.result = 0;
    
        /**
         * Creates a new CMsgAMGetLicensesResponse instance using the specified properties.
         * @function create
         * @memberof CMsgAMGetLicensesResponse
         * @static
         * @param {ICMsgAMGetLicensesResponse=} [properties] Properties to set
         * @returns {CMsgAMGetLicensesResponse} CMsgAMGetLicensesResponse instance
         */
        CMsgAMGetLicensesResponse.create = function create(properties) {
            return new CMsgAMGetLicensesResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgAMGetLicensesResponse message. Does not implicitly {@link CMsgAMGetLicensesResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgAMGetLicensesResponse
         * @static
         * @param {ICMsgAMGetLicensesResponse} message CMsgAMGetLicensesResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMGetLicensesResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.license != null && message.license.length)
                for (var i = 0; i < message.license.length; ++i)
                    $root.CMsgPackageLicense.encode(message.license[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.result != null && Object.hasOwnProperty.call(message, "result"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.result);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAMGetLicensesResponse message, length delimited. Does not implicitly {@link CMsgAMGetLicensesResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAMGetLicensesResponse
         * @static
         * @param {ICMsgAMGetLicensesResponse} message CMsgAMGetLicensesResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMGetLicensesResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAMGetLicensesResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAMGetLicensesResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAMGetLicensesResponse} CMsgAMGetLicensesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMGetLicensesResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMGetLicensesResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.license && message.license.length))
                            message.license = [];
                        message.license.push($root.CMsgPackageLicense.decode(reader, reader.uint32()));
                        break;
                    }
                case 2: {
                        message.result = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAMGetLicensesResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAMGetLicensesResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAMGetLicensesResponse} CMsgAMGetLicensesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMGetLicensesResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAMGetLicensesResponse message.
         * @function verify
         * @memberof CMsgAMGetLicensesResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAMGetLicensesResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.license != null && message.hasOwnProperty("license")) {
                if (!Array.isArray(message.license))
                    return "license: array expected";
                for (var i = 0; i < message.license.length; ++i) {
                    var error = $root.CMsgPackageLicense.verify(message.license[i]);
                    if (error)
                        return "license." + error;
                }
            }
            if (message.result != null && message.hasOwnProperty("result"))
                if (!$util.isInteger(message.result))
                    return "result: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgAMGetLicensesResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAMGetLicensesResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAMGetLicensesResponse} CMsgAMGetLicensesResponse
         */
        CMsgAMGetLicensesResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAMGetLicensesResponse)
                return object;
            var message = new $root.CMsgAMGetLicensesResponse();
            if (object.license) {
                if (!Array.isArray(object.license))
                    throw TypeError(".CMsgAMGetLicensesResponse.license: array expected");
                message.license = [];
                for (var i = 0; i < object.license.length; ++i) {
                    if (typeof object.license[i] !== "object")
                        throw TypeError(".CMsgAMGetLicensesResponse.license: object expected");
                    message.license[i] = $root.CMsgPackageLicense.fromObject(object.license[i]);
                }
            }
            if (object.result != null)
                message.result = object.result >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAMGetLicensesResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAMGetLicensesResponse
         * @static
         * @param {CMsgAMGetLicensesResponse} message CMsgAMGetLicensesResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAMGetLicensesResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.license = [];
            if (options.defaults)
                object.result = 0;
            if (message.license && message.license.length) {
                object.license = [];
                for (var j = 0; j < message.license.length; ++j)
                    object.license[j] = $root.CMsgPackageLicense.toObject(message.license[j], options);
            }
            if (message.result != null && message.hasOwnProperty("result"))
                object.result = message.result;
            return object;
        };
    
        /**
         * Converts this CMsgAMGetLicensesResponse to JSON.
         * @function toJSON
         * @memberof CMsgAMGetLicensesResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAMGetLicensesResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAMGetLicensesResponse
         * @function getTypeUrl
         * @memberof CMsgAMGetLicensesResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAMGetLicensesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAMGetLicensesResponse";
        };
    
        return CMsgAMGetLicensesResponse;
    })();
    
    $root.CMsgAMGetUserGameStats = (function() {
    
        /**
         * Properties of a CMsgAMGetUserGameStats.
         * @exports ICMsgAMGetUserGameStats
         * @interface ICMsgAMGetUserGameStats
         * @property {number|Long|null} [steamId] CMsgAMGetUserGameStats steamId
         * @property {number|Long|null} [gameId] CMsgAMGetUserGameStats gameId
         * @property {Array.<number>|null} [stats] CMsgAMGetUserGameStats stats
         */
    
        /**
         * Constructs a new CMsgAMGetUserGameStats.
         * @exports CMsgAMGetUserGameStats
         * @classdesc Represents a CMsgAMGetUserGameStats.
         * @implements ICMsgAMGetUserGameStats
         * @constructor
         * @param {ICMsgAMGetUserGameStats=} [properties] Properties to set
         */
        function CMsgAMGetUserGameStats(properties) {
            this.stats = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAMGetUserGameStats steamId.
         * @member {number|Long} steamId
         * @memberof CMsgAMGetUserGameStats
         * @instance
         */
        CMsgAMGetUserGameStats.prototype.steamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgAMGetUserGameStats gameId.
         * @member {number|Long} gameId
         * @memberof CMsgAMGetUserGameStats
         * @instance
         */
        CMsgAMGetUserGameStats.prototype.gameId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgAMGetUserGameStats stats.
         * @member {Array.<number>} stats
         * @memberof CMsgAMGetUserGameStats
         * @instance
         */
        CMsgAMGetUserGameStats.prototype.stats = $util.emptyArray;
    
        /**
         * Creates a new CMsgAMGetUserGameStats instance using the specified properties.
         * @function create
         * @memberof CMsgAMGetUserGameStats
         * @static
         * @param {ICMsgAMGetUserGameStats=} [properties] Properties to set
         * @returns {CMsgAMGetUserGameStats} CMsgAMGetUserGameStats instance
         */
        CMsgAMGetUserGameStats.create = function create(properties) {
            return new CMsgAMGetUserGameStats(properties);
        };
    
        /**
         * Encodes the specified CMsgAMGetUserGameStats message. Does not implicitly {@link CMsgAMGetUserGameStats.verify|verify} messages.
         * @function encode
         * @memberof CMsgAMGetUserGameStats
         * @static
         * @param {ICMsgAMGetUserGameStats} message CMsgAMGetUserGameStats message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMGetUserGameStats.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamId != null && Object.hasOwnProperty.call(message, "steamId"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamId);
            if (message.gameId != null && Object.hasOwnProperty.call(message, "gameId"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.gameId);
            if (message.stats != null && message.stats.length)
                for (var i = 0; i < message.stats.length; ++i)
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.stats[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAMGetUserGameStats message, length delimited. Does not implicitly {@link CMsgAMGetUserGameStats.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAMGetUserGameStats
         * @static
         * @param {ICMsgAMGetUserGameStats} message CMsgAMGetUserGameStats message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMGetUserGameStats.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAMGetUserGameStats message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAMGetUserGameStats
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAMGetUserGameStats} CMsgAMGetUserGameStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMGetUserGameStats.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMGetUserGameStats();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamId = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.gameId = reader.fixed64();
                        break;
                    }
                case 3: {
                        if (!(message.stats && message.stats.length))
                            message.stats = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.stats.push(reader.uint32());
                        } else
                            message.stats.push(reader.uint32());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAMGetUserGameStats message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAMGetUserGameStats
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAMGetUserGameStats} CMsgAMGetUserGameStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMGetUserGameStats.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAMGetUserGameStats message.
         * @function verify
         * @memberof CMsgAMGetUserGameStats
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAMGetUserGameStats.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (!$util.isInteger(message.steamId) && !(message.steamId && $util.isInteger(message.steamId.low) && $util.isInteger(message.steamId.high)))
                    return "steamId: integer|Long expected";
            if (message.gameId != null && message.hasOwnProperty("gameId"))
                if (!$util.isInteger(message.gameId) && !(message.gameId && $util.isInteger(message.gameId.low) && $util.isInteger(message.gameId.high)))
                    return "gameId: integer|Long expected";
            if (message.stats != null && message.hasOwnProperty("stats")) {
                if (!Array.isArray(message.stats))
                    return "stats: array expected";
                for (var i = 0; i < message.stats.length; ++i)
                    if (!$util.isInteger(message.stats[i]))
                        return "stats: integer[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgAMGetUserGameStats message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAMGetUserGameStats
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAMGetUserGameStats} CMsgAMGetUserGameStats
         */
        CMsgAMGetUserGameStats.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAMGetUserGameStats)
                return object;
            var message = new $root.CMsgAMGetUserGameStats();
            if (object.steamId != null)
                if ($util.Long)
                    (message.steamId = $util.Long.fromValue(object.steamId)).unsigned = false;
                else if (typeof object.steamId === "string")
                    message.steamId = parseInt(object.steamId, 10);
                else if (typeof object.steamId === "number")
                    message.steamId = object.steamId;
                else if (typeof object.steamId === "object")
                    message.steamId = new $util.LongBits(object.steamId.low >>> 0, object.steamId.high >>> 0).toNumber();
            if (object.gameId != null)
                if ($util.Long)
                    (message.gameId = $util.Long.fromValue(object.gameId)).unsigned = false;
                else if (typeof object.gameId === "string")
                    message.gameId = parseInt(object.gameId, 10);
                else if (typeof object.gameId === "number")
                    message.gameId = object.gameId;
                else if (typeof object.gameId === "object")
                    message.gameId = new $util.LongBits(object.gameId.low >>> 0, object.gameId.high >>> 0).toNumber();
            if (object.stats) {
                if (!Array.isArray(object.stats))
                    throw TypeError(".CMsgAMGetUserGameStats.stats: array expected");
                message.stats = [];
                for (var i = 0; i < object.stats.length; ++i)
                    message.stats[i] = object.stats[i] >>> 0;
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAMGetUserGameStats message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAMGetUserGameStats
         * @static
         * @param {CMsgAMGetUserGameStats} message CMsgAMGetUserGameStats
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAMGetUserGameStats.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.stats = [];
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamId = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.gameId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.gameId = options.longs === String ? "0" : 0;
            }
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (typeof message.steamId === "number")
                    object.steamId = options.longs === String ? String(message.steamId) : message.steamId;
                else
                    object.steamId = options.longs === String ? $util.Long.prototype.toString.call(message.steamId) : options.longs === Number ? new $util.LongBits(message.steamId.low >>> 0, message.steamId.high >>> 0).toNumber() : message.steamId;
            if (message.gameId != null && message.hasOwnProperty("gameId"))
                if (typeof message.gameId === "number")
                    object.gameId = options.longs === String ? String(message.gameId) : message.gameId;
                else
                    object.gameId = options.longs === String ? $util.Long.prototype.toString.call(message.gameId) : options.longs === Number ? new $util.LongBits(message.gameId.low >>> 0, message.gameId.high >>> 0).toNumber() : message.gameId;
            if (message.stats && message.stats.length) {
                object.stats = [];
                for (var j = 0; j < message.stats.length; ++j)
                    object.stats[j] = message.stats[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgAMGetUserGameStats to JSON.
         * @function toJSON
         * @memberof CMsgAMGetUserGameStats
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAMGetUserGameStats.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAMGetUserGameStats
         * @function getTypeUrl
         * @memberof CMsgAMGetUserGameStats
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAMGetUserGameStats.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAMGetUserGameStats";
        };
    
        return CMsgAMGetUserGameStats;
    })();
    
    $root.CMsgAMGetUserGameStatsResponse = (function() {
    
        /**
         * Properties of a CMsgAMGetUserGameStatsResponse.
         * @exports ICMsgAMGetUserGameStatsResponse
         * @interface ICMsgAMGetUserGameStatsResponse
         * @property {number|Long|null} [steamId] CMsgAMGetUserGameStatsResponse steamId
         * @property {number|Long|null} [gameId] CMsgAMGetUserGameStatsResponse gameId
         * @property {number|null} [eresult] CMsgAMGetUserGameStatsResponse eresult
         * @property {Array.<CMsgAMGetUserGameStatsResponse.IStats>|null} [stats] CMsgAMGetUserGameStatsResponse stats
         * @property {Array.<CMsgAMGetUserGameStatsResponse.IAchievement_Blocks>|null} [achievementBlocks] CMsgAMGetUserGameStatsResponse achievementBlocks
         */
    
        /**
         * Constructs a new CMsgAMGetUserGameStatsResponse.
         * @exports CMsgAMGetUserGameStatsResponse
         * @classdesc Represents a CMsgAMGetUserGameStatsResponse.
         * @implements ICMsgAMGetUserGameStatsResponse
         * @constructor
         * @param {ICMsgAMGetUserGameStatsResponse=} [properties] Properties to set
         */
        function CMsgAMGetUserGameStatsResponse(properties) {
            this.stats = [];
            this.achievementBlocks = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAMGetUserGameStatsResponse steamId.
         * @member {number|Long} steamId
         * @memberof CMsgAMGetUserGameStatsResponse
         * @instance
         */
        CMsgAMGetUserGameStatsResponse.prototype.steamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgAMGetUserGameStatsResponse gameId.
         * @member {number|Long} gameId
         * @memberof CMsgAMGetUserGameStatsResponse
         * @instance
         */
        CMsgAMGetUserGameStatsResponse.prototype.gameId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgAMGetUserGameStatsResponse eresult.
         * @member {number} eresult
         * @memberof CMsgAMGetUserGameStatsResponse
         * @instance
         */
        CMsgAMGetUserGameStatsResponse.prototype.eresult = 2;
    
        /**
         * CMsgAMGetUserGameStatsResponse stats.
         * @member {Array.<CMsgAMGetUserGameStatsResponse.IStats>} stats
         * @memberof CMsgAMGetUserGameStatsResponse
         * @instance
         */
        CMsgAMGetUserGameStatsResponse.prototype.stats = $util.emptyArray;
    
        /**
         * CMsgAMGetUserGameStatsResponse achievementBlocks.
         * @member {Array.<CMsgAMGetUserGameStatsResponse.IAchievement_Blocks>} achievementBlocks
         * @memberof CMsgAMGetUserGameStatsResponse
         * @instance
         */
        CMsgAMGetUserGameStatsResponse.prototype.achievementBlocks = $util.emptyArray;
    
        /**
         * Creates a new CMsgAMGetUserGameStatsResponse instance using the specified properties.
         * @function create
         * @memberof CMsgAMGetUserGameStatsResponse
         * @static
         * @param {ICMsgAMGetUserGameStatsResponse=} [properties] Properties to set
         * @returns {CMsgAMGetUserGameStatsResponse} CMsgAMGetUserGameStatsResponse instance
         */
        CMsgAMGetUserGameStatsResponse.create = function create(properties) {
            return new CMsgAMGetUserGameStatsResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgAMGetUserGameStatsResponse message. Does not implicitly {@link CMsgAMGetUserGameStatsResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgAMGetUserGameStatsResponse
         * @static
         * @param {ICMsgAMGetUserGameStatsResponse} message CMsgAMGetUserGameStatsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMGetUserGameStatsResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamId != null && Object.hasOwnProperty.call(message, "steamId"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamId);
            if (message.gameId != null && Object.hasOwnProperty.call(message, "gameId"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.gameId);
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.eresult);
            if (message.stats != null && message.stats.length)
                for (var i = 0; i < message.stats.length; ++i)
                    $root.CMsgAMGetUserGameStatsResponse.Stats.encode(message.stats[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            if (message.achievementBlocks != null && message.achievementBlocks.length)
                for (var i = 0; i < message.achievementBlocks.length; ++i)
                    $root.CMsgAMGetUserGameStatsResponse.Achievement_Blocks.encode(message.achievementBlocks[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAMGetUserGameStatsResponse message, length delimited. Does not implicitly {@link CMsgAMGetUserGameStatsResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAMGetUserGameStatsResponse
         * @static
         * @param {ICMsgAMGetUserGameStatsResponse} message CMsgAMGetUserGameStatsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMGetUserGameStatsResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAMGetUserGameStatsResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAMGetUserGameStatsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAMGetUserGameStatsResponse} CMsgAMGetUserGameStatsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMGetUserGameStatsResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMGetUserGameStatsResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamId = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.gameId = reader.fixed64();
                        break;
                    }
                case 3: {
                        message.eresult = reader.int32();
                        break;
                    }
                case 4: {
                        if (!(message.stats && message.stats.length))
                            message.stats = [];
                        message.stats.push($root.CMsgAMGetUserGameStatsResponse.Stats.decode(reader, reader.uint32()));
                        break;
                    }
                case 5: {
                        if (!(message.achievementBlocks && message.achievementBlocks.length))
                            message.achievementBlocks = [];
                        message.achievementBlocks.push($root.CMsgAMGetUserGameStatsResponse.Achievement_Blocks.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAMGetUserGameStatsResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAMGetUserGameStatsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAMGetUserGameStatsResponse} CMsgAMGetUserGameStatsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMGetUserGameStatsResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAMGetUserGameStatsResponse message.
         * @function verify
         * @memberof CMsgAMGetUserGameStatsResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAMGetUserGameStatsResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (!$util.isInteger(message.steamId) && !(message.steamId && $util.isInteger(message.steamId.low) && $util.isInteger(message.steamId.high)))
                    return "steamId: integer|Long expected";
            if (message.gameId != null && message.hasOwnProperty("gameId"))
                if (!$util.isInteger(message.gameId) && !(message.gameId && $util.isInteger(message.gameId.low) && $util.isInteger(message.gameId.high)))
                    return "gameId: integer|Long expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.stats != null && message.hasOwnProperty("stats")) {
                if (!Array.isArray(message.stats))
                    return "stats: array expected";
                for (var i = 0; i < message.stats.length; ++i) {
                    var error = $root.CMsgAMGetUserGameStatsResponse.Stats.verify(message.stats[i]);
                    if (error)
                        return "stats." + error;
                }
            }
            if (message.achievementBlocks != null && message.hasOwnProperty("achievementBlocks")) {
                if (!Array.isArray(message.achievementBlocks))
                    return "achievementBlocks: array expected";
                for (var i = 0; i < message.achievementBlocks.length; ++i) {
                    var error = $root.CMsgAMGetUserGameStatsResponse.Achievement_Blocks.verify(message.achievementBlocks[i]);
                    if (error)
                        return "achievementBlocks." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgAMGetUserGameStatsResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAMGetUserGameStatsResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAMGetUserGameStatsResponse} CMsgAMGetUserGameStatsResponse
         */
        CMsgAMGetUserGameStatsResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAMGetUserGameStatsResponse)
                return object;
            var message = new $root.CMsgAMGetUserGameStatsResponse();
            if (object.steamId != null)
                if ($util.Long)
                    (message.steamId = $util.Long.fromValue(object.steamId)).unsigned = false;
                else if (typeof object.steamId === "string")
                    message.steamId = parseInt(object.steamId, 10);
                else if (typeof object.steamId === "number")
                    message.steamId = object.steamId;
                else if (typeof object.steamId === "object")
                    message.steamId = new $util.LongBits(object.steamId.low >>> 0, object.steamId.high >>> 0).toNumber();
            if (object.gameId != null)
                if ($util.Long)
                    (message.gameId = $util.Long.fromValue(object.gameId)).unsigned = false;
                else if (typeof object.gameId === "string")
                    message.gameId = parseInt(object.gameId, 10);
                else if (typeof object.gameId === "number")
                    message.gameId = object.gameId;
                else if (typeof object.gameId === "object")
                    message.gameId = new $util.LongBits(object.gameId.low >>> 0, object.gameId.high >>> 0).toNumber();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.stats) {
                if (!Array.isArray(object.stats))
                    throw TypeError(".CMsgAMGetUserGameStatsResponse.stats: array expected");
                message.stats = [];
                for (var i = 0; i < object.stats.length; ++i) {
                    if (typeof object.stats[i] !== "object")
                        throw TypeError(".CMsgAMGetUserGameStatsResponse.stats: object expected");
                    message.stats[i] = $root.CMsgAMGetUserGameStatsResponse.Stats.fromObject(object.stats[i]);
                }
            }
            if (object.achievementBlocks) {
                if (!Array.isArray(object.achievementBlocks))
                    throw TypeError(".CMsgAMGetUserGameStatsResponse.achievementBlocks: array expected");
                message.achievementBlocks = [];
                for (var i = 0; i < object.achievementBlocks.length; ++i) {
                    if (typeof object.achievementBlocks[i] !== "object")
                        throw TypeError(".CMsgAMGetUserGameStatsResponse.achievementBlocks: object expected");
                    message.achievementBlocks[i] = $root.CMsgAMGetUserGameStatsResponse.Achievement_Blocks.fromObject(object.achievementBlocks[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAMGetUserGameStatsResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAMGetUserGameStatsResponse
         * @static
         * @param {CMsgAMGetUserGameStatsResponse} message CMsgAMGetUserGameStatsResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAMGetUserGameStatsResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.stats = [];
                object.achievementBlocks = [];
            }
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamId = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.gameId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.gameId = options.longs === String ? "0" : 0;
                object.eresult = 2;
            }
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (typeof message.steamId === "number")
                    object.steamId = options.longs === String ? String(message.steamId) : message.steamId;
                else
                    object.steamId = options.longs === String ? $util.Long.prototype.toString.call(message.steamId) : options.longs === Number ? new $util.LongBits(message.steamId.low >>> 0, message.steamId.high >>> 0).toNumber() : message.steamId;
            if (message.gameId != null && message.hasOwnProperty("gameId"))
                if (typeof message.gameId === "number")
                    object.gameId = options.longs === String ? String(message.gameId) : message.gameId;
                else
                    object.gameId = options.longs === String ? $util.Long.prototype.toString.call(message.gameId) : options.longs === Number ? new $util.LongBits(message.gameId.low >>> 0, message.gameId.high >>> 0).toNumber() : message.gameId;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.stats && message.stats.length) {
                object.stats = [];
                for (var j = 0; j < message.stats.length; ++j)
                    object.stats[j] = $root.CMsgAMGetUserGameStatsResponse.Stats.toObject(message.stats[j], options);
            }
            if (message.achievementBlocks && message.achievementBlocks.length) {
                object.achievementBlocks = [];
                for (var j = 0; j < message.achievementBlocks.length; ++j)
                    object.achievementBlocks[j] = $root.CMsgAMGetUserGameStatsResponse.Achievement_Blocks.toObject(message.achievementBlocks[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgAMGetUserGameStatsResponse to JSON.
         * @function toJSON
         * @memberof CMsgAMGetUserGameStatsResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAMGetUserGameStatsResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAMGetUserGameStatsResponse
         * @function getTypeUrl
         * @memberof CMsgAMGetUserGameStatsResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAMGetUserGameStatsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAMGetUserGameStatsResponse";
        };
    
        CMsgAMGetUserGameStatsResponse.Stats = (function() {
    
            /**
             * Properties of a Stats.
             * @memberof CMsgAMGetUserGameStatsResponse
             * @interface IStats
             * @property {number|null} [statId] Stats statId
             * @property {number|null} [statValue] Stats statValue
             */
    
            /**
             * Constructs a new Stats.
             * @memberof CMsgAMGetUserGameStatsResponse
             * @classdesc Represents a Stats.
             * @implements IStats
             * @constructor
             * @param {CMsgAMGetUserGameStatsResponse.IStats=} [properties] Properties to set
             */
            function Stats(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Stats statId.
             * @member {number} statId
             * @memberof CMsgAMGetUserGameStatsResponse.Stats
             * @instance
             */
            Stats.prototype.statId = 0;
    
            /**
             * Stats statValue.
             * @member {number} statValue
             * @memberof CMsgAMGetUserGameStatsResponse.Stats
             * @instance
             */
            Stats.prototype.statValue = 0;
    
            /**
             * Creates a new Stats instance using the specified properties.
             * @function create
             * @memberof CMsgAMGetUserGameStatsResponse.Stats
             * @static
             * @param {CMsgAMGetUserGameStatsResponse.IStats=} [properties] Properties to set
             * @returns {CMsgAMGetUserGameStatsResponse.Stats} Stats instance
             */
            Stats.create = function create(properties) {
                return new Stats(properties);
            };
    
            /**
             * Encodes the specified Stats message. Does not implicitly {@link CMsgAMGetUserGameStatsResponse.Stats.verify|verify} messages.
             * @function encode
             * @memberof CMsgAMGetUserGameStatsResponse.Stats
             * @static
             * @param {CMsgAMGetUserGameStatsResponse.IStats} message Stats message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Stats.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.statId != null && Object.hasOwnProperty.call(message, "statId"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.statId);
                if (message.statValue != null && Object.hasOwnProperty.call(message, "statValue"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.statValue);
                return writer;
            };
    
            /**
             * Encodes the specified Stats message, length delimited. Does not implicitly {@link CMsgAMGetUserGameStatsResponse.Stats.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgAMGetUserGameStatsResponse.Stats
             * @static
             * @param {CMsgAMGetUserGameStatsResponse.IStats} message Stats message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Stats.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Stats message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgAMGetUserGameStatsResponse.Stats
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgAMGetUserGameStatsResponse.Stats} Stats
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Stats.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMGetUserGameStatsResponse.Stats();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.statId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.statValue = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Stats message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgAMGetUserGameStatsResponse.Stats
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgAMGetUserGameStatsResponse.Stats} Stats
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Stats.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Stats message.
             * @function verify
             * @memberof CMsgAMGetUserGameStatsResponse.Stats
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Stats.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.statId != null && message.hasOwnProperty("statId"))
                    if (!$util.isInteger(message.statId))
                        return "statId: integer expected";
                if (message.statValue != null && message.hasOwnProperty("statValue"))
                    if (!$util.isInteger(message.statValue))
                        return "statValue: integer expected";
                return null;
            };
    
            /**
             * Creates a Stats message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgAMGetUserGameStatsResponse.Stats
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgAMGetUserGameStatsResponse.Stats} Stats
             */
            Stats.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgAMGetUserGameStatsResponse.Stats)
                    return object;
                var message = new $root.CMsgAMGetUserGameStatsResponse.Stats();
                if (object.statId != null)
                    message.statId = object.statId >>> 0;
                if (object.statValue != null)
                    message.statValue = object.statValue >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a Stats message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgAMGetUserGameStatsResponse.Stats
             * @static
             * @param {CMsgAMGetUserGameStatsResponse.Stats} message Stats
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Stats.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.statId = 0;
                    object.statValue = 0;
                }
                if (message.statId != null && message.hasOwnProperty("statId"))
                    object.statId = message.statId;
                if (message.statValue != null && message.hasOwnProperty("statValue"))
                    object.statValue = message.statValue;
                return object;
            };
    
            /**
             * Converts this Stats to JSON.
             * @function toJSON
             * @memberof CMsgAMGetUserGameStatsResponse.Stats
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Stats.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for Stats
             * @function getTypeUrl
             * @memberof CMsgAMGetUserGameStatsResponse.Stats
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Stats.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgAMGetUserGameStatsResponse.Stats";
            };
    
            return Stats;
        })();
    
        CMsgAMGetUserGameStatsResponse.Achievement_Blocks = (function() {
    
            /**
             * Properties of an Achievement_Blocks.
             * @memberof CMsgAMGetUserGameStatsResponse
             * @interface IAchievement_Blocks
             * @property {number|null} [achievementId] Achievement_Blocks achievementId
             * @property {number|null} [achievementBitId] Achievement_Blocks achievementBitId
             * @property {number|null} [unlockTime] Achievement_Blocks unlockTime
             */
    
            /**
             * Constructs a new Achievement_Blocks.
             * @memberof CMsgAMGetUserGameStatsResponse
             * @classdesc Represents an Achievement_Blocks.
             * @implements IAchievement_Blocks
             * @constructor
             * @param {CMsgAMGetUserGameStatsResponse.IAchievement_Blocks=} [properties] Properties to set
             */
            function Achievement_Blocks(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Achievement_Blocks achievementId.
             * @member {number} achievementId
             * @memberof CMsgAMGetUserGameStatsResponse.Achievement_Blocks
             * @instance
             */
            Achievement_Blocks.prototype.achievementId = 0;
    
            /**
             * Achievement_Blocks achievementBitId.
             * @member {number} achievementBitId
             * @memberof CMsgAMGetUserGameStatsResponse.Achievement_Blocks
             * @instance
             */
            Achievement_Blocks.prototype.achievementBitId = 0;
    
            /**
             * Achievement_Blocks unlockTime.
             * @member {number} unlockTime
             * @memberof CMsgAMGetUserGameStatsResponse.Achievement_Blocks
             * @instance
             */
            Achievement_Blocks.prototype.unlockTime = 0;
    
            /**
             * Creates a new Achievement_Blocks instance using the specified properties.
             * @function create
             * @memberof CMsgAMGetUserGameStatsResponse.Achievement_Blocks
             * @static
             * @param {CMsgAMGetUserGameStatsResponse.IAchievement_Blocks=} [properties] Properties to set
             * @returns {CMsgAMGetUserGameStatsResponse.Achievement_Blocks} Achievement_Blocks instance
             */
            Achievement_Blocks.create = function create(properties) {
                return new Achievement_Blocks(properties);
            };
    
            /**
             * Encodes the specified Achievement_Blocks message. Does not implicitly {@link CMsgAMGetUserGameStatsResponse.Achievement_Blocks.verify|verify} messages.
             * @function encode
             * @memberof CMsgAMGetUserGameStatsResponse.Achievement_Blocks
             * @static
             * @param {CMsgAMGetUserGameStatsResponse.IAchievement_Blocks} message Achievement_Blocks message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Achievement_Blocks.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.achievementId != null && Object.hasOwnProperty.call(message, "achievementId"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.achievementId);
                if (message.achievementBitId != null && Object.hasOwnProperty.call(message, "achievementBitId"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.achievementBitId);
                if (message.unlockTime != null && Object.hasOwnProperty.call(message, "unlockTime"))
                    writer.uint32(/* id 3, wireType 5 =*/29).fixed32(message.unlockTime);
                return writer;
            };
    
            /**
             * Encodes the specified Achievement_Blocks message, length delimited. Does not implicitly {@link CMsgAMGetUserGameStatsResponse.Achievement_Blocks.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgAMGetUserGameStatsResponse.Achievement_Blocks
             * @static
             * @param {CMsgAMGetUserGameStatsResponse.IAchievement_Blocks} message Achievement_Blocks message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Achievement_Blocks.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an Achievement_Blocks message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgAMGetUserGameStatsResponse.Achievement_Blocks
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgAMGetUserGameStatsResponse.Achievement_Blocks} Achievement_Blocks
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Achievement_Blocks.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMGetUserGameStatsResponse.Achievement_Blocks();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.achievementId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.achievementBitId = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.unlockTime = reader.fixed32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an Achievement_Blocks message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgAMGetUserGameStatsResponse.Achievement_Blocks
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgAMGetUserGameStatsResponse.Achievement_Blocks} Achievement_Blocks
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Achievement_Blocks.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an Achievement_Blocks message.
             * @function verify
             * @memberof CMsgAMGetUserGameStatsResponse.Achievement_Blocks
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Achievement_Blocks.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.achievementId != null && message.hasOwnProperty("achievementId"))
                    if (!$util.isInteger(message.achievementId))
                        return "achievementId: integer expected";
                if (message.achievementBitId != null && message.hasOwnProperty("achievementBitId"))
                    if (!$util.isInteger(message.achievementBitId))
                        return "achievementBitId: integer expected";
                if (message.unlockTime != null && message.hasOwnProperty("unlockTime"))
                    if (!$util.isInteger(message.unlockTime))
                        return "unlockTime: integer expected";
                return null;
            };
    
            /**
             * Creates an Achievement_Blocks message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgAMGetUserGameStatsResponse.Achievement_Blocks
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgAMGetUserGameStatsResponse.Achievement_Blocks} Achievement_Blocks
             */
            Achievement_Blocks.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
                    return object;
                var message = new $root.CMsgAMGetUserGameStatsResponse.Achievement_Blocks();
                if (object.achievementId != null)
                    message.achievementId = object.achievementId >>> 0;
                if (object.achievementBitId != null)
                    message.achievementBitId = object.achievementBitId >>> 0;
                if (object.unlockTime != null)
                    message.unlockTime = object.unlockTime >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from an Achievement_Blocks message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgAMGetUserGameStatsResponse.Achievement_Blocks
             * @static
             * @param {CMsgAMGetUserGameStatsResponse.Achievement_Blocks} message Achievement_Blocks
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Achievement_Blocks.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.achievementId = 0;
                    object.achievementBitId = 0;
                    object.unlockTime = 0;
                }
                if (message.achievementId != null && message.hasOwnProperty("achievementId"))
                    object.achievementId = message.achievementId;
                if (message.achievementBitId != null && message.hasOwnProperty("achievementBitId"))
                    object.achievementBitId = message.achievementBitId;
                if (message.unlockTime != null && message.hasOwnProperty("unlockTime"))
                    object.unlockTime = message.unlockTime;
                return object;
            };
    
            /**
             * Converts this Achievement_Blocks to JSON.
             * @function toJSON
             * @memberof CMsgAMGetUserGameStatsResponse.Achievement_Blocks
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Achievement_Blocks.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for Achievement_Blocks
             * @function getTypeUrl
             * @memberof CMsgAMGetUserGameStatsResponse.Achievement_Blocks
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Achievement_Blocks.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgAMGetUserGameStatsResponse.Achievement_Blocks";
            };
    
            return Achievement_Blocks;
        })();
    
        return CMsgAMGetUserGameStatsResponse;
    })();
    
    $root.CMsgGCGetCommandList = (function() {
    
        /**
         * Properties of a CMsgGCGetCommandList.
         * @exports ICMsgGCGetCommandList
         * @interface ICMsgGCGetCommandList
         * @property {number|null} [appId] CMsgGCGetCommandList appId
         * @property {string|null} [commandPrefix] CMsgGCGetCommandList commandPrefix
         */
    
        /**
         * Constructs a new CMsgGCGetCommandList.
         * @exports CMsgGCGetCommandList
         * @classdesc Represents a CMsgGCGetCommandList.
         * @implements ICMsgGCGetCommandList
         * @constructor
         * @param {ICMsgGCGetCommandList=} [properties] Properties to set
         */
        function CMsgGCGetCommandList(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCGetCommandList appId.
         * @member {number} appId
         * @memberof CMsgGCGetCommandList
         * @instance
         */
        CMsgGCGetCommandList.prototype.appId = 0;
    
        /**
         * CMsgGCGetCommandList commandPrefix.
         * @member {string} commandPrefix
         * @memberof CMsgGCGetCommandList
         * @instance
         */
        CMsgGCGetCommandList.prototype.commandPrefix = "";
    
        /**
         * Creates a new CMsgGCGetCommandList instance using the specified properties.
         * @function create
         * @memberof CMsgGCGetCommandList
         * @static
         * @param {ICMsgGCGetCommandList=} [properties] Properties to set
         * @returns {CMsgGCGetCommandList} CMsgGCGetCommandList instance
         */
        CMsgGCGetCommandList.create = function create(properties) {
            return new CMsgGCGetCommandList(properties);
        };
    
        /**
         * Encodes the specified CMsgGCGetCommandList message. Does not implicitly {@link CMsgGCGetCommandList.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCGetCommandList
         * @static
         * @param {ICMsgGCGetCommandList} message CMsgGCGetCommandList message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetCommandList.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appId != null && Object.hasOwnProperty.call(message, "appId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appId);
            if (message.commandPrefix != null && Object.hasOwnProperty.call(message, "commandPrefix"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.commandPrefix);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCGetCommandList message, length delimited. Does not implicitly {@link CMsgGCGetCommandList.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCGetCommandList
         * @static
         * @param {ICMsgGCGetCommandList} message CMsgGCGetCommandList message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetCommandList.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCGetCommandList message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCGetCommandList
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCGetCommandList} CMsgGCGetCommandList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetCommandList.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCGetCommandList();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.appId = reader.uint32();
                        break;
                    }
                case 2: {
                        message.commandPrefix = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCGetCommandList message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCGetCommandList
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCGetCommandList} CMsgGCGetCommandList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetCommandList.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCGetCommandList message.
         * @function verify
         * @memberof CMsgGCGetCommandList
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCGetCommandList.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appId != null && message.hasOwnProperty("appId"))
                if (!$util.isInteger(message.appId))
                    return "appId: integer expected";
            if (message.commandPrefix != null && message.hasOwnProperty("commandPrefix"))
                if (!$util.isString(message.commandPrefix))
                    return "commandPrefix: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCGetCommandList message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCGetCommandList
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCGetCommandList} CMsgGCGetCommandList
         */
        CMsgGCGetCommandList.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCGetCommandList)
                return object;
            var message = new $root.CMsgGCGetCommandList();
            if (object.appId != null)
                message.appId = object.appId >>> 0;
            if (object.commandPrefix != null)
                message.commandPrefix = String(object.commandPrefix);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCGetCommandList message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCGetCommandList
         * @static
         * @param {CMsgGCGetCommandList} message CMsgGCGetCommandList
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCGetCommandList.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.appId = 0;
                object.commandPrefix = "";
            }
            if (message.appId != null && message.hasOwnProperty("appId"))
                object.appId = message.appId;
            if (message.commandPrefix != null && message.hasOwnProperty("commandPrefix"))
                object.commandPrefix = message.commandPrefix;
            return object;
        };
    
        /**
         * Converts this CMsgGCGetCommandList to JSON.
         * @function toJSON
         * @memberof CMsgGCGetCommandList
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCGetCommandList.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCGetCommandList
         * @function getTypeUrl
         * @memberof CMsgGCGetCommandList
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCGetCommandList.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCGetCommandList";
        };
    
        return CMsgGCGetCommandList;
    })();
    
    $root.CMsgGCGetCommandListResponse = (function() {
    
        /**
         * Properties of a CMsgGCGetCommandListResponse.
         * @exports ICMsgGCGetCommandListResponse
         * @interface ICMsgGCGetCommandListResponse
         * @property {Array.<string>|null} [commandName] CMsgGCGetCommandListResponse commandName
         */
    
        /**
         * Constructs a new CMsgGCGetCommandListResponse.
         * @exports CMsgGCGetCommandListResponse
         * @classdesc Represents a CMsgGCGetCommandListResponse.
         * @implements ICMsgGCGetCommandListResponse
         * @constructor
         * @param {ICMsgGCGetCommandListResponse=} [properties] Properties to set
         */
        function CMsgGCGetCommandListResponse(properties) {
            this.commandName = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCGetCommandListResponse commandName.
         * @member {Array.<string>} commandName
         * @memberof CMsgGCGetCommandListResponse
         * @instance
         */
        CMsgGCGetCommandListResponse.prototype.commandName = $util.emptyArray;
    
        /**
         * Creates a new CMsgGCGetCommandListResponse instance using the specified properties.
         * @function create
         * @memberof CMsgGCGetCommandListResponse
         * @static
         * @param {ICMsgGCGetCommandListResponse=} [properties] Properties to set
         * @returns {CMsgGCGetCommandListResponse} CMsgGCGetCommandListResponse instance
         */
        CMsgGCGetCommandListResponse.create = function create(properties) {
            return new CMsgGCGetCommandListResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgGCGetCommandListResponse message. Does not implicitly {@link CMsgGCGetCommandListResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCGetCommandListResponse
         * @static
         * @param {ICMsgGCGetCommandListResponse} message CMsgGCGetCommandListResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetCommandListResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.commandName != null && message.commandName.length)
                for (var i = 0; i < message.commandName.length; ++i)
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.commandName[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCGetCommandListResponse message, length delimited. Does not implicitly {@link CMsgGCGetCommandListResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCGetCommandListResponse
         * @static
         * @param {ICMsgGCGetCommandListResponse} message CMsgGCGetCommandListResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetCommandListResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCGetCommandListResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCGetCommandListResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCGetCommandListResponse} CMsgGCGetCommandListResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetCommandListResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCGetCommandListResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.commandName && message.commandName.length))
                            message.commandName = [];
                        message.commandName.push(reader.string());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCGetCommandListResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCGetCommandListResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCGetCommandListResponse} CMsgGCGetCommandListResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetCommandListResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCGetCommandListResponse message.
         * @function verify
         * @memberof CMsgGCGetCommandListResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCGetCommandListResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.commandName != null && message.hasOwnProperty("commandName")) {
                if (!Array.isArray(message.commandName))
                    return "commandName: array expected";
                for (var i = 0; i < message.commandName.length; ++i)
                    if (!$util.isString(message.commandName[i]))
                        return "commandName: string[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCGetCommandListResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCGetCommandListResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCGetCommandListResponse} CMsgGCGetCommandListResponse
         */
        CMsgGCGetCommandListResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCGetCommandListResponse)
                return object;
            var message = new $root.CMsgGCGetCommandListResponse();
            if (object.commandName) {
                if (!Array.isArray(object.commandName))
                    throw TypeError(".CMsgGCGetCommandListResponse.commandName: array expected");
                message.commandName = [];
                for (var i = 0; i < object.commandName.length; ++i)
                    message.commandName[i] = String(object.commandName[i]);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCGetCommandListResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCGetCommandListResponse
         * @static
         * @param {CMsgGCGetCommandListResponse} message CMsgGCGetCommandListResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCGetCommandListResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.commandName = [];
            if (message.commandName && message.commandName.length) {
                object.commandName = [];
                for (var j = 0; j < message.commandName.length; ++j)
                    object.commandName[j] = message.commandName[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgGCGetCommandListResponse to JSON.
         * @function toJSON
         * @memberof CMsgGCGetCommandListResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCGetCommandListResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCGetCommandListResponse
         * @function getTypeUrl
         * @memberof CMsgGCGetCommandListResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCGetCommandListResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCGetCommandListResponse";
        };
    
        return CMsgGCGetCommandListResponse;
    })();
    
    $root.CGCMsgMemCachedGet = (function() {
    
        /**
         * Properties of a CGCMsgMemCachedGet.
         * @exports ICGCMsgMemCachedGet
         * @interface ICGCMsgMemCachedGet
         * @property {Array.<string>|null} [keys] CGCMsgMemCachedGet keys
         */
    
        /**
         * Constructs a new CGCMsgMemCachedGet.
         * @exports CGCMsgMemCachedGet
         * @classdesc Represents a CGCMsgMemCachedGet.
         * @implements ICGCMsgMemCachedGet
         * @constructor
         * @param {ICGCMsgMemCachedGet=} [properties] Properties to set
         */
        function CGCMsgMemCachedGet(properties) {
            this.keys = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCMsgMemCachedGet keys.
         * @member {Array.<string>} keys
         * @memberof CGCMsgMemCachedGet
         * @instance
         */
        CGCMsgMemCachedGet.prototype.keys = $util.emptyArray;
    
        /**
         * Creates a new CGCMsgMemCachedGet instance using the specified properties.
         * @function create
         * @memberof CGCMsgMemCachedGet
         * @static
         * @param {ICGCMsgMemCachedGet=} [properties] Properties to set
         * @returns {CGCMsgMemCachedGet} CGCMsgMemCachedGet instance
         */
        CGCMsgMemCachedGet.create = function create(properties) {
            return new CGCMsgMemCachedGet(properties);
        };
    
        /**
         * Encodes the specified CGCMsgMemCachedGet message. Does not implicitly {@link CGCMsgMemCachedGet.verify|verify} messages.
         * @function encode
         * @memberof CGCMsgMemCachedGet
         * @static
         * @param {ICGCMsgMemCachedGet} message CGCMsgMemCachedGet message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgMemCachedGet.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.keys != null && message.keys.length)
                for (var i = 0; i < message.keys.length; ++i)
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.keys[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CGCMsgMemCachedGet message, length delimited. Does not implicitly {@link CGCMsgMemCachedGet.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCMsgMemCachedGet
         * @static
         * @param {ICGCMsgMemCachedGet} message CGCMsgMemCachedGet message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgMemCachedGet.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCMsgMemCachedGet message from the specified reader or buffer.
         * @function decode
         * @memberof CGCMsgMemCachedGet
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCMsgMemCachedGet} CGCMsgMemCachedGet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgMemCachedGet.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgMemCachedGet();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.keys && message.keys.length))
                            message.keys = [];
                        message.keys.push(reader.string());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCMsgMemCachedGet message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCMsgMemCachedGet
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCMsgMemCachedGet} CGCMsgMemCachedGet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgMemCachedGet.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCMsgMemCachedGet message.
         * @function verify
         * @memberof CGCMsgMemCachedGet
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCMsgMemCachedGet.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.keys != null && message.hasOwnProperty("keys")) {
                if (!Array.isArray(message.keys))
                    return "keys: array expected";
                for (var i = 0; i < message.keys.length; ++i)
                    if (!$util.isString(message.keys[i]))
                        return "keys: string[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CGCMsgMemCachedGet message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCMsgMemCachedGet
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCMsgMemCachedGet} CGCMsgMemCachedGet
         */
        CGCMsgMemCachedGet.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCMsgMemCachedGet)
                return object;
            var message = new $root.CGCMsgMemCachedGet();
            if (object.keys) {
                if (!Array.isArray(object.keys))
                    throw TypeError(".CGCMsgMemCachedGet.keys: array expected");
                message.keys = [];
                for (var i = 0; i < object.keys.length; ++i)
                    message.keys[i] = String(object.keys[i]);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CGCMsgMemCachedGet message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCMsgMemCachedGet
         * @static
         * @param {CGCMsgMemCachedGet} message CGCMsgMemCachedGet
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCMsgMemCachedGet.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.keys = [];
            if (message.keys && message.keys.length) {
                object.keys = [];
                for (var j = 0; j < message.keys.length; ++j)
                    object.keys[j] = message.keys[j];
            }
            return object;
        };
    
        /**
         * Converts this CGCMsgMemCachedGet to JSON.
         * @function toJSON
         * @memberof CGCMsgMemCachedGet
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCMsgMemCachedGet.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCMsgMemCachedGet
         * @function getTypeUrl
         * @memberof CGCMsgMemCachedGet
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCMsgMemCachedGet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCMsgMemCachedGet";
        };
    
        return CGCMsgMemCachedGet;
    })();
    
    $root.CGCMsgMemCachedGetResponse = (function() {
    
        /**
         * Properties of a CGCMsgMemCachedGetResponse.
         * @exports ICGCMsgMemCachedGetResponse
         * @interface ICGCMsgMemCachedGetResponse
         * @property {Array.<CGCMsgMemCachedGetResponse.IValueTag>|null} [values] CGCMsgMemCachedGetResponse values
         */
    
        /**
         * Constructs a new CGCMsgMemCachedGetResponse.
         * @exports CGCMsgMemCachedGetResponse
         * @classdesc Represents a CGCMsgMemCachedGetResponse.
         * @implements ICGCMsgMemCachedGetResponse
         * @constructor
         * @param {ICGCMsgMemCachedGetResponse=} [properties] Properties to set
         */
        function CGCMsgMemCachedGetResponse(properties) {
            this.values = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCMsgMemCachedGetResponse values.
         * @member {Array.<CGCMsgMemCachedGetResponse.IValueTag>} values
         * @memberof CGCMsgMemCachedGetResponse
         * @instance
         */
        CGCMsgMemCachedGetResponse.prototype.values = $util.emptyArray;
    
        /**
         * Creates a new CGCMsgMemCachedGetResponse instance using the specified properties.
         * @function create
         * @memberof CGCMsgMemCachedGetResponse
         * @static
         * @param {ICGCMsgMemCachedGetResponse=} [properties] Properties to set
         * @returns {CGCMsgMemCachedGetResponse} CGCMsgMemCachedGetResponse instance
         */
        CGCMsgMemCachedGetResponse.create = function create(properties) {
            return new CGCMsgMemCachedGetResponse(properties);
        };
    
        /**
         * Encodes the specified CGCMsgMemCachedGetResponse message. Does not implicitly {@link CGCMsgMemCachedGetResponse.verify|verify} messages.
         * @function encode
         * @memberof CGCMsgMemCachedGetResponse
         * @static
         * @param {ICGCMsgMemCachedGetResponse} message CGCMsgMemCachedGetResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgMemCachedGetResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.values != null && message.values.length)
                for (var i = 0; i < message.values.length; ++i)
                    $root.CGCMsgMemCachedGetResponse.ValueTag.encode(message.values[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CGCMsgMemCachedGetResponse message, length delimited. Does not implicitly {@link CGCMsgMemCachedGetResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCMsgMemCachedGetResponse
         * @static
         * @param {ICGCMsgMemCachedGetResponse} message CGCMsgMemCachedGetResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgMemCachedGetResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCMsgMemCachedGetResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CGCMsgMemCachedGetResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCMsgMemCachedGetResponse} CGCMsgMemCachedGetResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgMemCachedGetResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgMemCachedGetResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.values && message.values.length))
                            message.values = [];
                        message.values.push($root.CGCMsgMemCachedGetResponse.ValueTag.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCMsgMemCachedGetResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCMsgMemCachedGetResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCMsgMemCachedGetResponse} CGCMsgMemCachedGetResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgMemCachedGetResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCMsgMemCachedGetResponse message.
         * @function verify
         * @memberof CGCMsgMemCachedGetResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCMsgMemCachedGetResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.values != null && message.hasOwnProperty("values")) {
                if (!Array.isArray(message.values))
                    return "values: array expected";
                for (var i = 0; i < message.values.length; ++i) {
                    var error = $root.CGCMsgMemCachedGetResponse.ValueTag.verify(message.values[i]);
                    if (error)
                        return "values." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CGCMsgMemCachedGetResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCMsgMemCachedGetResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCMsgMemCachedGetResponse} CGCMsgMemCachedGetResponse
         */
        CGCMsgMemCachedGetResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCMsgMemCachedGetResponse)
                return object;
            var message = new $root.CGCMsgMemCachedGetResponse();
            if (object.values) {
                if (!Array.isArray(object.values))
                    throw TypeError(".CGCMsgMemCachedGetResponse.values: array expected");
                message.values = [];
                for (var i = 0; i < object.values.length; ++i) {
                    if (typeof object.values[i] !== "object")
                        throw TypeError(".CGCMsgMemCachedGetResponse.values: object expected");
                    message.values[i] = $root.CGCMsgMemCachedGetResponse.ValueTag.fromObject(object.values[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CGCMsgMemCachedGetResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCMsgMemCachedGetResponse
         * @static
         * @param {CGCMsgMemCachedGetResponse} message CGCMsgMemCachedGetResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCMsgMemCachedGetResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.values = [];
            if (message.values && message.values.length) {
                object.values = [];
                for (var j = 0; j < message.values.length; ++j)
                    object.values[j] = $root.CGCMsgMemCachedGetResponse.ValueTag.toObject(message.values[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CGCMsgMemCachedGetResponse to JSON.
         * @function toJSON
         * @memberof CGCMsgMemCachedGetResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCMsgMemCachedGetResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCMsgMemCachedGetResponse
         * @function getTypeUrl
         * @memberof CGCMsgMemCachedGetResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCMsgMemCachedGetResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCMsgMemCachedGetResponse";
        };
    
        CGCMsgMemCachedGetResponse.ValueTag = (function() {
    
            /**
             * Properties of a ValueTag.
             * @memberof CGCMsgMemCachedGetResponse
             * @interface IValueTag
             * @property {boolean|null} [found] ValueTag found
             * @property {Uint8Array|null} [value] ValueTag value
             */
    
            /**
             * Constructs a new ValueTag.
             * @memberof CGCMsgMemCachedGetResponse
             * @classdesc Represents a ValueTag.
             * @implements IValueTag
             * @constructor
             * @param {CGCMsgMemCachedGetResponse.IValueTag=} [properties] Properties to set
             */
            function ValueTag(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * ValueTag found.
             * @member {boolean} found
             * @memberof CGCMsgMemCachedGetResponse.ValueTag
             * @instance
             */
            ValueTag.prototype.found = false;
    
            /**
             * ValueTag value.
             * @member {Uint8Array} value
             * @memberof CGCMsgMemCachedGetResponse.ValueTag
             * @instance
             */
            ValueTag.prototype.value = $util.newBuffer([]);
    
            /**
             * Creates a new ValueTag instance using the specified properties.
             * @function create
             * @memberof CGCMsgMemCachedGetResponse.ValueTag
             * @static
             * @param {CGCMsgMemCachedGetResponse.IValueTag=} [properties] Properties to set
             * @returns {CGCMsgMemCachedGetResponse.ValueTag} ValueTag instance
             */
            ValueTag.create = function create(properties) {
                return new ValueTag(properties);
            };
    
            /**
             * Encodes the specified ValueTag message. Does not implicitly {@link CGCMsgMemCachedGetResponse.ValueTag.verify|verify} messages.
             * @function encode
             * @memberof CGCMsgMemCachedGetResponse.ValueTag
             * @static
             * @param {CGCMsgMemCachedGetResponse.IValueTag} message ValueTag message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ValueTag.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.found != null && Object.hasOwnProperty.call(message, "found"))
                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.found);
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                return writer;
            };
    
            /**
             * Encodes the specified ValueTag message, length delimited. Does not implicitly {@link CGCMsgMemCachedGetResponse.ValueTag.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CGCMsgMemCachedGetResponse.ValueTag
             * @static
             * @param {CGCMsgMemCachedGetResponse.IValueTag} message ValueTag message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ValueTag.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a ValueTag message from the specified reader or buffer.
             * @function decode
             * @memberof CGCMsgMemCachedGetResponse.ValueTag
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CGCMsgMemCachedGetResponse.ValueTag} ValueTag
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ValueTag.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgMemCachedGetResponse.ValueTag();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.found = reader.bool();
                            break;
                        }
                    case 2: {
                            message.value = reader.bytes();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a ValueTag message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CGCMsgMemCachedGetResponse.ValueTag
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CGCMsgMemCachedGetResponse.ValueTag} ValueTag
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ValueTag.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a ValueTag message.
             * @function verify
             * @memberof CGCMsgMemCachedGetResponse.ValueTag
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ValueTag.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.found != null && message.hasOwnProperty("found"))
                    if (typeof message.found !== "boolean")
                        return "found: boolean expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                        return "value: buffer expected";
                return null;
            };
    
            /**
             * Creates a ValueTag message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CGCMsgMemCachedGetResponse.ValueTag
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CGCMsgMemCachedGetResponse.ValueTag} ValueTag
             */
            ValueTag.fromObject = function fromObject(object) {
                if (object instanceof $root.CGCMsgMemCachedGetResponse.ValueTag)
                    return object;
                var message = new $root.CGCMsgMemCachedGetResponse.ValueTag();
                if (object.found != null)
                    message.found = Boolean(object.found);
                if (object.value != null)
                    if (typeof object.value === "string")
                        $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                    else if (object.value.length >= 0)
                        message.value = object.value;
                return message;
            };
    
            /**
             * Creates a plain object from a ValueTag message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CGCMsgMemCachedGetResponse.ValueTag
             * @static
             * @param {CGCMsgMemCachedGetResponse.ValueTag} message ValueTag
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ValueTag.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.found = false;
                    if (options.bytes === String)
                        object.value = "";
                    else {
                        object.value = [];
                        if (options.bytes !== Array)
                            object.value = $util.newBuffer(object.value);
                    }
                }
                if (message.found != null && message.hasOwnProperty("found"))
                    object.found = message.found;
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                return object;
            };
    
            /**
             * Converts this ValueTag to JSON.
             * @function toJSON
             * @memberof CGCMsgMemCachedGetResponse.ValueTag
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ValueTag.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for ValueTag
             * @function getTypeUrl
             * @memberof CGCMsgMemCachedGetResponse.ValueTag
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ValueTag.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CGCMsgMemCachedGetResponse.ValueTag";
            };
    
            return ValueTag;
        })();
    
        return CGCMsgMemCachedGetResponse;
    })();
    
    $root.CGCMsgMemCachedSet = (function() {
    
        /**
         * Properties of a CGCMsgMemCachedSet.
         * @exports ICGCMsgMemCachedSet
         * @interface ICGCMsgMemCachedSet
         * @property {Array.<CGCMsgMemCachedSet.IKeyPair>|null} [keys] CGCMsgMemCachedSet keys
         */
    
        /**
         * Constructs a new CGCMsgMemCachedSet.
         * @exports CGCMsgMemCachedSet
         * @classdesc Represents a CGCMsgMemCachedSet.
         * @implements ICGCMsgMemCachedSet
         * @constructor
         * @param {ICGCMsgMemCachedSet=} [properties] Properties to set
         */
        function CGCMsgMemCachedSet(properties) {
            this.keys = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCMsgMemCachedSet keys.
         * @member {Array.<CGCMsgMemCachedSet.IKeyPair>} keys
         * @memberof CGCMsgMemCachedSet
         * @instance
         */
        CGCMsgMemCachedSet.prototype.keys = $util.emptyArray;
    
        /**
         * Creates a new CGCMsgMemCachedSet instance using the specified properties.
         * @function create
         * @memberof CGCMsgMemCachedSet
         * @static
         * @param {ICGCMsgMemCachedSet=} [properties] Properties to set
         * @returns {CGCMsgMemCachedSet} CGCMsgMemCachedSet instance
         */
        CGCMsgMemCachedSet.create = function create(properties) {
            return new CGCMsgMemCachedSet(properties);
        };
    
        /**
         * Encodes the specified CGCMsgMemCachedSet message. Does not implicitly {@link CGCMsgMemCachedSet.verify|verify} messages.
         * @function encode
         * @memberof CGCMsgMemCachedSet
         * @static
         * @param {ICGCMsgMemCachedSet} message CGCMsgMemCachedSet message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgMemCachedSet.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.keys != null && message.keys.length)
                for (var i = 0; i < message.keys.length; ++i)
                    $root.CGCMsgMemCachedSet.KeyPair.encode(message.keys[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CGCMsgMemCachedSet message, length delimited. Does not implicitly {@link CGCMsgMemCachedSet.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCMsgMemCachedSet
         * @static
         * @param {ICGCMsgMemCachedSet} message CGCMsgMemCachedSet message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgMemCachedSet.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCMsgMemCachedSet message from the specified reader or buffer.
         * @function decode
         * @memberof CGCMsgMemCachedSet
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCMsgMemCachedSet} CGCMsgMemCachedSet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgMemCachedSet.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgMemCachedSet();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.keys && message.keys.length))
                            message.keys = [];
                        message.keys.push($root.CGCMsgMemCachedSet.KeyPair.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCMsgMemCachedSet message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCMsgMemCachedSet
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCMsgMemCachedSet} CGCMsgMemCachedSet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgMemCachedSet.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCMsgMemCachedSet message.
         * @function verify
         * @memberof CGCMsgMemCachedSet
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCMsgMemCachedSet.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.keys != null && message.hasOwnProperty("keys")) {
                if (!Array.isArray(message.keys))
                    return "keys: array expected";
                for (var i = 0; i < message.keys.length; ++i) {
                    var error = $root.CGCMsgMemCachedSet.KeyPair.verify(message.keys[i]);
                    if (error)
                        return "keys." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CGCMsgMemCachedSet message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCMsgMemCachedSet
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCMsgMemCachedSet} CGCMsgMemCachedSet
         */
        CGCMsgMemCachedSet.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCMsgMemCachedSet)
                return object;
            var message = new $root.CGCMsgMemCachedSet();
            if (object.keys) {
                if (!Array.isArray(object.keys))
                    throw TypeError(".CGCMsgMemCachedSet.keys: array expected");
                message.keys = [];
                for (var i = 0; i < object.keys.length; ++i) {
                    if (typeof object.keys[i] !== "object")
                        throw TypeError(".CGCMsgMemCachedSet.keys: object expected");
                    message.keys[i] = $root.CGCMsgMemCachedSet.KeyPair.fromObject(object.keys[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CGCMsgMemCachedSet message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCMsgMemCachedSet
         * @static
         * @param {CGCMsgMemCachedSet} message CGCMsgMemCachedSet
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCMsgMemCachedSet.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.keys = [];
            if (message.keys && message.keys.length) {
                object.keys = [];
                for (var j = 0; j < message.keys.length; ++j)
                    object.keys[j] = $root.CGCMsgMemCachedSet.KeyPair.toObject(message.keys[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CGCMsgMemCachedSet to JSON.
         * @function toJSON
         * @memberof CGCMsgMemCachedSet
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCMsgMemCachedSet.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCMsgMemCachedSet
         * @function getTypeUrl
         * @memberof CGCMsgMemCachedSet
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCMsgMemCachedSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCMsgMemCachedSet";
        };
    
        CGCMsgMemCachedSet.KeyPair = (function() {
    
            /**
             * Properties of a KeyPair.
             * @memberof CGCMsgMemCachedSet
             * @interface IKeyPair
             * @property {string|null} [name] KeyPair name
             * @property {Uint8Array|null} [value] KeyPair value
             */
    
            /**
             * Constructs a new KeyPair.
             * @memberof CGCMsgMemCachedSet
             * @classdesc Represents a KeyPair.
             * @implements IKeyPair
             * @constructor
             * @param {CGCMsgMemCachedSet.IKeyPair=} [properties] Properties to set
             */
            function KeyPair(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * KeyPair name.
             * @member {string} name
             * @memberof CGCMsgMemCachedSet.KeyPair
             * @instance
             */
            KeyPair.prototype.name = "";
    
            /**
             * KeyPair value.
             * @member {Uint8Array} value
             * @memberof CGCMsgMemCachedSet.KeyPair
             * @instance
             */
            KeyPair.prototype.value = $util.newBuffer([]);
    
            /**
             * Creates a new KeyPair instance using the specified properties.
             * @function create
             * @memberof CGCMsgMemCachedSet.KeyPair
             * @static
             * @param {CGCMsgMemCachedSet.IKeyPair=} [properties] Properties to set
             * @returns {CGCMsgMemCachedSet.KeyPair} KeyPair instance
             */
            KeyPair.create = function create(properties) {
                return new KeyPair(properties);
            };
    
            /**
             * Encodes the specified KeyPair message. Does not implicitly {@link CGCMsgMemCachedSet.KeyPair.verify|verify} messages.
             * @function encode
             * @memberof CGCMsgMemCachedSet.KeyPair
             * @static
             * @param {CGCMsgMemCachedSet.IKeyPair} message KeyPair message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            KeyPair.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                return writer;
            };
    
            /**
             * Encodes the specified KeyPair message, length delimited. Does not implicitly {@link CGCMsgMemCachedSet.KeyPair.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CGCMsgMemCachedSet.KeyPair
             * @static
             * @param {CGCMsgMemCachedSet.IKeyPair} message KeyPair message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            KeyPair.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a KeyPair message from the specified reader or buffer.
             * @function decode
             * @memberof CGCMsgMemCachedSet.KeyPair
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CGCMsgMemCachedSet.KeyPair} KeyPair
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            KeyPair.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgMemCachedSet.KeyPair();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.name = reader.string();
                            break;
                        }
                    case 2: {
                            message.value = reader.bytes();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a KeyPair message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CGCMsgMemCachedSet.KeyPair
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CGCMsgMemCachedSet.KeyPair} KeyPair
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            KeyPair.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a KeyPair message.
             * @function verify
             * @memberof CGCMsgMemCachedSet.KeyPair
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            KeyPair.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.name != null && message.hasOwnProperty("name"))
                    if (!$util.isString(message.name))
                        return "name: string expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                        return "value: buffer expected";
                return null;
            };
    
            /**
             * Creates a KeyPair message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CGCMsgMemCachedSet.KeyPair
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CGCMsgMemCachedSet.KeyPair} KeyPair
             */
            KeyPair.fromObject = function fromObject(object) {
                if (object instanceof $root.CGCMsgMemCachedSet.KeyPair)
                    return object;
                var message = new $root.CGCMsgMemCachedSet.KeyPair();
                if (object.name != null)
                    message.name = String(object.name);
                if (object.value != null)
                    if (typeof object.value === "string")
                        $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                    else if (object.value.length >= 0)
                        message.value = object.value;
                return message;
            };
    
            /**
             * Creates a plain object from a KeyPair message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CGCMsgMemCachedSet.KeyPair
             * @static
             * @param {CGCMsgMemCachedSet.KeyPair} message KeyPair
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            KeyPair.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.name = "";
                    if (options.bytes === String)
                        object.value = "";
                    else {
                        object.value = [];
                        if (options.bytes !== Array)
                            object.value = $util.newBuffer(object.value);
                    }
                }
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                return object;
            };
    
            /**
             * Converts this KeyPair to JSON.
             * @function toJSON
             * @memberof CGCMsgMemCachedSet.KeyPair
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            KeyPair.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for KeyPair
             * @function getTypeUrl
             * @memberof CGCMsgMemCachedSet.KeyPair
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            KeyPair.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CGCMsgMemCachedSet.KeyPair";
            };
    
            return KeyPair;
        })();
    
        return CGCMsgMemCachedSet;
    })();
    
    $root.CGCMsgMemCachedDelete = (function() {
    
        /**
         * Properties of a CGCMsgMemCachedDelete.
         * @exports ICGCMsgMemCachedDelete
         * @interface ICGCMsgMemCachedDelete
         * @property {Array.<string>|null} [keys] CGCMsgMemCachedDelete keys
         */
    
        /**
         * Constructs a new CGCMsgMemCachedDelete.
         * @exports CGCMsgMemCachedDelete
         * @classdesc Represents a CGCMsgMemCachedDelete.
         * @implements ICGCMsgMemCachedDelete
         * @constructor
         * @param {ICGCMsgMemCachedDelete=} [properties] Properties to set
         */
        function CGCMsgMemCachedDelete(properties) {
            this.keys = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCMsgMemCachedDelete keys.
         * @member {Array.<string>} keys
         * @memberof CGCMsgMemCachedDelete
         * @instance
         */
        CGCMsgMemCachedDelete.prototype.keys = $util.emptyArray;
    
        /**
         * Creates a new CGCMsgMemCachedDelete instance using the specified properties.
         * @function create
         * @memberof CGCMsgMemCachedDelete
         * @static
         * @param {ICGCMsgMemCachedDelete=} [properties] Properties to set
         * @returns {CGCMsgMemCachedDelete} CGCMsgMemCachedDelete instance
         */
        CGCMsgMemCachedDelete.create = function create(properties) {
            return new CGCMsgMemCachedDelete(properties);
        };
    
        /**
         * Encodes the specified CGCMsgMemCachedDelete message. Does not implicitly {@link CGCMsgMemCachedDelete.verify|verify} messages.
         * @function encode
         * @memberof CGCMsgMemCachedDelete
         * @static
         * @param {ICGCMsgMemCachedDelete} message CGCMsgMemCachedDelete message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgMemCachedDelete.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.keys != null && message.keys.length)
                for (var i = 0; i < message.keys.length; ++i)
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.keys[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CGCMsgMemCachedDelete message, length delimited. Does not implicitly {@link CGCMsgMemCachedDelete.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCMsgMemCachedDelete
         * @static
         * @param {ICGCMsgMemCachedDelete} message CGCMsgMemCachedDelete message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgMemCachedDelete.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCMsgMemCachedDelete message from the specified reader or buffer.
         * @function decode
         * @memberof CGCMsgMemCachedDelete
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCMsgMemCachedDelete} CGCMsgMemCachedDelete
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgMemCachedDelete.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgMemCachedDelete();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.keys && message.keys.length))
                            message.keys = [];
                        message.keys.push(reader.string());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCMsgMemCachedDelete message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCMsgMemCachedDelete
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCMsgMemCachedDelete} CGCMsgMemCachedDelete
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgMemCachedDelete.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCMsgMemCachedDelete message.
         * @function verify
         * @memberof CGCMsgMemCachedDelete
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCMsgMemCachedDelete.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.keys != null && message.hasOwnProperty("keys")) {
                if (!Array.isArray(message.keys))
                    return "keys: array expected";
                for (var i = 0; i < message.keys.length; ++i)
                    if (!$util.isString(message.keys[i]))
                        return "keys: string[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CGCMsgMemCachedDelete message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCMsgMemCachedDelete
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCMsgMemCachedDelete} CGCMsgMemCachedDelete
         */
        CGCMsgMemCachedDelete.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCMsgMemCachedDelete)
                return object;
            var message = new $root.CGCMsgMemCachedDelete();
            if (object.keys) {
                if (!Array.isArray(object.keys))
                    throw TypeError(".CGCMsgMemCachedDelete.keys: array expected");
                message.keys = [];
                for (var i = 0; i < object.keys.length; ++i)
                    message.keys[i] = String(object.keys[i]);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CGCMsgMemCachedDelete message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCMsgMemCachedDelete
         * @static
         * @param {CGCMsgMemCachedDelete} message CGCMsgMemCachedDelete
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCMsgMemCachedDelete.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.keys = [];
            if (message.keys && message.keys.length) {
                object.keys = [];
                for (var j = 0; j < message.keys.length; ++j)
                    object.keys[j] = message.keys[j];
            }
            return object;
        };
    
        /**
         * Converts this CGCMsgMemCachedDelete to JSON.
         * @function toJSON
         * @memberof CGCMsgMemCachedDelete
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCMsgMemCachedDelete.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCMsgMemCachedDelete
         * @function getTypeUrl
         * @memberof CGCMsgMemCachedDelete
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCMsgMemCachedDelete.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCMsgMemCachedDelete";
        };
    
        return CGCMsgMemCachedDelete;
    })();
    
    $root.CGCMsgMemCachedStats = (function() {
    
        /**
         * Properties of a CGCMsgMemCachedStats.
         * @exports ICGCMsgMemCachedStats
         * @interface ICGCMsgMemCachedStats
         */
    
        /**
         * Constructs a new CGCMsgMemCachedStats.
         * @exports CGCMsgMemCachedStats
         * @classdesc Represents a CGCMsgMemCachedStats.
         * @implements ICGCMsgMemCachedStats
         * @constructor
         * @param {ICGCMsgMemCachedStats=} [properties] Properties to set
         */
        function CGCMsgMemCachedStats(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CGCMsgMemCachedStats instance using the specified properties.
         * @function create
         * @memberof CGCMsgMemCachedStats
         * @static
         * @param {ICGCMsgMemCachedStats=} [properties] Properties to set
         * @returns {CGCMsgMemCachedStats} CGCMsgMemCachedStats instance
         */
        CGCMsgMemCachedStats.create = function create(properties) {
            return new CGCMsgMemCachedStats(properties);
        };
    
        /**
         * Encodes the specified CGCMsgMemCachedStats message. Does not implicitly {@link CGCMsgMemCachedStats.verify|verify} messages.
         * @function encode
         * @memberof CGCMsgMemCachedStats
         * @static
         * @param {ICGCMsgMemCachedStats} message CGCMsgMemCachedStats message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgMemCachedStats.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CGCMsgMemCachedStats message, length delimited. Does not implicitly {@link CGCMsgMemCachedStats.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCMsgMemCachedStats
         * @static
         * @param {ICGCMsgMemCachedStats} message CGCMsgMemCachedStats message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgMemCachedStats.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCMsgMemCachedStats message from the specified reader or buffer.
         * @function decode
         * @memberof CGCMsgMemCachedStats
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCMsgMemCachedStats} CGCMsgMemCachedStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgMemCachedStats.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgMemCachedStats();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCMsgMemCachedStats message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCMsgMemCachedStats
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCMsgMemCachedStats} CGCMsgMemCachedStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgMemCachedStats.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCMsgMemCachedStats message.
         * @function verify
         * @memberof CGCMsgMemCachedStats
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCMsgMemCachedStats.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CGCMsgMemCachedStats message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCMsgMemCachedStats
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCMsgMemCachedStats} CGCMsgMemCachedStats
         */
        CGCMsgMemCachedStats.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCMsgMemCachedStats)
                return object;
            return new $root.CGCMsgMemCachedStats();
        };
    
        /**
         * Creates a plain object from a CGCMsgMemCachedStats message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCMsgMemCachedStats
         * @static
         * @param {CGCMsgMemCachedStats} message CGCMsgMemCachedStats
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCMsgMemCachedStats.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CGCMsgMemCachedStats to JSON.
         * @function toJSON
         * @memberof CGCMsgMemCachedStats
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCMsgMemCachedStats.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCMsgMemCachedStats
         * @function getTypeUrl
         * @memberof CGCMsgMemCachedStats
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCMsgMemCachedStats.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCMsgMemCachedStats";
        };
    
        return CGCMsgMemCachedStats;
    })();
    
    $root.CGCMsgMemCachedStatsResponse = (function() {
    
        /**
         * Properties of a CGCMsgMemCachedStatsResponse.
         * @exports ICGCMsgMemCachedStatsResponse
         * @interface ICGCMsgMemCachedStatsResponse
         * @property {number|Long|null} [currConnections] CGCMsgMemCachedStatsResponse currConnections
         * @property {number|Long|null} [cmdGet] CGCMsgMemCachedStatsResponse cmdGet
         * @property {number|Long|null} [cmdSet] CGCMsgMemCachedStatsResponse cmdSet
         * @property {number|Long|null} [cmdFlush] CGCMsgMemCachedStatsResponse cmdFlush
         * @property {number|Long|null} [getHits] CGCMsgMemCachedStatsResponse getHits
         * @property {number|Long|null} [getMisses] CGCMsgMemCachedStatsResponse getMisses
         * @property {number|Long|null} [deleteHits] CGCMsgMemCachedStatsResponse deleteHits
         * @property {number|Long|null} [deleteMisses] CGCMsgMemCachedStatsResponse deleteMisses
         * @property {number|Long|null} [bytesRead] CGCMsgMemCachedStatsResponse bytesRead
         * @property {number|Long|null} [bytesWritten] CGCMsgMemCachedStatsResponse bytesWritten
         * @property {number|Long|null} [limitMaxbytes] CGCMsgMemCachedStatsResponse limitMaxbytes
         * @property {number|Long|null} [currItems] CGCMsgMemCachedStatsResponse currItems
         * @property {number|Long|null} [evictions] CGCMsgMemCachedStatsResponse evictions
         * @property {number|Long|null} [bytes] CGCMsgMemCachedStatsResponse bytes
         */
    
        /**
         * Constructs a new CGCMsgMemCachedStatsResponse.
         * @exports CGCMsgMemCachedStatsResponse
         * @classdesc Represents a CGCMsgMemCachedStatsResponse.
         * @implements ICGCMsgMemCachedStatsResponse
         * @constructor
         * @param {ICGCMsgMemCachedStatsResponse=} [properties] Properties to set
         */
        function CGCMsgMemCachedStatsResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCMsgMemCachedStatsResponse currConnections.
         * @member {number|Long} currConnections
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         */
        CGCMsgMemCachedStatsResponse.prototype.currConnections = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CGCMsgMemCachedStatsResponse cmdGet.
         * @member {number|Long} cmdGet
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         */
        CGCMsgMemCachedStatsResponse.prototype.cmdGet = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CGCMsgMemCachedStatsResponse cmdSet.
         * @member {number|Long} cmdSet
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         */
        CGCMsgMemCachedStatsResponse.prototype.cmdSet = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CGCMsgMemCachedStatsResponse cmdFlush.
         * @member {number|Long} cmdFlush
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         */
        CGCMsgMemCachedStatsResponse.prototype.cmdFlush = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CGCMsgMemCachedStatsResponse getHits.
         * @member {number|Long} getHits
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         */
        CGCMsgMemCachedStatsResponse.prototype.getHits = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CGCMsgMemCachedStatsResponse getMisses.
         * @member {number|Long} getMisses
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         */
        CGCMsgMemCachedStatsResponse.prototype.getMisses = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CGCMsgMemCachedStatsResponse deleteHits.
         * @member {number|Long} deleteHits
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         */
        CGCMsgMemCachedStatsResponse.prototype.deleteHits = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CGCMsgMemCachedStatsResponse deleteMisses.
         * @member {number|Long} deleteMisses
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         */
        CGCMsgMemCachedStatsResponse.prototype.deleteMisses = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CGCMsgMemCachedStatsResponse bytesRead.
         * @member {number|Long} bytesRead
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         */
        CGCMsgMemCachedStatsResponse.prototype.bytesRead = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CGCMsgMemCachedStatsResponse bytesWritten.
         * @member {number|Long} bytesWritten
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         */
        CGCMsgMemCachedStatsResponse.prototype.bytesWritten = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CGCMsgMemCachedStatsResponse limitMaxbytes.
         * @member {number|Long} limitMaxbytes
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         */
        CGCMsgMemCachedStatsResponse.prototype.limitMaxbytes = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CGCMsgMemCachedStatsResponse currItems.
         * @member {number|Long} currItems
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         */
        CGCMsgMemCachedStatsResponse.prototype.currItems = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CGCMsgMemCachedStatsResponse evictions.
         * @member {number|Long} evictions
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         */
        CGCMsgMemCachedStatsResponse.prototype.evictions = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CGCMsgMemCachedStatsResponse bytes.
         * @member {number|Long} bytes
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         */
        CGCMsgMemCachedStatsResponse.prototype.bytes = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CGCMsgMemCachedStatsResponse instance using the specified properties.
         * @function create
         * @memberof CGCMsgMemCachedStatsResponse
         * @static
         * @param {ICGCMsgMemCachedStatsResponse=} [properties] Properties to set
         * @returns {CGCMsgMemCachedStatsResponse} CGCMsgMemCachedStatsResponse instance
         */
        CGCMsgMemCachedStatsResponse.create = function create(properties) {
            return new CGCMsgMemCachedStatsResponse(properties);
        };
    
        /**
         * Encodes the specified CGCMsgMemCachedStatsResponse message. Does not implicitly {@link CGCMsgMemCachedStatsResponse.verify|verify} messages.
         * @function encode
         * @memberof CGCMsgMemCachedStatsResponse
         * @static
         * @param {ICGCMsgMemCachedStatsResponse} message CGCMsgMemCachedStatsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgMemCachedStatsResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.currConnections != null && Object.hasOwnProperty.call(message, "currConnections"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.currConnections);
            if (message.cmdGet != null && Object.hasOwnProperty.call(message, "cmdGet"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.cmdGet);
            if (message.cmdSet != null && Object.hasOwnProperty.call(message, "cmdSet"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.cmdSet);
            if (message.cmdFlush != null && Object.hasOwnProperty.call(message, "cmdFlush"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.cmdFlush);
            if (message.getHits != null && Object.hasOwnProperty.call(message, "getHits"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint64(message.getHits);
            if (message.getMisses != null && Object.hasOwnProperty.call(message, "getMisses"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint64(message.getMisses);
            if (message.deleteHits != null && Object.hasOwnProperty.call(message, "deleteHits"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint64(message.deleteHits);
            if (message.deleteMisses != null && Object.hasOwnProperty.call(message, "deleteMisses"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint64(message.deleteMisses);
            if (message.bytesRead != null && Object.hasOwnProperty.call(message, "bytesRead"))
                writer.uint32(/* id 9, wireType 0 =*/72).uint64(message.bytesRead);
            if (message.bytesWritten != null && Object.hasOwnProperty.call(message, "bytesWritten"))
                writer.uint32(/* id 10, wireType 0 =*/80).uint64(message.bytesWritten);
            if (message.limitMaxbytes != null && Object.hasOwnProperty.call(message, "limitMaxbytes"))
                writer.uint32(/* id 11, wireType 0 =*/88).uint64(message.limitMaxbytes);
            if (message.currItems != null && Object.hasOwnProperty.call(message, "currItems"))
                writer.uint32(/* id 12, wireType 0 =*/96).uint64(message.currItems);
            if (message.evictions != null && Object.hasOwnProperty.call(message, "evictions"))
                writer.uint32(/* id 13, wireType 0 =*/104).uint64(message.evictions);
            if (message.bytes != null && Object.hasOwnProperty.call(message, "bytes"))
                writer.uint32(/* id 14, wireType 0 =*/112).uint64(message.bytes);
            return writer;
        };
    
        /**
         * Encodes the specified CGCMsgMemCachedStatsResponse message, length delimited. Does not implicitly {@link CGCMsgMemCachedStatsResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCMsgMemCachedStatsResponse
         * @static
         * @param {ICGCMsgMemCachedStatsResponse} message CGCMsgMemCachedStatsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgMemCachedStatsResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCMsgMemCachedStatsResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CGCMsgMemCachedStatsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCMsgMemCachedStatsResponse} CGCMsgMemCachedStatsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgMemCachedStatsResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgMemCachedStatsResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.currConnections = reader.uint64();
                        break;
                    }
                case 2: {
                        message.cmdGet = reader.uint64();
                        break;
                    }
                case 3: {
                        message.cmdSet = reader.uint64();
                        break;
                    }
                case 4: {
                        message.cmdFlush = reader.uint64();
                        break;
                    }
                case 5: {
                        message.getHits = reader.uint64();
                        break;
                    }
                case 6: {
                        message.getMisses = reader.uint64();
                        break;
                    }
                case 7: {
                        message.deleteHits = reader.uint64();
                        break;
                    }
                case 8: {
                        message.deleteMisses = reader.uint64();
                        break;
                    }
                case 9: {
                        message.bytesRead = reader.uint64();
                        break;
                    }
                case 10: {
                        message.bytesWritten = reader.uint64();
                        break;
                    }
                case 11: {
                        message.limitMaxbytes = reader.uint64();
                        break;
                    }
                case 12: {
                        message.currItems = reader.uint64();
                        break;
                    }
                case 13: {
                        message.evictions = reader.uint64();
                        break;
                    }
                case 14: {
                        message.bytes = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCMsgMemCachedStatsResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCMsgMemCachedStatsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCMsgMemCachedStatsResponse} CGCMsgMemCachedStatsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgMemCachedStatsResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCMsgMemCachedStatsResponse message.
         * @function verify
         * @memberof CGCMsgMemCachedStatsResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCMsgMemCachedStatsResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.currConnections != null && message.hasOwnProperty("currConnections"))
                if (!$util.isInteger(message.currConnections) && !(message.currConnections && $util.isInteger(message.currConnections.low) && $util.isInteger(message.currConnections.high)))
                    return "currConnections: integer|Long expected";
            if (message.cmdGet != null && message.hasOwnProperty("cmdGet"))
                if (!$util.isInteger(message.cmdGet) && !(message.cmdGet && $util.isInteger(message.cmdGet.low) && $util.isInteger(message.cmdGet.high)))
                    return "cmdGet: integer|Long expected";
            if (message.cmdSet != null && message.hasOwnProperty("cmdSet"))
                if (!$util.isInteger(message.cmdSet) && !(message.cmdSet && $util.isInteger(message.cmdSet.low) && $util.isInteger(message.cmdSet.high)))
                    return "cmdSet: integer|Long expected";
            if (message.cmdFlush != null && message.hasOwnProperty("cmdFlush"))
                if (!$util.isInteger(message.cmdFlush) && !(message.cmdFlush && $util.isInteger(message.cmdFlush.low) && $util.isInteger(message.cmdFlush.high)))
                    return "cmdFlush: integer|Long expected";
            if (message.getHits != null && message.hasOwnProperty("getHits"))
                if (!$util.isInteger(message.getHits) && !(message.getHits && $util.isInteger(message.getHits.low) && $util.isInteger(message.getHits.high)))
                    return "getHits: integer|Long expected";
            if (message.getMisses != null && message.hasOwnProperty("getMisses"))
                if (!$util.isInteger(message.getMisses) && !(message.getMisses && $util.isInteger(message.getMisses.low) && $util.isInteger(message.getMisses.high)))
                    return "getMisses: integer|Long expected";
            if (message.deleteHits != null && message.hasOwnProperty("deleteHits"))
                if (!$util.isInteger(message.deleteHits) && !(message.deleteHits && $util.isInteger(message.deleteHits.low) && $util.isInteger(message.deleteHits.high)))
                    return "deleteHits: integer|Long expected";
            if (message.deleteMisses != null && message.hasOwnProperty("deleteMisses"))
                if (!$util.isInteger(message.deleteMisses) && !(message.deleteMisses && $util.isInteger(message.deleteMisses.low) && $util.isInteger(message.deleteMisses.high)))
                    return "deleteMisses: integer|Long expected";
            if (message.bytesRead != null && message.hasOwnProperty("bytesRead"))
                if (!$util.isInteger(message.bytesRead) && !(message.bytesRead && $util.isInteger(message.bytesRead.low) && $util.isInteger(message.bytesRead.high)))
                    return "bytesRead: integer|Long expected";
            if (message.bytesWritten != null && message.hasOwnProperty("bytesWritten"))
                if (!$util.isInteger(message.bytesWritten) && !(message.bytesWritten && $util.isInteger(message.bytesWritten.low) && $util.isInteger(message.bytesWritten.high)))
                    return "bytesWritten: integer|Long expected";
            if (message.limitMaxbytes != null && message.hasOwnProperty("limitMaxbytes"))
                if (!$util.isInteger(message.limitMaxbytes) && !(message.limitMaxbytes && $util.isInteger(message.limitMaxbytes.low) && $util.isInteger(message.limitMaxbytes.high)))
                    return "limitMaxbytes: integer|Long expected";
            if (message.currItems != null && message.hasOwnProperty("currItems"))
                if (!$util.isInteger(message.currItems) && !(message.currItems && $util.isInteger(message.currItems.low) && $util.isInteger(message.currItems.high)))
                    return "currItems: integer|Long expected";
            if (message.evictions != null && message.hasOwnProperty("evictions"))
                if (!$util.isInteger(message.evictions) && !(message.evictions && $util.isInteger(message.evictions.low) && $util.isInteger(message.evictions.high)))
                    return "evictions: integer|Long expected";
            if (message.bytes != null && message.hasOwnProperty("bytes"))
                if (!$util.isInteger(message.bytes) && !(message.bytes && $util.isInteger(message.bytes.low) && $util.isInteger(message.bytes.high)))
                    return "bytes: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CGCMsgMemCachedStatsResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCMsgMemCachedStatsResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCMsgMemCachedStatsResponse} CGCMsgMemCachedStatsResponse
         */
        CGCMsgMemCachedStatsResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCMsgMemCachedStatsResponse)
                return object;
            var message = new $root.CGCMsgMemCachedStatsResponse();
            if (object.currConnections != null)
                if ($util.Long)
                    (message.currConnections = $util.Long.fromValue(object.currConnections)).unsigned = true;
                else if (typeof object.currConnections === "string")
                    message.currConnections = parseInt(object.currConnections, 10);
                else if (typeof object.currConnections === "number")
                    message.currConnections = object.currConnections;
                else if (typeof object.currConnections === "object")
                    message.currConnections = new $util.LongBits(object.currConnections.low >>> 0, object.currConnections.high >>> 0).toNumber(true);
            if (object.cmdGet != null)
                if ($util.Long)
                    (message.cmdGet = $util.Long.fromValue(object.cmdGet)).unsigned = true;
                else if (typeof object.cmdGet === "string")
                    message.cmdGet = parseInt(object.cmdGet, 10);
                else if (typeof object.cmdGet === "number")
                    message.cmdGet = object.cmdGet;
                else if (typeof object.cmdGet === "object")
                    message.cmdGet = new $util.LongBits(object.cmdGet.low >>> 0, object.cmdGet.high >>> 0).toNumber(true);
            if (object.cmdSet != null)
                if ($util.Long)
                    (message.cmdSet = $util.Long.fromValue(object.cmdSet)).unsigned = true;
                else if (typeof object.cmdSet === "string")
                    message.cmdSet = parseInt(object.cmdSet, 10);
                else if (typeof object.cmdSet === "number")
                    message.cmdSet = object.cmdSet;
                else if (typeof object.cmdSet === "object")
                    message.cmdSet = new $util.LongBits(object.cmdSet.low >>> 0, object.cmdSet.high >>> 0).toNumber(true);
            if (object.cmdFlush != null)
                if ($util.Long)
                    (message.cmdFlush = $util.Long.fromValue(object.cmdFlush)).unsigned = true;
                else if (typeof object.cmdFlush === "string")
                    message.cmdFlush = parseInt(object.cmdFlush, 10);
                else if (typeof object.cmdFlush === "number")
                    message.cmdFlush = object.cmdFlush;
                else if (typeof object.cmdFlush === "object")
                    message.cmdFlush = new $util.LongBits(object.cmdFlush.low >>> 0, object.cmdFlush.high >>> 0).toNumber(true);
            if (object.getHits != null)
                if ($util.Long)
                    (message.getHits = $util.Long.fromValue(object.getHits)).unsigned = true;
                else if (typeof object.getHits === "string")
                    message.getHits = parseInt(object.getHits, 10);
                else if (typeof object.getHits === "number")
                    message.getHits = object.getHits;
                else if (typeof object.getHits === "object")
                    message.getHits = new $util.LongBits(object.getHits.low >>> 0, object.getHits.high >>> 0).toNumber(true);
            if (object.getMisses != null)
                if ($util.Long)
                    (message.getMisses = $util.Long.fromValue(object.getMisses)).unsigned = true;
                else if (typeof object.getMisses === "string")
                    message.getMisses = parseInt(object.getMisses, 10);
                else if (typeof object.getMisses === "number")
                    message.getMisses = object.getMisses;
                else if (typeof object.getMisses === "object")
                    message.getMisses = new $util.LongBits(object.getMisses.low >>> 0, object.getMisses.high >>> 0).toNumber(true);
            if (object.deleteHits != null)
                if ($util.Long)
                    (message.deleteHits = $util.Long.fromValue(object.deleteHits)).unsigned = true;
                else if (typeof object.deleteHits === "string")
                    message.deleteHits = parseInt(object.deleteHits, 10);
                else if (typeof object.deleteHits === "number")
                    message.deleteHits = object.deleteHits;
                else if (typeof object.deleteHits === "object")
                    message.deleteHits = new $util.LongBits(object.deleteHits.low >>> 0, object.deleteHits.high >>> 0).toNumber(true);
            if (object.deleteMisses != null)
                if ($util.Long)
                    (message.deleteMisses = $util.Long.fromValue(object.deleteMisses)).unsigned = true;
                else if (typeof object.deleteMisses === "string")
                    message.deleteMisses = parseInt(object.deleteMisses, 10);
                else if (typeof object.deleteMisses === "number")
                    message.deleteMisses = object.deleteMisses;
                else if (typeof object.deleteMisses === "object")
                    message.deleteMisses = new $util.LongBits(object.deleteMisses.low >>> 0, object.deleteMisses.high >>> 0).toNumber(true);
            if (object.bytesRead != null)
                if ($util.Long)
                    (message.bytesRead = $util.Long.fromValue(object.bytesRead)).unsigned = true;
                else if (typeof object.bytesRead === "string")
                    message.bytesRead = parseInt(object.bytesRead, 10);
                else if (typeof object.bytesRead === "number")
                    message.bytesRead = object.bytesRead;
                else if (typeof object.bytesRead === "object")
                    message.bytesRead = new $util.LongBits(object.bytesRead.low >>> 0, object.bytesRead.high >>> 0).toNumber(true);
            if (object.bytesWritten != null)
                if ($util.Long)
                    (message.bytesWritten = $util.Long.fromValue(object.bytesWritten)).unsigned = true;
                else if (typeof object.bytesWritten === "string")
                    message.bytesWritten = parseInt(object.bytesWritten, 10);
                else if (typeof object.bytesWritten === "number")
                    message.bytesWritten = object.bytesWritten;
                else if (typeof object.bytesWritten === "object")
                    message.bytesWritten = new $util.LongBits(object.bytesWritten.low >>> 0, object.bytesWritten.high >>> 0).toNumber(true);
            if (object.limitMaxbytes != null)
                if ($util.Long)
                    (message.limitMaxbytes = $util.Long.fromValue(object.limitMaxbytes)).unsigned = true;
                else if (typeof object.limitMaxbytes === "string")
                    message.limitMaxbytes = parseInt(object.limitMaxbytes, 10);
                else if (typeof object.limitMaxbytes === "number")
                    message.limitMaxbytes = object.limitMaxbytes;
                else if (typeof object.limitMaxbytes === "object")
                    message.limitMaxbytes = new $util.LongBits(object.limitMaxbytes.low >>> 0, object.limitMaxbytes.high >>> 0).toNumber(true);
            if (object.currItems != null)
                if ($util.Long)
                    (message.currItems = $util.Long.fromValue(object.currItems)).unsigned = true;
                else if (typeof object.currItems === "string")
                    message.currItems = parseInt(object.currItems, 10);
                else if (typeof object.currItems === "number")
                    message.currItems = object.currItems;
                else if (typeof object.currItems === "object")
                    message.currItems = new $util.LongBits(object.currItems.low >>> 0, object.currItems.high >>> 0).toNumber(true);
            if (object.evictions != null)
                if ($util.Long)
                    (message.evictions = $util.Long.fromValue(object.evictions)).unsigned = true;
                else if (typeof object.evictions === "string")
                    message.evictions = parseInt(object.evictions, 10);
                else if (typeof object.evictions === "number")
                    message.evictions = object.evictions;
                else if (typeof object.evictions === "object")
                    message.evictions = new $util.LongBits(object.evictions.low >>> 0, object.evictions.high >>> 0).toNumber(true);
            if (object.bytes != null)
                if ($util.Long)
                    (message.bytes = $util.Long.fromValue(object.bytes)).unsigned = true;
                else if (typeof object.bytes === "string")
                    message.bytes = parseInt(object.bytes, 10);
                else if (typeof object.bytes === "number")
                    message.bytes = object.bytes;
                else if (typeof object.bytes === "object")
                    message.bytes = new $util.LongBits(object.bytes.low >>> 0, object.bytes.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CGCMsgMemCachedStatsResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCMsgMemCachedStatsResponse
         * @static
         * @param {CGCMsgMemCachedStatsResponse} message CGCMsgMemCachedStatsResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCMsgMemCachedStatsResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.currConnections = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.currConnections = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.cmdGet = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.cmdGet = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.cmdSet = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.cmdSet = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.cmdFlush = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.cmdFlush = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.getHits = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.getHits = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.getMisses = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.getMisses = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.deleteHits = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.deleteHits = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.deleteMisses = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.deleteMisses = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.bytesRead = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.bytesRead = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.bytesWritten = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.bytesWritten = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.limitMaxbytes = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.limitMaxbytes = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.currItems = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.currItems = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.evictions = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.evictions = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.bytes = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.bytes = options.longs === String ? "0" : 0;
            }
            if (message.currConnections != null && message.hasOwnProperty("currConnections"))
                if (typeof message.currConnections === "number")
                    object.currConnections = options.longs === String ? String(message.currConnections) : message.currConnections;
                else
                    object.currConnections = options.longs === String ? $util.Long.prototype.toString.call(message.currConnections) : options.longs === Number ? new $util.LongBits(message.currConnections.low >>> 0, message.currConnections.high >>> 0).toNumber(true) : message.currConnections;
            if (message.cmdGet != null && message.hasOwnProperty("cmdGet"))
                if (typeof message.cmdGet === "number")
                    object.cmdGet = options.longs === String ? String(message.cmdGet) : message.cmdGet;
                else
                    object.cmdGet = options.longs === String ? $util.Long.prototype.toString.call(message.cmdGet) : options.longs === Number ? new $util.LongBits(message.cmdGet.low >>> 0, message.cmdGet.high >>> 0).toNumber(true) : message.cmdGet;
            if (message.cmdSet != null && message.hasOwnProperty("cmdSet"))
                if (typeof message.cmdSet === "number")
                    object.cmdSet = options.longs === String ? String(message.cmdSet) : message.cmdSet;
                else
                    object.cmdSet = options.longs === String ? $util.Long.prototype.toString.call(message.cmdSet) : options.longs === Number ? new $util.LongBits(message.cmdSet.low >>> 0, message.cmdSet.high >>> 0).toNumber(true) : message.cmdSet;
            if (message.cmdFlush != null && message.hasOwnProperty("cmdFlush"))
                if (typeof message.cmdFlush === "number")
                    object.cmdFlush = options.longs === String ? String(message.cmdFlush) : message.cmdFlush;
                else
                    object.cmdFlush = options.longs === String ? $util.Long.prototype.toString.call(message.cmdFlush) : options.longs === Number ? new $util.LongBits(message.cmdFlush.low >>> 0, message.cmdFlush.high >>> 0).toNumber(true) : message.cmdFlush;
            if (message.getHits != null && message.hasOwnProperty("getHits"))
                if (typeof message.getHits === "number")
                    object.getHits = options.longs === String ? String(message.getHits) : message.getHits;
                else
                    object.getHits = options.longs === String ? $util.Long.prototype.toString.call(message.getHits) : options.longs === Number ? new $util.LongBits(message.getHits.low >>> 0, message.getHits.high >>> 0).toNumber(true) : message.getHits;
            if (message.getMisses != null && message.hasOwnProperty("getMisses"))
                if (typeof message.getMisses === "number")
                    object.getMisses = options.longs === String ? String(message.getMisses) : message.getMisses;
                else
                    object.getMisses = options.longs === String ? $util.Long.prototype.toString.call(message.getMisses) : options.longs === Number ? new $util.LongBits(message.getMisses.low >>> 0, message.getMisses.high >>> 0).toNumber(true) : message.getMisses;
            if (message.deleteHits != null && message.hasOwnProperty("deleteHits"))
                if (typeof message.deleteHits === "number")
                    object.deleteHits = options.longs === String ? String(message.deleteHits) : message.deleteHits;
                else
                    object.deleteHits = options.longs === String ? $util.Long.prototype.toString.call(message.deleteHits) : options.longs === Number ? new $util.LongBits(message.deleteHits.low >>> 0, message.deleteHits.high >>> 0).toNumber(true) : message.deleteHits;
            if (message.deleteMisses != null && message.hasOwnProperty("deleteMisses"))
                if (typeof message.deleteMisses === "number")
                    object.deleteMisses = options.longs === String ? String(message.deleteMisses) : message.deleteMisses;
                else
                    object.deleteMisses = options.longs === String ? $util.Long.prototype.toString.call(message.deleteMisses) : options.longs === Number ? new $util.LongBits(message.deleteMisses.low >>> 0, message.deleteMisses.high >>> 0).toNumber(true) : message.deleteMisses;
            if (message.bytesRead != null && message.hasOwnProperty("bytesRead"))
                if (typeof message.bytesRead === "number")
                    object.bytesRead = options.longs === String ? String(message.bytesRead) : message.bytesRead;
                else
                    object.bytesRead = options.longs === String ? $util.Long.prototype.toString.call(message.bytesRead) : options.longs === Number ? new $util.LongBits(message.bytesRead.low >>> 0, message.bytesRead.high >>> 0).toNumber(true) : message.bytesRead;
            if (message.bytesWritten != null && message.hasOwnProperty("bytesWritten"))
                if (typeof message.bytesWritten === "number")
                    object.bytesWritten = options.longs === String ? String(message.bytesWritten) : message.bytesWritten;
                else
                    object.bytesWritten = options.longs === String ? $util.Long.prototype.toString.call(message.bytesWritten) : options.longs === Number ? new $util.LongBits(message.bytesWritten.low >>> 0, message.bytesWritten.high >>> 0).toNumber(true) : message.bytesWritten;
            if (message.limitMaxbytes != null && message.hasOwnProperty("limitMaxbytes"))
                if (typeof message.limitMaxbytes === "number")
                    object.limitMaxbytes = options.longs === String ? String(message.limitMaxbytes) : message.limitMaxbytes;
                else
                    object.limitMaxbytes = options.longs === String ? $util.Long.prototype.toString.call(message.limitMaxbytes) : options.longs === Number ? new $util.LongBits(message.limitMaxbytes.low >>> 0, message.limitMaxbytes.high >>> 0).toNumber(true) : message.limitMaxbytes;
            if (message.currItems != null && message.hasOwnProperty("currItems"))
                if (typeof message.currItems === "number")
                    object.currItems = options.longs === String ? String(message.currItems) : message.currItems;
                else
                    object.currItems = options.longs === String ? $util.Long.prototype.toString.call(message.currItems) : options.longs === Number ? new $util.LongBits(message.currItems.low >>> 0, message.currItems.high >>> 0).toNumber(true) : message.currItems;
            if (message.evictions != null && message.hasOwnProperty("evictions"))
                if (typeof message.evictions === "number")
                    object.evictions = options.longs === String ? String(message.evictions) : message.evictions;
                else
                    object.evictions = options.longs === String ? $util.Long.prototype.toString.call(message.evictions) : options.longs === Number ? new $util.LongBits(message.evictions.low >>> 0, message.evictions.high >>> 0).toNumber(true) : message.evictions;
            if (message.bytes != null && message.hasOwnProperty("bytes"))
                if (typeof message.bytes === "number")
                    object.bytes = options.longs === String ? String(message.bytes) : message.bytes;
                else
                    object.bytes = options.longs === String ? $util.Long.prototype.toString.call(message.bytes) : options.longs === Number ? new $util.LongBits(message.bytes.low >>> 0, message.bytes.high >>> 0).toNumber(true) : message.bytes;
            return object;
        };
    
        /**
         * Converts this CGCMsgMemCachedStatsResponse to JSON.
         * @function toJSON
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCMsgMemCachedStatsResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCMsgMemCachedStatsResponse
         * @function getTypeUrl
         * @memberof CGCMsgMemCachedStatsResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCMsgMemCachedStatsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCMsgMemCachedStatsResponse";
        };
    
        return CGCMsgMemCachedStatsResponse;
    })();
    
    $root.CGCMsgSQLStats = (function() {
    
        /**
         * Properties of a CGCMsgSQLStats.
         * @exports ICGCMsgSQLStats
         * @interface ICGCMsgSQLStats
         * @property {number|null} [schemaCatalog] CGCMsgSQLStats schemaCatalog
         */
    
        /**
         * Constructs a new CGCMsgSQLStats.
         * @exports CGCMsgSQLStats
         * @classdesc Represents a CGCMsgSQLStats.
         * @implements ICGCMsgSQLStats
         * @constructor
         * @param {ICGCMsgSQLStats=} [properties] Properties to set
         */
        function CGCMsgSQLStats(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCMsgSQLStats schemaCatalog.
         * @member {number} schemaCatalog
         * @memberof CGCMsgSQLStats
         * @instance
         */
        CGCMsgSQLStats.prototype.schemaCatalog = 0;
    
        /**
         * Creates a new CGCMsgSQLStats instance using the specified properties.
         * @function create
         * @memberof CGCMsgSQLStats
         * @static
         * @param {ICGCMsgSQLStats=} [properties] Properties to set
         * @returns {CGCMsgSQLStats} CGCMsgSQLStats instance
         */
        CGCMsgSQLStats.create = function create(properties) {
            return new CGCMsgSQLStats(properties);
        };
    
        /**
         * Encodes the specified CGCMsgSQLStats message. Does not implicitly {@link CGCMsgSQLStats.verify|verify} messages.
         * @function encode
         * @memberof CGCMsgSQLStats
         * @static
         * @param {ICGCMsgSQLStats} message CGCMsgSQLStats message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgSQLStats.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.schemaCatalog != null && Object.hasOwnProperty.call(message, "schemaCatalog"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.schemaCatalog);
            return writer;
        };
    
        /**
         * Encodes the specified CGCMsgSQLStats message, length delimited. Does not implicitly {@link CGCMsgSQLStats.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCMsgSQLStats
         * @static
         * @param {ICGCMsgSQLStats} message CGCMsgSQLStats message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgSQLStats.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCMsgSQLStats message from the specified reader or buffer.
         * @function decode
         * @memberof CGCMsgSQLStats
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCMsgSQLStats} CGCMsgSQLStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgSQLStats.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgSQLStats();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.schemaCatalog = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCMsgSQLStats message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCMsgSQLStats
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCMsgSQLStats} CGCMsgSQLStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgSQLStats.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCMsgSQLStats message.
         * @function verify
         * @memberof CGCMsgSQLStats
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCMsgSQLStats.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.schemaCatalog != null && message.hasOwnProperty("schemaCatalog"))
                if (!$util.isInteger(message.schemaCatalog))
                    return "schemaCatalog: integer expected";
            return null;
        };
    
        /**
         * Creates a CGCMsgSQLStats message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCMsgSQLStats
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCMsgSQLStats} CGCMsgSQLStats
         */
        CGCMsgSQLStats.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCMsgSQLStats)
                return object;
            var message = new $root.CGCMsgSQLStats();
            if (object.schemaCatalog != null)
                message.schemaCatalog = object.schemaCatalog >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CGCMsgSQLStats message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCMsgSQLStats
         * @static
         * @param {CGCMsgSQLStats} message CGCMsgSQLStats
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCMsgSQLStats.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.schemaCatalog = 0;
            if (message.schemaCatalog != null && message.hasOwnProperty("schemaCatalog"))
                object.schemaCatalog = message.schemaCatalog;
            return object;
        };
    
        /**
         * Converts this CGCMsgSQLStats to JSON.
         * @function toJSON
         * @memberof CGCMsgSQLStats
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCMsgSQLStats.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCMsgSQLStats
         * @function getTypeUrl
         * @memberof CGCMsgSQLStats
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCMsgSQLStats.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCMsgSQLStats";
        };
    
        return CGCMsgSQLStats;
    })();
    
    $root.CGCMsgSQLStatsResponse = (function() {
    
        /**
         * Properties of a CGCMsgSQLStatsResponse.
         * @exports ICGCMsgSQLStatsResponse
         * @interface ICGCMsgSQLStatsResponse
         * @property {number|null} [threads] CGCMsgSQLStatsResponse threads
         * @property {number|null} [threadsConnected] CGCMsgSQLStatsResponse threadsConnected
         * @property {number|null} [threadsActive] CGCMsgSQLStatsResponse threadsActive
         * @property {number|null} [operationsSubmitted] CGCMsgSQLStatsResponse operationsSubmitted
         * @property {number|null} [preparedStatementsExecuted] CGCMsgSQLStatsResponse preparedStatementsExecuted
         * @property {number|null} [nonPreparedStatementsExecuted] CGCMsgSQLStatsResponse nonPreparedStatementsExecuted
         * @property {number|null} [deadlockRetries] CGCMsgSQLStatsResponse deadlockRetries
         * @property {number|null} [operationsTimedOutInQueue] CGCMsgSQLStatsResponse operationsTimedOutInQueue
         * @property {number|null} [errors] CGCMsgSQLStatsResponse errors
         */
    
        /**
         * Constructs a new CGCMsgSQLStatsResponse.
         * @exports CGCMsgSQLStatsResponse
         * @classdesc Represents a CGCMsgSQLStatsResponse.
         * @implements ICGCMsgSQLStatsResponse
         * @constructor
         * @param {ICGCMsgSQLStatsResponse=} [properties] Properties to set
         */
        function CGCMsgSQLStatsResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCMsgSQLStatsResponse threads.
         * @member {number} threads
         * @memberof CGCMsgSQLStatsResponse
         * @instance
         */
        CGCMsgSQLStatsResponse.prototype.threads = 0;
    
        /**
         * CGCMsgSQLStatsResponse threadsConnected.
         * @member {number} threadsConnected
         * @memberof CGCMsgSQLStatsResponse
         * @instance
         */
        CGCMsgSQLStatsResponse.prototype.threadsConnected = 0;
    
        /**
         * CGCMsgSQLStatsResponse threadsActive.
         * @member {number} threadsActive
         * @memberof CGCMsgSQLStatsResponse
         * @instance
         */
        CGCMsgSQLStatsResponse.prototype.threadsActive = 0;
    
        /**
         * CGCMsgSQLStatsResponse operationsSubmitted.
         * @member {number} operationsSubmitted
         * @memberof CGCMsgSQLStatsResponse
         * @instance
         */
        CGCMsgSQLStatsResponse.prototype.operationsSubmitted = 0;
    
        /**
         * CGCMsgSQLStatsResponse preparedStatementsExecuted.
         * @member {number} preparedStatementsExecuted
         * @memberof CGCMsgSQLStatsResponse
         * @instance
         */
        CGCMsgSQLStatsResponse.prototype.preparedStatementsExecuted = 0;
    
        /**
         * CGCMsgSQLStatsResponse nonPreparedStatementsExecuted.
         * @member {number} nonPreparedStatementsExecuted
         * @memberof CGCMsgSQLStatsResponse
         * @instance
         */
        CGCMsgSQLStatsResponse.prototype.nonPreparedStatementsExecuted = 0;
    
        /**
         * CGCMsgSQLStatsResponse deadlockRetries.
         * @member {number} deadlockRetries
         * @memberof CGCMsgSQLStatsResponse
         * @instance
         */
        CGCMsgSQLStatsResponse.prototype.deadlockRetries = 0;
    
        /**
         * CGCMsgSQLStatsResponse operationsTimedOutInQueue.
         * @member {number} operationsTimedOutInQueue
         * @memberof CGCMsgSQLStatsResponse
         * @instance
         */
        CGCMsgSQLStatsResponse.prototype.operationsTimedOutInQueue = 0;
    
        /**
         * CGCMsgSQLStatsResponse errors.
         * @member {number} errors
         * @memberof CGCMsgSQLStatsResponse
         * @instance
         */
        CGCMsgSQLStatsResponse.prototype.errors = 0;
    
        /**
         * Creates a new CGCMsgSQLStatsResponse instance using the specified properties.
         * @function create
         * @memberof CGCMsgSQLStatsResponse
         * @static
         * @param {ICGCMsgSQLStatsResponse=} [properties] Properties to set
         * @returns {CGCMsgSQLStatsResponse} CGCMsgSQLStatsResponse instance
         */
        CGCMsgSQLStatsResponse.create = function create(properties) {
            return new CGCMsgSQLStatsResponse(properties);
        };
    
        /**
         * Encodes the specified CGCMsgSQLStatsResponse message. Does not implicitly {@link CGCMsgSQLStatsResponse.verify|verify} messages.
         * @function encode
         * @memberof CGCMsgSQLStatsResponse
         * @static
         * @param {ICGCMsgSQLStatsResponse} message CGCMsgSQLStatsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgSQLStatsResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.threads != null && Object.hasOwnProperty.call(message, "threads"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.threads);
            if (message.threadsConnected != null && Object.hasOwnProperty.call(message, "threadsConnected"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.threadsConnected);
            if (message.threadsActive != null && Object.hasOwnProperty.call(message, "threadsActive"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.threadsActive);
            if (message.operationsSubmitted != null && Object.hasOwnProperty.call(message, "operationsSubmitted"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.operationsSubmitted);
            if (message.preparedStatementsExecuted != null && Object.hasOwnProperty.call(message, "preparedStatementsExecuted"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.preparedStatementsExecuted);
            if (message.nonPreparedStatementsExecuted != null && Object.hasOwnProperty.call(message, "nonPreparedStatementsExecuted"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.nonPreparedStatementsExecuted);
            if (message.deadlockRetries != null && Object.hasOwnProperty.call(message, "deadlockRetries"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.deadlockRetries);
            if (message.operationsTimedOutInQueue != null && Object.hasOwnProperty.call(message, "operationsTimedOutInQueue"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.operationsTimedOutInQueue);
            if (message.errors != null && Object.hasOwnProperty.call(message, "errors"))
                writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.errors);
            return writer;
        };
    
        /**
         * Encodes the specified CGCMsgSQLStatsResponse message, length delimited. Does not implicitly {@link CGCMsgSQLStatsResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCMsgSQLStatsResponse
         * @static
         * @param {ICGCMsgSQLStatsResponse} message CGCMsgSQLStatsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgSQLStatsResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCMsgSQLStatsResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CGCMsgSQLStatsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCMsgSQLStatsResponse} CGCMsgSQLStatsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgSQLStatsResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgSQLStatsResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.threads = reader.uint32();
                        break;
                    }
                case 2: {
                        message.threadsConnected = reader.uint32();
                        break;
                    }
                case 3: {
                        message.threadsActive = reader.uint32();
                        break;
                    }
                case 4: {
                        message.operationsSubmitted = reader.uint32();
                        break;
                    }
                case 5: {
                        message.preparedStatementsExecuted = reader.uint32();
                        break;
                    }
                case 6: {
                        message.nonPreparedStatementsExecuted = reader.uint32();
                        break;
                    }
                case 7: {
                        message.deadlockRetries = reader.uint32();
                        break;
                    }
                case 8: {
                        message.operationsTimedOutInQueue = reader.uint32();
                        break;
                    }
                case 9: {
                        message.errors = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCMsgSQLStatsResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCMsgSQLStatsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCMsgSQLStatsResponse} CGCMsgSQLStatsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgSQLStatsResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCMsgSQLStatsResponse message.
         * @function verify
         * @memberof CGCMsgSQLStatsResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCMsgSQLStatsResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.threads != null && message.hasOwnProperty("threads"))
                if (!$util.isInteger(message.threads))
                    return "threads: integer expected";
            if (message.threadsConnected != null && message.hasOwnProperty("threadsConnected"))
                if (!$util.isInteger(message.threadsConnected))
                    return "threadsConnected: integer expected";
            if (message.threadsActive != null && message.hasOwnProperty("threadsActive"))
                if (!$util.isInteger(message.threadsActive))
                    return "threadsActive: integer expected";
            if (message.operationsSubmitted != null && message.hasOwnProperty("operationsSubmitted"))
                if (!$util.isInteger(message.operationsSubmitted))
                    return "operationsSubmitted: integer expected";
            if (message.preparedStatementsExecuted != null && message.hasOwnProperty("preparedStatementsExecuted"))
                if (!$util.isInteger(message.preparedStatementsExecuted))
                    return "preparedStatementsExecuted: integer expected";
            if (message.nonPreparedStatementsExecuted != null && message.hasOwnProperty("nonPreparedStatementsExecuted"))
                if (!$util.isInteger(message.nonPreparedStatementsExecuted))
                    return "nonPreparedStatementsExecuted: integer expected";
            if (message.deadlockRetries != null && message.hasOwnProperty("deadlockRetries"))
                if (!$util.isInteger(message.deadlockRetries))
                    return "deadlockRetries: integer expected";
            if (message.operationsTimedOutInQueue != null && message.hasOwnProperty("operationsTimedOutInQueue"))
                if (!$util.isInteger(message.operationsTimedOutInQueue))
                    return "operationsTimedOutInQueue: integer expected";
            if (message.errors != null && message.hasOwnProperty("errors"))
                if (!$util.isInteger(message.errors))
                    return "errors: integer expected";
            return null;
        };
    
        /**
         * Creates a CGCMsgSQLStatsResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCMsgSQLStatsResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCMsgSQLStatsResponse} CGCMsgSQLStatsResponse
         */
        CGCMsgSQLStatsResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCMsgSQLStatsResponse)
                return object;
            var message = new $root.CGCMsgSQLStatsResponse();
            if (object.threads != null)
                message.threads = object.threads >>> 0;
            if (object.threadsConnected != null)
                message.threadsConnected = object.threadsConnected >>> 0;
            if (object.threadsActive != null)
                message.threadsActive = object.threadsActive >>> 0;
            if (object.operationsSubmitted != null)
                message.operationsSubmitted = object.operationsSubmitted >>> 0;
            if (object.preparedStatementsExecuted != null)
                message.preparedStatementsExecuted = object.preparedStatementsExecuted >>> 0;
            if (object.nonPreparedStatementsExecuted != null)
                message.nonPreparedStatementsExecuted = object.nonPreparedStatementsExecuted >>> 0;
            if (object.deadlockRetries != null)
                message.deadlockRetries = object.deadlockRetries >>> 0;
            if (object.operationsTimedOutInQueue != null)
                message.operationsTimedOutInQueue = object.operationsTimedOutInQueue >>> 0;
            if (object.errors != null)
                message.errors = object.errors >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CGCMsgSQLStatsResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCMsgSQLStatsResponse
         * @static
         * @param {CGCMsgSQLStatsResponse} message CGCMsgSQLStatsResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCMsgSQLStatsResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.threads = 0;
                object.threadsConnected = 0;
                object.threadsActive = 0;
                object.operationsSubmitted = 0;
                object.preparedStatementsExecuted = 0;
                object.nonPreparedStatementsExecuted = 0;
                object.deadlockRetries = 0;
                object.operationsTimedOutInQueue = 0;
                object.errors = 0;
            }
            if (message.threads != null && message.hasOwnProperty("threads"))
                object.threads = message.threads;
            if (message.threadsConnected != null && message.hasOwnProperty("threadsConnected"))
                object.threadsConnected = message.threadsConnected;
            if (message.threadsActive != null && message.hasOwnProperty("threadsActive"))
                object.threadsActive = message.threadsActive;
            if (message.operationsSubmitted != null && message.hasOwnProperty("operationsSubmitted"))
                object.operationsSubmitted = message.operationsSubmitted;
            if (message.preparedStatementsExecuted != null && message.hasOwnProperty("preparedStatementsExecuted"))
                object.preparedStatementsExecuted = message.preparedStatementsExecuted;
            if (message.nonPreparedStatementsExecuted != null && message.hasOwnProperty("nonPreparedStatementsExecuted"))
                object.nonPreparedStatementsExecuted = message.nonPreparedStatementsExecuted;
            if (message.deadlockRetries != null && message.hasOwnProperty("deadlockRetries"))
                object.deadlockRetries = message.deadlockRetries;
            if (message.operationsTimedOutInQueue != null && message.hasOwnProperty("operationsTimedOutInQueue"))
                object.operationsTimedOutInQueue = message.operationsTimedOutInQueue;
            if (message.errors != null && message.hasOwnProperty("errors"))
                object.errors = message.errors;
            return object;
        };
    
        /**
         * Converts this CGCMsgSQLStatsResponse to JSON.
         * @function toJSON
         * @memberof CGCMsgSQLStatsResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCMsgSQLStatsResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCMsgSQLStatsResponse
         * @function getTypeUrl
         * @memberof CGCMsgSQLStatsResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCMsgSQLStatsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCMsgSQLStatsResponse";
        };
    
        return CGCMsgSQLStatsResponse;
    })();
    
    $root.CMsgAMAddFreeLicense = (function() {
    
        /**
         * Properties of a CMsgAMAddFreeLicense.
         * @exports ICMsgAMAddFreeLicense
         * @interface ICMsgAMAddFreeLicense
         * @property {number|Long|null} [steamid] CMsgAMAddFreeLicense steamid
         * @property {number|null} [ipPublic] CMsgAMAddFreeLicense ipPublic
         * @property {number|null} [packageid] CMsgAMAddFreeLicense packageid
         * @property {string|null} [storeCountryCode] CMsgAMAddFreeLicense storeCountryCode
         */
    
        /**
         * Constructs a new CMsgAMAddFreeLicense.
         * @exports CMsgAMAddFreeLicense
         * @classdesc Represents a CMsgAMAddFreeLicense.
         * @implements ICMsgAMAddFreeLicense
         * @constructor
         * @param {ICMsgAMAddFreeLicense=} [properties] Properties to set
         */
        function CMsgAMAddFreeLicense(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAMAddFreeLicense steamid.
         * @member {number|Long} steamid
         * @memberof CMsgAMAddFreeLicense
         * @instance
         */
        CMsgAMAddFreeLicense.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgAMAddFreeLicense ipPublic.
         * @member {number} ipPublic
         * @memberof CMsgAMAddFreeLicense
         * @instance
         */
        CMsgAMAddFreeLicense.prototype.ipPublic = 0;
    
        /**
         * CMsgAMAddFreeLicense packageid.
         * @member {number} packageid
         * @memberof CMsgAMAddFreeLicense
         * @instance
         */
        CMsgAMAddFreeLicense.prototype.packageid = 0;
    
        /**
         * CMsgAMAddFreeLicense storeCountryCode.
         * @member {string} storeCountryCode
         * @memberof CMsgAMAddFreeLicense
         * @instance
         */
        CMsgAMAddFreeLicense.prototype.storeCountryCode = "";
    
        /**
         * Creates a new CMsgAMAddFreeLicense instance using the specified properties.
         * @function create
         * @memberof CMsgAMAddFreeLicense
         * @static
         * @param {ICMsgAMAddFreeLicense=} [properties] Properties to set
         * @returns {CMsgAMAddFreeLicense} CMsgAMAddFreeLicense instance
         */
        CMsgAMAddFreeLicense.create = function create(properties) {
            return new CMsgAMAddFreeLicense(properties);
        };
    
        /**
         * Encodes the specified CMsgAMAddFreeLicense message. Does not implicitly {@link CMsgAMAddFreeLicense.verify|verify} messages.
         * @function encode
         * @memberof CMsgAMAddFreeLicense
         * @static
         * @param {ICMsgAMAddFreeLicense} message CMsgAMAddFreeLicense message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMAddFreeLicense.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
            if (message.ipPublic != null && Object.hasOwnProperty.call(message, "ipPublic"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.ipPublic);
            if (message.packageid != null && Object.hasOwnProperty.call(message, "packageid"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.packageid);
            if (message.storeCountryCode != null && Object.hasOwnProperty.call(message, "storeCountryCode"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.storeCountryCode);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAMAddFreeLicense message, length delimited. Does not implicitly {@link CMsgAMAddFreeLicense.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAMAddFreeLicense
         * @static
         * @param {ICMsgAMAddFreeLicense} message CMsgAMAddFreeLicense message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMAddFreeLicense.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAMAddFreeLicense message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAMAddFreeLicense
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAMAddFreeLicense} CMsgAMAddFreeLicense
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMAddFreeLicense.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMAddFreeLicense();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamid = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.ipPublic = reader.uint32();
                        break;
                    }
                case 3: {
                        message.packageid = reader.uint32();
                        break;
                    }
                case 4: {
                        message.storeCountryCode = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAMAddFreeLicense message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAMAddFreeLicense
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAMAddFreeLicense} CMsgAMAddFreeLicense
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMAddFreeLicense.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAMAddFreeLicense message.
         * @function verify
         * @memberof CMsgAMAddFreeLicense
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAMAddFreeLicense.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.ipPublic != null && message.hasOwnProperty("ipPublic"))
                if (!$util.isInteger(message.ipPublic))
                    return "ipPublic: integer expected";
            if (message.packageid != null && message.hasOwnProperty("packageid"))
                if (!$util.isInteger(message.packageid))
                    return "packageid: integer expected";
            if (message.storeCountryCode != null && message.hasOwnProperty("storeCountryCode"))
                if (!$util.isString(message.storeCountryCode))
                    return "storeCountryCode: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgAMAddFreeLicense message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAMAddFreeLicense
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAMAddFreeLicense} CMsgAMAddFreeLicense
         */
        CMsgAMAddFreeLicense.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAMAddFreeLicense)
                return object;
            var message = new $root.CMsgAMAddFreeLicense();
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.ipPublic != null)
                message.ipPublic = object.ipPublic >>> 0;
            if (object.packageid != null)
                message.packageid = object.packageid >>> 0;
            if (object.storeCountryCode != null)
                message.storeCountryCode = String(object.storeCountryCode);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAMAddFreeLicense message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAMAddFreeLicense
         * @static
         * @param {CMsgAMAddFreeLicense} message CMsgAMAddFreeLicense
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAMAddFreeLicense.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
                object.ipPublic = 0;
                object.packageid = 0;
                object.storeCountryCode = "";
            }
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.ipPublic != null && message.hasOwnProperty("ipPublic"))
                object.ipPublic = message.ipPublic;
            if (message.packageid != null && message.hasOwnProperty("packageid"))
                object.packageid = message.packageid;
            if (message.storeCountryCode != null && message.hasOwnProperty("storeCountryCode"))
                object.storeCountryCode = message.storeCountryCode;
            return object;
        };
    
        /**
         * Converts this CMsgAMAddFreeLicense to JSON.
         * @function toJSON
         * @memberof CMsgAMAddFreeLicense
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAMAddFreeLicense.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAMAddFreeLicense
         * @function getTypeUrl
         * @memberof CMsgAMAddFreeLicense
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAMAddFreeLicense.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAMAddFreeLicense";
        };
    
        return CMsgAMAddFreeLicense;
    })();
    
    $root.CMsgAMAddFreeLicenseResponse = (function() {
    
        /**
         * Properties of a CMsgAMAddFreeLicenseResponse.
         * @exports ICMsgAMAddFreeLicenseResponse
         * @interface ICMsgAMAddFreeLicenseResponse
         * @property {number|null} [eresult] CMsgAMAddFreeLicenseResponse eresult
         * @property {number|null} [purchaseResultDetail] CMsgAMAddFreeLicenseResponse purchaseResultDetail
         * @property {number|Long|null} [transid] CMsgAMAddFreeLicenseResponse transid
         */
    
        /**
         * Constructs a new CMsgAMAddFreeLicenseResponse.
         * @exports CMsgAMAddFreeLicenseResponse
         * @classdesc Represents a CMsgAMAddFreeLicenseResponse.
         * @implements ICMsgAMAddFreeLicenseResponse
         * @constructor
         * @param {ICMsgAMAddFreeLicenseResponse=} [properties] Properties to set
         */
        function CMsgAMAddFreeLicenseResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAMAddFreeLicenseResponse eresult.
         * @member {number} eresult
         * @memberof CMsgAMAddFreeLicenseResponse
         * @instance
         */
        CMsgAMAddFreeLicenseResponse.prototype.eresult = 2;
    
        /**
         * CMsgAMAddFreeLicenseResponse purchaseResultDetail.
         * @member {number} purchaseResultDetail
         * @memberof CMsgAMAddFreeLicenseResponse
         * @instance
         */
        CMsgAMAddFreeLicenseResponse.prototype.purchaseResultDetail = 0;
    
        /**
         * CMsgAMAddFreeLicenseResponse transid.
         * @member {number|Long} transid
         * @memberof CMsgAMAddFreeLicenseResponse
         * @instance
         */
        CMsgAMAddFreeLicenseResponse.prototype.transid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgAMAddFreeLicenseResponse instance using the specified properties.
         * @function create
         * @memberof CMsgAMAddFreeLicenseResponse
         * @static
         * @param {ICMsgAMAddFreeLicenseResponse=} [properties] Properties to set
         * @returns {CMsgAMAddFreeLicenseResponse} CMsgAMAddFreeLicenseResponse instance
         */
        CMsgAMAddFreeLicenseResponse.create = function create(properties) {
            return new CMsgAMAddFreeLicenseResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgAMAddFreeLicenseResponse message. Does not implicitly {@link CMsgAMAddFreeLicenseResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgAMAddFreeLicenseResponse
         * @static
         * @param {ICMsgAMAddFreeLicenseResponse} message CMsgAMAddFreeLicenseResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMAddFreeLicenseResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.purchaseResultDetail != null && Object.hasOwnProperty.call(message, "purchaseResultDetail"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.purchaseResultDetail);
            if (message.transid != null && Object.hasOwnProperty.call(message, "transid"))
                writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.transid);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAMAddFreeLicenseResponse message, length delimited. Does not implicitly {@link CMsgAMAddFreeLicenseResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAMAddFreeLicenseResponse
         * @static
         * @param {ICMsgAMAddFreeLicenseResponse} message CMsgAMAddFreeLicenseResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMAddFreeLicenseResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAMAddFreeLicenseResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAMAddFreeLicenseResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAMAddFreeLicenseResponse} CMsgAMAddFreeLicenseResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMAddFreeLicenseResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMAddFreeLicenseResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.eresult = reader.int32();
                        break;
                    }
                case 2: {
                        message.purchaseResultDetail = reader.int32();
                        break;
                    }
                case 3: {
                        message.transid = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAMAddFreeLicenseResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAMAddFreeLicenseResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAMAddFreeLicenseResponse} CMsgAMAddFreeLicenseResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMAddFreeLicenseResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAMAddFreeLicenseResponse message.
         * @function verify
         * @memberof CMsgAMAddFreeLicenseResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAMAddFreeLicenseResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.purchaseResultDetail != null && message.hasOwnProperty("purchaseResultDetail"))
                if (!$util.isInteger(message.purchaseResultDetail))
                    return "purchaseResultDetail: integer expected";
            if (message.transid != null && message.hasOwnProperty("transid"))
                if (!$util.isInteger(message.transid) && !(message.transid && $util.isInteger(message.transid.low) && $util.isInteger(message.transid.high)))
                    return "transid: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgAMAddFreeLicenseResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAMAddFreeLicenseResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAMAddFreeLicenseResponse} CMsgAMAddFreeLicenseResponse
         */
        CMsgAMAddFreeLicenseResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAMAddFreeLicenseResponse)
                return object;
            var message = new $root.CMsgAMAddFreeLicenseResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.purchaseResultDetail != null)
                message.purchaseResultDetail = object.purchaseResultDetail | 0;
            if (object.transid != null)
                if ($util.Long)
                    (message.transid = $util.Long.fromValue(object.transid)).unsigned = false;
                else if (typeof object.transid === "string")
                    message.transid = parseInt(object.transid, 10);
                else if (typeof object.transid === "number")
                    message.transid = object.transid;
                else if (typeof object.transid === "object")
                    message.transid = new $util.LongBits(object.transid.low >>> 0, object.transid.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAMAddFreeLicenseResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAMAddFreeLicenseResponse
         * @static
         * @param {CMsgAMAddFreeLicenseResponse} message CMsgAMAddFreeLicenseResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAMAddFreeLicenseResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.purchaseResultDetail = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.transid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.transid = options.longs === String ? "0" : 0;
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.purchaseResultDetail != null && message.hasOwnProperty("purchaseResultDetail"))
                object.purchaseResultDetail = message.purchaseResultDetail;
            if (message.transid != null && message.hasOwnProperty("transid"))
                if (typeof message.transid === "number")
                    object.transid = options.longs === String ? String(message.transid) : message.transid;
                else
                    object.transid = options.longs === String ? $util.Long.prototype.toString.call(message.transid) : options.longs === Number ? new $util.LongBits(message.transid.low >>> 0, message.transid.high >>> 0).toNumber() : message.transid;
            return object;
        };
    
        /**
         * Converts this CMsgAMAddFreeLicenseResponse to JSON.
         * @function toJSON
         * @memberof CMsgAMAddFreeLicenseResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAMAddFreeLicenseResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAMAddFreeLicenseResponse
         * @function getTypeUrl
         * @memberof CMsgAMAddFreeLicenseResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAMAddFreeLicenseResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAMAddFreeLicenseResponse";
        };
    
        return CMsgAMAddFreeLicenseResponse;
    })();
    
    $root.CGCMsgGetIPLocation = (function() {
    
        /**
         * Properties of a CGCMsgGetIPLocation.
         * @exports ICGCMsgGetIPLocation
         * @interface ICGCMsgGetIPLocation
         * @property {Array.<number>|null} [ips] CGCMsgGetIPLocation ips
         */
    
        /**
         * Constructs a new CGCMsgGetIPLocation.
         * @exports CGCMsgGetIPLocation
         * @classdesc Represents a CGCMsgGetIPLocation.
         * @implements ICGCMsgGetIPLocation
         * @constructor
         * @param {ICGCMsgGetIPLocation=} [properties] Properties to set
         */
        function CGCMsgGetIPLocation(properties) {
            this.ips = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCMsgGetIPLocation ips.
         * @member {Array.<number>} ips
         * @memberof CGCMsgGetIPLocation
         * @instance
         */
        CGCMsgGetIPLocation.prototype.ips = $util.emptyArray;
    
        /**
         * Creates a new CGCMsgGetIPLocation instance using the specified properties.
         * @function create
         * @memberof CGCMsgGetIPLocation
         * @static
         * @param {ICGCMsgGetIPLocation=} [properties] Properties to set
         * @returns {CGCMsgGetIPLocation} CGCMsgGetIPLocation instance
         */
        CGCMsgGetIPLocation.create = function create(properties) {
            return new CGCMsgGetIPLocation(properties);
        };
    
        /**
         * Encodes the specified CGCMsgGetIPLocation message. Does not implicitly {@link CGCMsgGetIPLocation.verify|verify} messages.
         * @function encode
         * @memberof CGCMsgGetIPLocation
         * @static
         * @param {ICGCMsgGetIPLocation} message CGCMsgGetIPLocation message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgGetIPLocation.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.ips != null && message.ips.length)
                for (var i = 0; i < message.ips.length; ++i)
                    writer.uint32(/* id 1, wireType 5 =*/13).fixed32(message.ips[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CGCMsgGetIPLocation message, length delimited. Does not implicitly {@link CGCMsgGetIPLocation.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCMsgGetIPLocation
         * @static
         * @param {ICGCMsgGetIPLocation} message CGCMsgGetIPLocation message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgGetIPLocation.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCMsgGetIPLocation message from the specified reader or buffer.
         * @function decode
         * @memberof CGCMsgGetIPLocation
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCMsgGetIPLocation} CGCMsgGetIPLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgGetIPLocation.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgGetIPLocation();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.ips && message.ips.length))
                            message.ips = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.ips.push(reader.fixed32());
                        } else
                            message.ips.push(reader.fixed32());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCMsgGetIPLocation message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCMsgGetIPLocation
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCMsgGetIPLocation} CGCMsgGetIPLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgGetIPLocation.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCMsgGetIPLocation message.
         * @function verify
         * @memberof CGCMsgGetIPLocation
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCMsgGetIPLocation.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.ips != null && message.hasOwnProperty("ips")) {
                if (!Array.isArray(message.ips))
                    return "ips: array expected";
                for (var i = 0; i < message.ips.length; ++i)
                    if (!$util.isInteger(message.ips[i]))
                        return "ips: integer[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CGCMsgGetIPLocation message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCMsgGetIPLocation
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCMsgGetIPLocation} CGCMsgGetIPLocation
         */
        CGCMsgGetIPLocation.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCMsgGetIPLocation)
                return object;
            var message = new $root.CGCMsgGetIPLocation();
            if (object.ips) {
                if (!Array.isArray(object.ips))
                    throw TypeError(".CGCMsgGetIPLocation.ips: array expected");
                message.ips = [];
                for (var i = 0; i < object.ips.length; ++i)
                    message.ips[i] = object.ips[i] >>> 0;
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CGCMsgGetIPLocation message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCMsgGetIPLocation
         * @static
         * @param {CGCMsgGetIPLocation} message CGCMsgGetIPLocation
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCMsgGetIPLocation.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.ips = [];
            if (message.ips && message.ips.length) {
                object.ips = [];
                for (var j = 0; j < message.ips.length; ++j)
                    object.ips[j] = message.ips[j];
            }
            return object;
        };
    
        /**
         * Converts this CGCMsgGetIPLocation to JSON.
         * @function toJSON
         * @memberof CGCMsgGetIPLocation
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCMsgGetIPLocation.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCMsgGetIPLocation
         * @function getTypeUrl
         * @memberof CGCMsgGetIPLocation
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCMsgGetIPLocation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCMsgGetIPLocation";
        };
    
        return CGCMsgGetIPLocation;
    })();
    
    $root.CIPLocationInfo = (function() {
    
        /**
         * Properties of a CIPLocationInfo.
         * @exports ICIPLocationInfo
         * @interface ICIPLocationInfo
         * @property {number|null} [ip] CIPLocationInfo ip
         * @property {number|null} [latitude] CIPLocationInfo latitude
         * @property {number|null} [longitude] CIPLocationInfo longitude
         * @property {string|null} [country] CIPLocationInfo country
         * @property {string|null} [state] CIPLocationInfo state
         * @property {string|null} [city] CIPLocationInfo city
         */
    
        /**
         * Constructs a new CIPLocationInfo.
         * @exports CIPLocationInfo
         * @classdesc Represents a CIPLocationInfo.
         * @implements ICIPLocationInfo
         * @constructor
         * @param {ICIPLocationInfo=} [properties] Properties to set
         */
        function CIPLocationInfo(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CIPLocationInfo ip.
         * @member {number} ip
         * @memberof CIPLocationInfo
         * @instance
         */
        CIPLocationInfo.prototype.ip = 0;
    
        /**
         * CIPLocationInfo latitude.
         * @member {number} latitude
         * @memberof CIPLocationInfo
         * @instance
         */
        CIPLocationInfo.prototype.latitude = 0;
    
        /**
         * CIPLocationInfo longitude.
         * @member {number} longitude
         * @memberof CIPLocationInfo
         * @instance
         */
        CIPLocationInfo.prototype.longitude = 0;
    
        /**
         * CIPLocationInfo country.
         * @member {string} country
         * @memberof CIPLocationInfo
         * @instance
         */
        CIPLocationInfo.prototype.country = "";
    
        /**
         * CIPLocationInfo state.
         * @member {string} state
         * @memberof CIPLocationInfo
         * @instance
         */
        CIPLocationInfo.prototype.state = "";
    
        /**
         * CIPLocationInfo city.
         * @member {string} city
         * @memberof CIPLocationInfo
         * @instance
         */
        CIPLocationInfo.prototype.city = "";
    
        /**
         * Creates a new CIPLocationInfo instance using the specified properties.
         * @function create
         * @memberof CIPLocationInfo
         * @static
         * @param {ICIPLocationInfo=} [properties] Properties to set
         * @returns {CIPLocationInfo} CIPLocationInfo instance
         */
        CIPLocationInfo.create = function create(properties) {
            return new CIPLocationInfo(properties);
        };
    
        /**
         * Encodes the specified CIPLocationInfo message. Does not implicitly {@link CIPLocationInfo.verify|verify} messages.
         * @function encode
         * @memberof CIPLocationInfo
         * @static
         * @param {ICIPLocationInfo} message CIPLocationInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CIPLocationInfo.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.ip != null && Object.hasOwnProperty.call(message, "ip"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.ip);
            if (message.latitude != null && Object.hasOwnProperty.call(message, "latitude"))
                writer.uint32(/* id 2, wireType 5 =*/21).float(message.latitude);
            if (message.longitude != null && Object.hasOwnProperty.call(message, "longitude"))
                writer.uint32(/* id 3, wireType 5 =*/29).float(message.longitude);
            if (message.country != null && Object.hasOwnProperty.call(message, "country"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.country);
            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.state);
            if (message.city != null && Object.hasOwnProperty.call(message, "city"))
                writer.uint32(/* id 6, wireType 2 =*/50).string(message.city);
            return writer;
        };
    
        /**
         * Encodes the specified CIPLocationInfo message, length delimited. Does not implicitly {@link CIPLocationInfo.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CIPLocationInfo
         * @static
         * @param {ICIPLocationInfo} message CIPLocationInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CIPLocationInfo.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CIPLocationInfo message from the specified reader or buffer.
         * @function decode
         * @memberof CIPLocationInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CIPLocationInfo} CIPLocationInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CIPLocationInfo.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CIPLocationInfo();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.ip = reader.uint32();
                        break;
                    }
                case 2: {
                        message.latitude = reader.float();
                        break;
                    }
                case 3: {
                        message.longitude = reader.float();
                        break;
                    }
                case 4: {
                        message.country = reader.string();
                        break;
                    }
                case 5: {
                        message.state = reader.string();
                        break;
                    }
                case 6: {
                        message.city = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CIPLocationInfo message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CIPLocationInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CIPLocationInfo} CIPLocationInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CIPLocationInfo.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CIPLocationInfo message.
         * @function verify
         * @memberof CIPLocationInfo
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CIPLocationInfo.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.ip != null && message.hasOwnProperty("ip"))
                if (!$util.isInteger(message.ip))
                    return "ip: integer expected";
            if (message.latitude != null && message.hasOwnProperty("latitude"))
                if (typeof message.latitude !== "number")
                    return "latitude: number expected";
            if (message.longitude != null && message.hasOwnProperty("longitude"))
                if (typeof message.longitude !== "number")
                    return "longitude: number expected";
            if (message.country != null && message.hasOwnProperty("country"))
                if (!$util.isString(message.country))
                    return "country: string expected";
            if (message.state != null && message.hasOwnProperty("state"))
                if (!$util.isString(message.state))
                    return "state: string expected";
            if (message.city != null && message.hasOwnProperty("city"))
                if (!$util.isString(message.city))
                    return "city: string expected";
            return null;
        };
    
        /**
         * Creates a CIPLocationInfo message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CIPLocationInfo
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CIPLocationInfo} CIPLocationInfo
         */
        CIPLocationInfo.fromObject = function fromObject(object) {
            if (object instanceof $root.CIPLocationInfo)
                return object;
            var message = new $root.CIPLocationInfo();
            if (object.ip != null)
                message.ip = object.ip >>> 0;
            if (object.latitude != null)
                message.latitude = Number(object.latitude);
            if (object.longitude != null)
                message.longitude = Number(object.longitude);
            if (object.country != null)
                message.country = String(object.country);
            if (object.state != null)
                message.state = String(object.state);
            if (object.city != null)
                message.city = String(object.city);
            return message;
        };
    
        /**
         * Creates a plain object from a CIPLocationInfo message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CIPLocationInfo
         * @static
         * @param {CIPLocationInfo} message CIPLocationInfo
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CIPLocationInfo.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.ip = 0;
                object.latitude = 0;
                object.longitude = 0;
                object.country = "";
                object.state = "";
                object.city = "";
            }
            if (message.ip != null && message.hasOwnProperty("ip"))
                object.ip = message.ip;
            if (message.latitude != null && message.hasOwnProperty("latitude"))
                object.latitude = options.json && !isFinite(message.latitude) ? String(message.latitude) : message.latitude;
            if (message.longitude != null && message.hasOwnProperty("longitude"))
                object.longitude = options.json && !isFinite(message.longitude) ? String(message.longitude) : message.longitude;
            if (message.country != null && message.hasOwnProperty("country"))
                object.country = message.country;
            if (message.state != null && message.hasOwnProperty("state"))
                object.state = message.state;
            if (message.city != null && message.hasOwnProperty("city"))
                object.city = message.city;
            return object;
        };
    
        /**
         * Converts this CIPLocationInfo to JSON.
         * @function toJSON
         * @memberof CIPLocationInfo
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CIPLocationInfo.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CIPLocationInfo
         * @function getTypeUrl
         * @memberof CIPLocationInfo
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CIPLocationInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CIPLocationInfo";
        };
    
        return CIPLocationInfo;
    })();
    
    $root.CGCMsgGetIPLocationResponse = (function() {
    
        /**
         * Properties of a CGCMsgGetIPLocationResponse.
         * @exports ICGCMsgGetIPLocationResponse
         * @interface ICGCMsgGetIPLocationResponse
         * @property {Array.<ICIPLocationInfo>|null} [infos] CGCMsgGetIPLocationResponse infos
         */
    
        /**
         * Constructs a new CGCMsgGetIPLocationResponse.
         * @exports CGCMsgGetIPLocationResponse
         * @classdesc Represents a CGCMsgGetIPLocationResponse.
         * @implements ICGCMsgGetIPLocationResponse
         * @constructor
         * @param {ICGCMsgGetIPLocationResponse=} [properties] Properties to set
         */
        function CGCMsgGetIPLocationResponse(properties) {
            this.infos = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCMsgGetIPLocationResponse infos.
         * @member {Array.<ICIPLocationInfo>} infos
         * @memberof CGCMsgGetIPLocationResponse
         * @instance
         */
        CGCMsgGetIPLocationResponse.prototype.infos = $util.emptyArray;
    
        /**
         * Creates a new CGCMsgGetIPLocationResponse instance using the specified properties.
         * @function create
         * @memberof CGCMsgGetIPLocationResponse
         * @static
         * @param {ICGCMsgGetIPLocationResponse=} [properties] Properties to set
         * @returns {CGCMsgGetIPLocationResponse} CGCMsgGetIPLocationResponse instance
         */
        CGCMsgGetIPLocationResponse.create = function create(properties) {
            return new CGCMsgGetIPLocationResponse(properties);
        };
    
        /**
         * Encodes the specified CGCMsgGetIPLocationResponse message. Does not implicitly {@link CGCMsgGetIPLocationResponse.verify|verify} messages.
         * @function encode
         * @memberof CGCMsgGetIPLocationResponse
         * @static
         * @param {ICGCMsgGetIPLocationResponse} message CGCMsgGetIPLocationResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgGetIPLocationResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.infos != null && message.infos.length)
                for (var i = 0; i < message.infos.length; ++i)
                    $root.CIPLocationInfo.encode(message.infos[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CGCMsgGetIPLocationResponse message, length delimited. Does not implicitly {@link CGCMsgGetIPLocationResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCMsgGetIPLocationResponse
         * @static
         * @param {ICGCMsgGetIPLocationResponse} message CGCMsgGetIPLocationResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgGetIPLocationResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCMsgGetIPLocationResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CGCMsgGetIPLocationResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCMsgGetIPLocationResponse} CGCMsgGetIPLocationResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgGetIPLocationResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgGetIPLocationResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.infos && message.infos.length))
                            message.infos = [];
                        message.infos.push($root.CIPLocationInfo.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCMsgGetIPLocationResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCMsgGetIPLocationResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCMsgGetIPLocationResponse} CGCMsgGetIPLocationResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgGetIPLocationResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCMsgGetIPLocationResponse message.
         * @function verify
         * @memberof CGCMsgGetIPLocationResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCMsgGetIPLocationResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.infos != null && message.hasOwnProperty("infos")) {
                if (!Array.isArray(message.infos))
                    return "infos: array expected";
                for (var i = 0; i < message.infos.length; ++i) {
                    var error = $root.CIPLocationInfo.verify(message.infos[i]);
                    if (error)
                        return "infos." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CGCMsgGetIPLocationResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCMsgGetIPLocationResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCMsgGetIPLocationResponse} CGCMsgGetIPLocationResponse
         */
        CGCMsgGetIPLocationResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCMsgGetIPLocationResponse)
                return object;
            var message = new $root.CGCMsgGetIPLocationResponse();
            if (object.infos) {
                if (!Array.isArray(object.infos))
                    throw TypeError(".CGCMsgGetIPLocationResponse.infos: array expected");
                message.infos = [];
                for (var i = 0; i < object.infos.length; ++i) {
                    if (typeof object.infos[i] !== "object")
                        throw TypeError(".CGCMsgGetIPLocationResponse.infos: object expected");
                    message.infos[i] = $root.CIPLocationInfo.fromObject(object.infos[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CGCMsgGetIPLocationResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCMsgGetIPLocationResponse
         * @static
         * @param {CGCMsgGetIPLocationResponse} message CGCMsgGetIPLocationResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCMsgGetIPLocationResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.infos = [];
            if (message.infos && message.infos.length) {
                object.infos = [];
                for (var j = 0; j < message.infos.length; ++j)
                    object.infos[j] = $root.CIPLocationInfo.toObject(message.infos[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CGCMsgGetIPLocationResponse to JSON.
         * @function toJSON
         * @memberof CGCMsgGetIPLocationResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCMsgGetIPLocationResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCMsgGetIPLocationResponse
         * @function getTypeUrl
         * @memberof CGCMsgGetIPLocationResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCMsgGetIPLocationResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCMsgGetIPLocationResponse";
        };
    
        return CGCMsgGetIPLocationResponse;
    })();
    
    $root.CGCMsgSystemStatsSchema = (function() {
    
        /**
         * Properties of a CGCMsgSystemStatsSchema.
         * @exports ICGCMsgSystemStatsSchema
         * @interface ICGCMsgSystemStatsSchema
         * @property {number|null} [gcAppId] CGCMsgSystemStatsSchema gcAppId
         * @property {Uint8Array|null} [schemaKv] CGCMsgSystemStatsSchema schemaKv
         */
    
        /**
         * Constructs a new CGCMsgSystemStatsSchema.
         * @exports CGCMsgSystemStatsSchema
         * @classdesc Represents a CGCMsgSystemStatsSchema.
         * @implements ICGCMsgSystemStatsSchema
         * @constructor
         * @param {ICGCMsgSystemStatsSchema=} [properties] Properties to set
         */
        function CGCMsgSystemStatsSchema(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCMsgSystemStatsSchema gcAppId.
         * @member {number} gcAppId
         * @memberof CGCMsgSystemStatsSchema
         * @instance
         */
        CGCMsgSystemStatsSchema.prototype.gcAppId = 0;
    
        /**
         * CGCMsgSystemStatsSchema schemaKv.
         * @member {Uint8Array} schemaKv
         * @memberof CGCMsgSystemStatsSchema
         * @instance
         */
        CGCMsgSystemStatsSchema.prototype.schemaKv = $util.newBuffer([]);
    
        /**
         * Creates a new CGCMsgSystemStatsSchema instance using the specified properties.
         * @function create
         * @memberof CGCMsgSystemStatsSchema
         * @static
         * @param {ICGCMsgSystemStatsSchema=} [properties] Properties to set
         * @returns {CGCMsgSystemStatsSchema} CGCMsgSystemStatsSchema instance
         */
        CGCMsgSystemStatsSchema.create = function create(properties) {
            return new CGCMsgSystemStatsSchema(properties);
        };
    
        /**
         * Encodes the specified CGCMsgSystemStatsSchema message. Does not implicitly {@link CGCMsgSystemStatsSchema.verify|verify} messages.
         * @function encode
         * @memberof CGCMsgSystemStatsSchema
         * @static
         * @param {ICGCMsgSystemStatsSchema} message CGCMsgSystemStatsSchema message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgSystemStatsSchema.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.gcAppId != null && Object.hasOwnProperty.call(message, "gcAppId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.gcAppId);
            if (message.schemaKv != null && Object.hasOwnProperty.call(message, "schemaKv"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.schemaKv);
            return writer;
        };
    
        /**
         * Encodes the specified CGCMsgSystemStatsSchema message, length delimited. Does not implicitly {@link CGCMsgSystemStatsSchema.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCMsgSystemStatsSchema
         * @static
         * @param {ICGCMsgSystemStatsSchema} message CGCMsgSystemStatsSchema message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgSystemStatsSchema.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCMsgSystemStatsSchema message from the specified reader or buffer.
         * @function decode
         * @memberof CGCMsgSystemStatsSchema
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCMsgSystemStatsSchema} CGCMsgSystemStatsSchema
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgSystemStatsSchema.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgSystemStatsSchema();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.gcAppId = reader.uint32();
                        break;
                    }
                case 2: {
                        message.schemaKv = reader.bytes();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCMsgSystemStatsSchema message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCMsgSystemStatsSchema
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCMsgSystemStatsSchema} CGCMsgSystemStatsSchema
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgSystemStatsSchema.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCMsgSystemStatsSchema message.
         * @function verify
         * @memberof CGCMsgSystemStatsSchema
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCMsgSystemStatsSchema.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.gcAppId != null && message.hasOwnProperty("gcAppId"))
                if (!$util.isInteger(message.gcAppId))
                    return "gcAppId: integer expected";
            if (message.schemaKv != null && message.hasOwnProperty("schemaKv"))
                if (!(message.schemaKv && typeof message.schemaKv.length === "number" || $util.isString(message.schemaKv)))
                    return "schemaKv: buffer expected";
            return null;
        };
    
        /**
         * Creates a CGCMsgSystemStatsSchema message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCMsgSystemStatsSchema
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCMsgSystemStatsSchema} CGCMsgSystemStatsSchema
         */
        CGCMsgSystemStatsSchema.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCMsgSystemStatsSchema)
                return object;
            var message = new $root.CGCMsgSystemStatsSchema();
            if (object.gcAppId != null)
                message.gcAppId = object.gcAppId >>> 0;
            if (object.schemaKv != null)
                if (typeof object.schemaKv === "string")
                    $util.base64.decode(object.schemaKv, message.schemaKv = $util.newBuffer($util.base64.length(object.schemaKv)), 0);
                else if (object.schemaKv.length >= 0)
                    message.schemaKv = object.schemaKv;
            return message;
        };
    
        /**
         * Creates a plain object from a CGCMsgSystemStatsSchema message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCMsgSystemStatsSchema
         * @static
         * @param {CGCMsgSystemStatsSchema} message CGCMsgSystemStatsSchema
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCMsgSystemStatsSchema.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.gcAppId = 0;
                if (options.bytes === String)
                    object.schemaKv = "";
                else {
                    object.schemaKv = [];
                    if (options.bytes !== Array)
                        object.schemaKv = $util.newBuffer(object.schemaKv);
                }
            }
            if (message.gcAppId != null && message.hasOwnProperty("gcAppId"))
                object.gcAppId = message.gcAppId;
            if (message.schemaKv != null && message.hasOwnProperty("schemaKv"))
                object.schemaKv = options.bytes === String ? $util.base64.encode(message.schemaKv, 0, message.schemaKv.length) : options.bytes === Array ? Array.prototype.slice.call(message.schemaKv) : message.schemaKv;
            return object;
        };
    
        /**
         * Converts this CGCMsgSystemStatsSchema to JSON.
         * @function toJSON
         * @memberof CGCMsgSystemStatsSchema
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCMsgSystemStatsSchema.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCMsgSystemStatsSchema
         * @function getTypeUrl
         * @memberof CGCMsgSystemStatsSchema
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCMsgSystemStatsSchema.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCMsgSystemStatsSchema";
        };
    
        return CGCMsgSystemStatsSchema;
    })();
    
    $root.CGCMsgGetSystemStats = (function() {
    
        /**
         * Properties of a CGCMsgGetSystemStats.
         * @exports ICGCMsgGetSystemStats
         * @interface ICGCMsgGetSystemStats
         */
    
        /**
         * Constructs a new CGCMsgGetSystemStats.
         * @exports CGCMsgGetSystemStats
         * @classdesc Represents a CGCMsgGetSystemStats.
         * @implements ICGCMsgGetSystemStats
         * @constructor
         * @param {ICGCMsgGetSystemStats=} [properties] Properties to set
         */
        function CGCMsgGetSystemStats(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CGCMsgGetSystemStats instance using the specified properties.
         * @function create
         * @memberof CGCMsgGetSystemStats
         * @static
         * @param {ICGCMsgGetSystemStats=} [properties] Properties to set
         * @returns {CGCMsgGetSystemStats} CGCMsgGetSystemStats instance
         */
        CGCMsgGetSystemStats.create = function create(properties) {
            return new CGCMsgGetSystemStats(properties);
        };
    
        /**
         * Encodes the specified CGCMsgGetSystemStats message. Does not implicitly {@link CGCMsgGetSystemStats.verify|verify} messages.
         * @function encode
         * @memberof CGCMsgGetSystemStats
         * @static
         * @param {ICGCMsgGetSystemStats} message CGCMsgGetSystemStats message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgGetSystemStats.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CGCMsgGetSystemStats message, length delimited. Does not implicitly {@link CGCMsgGetSystemStats.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCMsgGetSystemStats
         * @static
         * @param {ICGCMsgGetSystemStats} message CGCMsgGetSystemStats message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgGetSystemStats.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCMsgGetSystemStats message from the specified reader or buffer.
         * @function decode
         * @memberof CGCMsgGetSystemStats
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCMsgGetSystemStats} CGCMsgGetSystemStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgGetSystemStats.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgGetSystemStats();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCMsgGetSystemStats message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCMsgGetSystemStats
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCMsgGetSystemStats} CGCMsgGetSystemStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgGetSystemStats.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCMsgGetSystemStats message.
         * @function verify
         * @memberof CGCMsgGetSystemStats
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCMsgGetSystemStats.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CGCMsgGetSystemStats message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCMsgGetSystemStats
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCMsgGetSystemStats} CGCMsgGetSystemStats
         */
        CGCMsgGetSystemStats.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCMsgGetSystemStats)
                return object;
            return new $root.CGCMsgGetSystemStats();
        };
    
        /**
         * Creates a plain object from a CGCMsgGetSystemStats message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCMsgGetSystemStats
         * @static
         * @param {CGCMsgGetSystemStats} message CGCMsgGetSystemStats
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCMsgGetSystemStats.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CGCMsgGetSystemStats to JSON.
         * @function toJSON
         * @memberof CGCMsgGetSystemStats
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCMsgGetSystemStats.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCMsgGetSystemStats
         * @function getTypeUrl
         * @memberof CGCMsgGetSystemStats
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCMsgGetSystemStats.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCMsgGetSystemStats";
        };
    
        return CGCMsgGetSystemStats;
    })();
    
    $root.CGCMsgGetSystemStatsResponse = (function() {
    
        /**
         * Properties of a CGCMsgGetSystemStatsResponse.
         * @exports ICGCMsgGetSystemStatsResponse
         * @interface ICGCMsgGetSystemStatsResponse
         * @property {number|null} [gcAppId] CGCMsgGetSystemStatsResponse gcAppId
         * @property {Uint8Array|null} [statsKv] CGCMsgGetSystemStatsResponse statsKv
         * @property {number|null} [activeJobs] CGCMsgGetSystemStatsResponse activeJobs
         * @property {number|null} [yieldingJobs] CGCMsgGetSystemStatsResponse yieldingJobs
         * @property {number|null} [userSessions] CGCMsgGetSystemStatsResponse userSessions
         * @property {number|null} [gameServerSessions] CGCMsgGetSystemStatsResponse gameServerSessions
         * @property {number|null} [socaches] CGCMsgGetSystemStatsResponse socaches
         * @property {number|null} [socachesToUnload] CGCMsgGetSystemStatsResponse socachesToUnload
         * @property {number|null} [socachesLoading] CGCMsgGetSystemStatsResponse socachesLoading
         * @property {number|null} [writebackQueue] CGCMsgGetSystemStatsResponse writebackQueue
         * @property {number|null} [steamidLocks] CGCMsgGetSystemStatsResponse steamidLocks
         * @property {number|null} [logonQueue] CGCMsgGetSystemStatsResponse logonQueue
         * @property {number|null} [logonJobs] CGCMsgGetSystemStatsResponse logonJobs
         */
    
        /**
         * Constructs a new CGCMsgGetSystemStatsResponse.
         * @exports CGCMsgGetSystemStatsResponse
         * @classdesc Represents a CGCMsgGetSystemStatsResponse.
         * @implements ICGCMsgGetSystemStatsResponse
         * @constructor
         * @param {ICGCMsgGetSystemStatsResponse=} [properties] Properties to set
         */
        function CGCMsgGetSystemStatsResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCMsgGetSystemStatsResponse gcAppId.
         * @member {number} gcAppId
         * @memberof CGCMsgGetSystemStatsResponse
         * @instance
         */
        CGCMsgGetSystemStatsResponse.prototype.gcAppId = 0;
    
        /**
         * CGCMsgGetSystemStatsResponse statsKv.
         * @member {Uint8Array} statsKv
         * @memberof CGCMsgGetSystemStatsResponse
         * @instance
         */
        CGCMsgGetSystemStatsResponse.prototype.statsKv = $util.newBuffer([]);
    
        /**
         * CGCMsgGetSystemStatsResponse activeJobs.
         * @member {number} activeJobs
         * @memberof CGCMsgGetSystemStatsResponse
         * @instance
         */
        CGCMsgGetSystemStatsResponse.prototype.activeJobs = 0;
    
        /**
         * CGCMsgGetSystemStatsResponse yieldingJobs.
         * @member {number} yieldingJobs
         * @memberof CGCMsgGetSystemStatsResponse
         * @instance
         */
        CGCMsgGetSystemStatsResponse.prototype.yieldingJobs = 0;
    
        /**
         * CGCMsgGetSystemStatsResponse userSessions.
         * @member {number} userSessions
         * @memberof CGCMsgGetSystemStatsResponse
         * @instance
         */
        CGCMsgGetSystemStatsResponse.prototype.userSessions = 0;
    
        /**
         * CGCMsgGetSystemStatsResponse gameServerSessions.
         * @member {number} gameServerSessions
         * @memberof CGCMsgGetSystemStatsResponse
         * @instance
         */
        CGCMsgGetSystemStatsResponse.prototype.gameServerSessions = 0;
    
        /**
         * CGCMsgGetSystemStatsResponse socaches.
         * @member {number} socaches
         * @memberof CGCMsgGetSystemStatsResponse
         * @instance
         */
        CGCMsgGetSystemStatsResponse.prototype.socaches = 0;
    
        /**
         * CGCMsgGetSystemStatsResponse socachesToUnload.
         * @member {number} socachesToUnload
         * @memberof CGCMsgGetSystemStatsResponse
         * @instance
         */
        CGCMsgGetSystemStatsResponse.prototype.socachesToUnload = 0;
    
        /**
         * CGCMsgGetSystemStatsResponse socachesLoading.
         * @member {number} socachesLoading
         * @memberof CGCMsgGetSystemStatsResponse
         * @instance
         */
        CGCMsgGetSystemStatsResponse.prototype.socachesLoading = 0;
    
        /**
         * CGCMsgGetSystemStatsResponse writebackQueue.
         * @member {number} writebackQueue
         * @memberof CGCMsgGetSystemStatsResponse
         * @instance
         */
        CGCMsgGetSystemStatsResponse.prototype.writebackQueue = 0;
    
        /**
         * CGCMsgGetSystemStatsResponse steamidLocks.
         * @member {number} steamidLocks
         * @memberof CGCMsgGetSystemStatsResponse
         * @instance
         */
        CGCMsgGetSystemStatsResponse.prototype.steamidLocks = 0;
    
        /**
         * CGCMsgGetSystemStatsResponse logonQueue.
         * @member {number} logonQueue
         * @memberof CGCMsgGetSystemStatsResponse
         * @instance
         */
        CGCMsgGetSystemStatsResponse.prototype.logonQueue = 0;
    
        /**
         * CGCMsgGetSystemStatsResponse logonJobs.
         * @member {number} logonJobs
         * @memberof CGCMsgGetSystemStatsResponse
         * @instance
         */
        CGCMsgGetSystemStatsResponse.prototype.logonJobs = 0;
    
        /**
         * Creates a new CGCMsgGetSystemStatsResponse instance using the specified properties.
         * @function create
         * @memberof CGCMsgGetSystemStatsResponse
         * @static
         * @param {ICGCMsgGetSystemStatsResponse=} [properties] Properties to set
         * @returns {CGCMsgGetSystemStatsResponse} CGCMsgGetSystemStatsResponse instance
         */
        CGCMsgGetSystemStatsResponse.create = function create(properties) {
            return new CGCMsgGetSystemStatsResponse(properties);
        };
    
        /**
         * Encodes the specified CGCMsgGetSystemStatsResponse message. Does not implicitly {@link CGCMsgGetSystemStatsResponse.verify|verify} messages.
         * @function encode
         * @memberof CGCMsgGetSystemStatsResponse
         * @static
         * @param {ICGCMsgGetSystemStatsResponse} message CGCMsgGetSystemStatsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgGetSystemStatsResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.gcAppId != null && Object.hasOwnProperty.call(message, "gcAppId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.gcAppId);
            if (message.statsKv != null && Object.hasOwnProperty.call(message, "statsKv"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.statsKv);
            if (message.activeJobs != null && Object.hasOwnProperty.call(message, "activeJobs"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.activeJobs);
            if (message.yieldingJobs != null && Object.hasOwnProperty.call(message, "yieldingJobs"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.yieldingJobs);
            if (message.userSessions != null && Object.hasOwnProperty.call(message, "userSessions"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.userSessions);
            if (message.gameServerSessions != null && Object.hasOwnProperty.call(message, "gameServerSessions"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.gameServerSessions);
            if (message.socaches != null && Object.hasOwnProperty.call(message, "socaches"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.socaches);
            if (message.socachesToUnload != null && Object.hasOwnProperty.call(message, "socachesToUnload"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.socachesToUnload);
            if (message.socachesLoading != null && Object.hasOwnProperty.call(message, "socachesLoading"))
                writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.socachesLoading);
            if (message.writebackQueue != null && Object.hasOwnProperty.call(message, "writebackQueue"))
                writer.uint32(/* id 10, wireType 0 =*/80).uint32(message.writebackQueue);
            if (message.steamidLocks != null && Object.hasOwnProperty.call(message, "steamidLocks"))
                writer.uint32(/* id 11, wireType 0 =*/88).uint32(message.steamidLocks);
            if (message.logonQueue != null && Object.hasOwnProperty.call(message, "logonQueue"))
                writer.uint32(/* id 12, wireType 0 =*/96).uint32(message.logonQueue);
            if (message.logonJobs != null && Object.hasOwnProperty.call(message, "logonJobs"))
                writer.uint32(/* id 13, wireType 0 =*/104).uint32(message.logonJobs);
            return writer;
        };
    
        /**
         * Encodes the specified CGCMsgGetSystemStatsResponse message, length delimited. Does not implicitly {@link CGCMsgGetSystemStatsResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCMsgGetSystemStatsResponse
         * @static
         * @param {ICGCMsgGetSystemStatsResponse} message CGCMsgGetSystemStatsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgGetSystemStatsResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCMsgGetSystemStatsResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CGCMsgGetSystemStatsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCMsgGetSystemStatsResponse} CGCMsgGetSystemStatsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgGetSystemStatsResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgGetSystemStatsResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.gcAppId = reader.uint32();
                        break;
                    }
                case 2: {
                        message.statsKv = reader.bytes();
                        break;
                    }
                case 3: {
                        message.activeJobs = reader.uint32();
                        break;
                    }
                case 4: {
                        message.yieldingJobs = reader.uint32();
                        break;
                    }
                case 5: {
                        message.userSessions = reader.uint32();
                        break;
                    }
                case 6: {
                        message.gameServerSessions = reader.uint32();
                        break;
                    }
                case 7: {
                        message.socaches = reader.uint32();
                        break;
                    }
                case 8: {
                        message.socachesToUnload = reader.uint32();
                        break;
                    }
                case 9: {
                        message.socachesLoading = reader.uint32();
                        break;
                    }
                case 10: {
                        message.writebackQueue = reader.uint32();
                        break;
                    }
                case 11: {
                        message.steamidLocks = reader.uint32();
                        break;
                    }
                case 12: {
                        message.logonQueue = reader.uint32();
                        break;
                    }
                case 13: {
                        message.logonJobs = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCMsgGetSystemStatsResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCMsgGetSystemStatsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCMsgGetSystemStatsResponse} CGCMsgGetSystemStatsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgGetSystemStatsResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCMsgGetSystemStatsResponse message.
         * @function verify
         * @memberof CGCMsgGetSystemStatsResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCMsgGetSystemStatsResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.gcAppId != null && message.hasOwnProperty("gcAppId"))
                if (!$util.isInteger(message.gcAppId))
                    return "gcAppId: integer expected";
            if (message.statsKv != null && message.hasOwnProperty("statsKv"))
                if (!(message.statsKv && typeof message.statsKv.length === "number" || $util.isString(message.statsKv)))
                    return "statsKv: buffer expected";
            if (message.activeJobs != null && message.hasOwnProperty("activeJobs"))
                if (!$util.isInteger(message.activeJobs))
                    return "activeJobs: integer expected";
            if (message.yieldingJobs != null && message.hasOwnProperty("yieldingJobs"))
                if (!$util.isInteger(message.yieldingJobs))
                    return "yieldingJobs: integer expected";
            if (message.userSessions != null && message.hasOwnProperty("userSessions"))
                if (!$util.isInteger(message.userSessions))
                    return "userSessions: integer expected";
            if (message.gameServerSessions != null && message.hasOwnProperty("gameServerSessions"))
                if (!$util.isInteger(message.gameServerSessions))
                    return "gameServerSessions: integer expected";
            if (message.socaches != null && message.hasOwnProperty("socaches"))
                if (!$util.isInteger(message.socaches))
                    return "socaches: integer expected";
            if (message.socachesToUnload != null && message.hasOwnProperty("socachesToUnload"))
                if (!$util.isInteger(message.socachesToUnload))
                    return "socachesToUnload: integer expected";
            if (message.socachesLoading != null && message.hasOwnProperty("socachesLoading"))
                if (!$util.isInteger(message.socachesLoading))
                    return "socachesLoading: integer expected";
            if (message.writebackQueue != null && message.hasOwnProperty("writebackQueue"))
                if (!$util.isInteger(message.writebackQueue))
                    return "writebackQueue: integer expected";
            if (message.steamidLocks != null && message.hasOwnProperty("steamidLocks"))
                if (!$util.isInteger(message.steamidLocks))
                    return "steamidLocks: integer expected";
            if (message.logonQueue != null && message.hasOwnProperty("logonQueue"))
                if (!$util.isInteger(message.logonQueue))
                    return "logonQueue: integer expected";
            if (message.logonJobs != null && message.hasOwnProperty("logonJobs"))
                if (!$util.isInteger(message.logonJobs))
                    return "logonJobs: integer expected";
            return null;
        };
    
        /**
         * Creates a CGCMsgGetSystemStatsResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCMsgGetSystemStatsResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCMsgGetSystemStatsResponse} CGCMsgGetSystemStatsResponse
         */
        CGCMsgGetSystemStatsResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCMsgGetSystemStatsResponse)
                return object;
            var message = new $root.CGCMsgGetSystemStatsResponse();
            if (object.gcAppId != null)
                message.gcAppId = object.gcAppId >>> 0;
            if (object.statsKv != null)
                if (typeof object.statsKv === "string")
                    $util.base64.decode(object.statsKv, message.statsKv = $util.newBuffer($util.base64.length(object.statsKv)), 0);
                else if (object.statsKv.length >= 0)
                    message.statsKv = object.statsKv;
            if (object.activeJobs != null)
                message.activeJobs = object.activeJobs >>> 0;
            if (object.yieldingJobs != null)
                message.yieldingJobs = object.yieldingJobs >>> 0;
            if (object.userSessions != null)
                message.userSessions = object.userSessions >>> 0;
            if (object.gameServerSessions != null)
                message.gameServerSessions = object.gameServerSessions >>> 0;
            if (object.socaches != null)
                message.socaches = object.socaches >>> 0;
            if (object.socachesToUnload != null)
                message.socachesToUnload = object.socachesToUnload >>> 0;
            if (object.socachesLoading != null)
                message.socachesLoading = object.socachesLoading >>> 0;
            if (object.writebackQueue != null)
                message.writebackQueue = object.writebackQueue >>> 0;
            if (object.steamidLocks != null)
                message.steamidLocks = object.steamidLocks >>> 0;
            if (object.logonQueue != null)
                message.logonQueue = object.logonQueue >>> 0;
            if (object.logonJobs != null)
                message.logonJobs = object.logonJobs >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CGCMsgGetSystemStatsResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCMsgGetSystemStatsResponse
         * @static
         * @param {CGCMsgGetSystemStatsResponse} message CGCMsgGetSystemStatsResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCMsgGetSystemStatsResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.gcAppId = 0;
                if (options.bytes === String)
                    object.statsKv = "";
                else {
                    object.statsKv = [];
                    if (options.bytes !== Array)
                        object.statsKv = $util.newBuffer(object.statsKv);
                }
                object.activeJobs = 0;
                object.yieldingJobs = 0;
                object.userSessions = 0;
                object.gameServerSessions = 0;
                object.socaches = 0;
                object.socachesToUnload = 0;
                object.socachesLoading = 0;
                object.writebackQueue = 0;
                object.steamidLocks = 0;
                object.logonQueue = 0;
                object.logonJobs = 0;
            }
            if (message.gcAppId != null && message.hasOwnProperty("gcAppId"))
                object.gcAppId = message.gcAppId;
            if (message.statsKv != null && message.hasOwnProperty("statsKv"))
                object.statsKv = options.bytes === String ? $util.base64.encode(message.statsKv, 0, message.statsKv.length) : options.bytes === Array ? Array.prototype.slice.call(message.statsKv) : message.statsKv;
            if (message.activeJobs != null && message.hasOwnProperty("activeJobs"))
                object.activeJobs = message.activeJobs;
            if (message.yieldingJobs != null && message.hasOwnProperty("yieldingJobs"))
                object.yieldingJobs = message.yieldingJobs;
            if (message.userSessions != null && message.hasOwnProperty("userSessions"))
                object.userSessions = message.userSessions;
            if (message.gameServerSessions != null && message.hasOwnProperty("gameServerSessions"))
                object.gameServerSessions = message.gameServerSessions;
            if (message.socaches != null && message.hasOwnProperty("socaches"))
                object.socaches = message.socaches;
            if (message.socachesToUnload != null && message.hasOwnProperty("socachesToUnload"))
                object.socachesToUnload = message.socachesToUnload;
            if (message.socachesLoading != null && message.hasOwnProperty("socachesLoading"))
                object.socachesLoading = message.socachesLoading;
            if (message.writebackQueue != null && message.hasOwnProperty("writebackQueue"))
                object.writebackQueue = message.writebackQueue;
            if (message.steamidLocks != null && message.hasOwnProperty("steamidLocks"))
                object.steamidLocks = message.steamidLocks;
            if (message.logonQueue != null && message.hasOwnProperty("logonQueue"))
                object.logonQueue = message.logonQueue;
            if (message.logonJobs != null && message.hasOwnProperty("logonJobs"))
                object.logonJobs = message.logonJobs;
            return object;
        };
    
        /**
         * Converts this CGCMsgGetSystemStatsResponse to JSON.
         * @function toJSON
         * @memberof CGCMsgGetSystemStatsResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCMsgGetSystemStatsResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCMsgGetSystemStatsResponse
         * @function getTypeUrl
         * @memberof CGCMsgGetSystemStatsResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCMsgGetSystemStatsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCMsgGetSystemStatsResponse";
        };
    
        return CGCMsgGetSystemStatsResponse;
    })();
    
    $root.CMsgAMSendEmail = (function() {
    
        /**
         * Properties of a CMsgAMSendEmail.
         * @exports ICMsgAMSendEmail
         * @interface ICMsgAMSendEmail
         * @property {number|Long|null} [steamid] CMsgAMSendEmail steamid
         * @property {number|null} [emailMsgType] CMsgAMSendEmail emailMsgType
         * @property {number|null} [emailFormat] CMsgAMSendEmail emailFormat
         * @property {Array.<CMsgAMSendEmail.IPersonaNameReplacementToken>|null} [personaNameTokens] CMsgAMSendEmail personaNameTokens
         * @property {number|null} [sourceGc] CMsgAMSendEmail sourceGc
         * @property {Array.<CMsgAMSendEmail.IReplacementToken>|null} [tokens] CMsgAMSendEmail tokens
         */
    
        /**
         * Constructs a new CMsgAMSendEmail.
         * @exports CMsgAMSendEmail
         * @classdesc Represents a CMsgAMSendEmail.
         * @implements ICMsgAMSendEmail
         * @constructor
         * @param {ICMsgAMSendEmail=} [properties] Properties to set
         */
        function CMsgAMSendEmail(properties) {
            this.personaNameTokens = [];
            this.tokens = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAMSendEmail steamid.
         * @member {number|Long} steamid
         * @memberof CMsgAMSendEmail
         * @instance
         */
        CMsgAMSendEmail.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgAMSendEmail emailMsgType.
         * @member {number} emailMsgType
         * @memberof CMsgAMSendEmail
         * @instance
         */
        CMsgAMSendEmail.prototype.emailMsgType = 0;
    
        /**
         * CMsgAMSendEmail emailFormat.
         * @member {number} emailFormat
         * @memberof CMsgAMSendEmail
         * @instance
         */
        CMsgAMSendEmail.prototype.emailFormat = 0;
    
        /**
         * CMsgAMSendEmail personaNameTokens.
         * @member {Array.<CMsgAMSendEmail.IPersonaNameReplacementToken>} personaNameTokens
         * @memberof CMsgAMSendEmail
         * @instance
         */
        CMsgAMSendEmail.prototype.personaNameTokens = $util.emptyArray;
    
        /**
         * CMsgAMSendEmail sourceGc.
         * @member {number} sourceGc
         * @memberof CMsgAMSendEmail
         * @instance
         */
        CMsgAMSendEmail.prototype.sourceGc = 0;
    
        /**
         * CMsgAMSendEmail tokens.
         * @member {Array.<CMsgAMSendEmail.IReplacementToken>} tokens
         * @memberof CMsgAMSendEmail
         * @instance
         */
        CMsgAMSendEmail.prototype.tokens = $util.emptyArray;
    
        /**
         * Creates a new CMsgAMSendEmail instance using the specified properties.
         * @function create
         * @memberof CMsgAMSendEmail
         * @static
         * @param {ICMsgAMSendEmail=} [properties] Properties to set
         * @returns {CMsgAMSendEmail} CMsgAMSendEmail instance
         */
        CMsgAMSendEmail.create = function create(properties) {
            return new CMsgAMSendEmail(properties);
        };
    
        /**
         * Encodes the specified CMsgAMSendEmail message. Does not implicitly {@link CMsgAMSendEmail.verify|verify} messages.
         * @function encode
         * @memberof CMsgAMSendEmail
         * @static
         * @param {ICMsgAMSendEmail} message CMsgAMSendEmail message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMSendEmail.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
            if (message.emailMsgType != null && Object.hasOwnProperty.call(message, "emailMsgType"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.emailMsgType);
            if (message.emailFormat != null && Object.hasOwnProperty.call(message, "emailFormat"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.emailFormat);
            if (message.personaNameTokens != null && message.personaNameTokens.length)
                for (var i = 0; i < message.personaNameTokens.length; ++i)
                    $root.CMsgAMSendEmail.PersonaNameReplacementToken.encode(message.personaNameTokens[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
            if (message.sourceGc != null && Object.hasOwnProperty.call(message, "sourceGc"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.sourceGc);
            if (message.tokens != null && message.tokens.length)
                for (var i = 0; i < message.tokens.length; ++i)
                    $root.CMsgAMSendEmail.ReplacementToken.encode(message.tokens[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAMSendEmail message, length delimited. Does not implicitly {@link CMsgAMSendEmail.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAMSendEmail
         * @static
         * @param {ICMsgAMSendEmail} message CMsgAMSendEmail message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMSendEmail.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAMSendEmail message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAMSendEmail
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAMSendEmail} CMsgAMSendEmail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMSendEmail.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMSendEmail();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamid = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.emailMsgType = reader.uint32();
                        break;
                    }
                case 3: {
                        message.emailFormat = reader.uint32();
                        break;
                    }
                case 5: {
                        if (!(message.personaNameTokens && message.personaNameTokens.length))
                            message.personaNameTokens = [];
                        message.personaNameTokens.push($root.CMsgAMSendEmail.PersonaNameReplacementToken.decode(reader, reader.uint32()));
                        break;
                    }
                case 6: {
                        message.sourceGc = reader.uint32();
                        break;
                    }
                case 7: {
                        if (!(message.tokens && message.tokens.length))
                            message.tokens = [];
                        message.tokens.push($root.CMsgAMSendEmail.ReplacementToken.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAMSendEmail message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAMSendEmail
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAMSendEmail} CMsgAMSendEmail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMSendEmail.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAMSendEmail message.
         * @function verify
         * @memberof CMsgAMSendEmail
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAMSendEmail.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.emailMsgType != null && message.hasOwnProperty("emailMsgType"))
                if (!$util.isInteger(message.emailMsgType))
                    return "emailMsgType: integer expected";
            if (message.emailFormat != null && message.hasOwnProperty("emailFormat"))
                if (!$util.isInteger(message.emailFormat))
                    return "emailFormat: integer expected";
            if (message.personaNameTokens != null && message.hasOwnProperty("personaNameTokens")) {
                if (!Array.isArray(message.personaNameTokens))
                    return "personaNameTokens: array expected";
                for (var i = 0; i < message.personaNameTokens.length; ++i) {
                    var error = $root.CMsgAMSendEmail.PersonaNameReplacementToken.verify(message.personaNameTokens[i]);
                    if (error)
                        return "personaNameTokens." + error;
                }
            }
            if (message.sourceGc != null && message.hasOwnProperty("sourceGc"))
                if (!$util.isInteger(message.sourceGc))
                    return "sourceGc: integer expected";
            if (message.tokens != null && message.hasOwnProperty("tokens")) {
                if (!Array.isArray(message.tokens))
                    return "tokens: array expected";
                for (var i = 0; i < message.tokens.length; ++i) {
                    var error = $root.CMsgAMSendEmail.ReplacementToken.verify(message.tokens[i]);
                    if (error)
                        return "tokens." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgAMSendEmail message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAMSendEmail
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAMSendEmail} CMsgAMSendEmail
         */
        CMsgAMSendEmail.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAMSendEmail)
                return object;
            var message = new $root.CMsgAMSendEmail();
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.emailMsgType != null)
                message.emailMsgType = object.emailMsgType >>> 0;
            if (object.emailFormat != null)
                message.emailFormat = object.emailFormat >>> 0;
            if (object.personaNameTokens) {
                if (!Array.isArray(object.personaNameTokens))
                    throw TypeError(".CMsgAMSendEmail.personaNameTokens: array expected");
                message.personaNameTokens = [];
                for (var i = 0; i < object.personaNameTokens.length; ++i) {
                    if (typeof object.personaNameTokens[i] !== "object")
                        throw TypeError(".CMsgAMSendEmail.personaNameTokens: object expected");
                    message.personaNameTokens[i] = $root.CMsgAMSendEmail.PersonaNameReplacementToken.fromObject(object.personaNameTokens[i]);
                }
            }
            if (object.sourceGc != null)
                message.sourceGc = object.sourceGc >>> 0;
            if (object.tokens) {
                if (!Array.isArray(object.tokens))
                    throw TypeError(".CMsgAMSendEmail.tokens: array expected");
                message.tokens = [];
                for (var i = 0; i < object.tokens.length; ++i) {
                    if (typeof object.tokens[i] !== "object")
                        throw TypeError(".CMsgAMSendEmail.tokens: object expected");
                    message.tokens[i] = $root.CMsgAMSendEmail.ReplacementToken.fromObject(object.tokens[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAMSendEmail message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAMSendEmail
         * @static
         * @param {CMsgAMSendEmail} message CMsgAMSendEmail
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAMSendEmail.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.personaNameTokens = [];
                object.tokens = [];
            }
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
                object.emailMsgType = 0;
                object.emailFormat = 0;
                object.sourceGc = 0;
            }
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.emailMsgType != null && message.hasOwnProperty("emailMsgType"))
                object.emailMsgType = message.emailMsgType;
            if (message.emailFormat != null && message.hasOwnProperty("emailFormat"))
                object.emailFormat = message.emailFormat;
            if (message.personaNameTokens && message.personaNameTokens.length) {
                object.personaNameTokens = [];
                for (var j = 0; j < message.personaNameTokens.length; ++j)
                    object.personaNameTokens[j] = $root.CMsgAMSendEmail.PersonaNameReplacementToken.toObject(message.personaNameTokens[j], options);
            }
            if (message.sourceGc != null && message.hasOwnProperty("sourceGc"))
                object.sourceGc = message.sourceGc;
            if (message.tokens && message.tokens.length) {
                object.tokens = [];
                for (var j = 0; j < message.tokens.length; ++j)
                    object.tokens[j] = $root.CMsgAMSendEmail.ReplacementToken.toObject(message.tokens[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgAMSendEmail to JSON.
         * @function toJSON
         * @memberof CMsgAMSendEmail
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAMSendEmail.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAMSendEmail
         * @function getTypeUrl
         * @memberof CMsgAMSendEmail
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAMSendEmail.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAMSendEmail";
        };
    
        CMsgAMSendEmail.ReplacementToken = (function() {
    
            /**
             * Properties of a ReplacementToken.
             * @memberof CMsgAMSendEmail
             * @interface IReplacementToken
             * @property {string|null} [tokenName] ReplacementToken tokenName
             * @property {string|null} [tokenValue] ReplacementToken tokenValue
             */
    
            /**
             * Constructs a new ReplacementToken.
             * @memberof CMsgAMSendEmail
             * @classdesc Represents a ReplacementToken.
             * @implements IReplacementToken
             * @constructor
             * @param {CMsgAMSendEmail.IReplacementToken=} [properties] Properties to set
             */
            function ReplacementToken(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * ReplacementToken tokenName.
             * @member {string} tokenName
             * @memberof CMsgAMSendEmail.ReplacementToken
             * @instance
             */
            ReplacementToken.prototype.tokenName = "";
    
            /**
             * ReplacementToken tokenValue.
             * @member {string} tokenValue
             * @memberof CMsgAMSendEmail.ReplacementToken
             * @instance
             */
            ReplacementToken.prototype.tokenValue = "";
    
            /**
             * Creates a new ReplacementToken instance using the specified properties.
             * @function create
             * @memberof CMsgAMSendEmail.ReplacementToken
             * @static
             * @param {CMsgAMSendEmail.IReplacementToken=} [properties] Properties to set
             * @returns {CMsgAMSendEmail.ReplacementToken} ReplacementToken instance
             */
            ReplacementToken.create = function create(properties) {
                return new ReplacementToken(properties);
            };
    
            /**
             * Encodes the specified ReplacementToken message. Does not implicitly {@link CMsgAMSendEmail.ReplacementToken.verify|verify} messages.
             * @function encode
             * @memberof CMsgAMSendEmail.ReplacementToken
             * @static
             * @param {CMsgAMSendEmail.IReplacementToken} message ReplacementToken message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ReplacementToken.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.tokenName != null && Object.hasOwnProperty.call(message, "tokenName"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.tokenName);
                if (message.tokenValue != null && Object.hasOwnProperty.call(message, "tokenValue"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.tokenValue);
                return writer;
            };
    
            /**
             * Encodes the specified ReplacementToken message, length delimited. Does not implicitly {@link CMsgAMSendEmail.ReplacementToken.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgAMSendEmail.ReplacementToken
             * @static
             * @param {CMsgAMSendEmail.IReplacementToken} message ReplacementToken message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ReplacementToken.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a ReplacementToken message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgAMSendEmail.ReplacementToken
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgAMSendEmail.ReplacementToken} ReplacementToken
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ReplacementToken.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMSendEmail.ReplacementToken();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.tokenName = reader.string();
                            break;
                        }
                    case 2: {
                            message.tokenValue = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a ReplacementToken message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgAMSendEmail.ReplacementToken
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgAMSendEmail.ReplacementToken} ReplacementToken
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ReplacementToken.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a ReplacementToken message.
             * @function verify
             * @memberof CMsgAMSendEmail.ReplacementToken
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ReplacementToken.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.tokenName != null && message.hasOwnProperty("tokenName"))
                    if (!$util.isString(message.tokenName))
                        return "tokenName: string expected";
                if (message.tokenValue != null && message.hasOwnProperty("tokenValue"))
                    if (!$util.isString(message.tokenValue))
                        return "tokenValue: string expected";
                return null;
            };
    
            /**
             * Creates a ReplacementToken message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgAMSendEmail.ReplacementToken
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgAMSendEmail.ReplacementToken} ReplacementToken
             */
            ReplacementToken.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgAMSendEmail.ReplacementToken)
                    return object;
                var message = new $root.CMsgAMSendEmail.ReplacementToken();
                if (object.tokenName != null)
                    message.tokenName = String(object.tokenName);
                if (object.tokenValue != null)
                    message.tokenValue = String(object.tokenValue);
                return message;
            };
    
            /**
             * Creates a plain object from a ReplacementToken message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgAMSendEmail.ReplacementToken
             * @static
             * @param {CMsgAMSendEmail.ReplacementToken} message ReplacementToken
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ReplacementToken.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.tokenName = "";
                    object.tokenValue = "";
                }
                if (message.tokenName != null && message.hasOwnProperty("tokenName"))
                    object.tokenName = message.tokenName;
                if (message.tokenValue != null && message.hasOwnProperty("tokenValue"))
                    object.tokenValue = message.tokenValue;
                return object;
            };
    
            /**
             * Converts this ReplacementToken to JSON.
             * @function toJSON
             * @memberof CMsgAMSendEmail.ReplacementToken
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ReplacementToken.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for ReplacementToken
             * @function getTypeUrl
             * @memberof CMsgAMSendEmail.ReplacementToken
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ReplacementToken.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgAMSendEmail.ReplacementToken";
            };
    
            return ReplacementToken;
        })();
    
        CMsgAMSendEmail.PersonaNameReplacementToken = (function() {
    
            /**
             * Properties of a PersonaNameReplacementToken.
             * @memberof CMsgAMSendEmail
             * @interface IPersonaNameReplacementToken
             * @property {number|Long|null} [steamid] PersonaNameReplacementToken steamid
             * @property {string|null} [tokenName] PersonaNameReplacementToken tokenName
             */
    
            /**
             * Constructs a new PersonaNameReplacementToken.
             * @memberof CMsgAMSendEmail
             * @classdesc Represents a PersonaNameReplacementToken.
             * @implements IPersonaNameReplacementToken
             * @constructor
             * @param {CMsgAMSendEmail.IPersonaNameReplacementToken=} [properties] Properties to set
             */
            function PersonaNameReplacementToken(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * PersonaNameReplacementToken steamid.
             * @member {number|Long} steamid
             * @memberof CMsgAMSendEmail.PersonaNameReplacementToken
             * @instance
             */
            PersonaNameReplacementToken.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
            /**
             * PersonaNameReplacementToken tokenName.
             * @member {string} tokenName
             * @memberof CMsgAMSendEmail.PersonaNameReplacementToken
             * @instance
             */
            PersonaNameReplacementToken.prototype.tokenName = "";
    
            /**
             * Creates a new PersonaNameReplacementToken instance using the specified properties.
             * @function create
             * @memberof CMsgAMSendEmail.PersonaNameReplacementToken
             * @static
             * @param {CMsgAMSendEmail.IPersonaNameReplacementToken=} [properties] Properties to set
             * @returns {CMsgAMSendEmail.PersonaNameReplacementToken} PersonaNameReplacementToken instance
             */
            PersonaNameReplacementToken.create = function create(properties) {
                return new PersonaNameReplacementToken(properties);
            };
    
            /**
             * Encodes the specified PersonaNameReplacementToken message. Does not implicitly {@link CMsgAMSendEmail.PersonaNameReplacementToken.verify|verify} messages.
             * @function encode
             * @memberof CMsgAMSendEmail.PersonaNameReplacementToken
             * @static
             * @param {CMsgAMSendEmail.IPersonaNameReplacementToken} message PersonaNameReplacementToken message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PersonaNameReplacementToken.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                    writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
                if (message.tokenName != null && Object.hasOwnProperty.call(message, "tokenName"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.tokenName);
                return writer;
            };
    
            /**
             * Encodes the specified PersonaNameReplacementToken message, length delimited. Does not implicitly {@link CMsgAMSendEmail.PersonaNameReplacementToken.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgAMSendEmail.PersonaNameReplacementToken
             * @static
             * @param {CMsgAMSendEmail.IPersonaNameReplacementToken} message PersonaNameReplacementToken message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PersonaNameReplacementToken.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a PersonaNameReplacementToken message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgAMSendEmail.PersonaNameReplacementToken
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgAMSendEmail.PersonaNameReplacementToken} PersonaNameReplacementToken
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PersonaNameReplacementToken.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMSendEmail.PersonaNameReplacementToken();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.steamid = reader.fixed64();
                            break;
                        }
                    case 2: {
                            message.tokenName = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a PersonaNameReplacementToken message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgAMSendEmail.PersonaNameReplacementToken
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgAMSendEmail.PersonaNameReplacementToken} PersonaNameReplacementToken
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PersonaNameReplacementToken.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a PersonaNameReplacementToken message.
             * @function verify
             * @memberof CMsgAMSendEmail.PersonaNameReplacementToken
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            PersonaNameReplacementToken.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.steamid != null && message.hasOwnProperty("steamid"))
                    if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                        return "steamid: integer|Long expected";
                if (message.tokenName != null && message.hasOwnProperty("tokenName"))
                    if (!$util.isString(message.tokenName))
                        return "tokenName: string expected";
                return null;
            };
    
            /**
             * Creates a PersonaNameReplacementToken message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgAMSendEmail.PersonaNameReplacementToken
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgAMSendEmail.PersonaNameReplacementToken} PersonaNameReplacementToken
             */
            PersonaNameReplacementToken.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgAMSendEmail.PersonaNameReplacementToken)
                    return object;
                var message = new $root.CMsgAMSendEmail.PersonaNameReplacementToken();
                if (object.steamid != null)
                    if ($util.Long)
                        (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                    else if (typeof object.steamid === "string")
                        message.steamid = parseInt(object.steamid, 10);
                    else if (typeof object.steamid === "number")
                        message.steamid = object.steamid;
                    else if (typeof object.steamid === "object")
                        message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
                if (object.tokenName != null)
                    message.tokenName = String(object.tokenName);
                return message;
            };
    
            /**
             * Creates a plain object from a PersonaNameReplacementToken message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgAMSendEmail.PersonaNameReplacementToken
             * @static
             * @param {CMsgAMSendEmail.PersonaNameReplacementToken} message PersonaNameReplacementToken
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            PersonaNameReplacementToken.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.steamid = options.longs === String ? "0" : 0;
                    object.tokenName = "";
                }
                if (message.steamid != null && message.hasOwnProperty("steamid"))
                    if (typeof message.steamid === "number")
                        object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                    else
                        object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
                if (message.tokenName != null && message.hasOwnProperty("tokenName"))
                    object.tokenName = message.tokenName;
                return object;
            };
    
            /**
             * Converts this PersonaNameReplacementToken to JSON.
             * @function toJSON
             * @memberof CMsgAMSendEmail.PersonaNameReplacementToken
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            PersonaNameReplacementToken.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for PersonaNameReplacementToken
             * @function getTypeUrl
             * @memberof CMsgAMSendEmail.PersonaNameReplacementToken
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            PersonaNameReplacementToken.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgAMSendEmail.PersonaNameReplacementToken";
            };
    
            return PersonaNameReplacementToken;
        })();
    
        return CMsgAMSendEmail;
    })();
    
    $root.CMsgAMSendEmailResponse = (function() {
    
        /**
         * Properties of a CMsgAMSendEmailResponse.
         * @exports ICMsgAMSendEmailResponse
         * @interface ICMsgAMSendEmailResponse
         * @property {number|null} [eresult] CMsgAMSendEmailResponse eresult
         */
    
        /**
         * Constructs a new CMsgAMSendEmailResponse.
         * @exports CMsgAMSendEmailResponse
         * @classdesc Represents a CMsgAMSendEmailResponse.
         * @implements ICMsgAMSendEmailResponse
         * @constructor
         * @param {ICMsgAMSendEmailResponse=} [properties] Properties to set
         */
        function CMsgAMSendEmailResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAMSendEmailResponse eresult.
         * @member {number} eresult
         * @memberof CMsgAMSendEmailResponse
         * @instance
         */
        CMsgAMSendEmailResponse.prototype.eresult = 2;
    
        /**
         * Creates a new CMsgAMSendEmailResponse instance using the specified properties.
         * @function create
         * @memberof CMsgAMSendEmailResponse
         * @static
         * @param {ICMsgAMSendEmailResponse=} [properties] Properties to set
         * @returns {CMsgAMSendEmailResponse} CMsgAMSendEmailResponse instance
         */
        CMsgAMSendEmailResponse.create = function create(properties) {
            return new CMsgAMSendEmailResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgAMSendEmailResponse message. Does not implicitly {@link CMsgAMSendEmailResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgAMSendEmailResponse
         * @static
         * @param {ICMsgAMSendEmailResponse} message CMsgAMSendEmailResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMSendEmailResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.eresult);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAMSendEmailResponse message, length delimited. Does not implicitly {@link CMsgAMSendEmailResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAMSendEmailResponse
         * @static
         * @param {ICMsgAMSendEmailResponse} message CMsgAMSendEmailResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMSendEmailResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAMSendEmailResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAMSendEmailResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAMSendEmailResponse} CMsgAMSendEmailResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMSendEmailResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMSendEmailResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.eresult = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAMSendEmailResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAMSendEmailResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAMSendEmailResponse} CMsgAMSendEmailResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMSendEmailResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAMSendEmailResponse message.
         * @function verify
         * @memberof CMsgAMSendEmailResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAMSendEmailResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgAMSendEmailResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAMSendEmailResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAMSendEmailResponse} CMsgAMSendEmailResponse
         */
        CMsgAMSendEmailResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAMSendEmailResponse)
                return object;
            var message = new $root.CMsgAMSendEmailResponse();
            if (object.eresult != null)
                message.eresult = object.eresult >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAMSendEmailResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAMSendEmailResponse
         * @static
         * @param {CMsgAMSendEmailResponse} message CMsgAMSendEmailResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAMSendEmailResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.eresult = 2;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            return object;
        };
    
        /**
         * Converts this CMsgAMSendEmailResponse to JSON.
         * @function toJSON
         * @memberof CMsgAMSendEmailResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAMSendEmailResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAMSendEmailResponse
         * @function getTypeUrl
         * @memberof CMsgAMSendEmailResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAMSendEmailResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAMSendEmailResponse";
        };
    
        return CMsgAMSendEmailResponse;
    })();
    
    $root.CMsgGCGetEmailTemplate = (function() {
    
        /**
         * Properties of a CMsgGCGetEmailTemplate.
         * @exports ICMsgGCGetEmailTemplate
         * @interface ICMsgGCGetEmailTemplate
         * @property {number|null} [appId] CMsgGCGetEmailTemplate appId
         * @property {number|null} [emailMsgType] CMsgGCGetEmailTemplate emailMsgType
         * @property {number|null} [emailLang] CMsgGCGetEmailTemplate emailLang
         * @property {number|null} [emailFormat] CMsgGCGetEmailTemplate emailFormat
         */
    
        /**
         * Constructs a new CMsgGCGetEmailTemplate.
         * @exports CMsgGCGetEmailTemplate
         * @classdesc Represents a CMsgGCGetEmailTemplate.
         * @implements ICMsgGCGetEmailTemplate
         * @constructor
         * @param {ICMsgGCGetEmailTemplate=} [properties] Properties to set
         */
        function CMsgGCGetEmailTemplate(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCGetEmailTemplate appId.
         * @member {number} appId
         * @memberof CMsgGCGetEmailTemplate
         * @instance
         */
        CMsgGCGetEmailTemplate.prototype.appId = 0;
    
        /**
         * CMsgGCGetEmailTemplate emailMsgType.
         * @member {number} emailMsgType
         * @memberof CMsgGCGetEmailTemplate
         * @instance
         */
        CMsgGCGetEmailTemplate.prototype.emailMsgType = 0;
    
        /**
         * CMsgGCGetEmailTemplate emailLang.
         * @member {number} emailLang
         * @memberof CMsgGCGetEmailTemplate
         * @instance
         */
        CMsgGCGetEmailTemplate.prototype.emailLang = 0;
    
        /**
         * CMsgGCGetEmailTemplate emailFormat.
         * @member {number} emailFormat
         * @memberof CMsgGCGetEmailTemplate
         * @instance
         */
        CMsgGCGetEmailTemplate.prototype.emailFormat = 0;
    
        /**
         * Creates a new CMsgGCGetEmailTemplate instance using the specified properties.
         * @function create
         * @memberof CMsgGCGetEmailTemplate
         * @static
         * @param {ICMsgGCGetEmailTemplate=} [properties] Properties to set
         * @returns {CMsgGCGetEmailTemplate} CMsgGCGetEmailTemplate instance
         */
        CMsgGCGetEmailTemplate.create = function create(properties) {
            return new CMsgGCGetEmailTemplate(properties);
        };
    
        /**
         * Encodes the specified CMsgGCGetEmailTemplate message. Does not implicitly {@link CMsgGCGetEmailTemplate.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCGetEmailTemplate
         * @static
         * @param {ICMsgGCGetEmailTemplate} message CMsgGCGetEmailTemplate message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetEmailTemplate.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appId != null && Object.hasOwnProperty.call(message, "appId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appId);
            if (message.emailMsgType != null && Object.hasOwnProperty.call(message, "emailMsgType"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.emailMsgType);
            if (message.emailLang != null && Object.hasOwnProperty.call(message, "emailLang"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.emailLang);
            if (message.emailFormat != null && Object.hasOwnProperty.call(message, "emailFormat"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.emailFormat);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCGetEmailTemplate message, length delimited. Does not implicitly {@link CMsgGCGetEmailTemplate.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCGetEmailTemplate
         * @static
         * @param {ICMsgGCGetEmailTemplate} message CMsgGCGetEmailTemplate message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetEmailTemplate.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCGetEmailTemplate message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCGetEmailTemplate
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCGetEmailTemplate} CMsgGCGetEmailTemplate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetEmailTemplate.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCGetEmailTemplate();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.appId = reader.uint32();
                        break;
                    }
                case 2: {
                        message.emailMsgType = reader.uint32();
                        break;
                    }
                case 3: {
                        message.emailLang = reader.int32();
                        break;
                    }
                case 4: {
                        message.emailFormat = reader.int32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCGetEmailTemplate message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCGetEmailTemplate
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCGetEmailTemplate} CMsgGCGetEmailTemplate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetEmailTemplate.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCGetEmailTemplate message.
         * @function verify
         * @memberof CMsgGCGetEmailTemplate
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCGetEmailTemplate.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appId != null && message.hasOwnProperty("appId"))
                if (!$util.isInteger(message.appId))
                    return "appId: integer expected";
            if (message.emailMsgType != null && message.hasOwnProperty("emailMsgType"))
                if (!$util.isInteger(message.emailMsgType))
                    return "emailMsgType: integer expected";
            if (message.emailLang != null && message.hasOwnProperty("emailLang"))
                if (!$util.isInteger(message.emailLang))
                    return "emailLang: integer expected";
            if (message.emailFormat != null && message.hasOwnProperty("emailFormat"))
                if (!$util.isInteger(message.emailFormat))
                    return "emailFormat: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCGetEmailTemplate message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCGetEmailTemplate
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCGetEmailTemplate} CMsgGCGetEmailTemplate
         */
        CMsgGCGetEmailTemplate.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCGetEmailTemplate)
                return object;
            var message = new $root.CMsgGCGetEmailTemplate();
            if (object.appId != null)
                message.appId = object.appId >>> 0;
            if (object.emailMsgType != null)
                message.emailMsgType = object.emailMsgType >>> 0;
            if (object.emailLang != null)
                message.emailLang = object.emailLang | 0;
            if (object.emailFormat != null)
                message.emailFormat = object.emailFormat | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCGetEmailTemplate message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCGetEmailTemplate
         * @static
         * @param {CMsgGCGetEmailTemplate} message CMsgGCGetEmailTemplate
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCGetEmailTemplate.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.appId = 0;
                object.emailMsgType = 0;
                object.emailLang = 0;
                object.emailFormat = 0;
            }
            if (message.appId != null && message.hasOwnProperty("appId"))
                object.appId = message.appId;
            if (message.emailMsgType != null && message.hasOwnProperty("emailMsgType"))
                object.emailMsgType = message.emailMsgType;
            if (message.emailLang != null && message.hasOwnProperty("emailLang"))
                object.emailLang = message.emailLang;
            if (message.emailFormat != null && message.hasOwnProperty("emailFormat"))
                object.emailFormat = message.emailFormat;
            return object;
        };
    
        /**
         * Converts this CMsgGCGetEmailTemplate to JSON.
         * @function toJSON
         * @memberof CMsgGCGetEmailTemplate
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCGetEmailTemplate.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCGetEmailTemplate
         * @function getTypeUrl
         * @memberof CMsgGCGetEmailTemplate
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCGetEmailTemplate.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCGetEmailTemplate";
        };
    
        return CMsgGCGetEmailTemplate;
    })();
    
    $root.CMsgGCGetEmailTemplateResponse = (function() {
    
        /**
         * Properties of a CMsgGCGetEmailTemplateResponse.
         * @exports ICMsgGCGetEmailTemplateResponse
         * @interface ICMsgGCGetEmailTemplateResponse
         * @property {number|null} [eresult] CMsgGCGetEmailTemplateResponse eresult
         * @property {boolean|null} [templateExists] CMsgGCGetEmailTemplateResponse templateExists
         * @property {string|null} [template] CMsgGCGetEmailTemplateResponse template
         */
    
        /**
         * Constructs a new CMsgGCGetEmailTemplateResponse.
         * @exports CMsgGCGetEmailTemplateResponse
         * @classdesc Represents a CMsgGCGetEmailTemplateResponse.
         * @implements ICMsgGCGetEmailTemplateResponse
         * @constructor
         * @param {ICMsgGCGetEmailTemplateResponse=} [properties] Properties to set
         */
        function CMsgGCGetEmailTemplateResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCGetEmailTemplateResponse eresult.
         * @member {number} eresult
         * @memberof CMsgGCGetEmailTemplateResponse
         * @instance
         */
        CMsgGCGetEmailTemplateResponse.prototype.eresult = 2;
    
        /**
         * CMsgGCGetEmailTemplateResponse templateExists.
         * @member {boolean} templateExists
         * @memberof CMsgGCGetEmailTemplateResponse
         * @instance
         */
        CMsgGCGetEmailTemplateResponse.prototype.templateExists = false;
    
        /**
         * CMsgGCGetEmailTemplateResponse template.
         * @member {string} template
         * @memberof CMsgGCGetEmailTemplateResponse
         * @instance
         */
        CMsgGCGetEmailTemplateResponse.prototype.template = "";
    
        /**
         * Creates a new CMsgGCGetEmailTemplateResponse instance using the specified properties.
         * @function create
         * @memberof CMsgGCGetEmailTemplateResponse
         * @static
         * @param {ICMsgGCGetEmailTemplateResponse=} [properties] Properties to set
         * @returns {CMsgGCGetEmailTemplateResponse} CMsgGCGetEmailTemplateResponse instance
         */
        CMsgGCGetEmailTemplateResponse.create = function create(properties) {
            return new CMsgGCGetEmailTemplateResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgGCGetEmailTemplateResponse message. Does not implicitly {@link CMsgGCGetEmailTemplateResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCGetEmailTemplateResponse
         * @static
         * @param {ICMsgGCGetEmailTemplateResponse} message CMsgGCGetEmailTemplateResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetEmailTemplateResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.eresult);
            if (message.templateExists != null && Object.hasOwnProperty.call(message, "templateExists"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.templateExists);
            if (message.template != null && Object.hasOwnProperty.call(message, "template"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.template);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCGetEmailTemplateResponse message, length delimited. Does not implicitly {@link CMsgGCGetEmailTemplateResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCGetEmailTemplateResponse
         * @static
         * @param {ICMsgGCGetEmailTemplateResponse} message CMsgGCGetEmailTemplateResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetEmailTemplateResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCGetEmailTemplateResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCGetEmailTemplateResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCGetEmailTemplateResponse} CMsgGCGetEmailTemplateResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetEmailTemplateResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCGetEmailTemplateResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.eresult = reader.uint32();
                        break;
                    }
                case 2: {
                        message.templateExists = reader.bool();
                        break;
                    }
                case 3: {
                        message.template = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCGetEmailTemplateResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCGetEmailTemplateResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCGetEmailTemplateResponse} CMsgGCGetEmailTemplateResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetEmailTemplateResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCGetEmailTemplateResponse message.
         * @function verify
         * @memberof CMsgGCGetEmailTemplateResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCGetEmailTemplateResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.templateExists != null && message.hasOwnProperty("templateExists"))
                if (typeof message.templateExists !== "boolean")
                    return "templateExists: boolean expected";
            if (message.template != null && message.hasOwnProperty("template"))
                if (!$util.isString(message.template))
                    return "template: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCGetEmailTemplateResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCGetEmailTemplateResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCGetEmailTemplateResponse} CMsgGCGetEmailTemplateResponse
         */
        CMsgGCGetEmailTemplateResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCGetEmailTemplateResponse)
                return object;
            var message = new $root.CMsgGCGetEmailTemplateResponse();
            if (object.eresult != null)
                message.eresult = object.eresult >>> 0;
            if (object.templateExists != null)
                message.templateExists = Boolean(object.templateExists);
            if (object.template != null)
                message.template = String(object.template);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCGetEmailTemplateResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCGetEmailTemplateResponse
         * @static
         * @param {CMsgGCGetEmailTemplateResponse} message CMsgGCGetEmailTemplateResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCGetEmailTemplateResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.templateExists = false;
                object.template = "";
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.templateExists != null && message.hasOwnProperty("templateExists"))
                object.templateExists = message.templateExists;
            if (message.template != null && message.hasOwnProperty("template"))
                object.template = message.template;
            return object;
        };
    
        /**
         * Converts this CMsgGCGetEmailTemplateResponse to JSON.
         * @function toJSON
         * @memberof CMsgGCGetEmailTemplateResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCGetEmailTemplateResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCGetEmailTemplateResponse
         * @function getTypeUrl
         * @memberof CMsgGCGetEmailTemplateResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCGetEmailTemplateResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCGetEmailTemplateResponse";
        };
    
        return CMsgGCGetEmailTemplateResponse;
    })();
    
    $root.CMsgAMGrantGuestPasses2 = (function() {
    
        /**
         * Properties of a CMsgAMGrantGuestPasses2.
         * @exports ICMsgAMGrantGuestPasses2
         * @interface ICMsgAMGrantGuestPasses2
         * @property {number|Long|null} [steamId] CMsgAMGrantGuestPasses2 steamId
         * @property {number|null} [packageId] CMsgAMGrantGuestPasses2 packageId
         * @property {number|null} [passesToGrant] CMsgAMGrantGuestPasses2 passesToGrant
         * @property {number|null} [daysToExpiration] CMsgAMGrantGuestPasses2 daysToExpiration
         * @property {number|null} [action] CMsgAMGrantGuestPasses2 action
         */
    
        /**
         * Constructs a new CMsgAMGrantGuestPasses2.
         * @exports CMsgAMGrantGuestPasses2
         * @classdesc Represents a CMsgAMGrantGuestPasses2.
         * @implements ICMsgAMGrantGuestPasses2
         * @constructor
         * @param {ICMsgAMGrantGuestPasses2=} [properties] Properties to set
         */
        function CMsgAMGrantGuestPasses2(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAMGrantGuestPasses2 steamId.
         * @member {number|Long} steamId
         * @memberof CMsgAMGrantGuestPasses2
         * @instance
         */
        CMsgAMGrantGuestPasses2.prototype.steamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgAMGrantGuestPasses2 packageId.
         * @member {number} packageId
         * @memberof CMsgAMGrantGuestPasses2
         * @instance
         */
        CMsgAMGrantGuestPasses2.prototype.packageId = 0;
    
        /**
         * CMsgAMGrantGuestPasses2 passesToGrant.
         * @member {number} passesToGrant
         * @memberof CMsgAMGrantGuestPasses2
         * @instance
         */
        CMsgAMGrantGuestPasses2.prototype.passesToGrant = 0;
    
        /**
         * CMsgAMGrantGuestPasses2 daysToExpiration.
         * @member {number} daysToExpiration
         * @memberof CMsgAMGrantGuestPasses2
         * @instance
         */
        CMsgAMGrantGuestPasses2.prototype.daysToExpiration = 0;
    
        /**
         * CMsgAMGrantGuestPasses2 action.
         * @member {number} action
         * @memberof CMsgAMGrantGuestPasses2
         * @instance
         */
        CMsgAMGrantGuestPasses2.prototype.action = 0;
    
        /**
         * Creates a new CMsgAMGrantGuestPasses2 instance using the specified properties.
         * @function create
         * @memberof CMsgAMGrantGuestPasses2
         * @static
         * @param {ICMsgAMGrantGuestPasses2=} [properties] Properties to set
         * @returns {CMsgAMGrantGuestPasses2} CMsgAMGrantGuestPasses2 instance
         */
        CMsgAMGrantGuestPasses2.create = function create(properties) {
            return new CMsgAMGrantGuestPasses2(properties);
        };
    
        /**
         * Encodes the specified CMsgAMGrantGuestPasses2 message. Does not implicitly {@link CMsgAMGrantGuestPasses2.verify|verify} messages.
         * @function encode
         * @memberof CMsgAMGrantGuestPasses2
         * @static
         * @param {ICMsgAMGrantGuestPasses2} message CMsgAMGrantGuestPasses2 message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMGrantGuestPasses2.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamId != null && Object.hasOwnProperty.call(message, "steamId"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamId);
            if (message.packageId != null && Object.hasOwnProperty.call(message, "packageId"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.packageId);
            if (message.passesToGrant != null && Object.hasOwnProperty.call(message, "passesToGrant"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.passesToGrant);
            if (message.daysToExpiration != null && Object.hasOwnProperty.call(message, "daysToExpiration"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.daysToExpiration);
            if (message.action != null && Object.hasOwnProperty.call(message, "action"))
                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.action);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAMGrantGuestPasses2 message, length delimited. Does not implicitly {@link CMsgAMGrantGuestPasses2.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAMGrantGuestPasses2
         * @static
         * @param {ICMsgAMGrantGuestPasses2} message CMsgAMGrantGuestPasses2 message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMGrantGuestPasses2.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAMGrantGuestPasses2 message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAMGrantGuestPasses2
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAMGrantGuestPasses2} CMsgAMGrantGuestPasses2
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMGrantGuestPasses2.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMGrantGuestPasses2();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamId = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.packageId = reader.uint32();
                        break;
                    }
                case 3: {
                        message.passesToGrant = reader.int32();
                        break;
                    }
                case 4: {
                        message.daysToExpiration = reader.int32();
                        break;
                    }
                case 5: {
                        message.action = reader.int32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAMGrantGuestPasses2 message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAMGrantGuestPasses2
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAMGrantGuestPasses2} CMsgAMGrantGuestPasses2
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMGrantGuestPasses2.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAMGrantGuestPasses2 message.
         * @function verify
         * @memberof CMsgAMGrantGuestPasses2
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAMGrantGuestPasses2.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (!$util.isInteger(message.steamId) && !(message.steamId && $util.isInteger(message.steamId.low) && $util.isInteger(message.steamId.high)))
                    return "steamId: integer|Long expected";
            if (message.packageId != null && message.hasOwnProperty("packageId"))
                if (!$util.isInteger(message.packageId))
                    return "packageId: integer expected";
            if (message.passesToGrant != null && message.hasOwnProperty("passesToGrant"))
                if (!$util.isInteger(message.passesToGrant))
                    return "passesToGrant: integer expected";
            if (message.daysToExpiration != null && message.hasOwnProperty("daysToExpiration"))
                if (!$util.isInteger(message.daysToExpiration))
                    return "daysToExpiration: integer expected";
            if (message.action != null && message.hasOwnProperty("action"))
                if (!$util.isInteger(message.action))
                    return "action: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgAMGrantGuestPasses2 message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAMGrantGuestPasses2
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAMGrantGuestPasses2} CMsgAMGrantGuestPasses2
         */
        CMsgAMGrantGuestPasses2.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAMGrantGuestPasses2)
                return object;
            var message = new $root.CMsgAMGrantGuestPasses2();
            if (object.steamId != null)
                if ($util.Long)
                    (message.steamId = $util.Long.fromValue(object.steamId)).unsigned = false;
                else if (typeof object.steamId === "string")
                    message.steamId = parseInt(object.steamId, 10);
                else if (typeof object.steamId === "number")
                    message.steamId = object.steamId;
                else if (typeof object.steamId === "object")
                    message.steamId = new $util.LongBits(object.steamId.low >>> 0, object.steamId.high >>> 0).toNumber();
            if (object.packageId != null)
                message.packageId = object.packageId >>> 0;
            if (object.passesToGrant != null)
                message.passesToGrant = object.passesToGrant | 0;
            if (object.daysToExpiration != null)
                message.daysToExpiration = object.daysToExpiration | 0;
            if (object.action != null)
                message.action = object.action | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAMGrantGuestPasses2 message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAMGrantGuestPasses2
         * @static
         * @param {CMsgAMGrantGuestPasses2} message CMsgAMGrantGuestPasses2
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAMGrantGuestPasses2.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamId = options.longs === String ? "0" : 0;
                object.packageId = 0;
                object.passesToGrant = 0;
                object.daysToExpiration = 0;
                object.action = 0;
            }
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (typeof message.steamId === "number")
                    object.steamId = options.longs === String ? String(message.steamId) : message.steamId;
                else
                    object.steamId = options.longs === String ? $util.Long.prototype.toString.call(message.steamId) : options.longs === Number ? new $util.LongBits(message.steamId.low >>> 0, message.steamId.high >>> 0).toNumber() : message.steamId;
            if (message.packageId != null && message.hasOwnProperty("packageId"))
                object.packageId = message.packageId;
            if (message.passesToGrant != null && message.hasOwnProperty("passesToGrant"))
                object.passesToGrant = message.passesToGrant;
            if (message.daysToExpiration != null && message.hasOwnProperty("daysToExpiration"))
                object.daysToExpiration = message.daysToExpiration;
            if (message.action != null && message.hasOwnProperty("action"))
                object.action = message.action;
            return object;
        };
    
        /**
         * Converts this CMsgAMGrantGuestPasses2 to JSON.
         * @function toJSON
         * @memberof CMsgAMGrantGuestPasses2
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAMGrantGuestPasses2.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAMGrantGuestPasses2
         * @function getTypeUrl
         * @memberof CMsgAMGrantGuestPasses2
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAMGrantGuestPasses2.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAMGrantGuestPasses2";
        };
    
        return CMsgAMGrantGuestPasses2;
    })();
    
    $root.CMsgAMGrantGuestPasses2Response = (function() {
    
        /**
         * Properties of a CMsgAMGrantGuestPasses2Response.
         * @exports ICMsgAMGrantGuestPasses2Response
         * @interface ICMsgAMGrantGuestPasses2Response
         * @property {number|null} [eresult] CMsgAMGrantGuestPasses2Response eresult
         * @property {number|null} [passesGranted] CMsgAMGrantGuestPasses2Response passesGranted
         */
    
        /**
         * Constructs a new CMsgAMGrantGuestPasses2Response.
         * @exports CMsgAMGrantGuestPasses2Response
         * @classdesc Represents a CMsgAMGrantGuestPasses2Response.
         * @implements ICMsgAMGrantGuestPasses2Response
         * @constructor
         * @param {ICMsgAMGrantGuestPasses2Response=} [properties] Properties to set
         */
        function CMsgAMGrantGuestPasses2Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAMGrantGuestPasses2Response eresult.
         * @member {number} eresult
         * @memberof CMsgAMGrantGuestPasses2Response
         * @instance
         */
        CMsgAMGrantGuestPasses2Response.prototype.eresult = 2;
    
        /**
         * CMsgAMGrantGuestPasses2Response passesGranted.
         * @member {number} passesGranted
         * @memberof CMsgAMGrantGuestPasses2Response
         * @instance
         */
        CMsgAMGrantGuestPasses2Response.prototype.passesGranted = 0;
    
        /**
         * Creates a new CMsgAMGrantGuestPasses2Response instance using the specified properties.
         * @function create
         * @memberof CMsgAMGrantGuestPasses2Response
         * @static
         * @param {ICMsgAMGrantGuestPasses2Response=} [properties] Properties to set
         * @returns {CMsgAMGrantGuestPasses2Response} CMsgAMGrantGuestPasses2Response instance
         */
        CMsgAMGrantGuestPasses2Response.create = function create(properties) {
            return new CMsgAMGrantGuestPasses2Response(properties);
        };
    
        /**
         * Encodes the specified CMsgAMGrantGuestPasses2Response message. Does not implicitly {@link CMsgAMGrantGuestPasses2Response.verify|verify} messages.
         * @function encode
         * @memberof CMsgAMGrantGuestPasses2Response
         * @static
         * @param {ICMsgAMGrantGuestPasses2Response} message CMsgAMGrantGuestPasses2Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMGrantGuestPasses2Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.passesGranted != null && Object.hasOwnProperty.call(message, "passesGranted"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.passesGranted);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAMGrantGuestPasses2Response message, length delimited. Does not implicitly {@link CMsgAMGrantGuestPasses2Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAMGrantGuestPasses2Response
         * @static
         * @param {ICMsgAMGrantGuestPasses2Response} message CMsgAMGrantGuestPasses2Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMGrantGuestPasses2Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAMGrantGuestPasses2Response message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAMGrantGuestPasses2Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAMGrantGuestPasses2Response} CMsgAMGrantGuestPasses2Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMGrantGuestPasses2Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMGrantGuestPasses2Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.eresult = reader.int32();
                        break;
                    }
                case 2: {
                        message.passesGranted = reader.int32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAMGrantGuestPasses2Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAMGrantGuestPasses2Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAMGrantGuestPasses2Response} CMsgAMGrantGuestPasses2Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMGrantGuestPasses2Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAMGrantGuestPasses2Response message.
         * @function verify
         * @memberof CMsgAMGrantGuestPasses2Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAMGrantGuestPasses2Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.passesGranted != null && message.hasOwnProperty("passesGranted"))
                if (!$util.isInteger(message.passesGranted))
                    return "passesGranted: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgAMGrantGuestPasses2Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAMGrantGuestPasses2Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAMGrantGuestPasses2Response} CMsgAMGrantGuestPasses2Response
         */
        CMsgAMGrantGuestPasses2Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAMGrantGuestPasses2Response)
                return object;
            var message = new $root.CMsgAMGrantGuestPasses2Response();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.passesGranted != null)
                message.passesGranted = object.passesGranted | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAMGrantGuestPasses2Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAMGrantGuestPasses2Response
         * @static
         * @param {CMsgAMGrantGuestPasses2Response} message CMsgAMGrantGuestPasses2Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAMGrantGuestPasses2Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.passesGranted = 0;
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.passesGranted != null && message.hasOwnProperty("passesGranted"))
                object.passesGranted = message.passesGranted;
            return object;
        };
    
        /**
         * Converts this CMsgAMGrantGuestPasses2Response to JSON.
         * @function toJSON
         * @memberof CMsgAMGrantGuestPasses2Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAMGrantGuestPasses2Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAMGrantGuestPasses2Response
         * @function getTypeUrl
         * @memberof CMsgAMGrantGuestPasses2Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAMGrantGuestPasses2Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAMGrantGuestPasses2Response";
        };
    
        return CMsgAMGrantGuestPasses2Response;
    })();
    
    $root.CGCSystemMsg_GetAccountDetails = (function() {
    
        /**
         * Properties of a CGCSystemMsg_GetAccountDetails.
         * @exports ICGCSystemMsg_GetAccountDetails
         * @interface ICGCSystemMsg_GetAccountDetails
         * @property {number|Long|null} [steamid] CGCSystemMsg_GetAccountDetails steamid
         * @property {number|null} [appid] CGCSystemMsg_GetAccountDetails appid
         */
    
        /**
         * Constructs a new CGCSystemMsg_GetAccountDetails.
         * @exports CGCSystemMsg_GetAccountDetails
         * @classdesc Represents a CGCSystemMsg_GetAccountDetails.
         * @implements ICGCSystemMsg_GetAccountDetails
         * @constructor
         * @param {ICGCSystemMsg_GetAccountDetails=} [properties] Properties to set
         */
        function CGCSystemMsg_GetAccountDetails(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCSystemMsg_GetAccountDetails steamid.
         * @member {number|Long} steamid
         * @memberof CGCSystemMsg_GetAccountDetails
         * @instance
         */
        CGCSystemMsg_GetAccountDetails.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CGCSystemMsg_GetAccountDetails appid.
         * @member {number} appid
         * @memberof CGCSystemMsg_GetAccountDetails
         * @instance
         */
        CGCSystemMsg_GetAccountDetails.prototype.appid = 0;
    
        /**
         * Creates a new CGCSystemMsg_GetAccountDetails instance using the specified properties.
         * @function create
         * @memberof CGCSystemMsg_GetAccountDetails
         * @static
         * @param {ICGCSystemMsg_GetAccountDetails=} [properties] Properties to set
         * @returns {CGCSystemMsg_GetAccountDetails} CGCSystemMsg_GetAccountDetails instance
         */
        CGCSystemMsg_GetAccountDetails.create = function create(properties) {
            return new CGCSystemMsg_GetAccountDetails(properties);
        };
    
        /**
         * Encodes the specified CGCSystemMsg_GetAccountDetails message. Does not implicitly {@link CGCSystemMsg_GetAccountDetails.verify|verify} messages.
         * @function encode
         * @memberof CGCSystemMsg_GetAccountDetails
         * @static
         * @param {ICGCSystemMsg_GetAccountDetails} message CGCSystemMsg_GetAccountDetails message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCSystemMsg_GetAccountDetails.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.appid);
            return writer;
        };
    
        /**
         * Encodes the specified CGCSystemMsg_GetAccountDetails message, length delimited. Does not implicitly {@link CGCSystemMsg_GetAccountDetails.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCSystemMsg_GetAccountDetails
         * @static
         * @param {ICGCSystemMsg_GetAccountDetails} message CGCSystemMsg_GetAccountDetails message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCSystemMsg_GetAccountDetails.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCSystemMsg_GetAccountDetails message from the specified reader or buffer.
         * @function decode
         * @memberof CGCSystemMsg_GetAccountDetails
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCSystemMsg_GetAccountDetails} CGCSystemMsg_GetAccountDetails
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCSystemMsg_GetAccountDetails.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCSystemMsg_GetAccountDetails();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamid = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.appid = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCSystemMsg_GetAccountDetails message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCSystemMsg_GetAccountDetails
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCSystemMsg_GetAccountDetails} CGCSystemMsg_GetAccountDetails
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCSystemMsg_GetAccountDetails.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCSystemMsg_GetAccountDetails message.
         * @function verify
         * @memberof CGCSystemMsg_GetAccountDetails
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCSystemMsg_GetAccountDetails.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            return null;
        };
    
        /**
         * Creates a CGCSystemMsg_GetAccountDetails message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCSystemMsg_GetAccountDetails
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCSystemMsg_GetAccountDetails} CGCSystemMsg_GetAccountDetails
         */
        CGCSystemMsg_GetAccountDetails.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCSystemMsg_GetAccountDetails)
                return object;
            var message = new $root.CGCSystemMsg_GetAccountDetails();
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CGCSystemMsg_GetAccountDetails message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCSystemMsg_GetAccountDetails
         * @static
         * @param {CGCSystemMsg_GetAccountDetails} message CGCSystemMsg_GetAccountDetails
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCSystemMsg_GetAccountDetails.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
                object.appid = 0;
            }
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            return object;
        };
    
        /**
         * Converts this CGCSystemMsg_GetAccountDetails to JSON.
         * @function toJSON
         * @memberof CGCSystemMsg_GetAccountDetails
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCSystemMsg_GetAccountDetails.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCSystemMsg_GetAccountDetails
         * @function getTypeUrl
         * @memberof CGCSystemMsg_GetAccountDetails
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCSystemMsg_GetAccountDetails.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCSystemMsg_GetAccountDetails";
        };
    
        return CGCSystemMsg_GetAccountDetails;
    })();
    
    $root.CGCSystemMsg_GetAccountDetails_Response = (function() {
    
        /**
         * Properties of a CGCSystemMsg_GetAccountDetails_Response.
         * @exports ICGCSystemMsg_GetAccountDetails_Response
         * @interface ICGCSystemMsg_GetAccountDetails_Response
         * @property {number|null} [eresultDeprecated] CGCSystemMsg_GetAccountDetails_Response eresultDeprecated
         * @property {string|null} [accountName] CGCSystemMsg_GetAccountDetails_Response accountName
         * @property {string|null} [personaName] CGCSystemMsg_GetAccountDetails_Response personaName
         * @property {boolean|null} [isProfilePublic] CGCSystemMsg_GetAccountDetails_Response isProfilePublic
         * @property {boolean|null} [isInventoryPublic] CGCSystemMsg_GetAccountDetails_Response isInventoryPublic
         * @property {boolean|null} [isVacBanned] CGCSystemMsg_GetAccountDetails_Response isVacBanned
         * @property {boolean|null} [isCyberCafe] CGCSystemMsg_GetAccountDetails_Response isCyberCafe
         * @property {boolean|null} [isSchoolAccount] CGCSystemMsg_GetAccountDetails_Response isSchoolAccount
         * @property {boolean|null} [isLimited] CGCSystemMsg_GetAccountDetails_Response isLimited
         * @property {boolean|null} [isSubscribed] CGCSystemMsg_GetAccountDetails_Response isSubscribed
         * @property {number|null} ["package"] CGCSystemMsg_GetAccountDetails_Response package
         * @property {boolean|null} [isFreeTrialAccount] CGCSystemMsg_GetAccountDetails_Response isFreeTrialAccount
         * @property {number|null} [freeTrialExpiration] CGCSystemMsg_GetAccountDetails_Response freeTrialExpiration
         * @property {boolean|null} [isLowViolence] CGCSystemMsg_GetAccountDetails_Response isLowViolence
         * @property {boolean|null} [isAccountLockedDown] CGCSystemMsg_GetAccountDetails_Response isAccountLockedDown
         * @property {boolean|null} [isCommunityBanned] CGCSystemMsg_GetAccountDetails_Response isCommunityBanned
         * @property {boolean|null} [isTradeBanned] CGCSystemMsg_GetAccountDetails_Response isTradeBanned
         * @property {number|null} [tradeBanExpiration] CGCSystemMsg_GetAccountDetails_Response tradeBanExpiration
         * @property {number|null} [accountid] CGCSystemMsg_GetAccountDetails_Response accountid
         * @property {number|null} [suspensionEndTime] CGCSystemMsg_GetAccountDetails_Response suspensionEndTime
         * @property {string|null} [currency] CGCSystemMsg_GetAccountDetails_Response currency
         * @property {number|null} [steamLevel] CGCSystemMsg_GetAccountDetails_Response steamLevel
         * @property {number|null} [friendCount] CGCSystemMsg_GetAccountDetails_Response friendCount
         * @property {number|null} [accountCreationTime] CGCSystemMsg_GetAccountDetails_Response accountCreationTime
         * @property {boolean|null} [isSteamguardEnabled] CGCSystemMsg_GetAccountDetails_Response isSteamguardEnabled
         * @property {boolean|null} [isPhoneVerified] CGCSystemMsg_GetAccountDetails_Response isPhoneVerified
         * @property {boolean|null} [isTwoFactorAuthEnabled] CGCSystemMsg_GetAccountDetails_Response isTwoFactorAuthEnabled
         * @property {number|null} [twoFactorEnabledTime] CGCSystemMsg_GetAccountDetails_Response twoFactorEnabledTime
         * @property {number|null} [phoneVerificationTime] CGCSystemMsg_GetAccountDetails_Response phoneVerificationTime
         * @property {number|Long|null} [phoneId] CGCSystemMsg_GetAccountDetails_Response phoneId
         * @property {boolean|null} [isPhoneIdentifying] CGCSystemMsg_GetAccountDetails_Response isPhoneIdentifying
         * @property {number|null} [rtIdentityLinked] CGCSystemMsg_GetAccountDetails_Response rtIdentityLinked
         * @property {number|null} [rtBirthDate] CGCSystemMsg_GetAccountDetails_Response rtBirthDate
         * @property {string|null} [txnCountryCode] CGCSystemMsg_GetAccountDetails_Response txnCountryCode
         * @property {boolean|null} [hasAcceptedChinaSsa] CGCSystemMsg_GetAccountDetails_Response hasAcceptedChinaSsa
         * @property {boolean|null} [isBannedSteamChina] CGCSystemMsg_GetAccountDetails_Response isBannedSteamChina
         */
    
        /**
         * Constructs a new CGCSystemMsg_GetAccountDetails_Response.
         * @exports CGCSystemMsg_GetAccountDetails_Response
         * @classdesc Represents a CGCSystemMsg_GetAccountDetails_Response.
         * @implements ICGCSystemMsg_GetAccountDetails_Response
         * @constructor
         * @param {ICGCSystemMsg_GetAccountDetails_Response=} [properties] Properties to set
         */
        function CGCSystemMsg_GetAccountDetails_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response eresultDeprecated.
         * @member {number} eresultDeprecated
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.eresultDeprecated = 2;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response accountName.
         * @member {string} accountName
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.accountName = "";
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response personaName.
         * @member {string} personaName
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.personaName = "";
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isProfilePublic.
         * @member {boolean} isProfilePublic
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isProfilePublic = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isInventoryPublic.
         * @member {boolean} isInventoryPublic
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isInventoryPublic = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isVacBanned.
         * @member {boolean} isVacBanned
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isVacBanned = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isCyberCafe.
         * @member {boolean} isCyberCafe
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isCyberCafe = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isSchoolAccount.
         * @member {boolean} isSchoolAccount
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isSchoolAccount = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isLimited.
         * @member {boolean} isLimited
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isLimited = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isSubscribed.
         * @member {boolean} isSubscribed
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isSubscribed = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response package.
         * @member {number} package
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype["package"] = 0;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isFreeTrialAccount.
         * @member {boolean} isFreeTrialAccount
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isFreeTrialAccount = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response freeTrialExpiration.
         * @member {number} freeTrialExpiration
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.freeTrialExpiration = 0;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isLowViolence.
         * @member {boolean} isLowViolence
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isLowViolence = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isAccountLockedDown.
         * @member {boolean} isAccountLockedDown
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isAccountLockedDown = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isCommunityBanned.
         * @member {boolean} isCommunityBanned
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isCommunityBanned = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isTradeBanned.
         * @member {boolean} isTradeBanned
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isTradeBanned = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response tradeBanExpiration.
         * @member {number} tradeBanExpiration
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.tradeBanExpiration = 0;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response accountid.
         * @member {number} accountid
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.accountid = 0;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response suspensionEndTime.
         * @member {number} suspensionEndTime
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.suspensionEndTime = 0;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response currency.
         * @member {string} currency
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.currency = "";
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response steamLevel.
         * @member {number} steamLevel
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.steamLevel = 0;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response friendCount.
         * @member {number} friendCount
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.friendCount = 0;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response accountCreationTime.
         * @member {number} accountCreationTime
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.accountCreationTime = 0;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isSteamguardEnabled.
         * @member {boolean} isSteamguardEnabled
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isSteamguardEnabled = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isPhoneVerified.
         * @member {boolean} isPhoneVerified
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isPhoneVerified = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isTwoFactorAuthEnabled.
         * @member {boolean} isTwoFactorAuthEnabled
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isTwoFactorAuthEnabled = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response twoFactorEnabledTime.
         * @member {number} twoFactorEnabledTime
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.twoFactorEnabledTime = 0;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response phoneVerificationTime.
         * @member {number} phoneVerificationTime
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.phoneVerificationTime = 0;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response phoneId.
         * @member {number|Long} phoneId
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.phoneId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isPhoneIdentifying.
         * @member {boolean} isPhoneIdentifying
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isPhoneIdentifying = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response rtIdentityLinked.
         * @member {number} rtIdentityLinked
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.rtIdentityLinked = 0;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response rtBirthDate.
         * @member {number} rtBirthDate
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.rtBirthDate = 0;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response txnCountryCode.
         * @member {string} txnCountryCode
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.txnCountryCode = "";
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response hasAcceptedChinaSsa.
         * @member {boolean} hasAcceptedChinaSsa
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.hasAcceptedChinaSsa = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isBannedSteamChina.
         * @member {boolean} isBannedSteamChina
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isBannedSteamChina = false;
    
        /**
         * Creates a new CGCSystemMsg_GetAccountDetails_Response instance using the specified properties.
         * @function create
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @static
         * @param {ICGCSystemMsg_GetAccountDetails_Response=} [properties] Properties to set
         * @returns {CGCSystemMsg_GetAccountDetails_Response} CGCSystemMsg_GetAccountDetails_Response instance
         */
        CGCSystemMsg_GetAccountDetails_Response.create = function create(properties) {
            return new CGCSystemMsg_GetAccountDetails_Response(properties);
        };
    
        /**
         * Encodes the specified CGCSystemMsg_GetAccountDetails_Response message. Does not implicitly {@link CGCSystemMsg_GetAccountDetails_Response.verify|verify} messages.
         * @function encode
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @static
         * @param {ICGCSystemMsg_GetAccountDetails_Response} message CGCSystemMsg_GetAccountDetails_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCSystemMsg_GetAccountDetails_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresultDeprecated != null && Object.hasOwnProperty.call(message, "eresultDeprecated"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.eresultDeprecated);
            if (message.accountName != null && Object.hasOwnProperty.call(message, "accountName"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.accountName);
            if (message.personaName != null && Object.hasOwnProperty.call(message, "personaName"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.personaName);
            if (message.isProfilePublic != null && Object.hasOwnProperty.call(message, "isProfilePublic"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.isProfilePublic);
            if (message.isInventoryPublic != null && Object.hasOwnProperty.call(message, "isInventoryPublic"))
                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.isInventoryPublic);
            if (message.isVacBanned != null && Object.hasOwnProperty.call(message, "isVacBanned"))
                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.isVacBanned);
            if (message.isCyberCafe != null && Object.hasOwnProperty.call(message, "isCyberCafe"))
                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.isCyberCafe);
            if (message.isSchoolAccount != null && Object.hasOwnProperty.call(message, "isSchoolAccount"))
                writer.uint32(/* id 9, wireType 0 =*/72).bool(message.isSchoolAccount);
            if (message.isLimited != null && Object.hasOwnProperty.call(message, "isLimited"))
                writer.uint32(/* id 10, wireType 0 =*/80).bool(message.isLimited);
            if (message.isSubscribed != null && Object.hasOwnProperty.call(message, "isSubscribed"))
                writer.uint32(/* id 11, wireType 0 =*/88).bool(message.isSubscribed);
            if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                writer.uint32(/* id 12, wireType 0 =*/96).uint32(message["package"]);
            if (message.isFreeTrialAccount != null && Object.hasOwnProperty.call(message, "isFreeTrialAccount"))
                writer.uint32(/* id 13, wireType 0 =*/104).bool(message.isFreeTrialAccount);
            if (message.freeTrialExpiration != null && Object.hasOwnProperty.call(message, "freeTrialExpiration"))
                writer.uint32(/* id 14, wireType 0 =*/112).uint32(message.freeTrialExpiration);
            if (message.isLowViolence != null && Object.hasOwnProperty.call(message, "isLowViolence"))
                writer.uint32(/* id 15, wireType 0 =*/120).bool(message.isLowViolence);
            if (message.isAccountLockedDown != null && Object.hasOwnProperty.call(message, "isAccountLockedDown"))
                writer.uint32(/* id 16, wireType 0 =*/128).bool(message.isAccountLockedDown);
            if (message.isCommunityBanned != null && Object.hasOwnProperty.call(message, "isCommunityBanned"))
                writer.uint32(/* id 17, wireType 0 =*/136).bool(message.isCommunityBanned);
            if (message.isTradeBanned != null && Object.hasOwnProperty.call(message, "isTradeBanned"))
                writer.uint32(/* id 18, wireType 0 =*/144).bool(message.isTradeBanned);
            if (message.tradeBanExpiration != null && Object.hasOwnProperty.call(message, "tradeBanExpiration"))
                writer.uint32(/* id 19, wireType 0 =*/152).uint32(message.tradeBanExpiration);
            if (message.accountid != null && Object.hasOwnProperty.call(message, "accountid"))
                writer.uint32(/* id 20, wireType 0 =*/160).uint32(message.accountid);
            if (message.suspensionEndTime != null && Object.hasOwnProperty.call(message, "suspensionEndTime"))
                writer.uint32(/* id 21, wireType 0 =*/168).uint32(message.suspensionEndTime);
            if (message.currency != null && Object.hasOwnProperty.call(message, "currency"))
                writer.uint32(/* id 22, wireType 2 =*/178).string(message.currency);
            if (message.steamLevel != null && Object.hasOwnProperty.call(message, "steamLevel"))
                writer.uint32(/* id 23, wireType 0 =*/184).uint32(message.steamLevel);
            if (message.friendCount != null && Object.hasOwnProperty.call(message, "friendCount"))
                writer.uint32(/* id 24, wireType 0 =*/192).uint32(message.friendCount);
            if (message.accountCreationTime != null && Object.hasOwnProperty.call(message, "accountCreationTime"))
                writer.uint32(/* id 25, wireType 0 =*/200).uint32(message.accountCreationTime);
            if (message.isSteamguardEnabled != null && Object.hasOwnProperty.call(message, "isSteamguardEnabled"))
                writer.uint32(/* id 27, wireType 0 =*/216).bool(message.isSteamguardEnabled);
            if (message.isPhoneVerified != null && Object.hasOwnProperty.call(message, "isPhoneVerified"))
                writer.uint32(/* id 28, wireType 0 =*/224).bool(message.isPhoneVerified);
            if (message.isTwoFactorAuthEnabled != null && Object.hasOwnProperty.call(message, "isTwoFactorAuthEnabled"))
                writer.uint32(/* id 29, wireType 0 =*/232).bool(message.isTwoFactorAuthEnabled);
            if (message.twoFactorEnabledTime != null && Object.hasOwnProperty.call(message, "twoFactorEnabledTime"))
                writer.uint32(/* id 30, wireType 0 =*/240).uint32(message.twoFactorEnabledTime);
            if (message.phoneVerificationTime != null && Object.hasOwnProperty.call(message, "phoneVerificationTime"))
                writer.uint32(/* id 31, wireType 0 =*/248).uint32(message.phoneVerificationTime);
            if (message.phoneId != null && Object.hasOwnProperty.call(message, "phoneId"))
                writer.uint32(/* id 33, wireType 0 =*/264).uint64(message.phoneId);
            if (message.isPhoneIdentifying != null && Object.hasOwnProperty.call(message, "isPhoneIdentifying"))
                writer.uint32(/* id 34, wireType 0 =*/272).bool(message.isPhoneIdentifying);
            if (message.rtIdentityLinked != null && Object.hasOwnProperty.call(message, "rtIdentityLinked"))
                writer.uint32(/* id 35, wireType 0 =*/280).uint32(message.rtIdentityLinked);
            if (message.rtBirthDate != null && Object.hasOwnProperty.call(message, "rtBirthDate"))
                writer.uint32(/* id 36, wireType 0 =*/288).uint32(message.rtBirthDate);
            if (message.txnCountryCode != null && Object.hasOwnProperty.call(message, "txnCountryCode"))
                writer.uint32(/* id 37, wireType 2 =*/298).string(message.txnCountryCode);
            if (message.hasAcceptedChinaSsa != null && Object.hasOwnProperty.call(message, "hasAcceptedChinaSsa"))
                writer.uint32(/* id 38, wireType 0 =*/304).bool(message.hasAcceptedChinaSsa);
            if (message.isBannedSteamChina != null && Object.hasOwnProperty.call(message, "isBannedSteamChina"))
                writer.uint32(/* id 39, wireType 0 =*/312).bool(message.isBannedSteamChina);
            return writer;
        };
    
        /**
         * Encodes the specified CGCSystemMsg_GetAccountDetails_Response message, length delimited. Does not implicitly {@link CGCSystemMsg_GetAccountDetails_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @static
         * @param {ICGCSystemMsg_GetAccountDetails_Response} message CGCSystemMsg_GetAccountDetails_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCSystemMsg_GetAccountDetails_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCSystemMsg_GetAccountDetails_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCSystemMsg_GetAccountDetails_Response} CGCSystemMsg_GetAccountDetails_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCSystemMsg_GetAccountDetails_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCSystemMsg_GetAccountDetails_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.eresultDeprecated = reader.uint32();
                        break;
                    }
                case 2: {
                        message.accountName = reader.string();
                        break;
                    }
                case 3: {
                        message.personaName = reader.string();
                        break;
                    }
                case 4: {
                        message.isProfilePublic = reader.bool();
                        break;
                    }
                case 5: {
                        message.isInventoryPublic = reader.bool();
                        break;
                    }
                case 7: {
                        message.isVacBanned = reader.bool();
                        break;
                    }
                case 8: {
                        message.isCyberCafe = reader.bool();
                        break;
                    }
                case 9: {
                        message.isSchoolAccount = reader.bool();
                        break;
                    }
                case 10: {
                        message.isLimited = reader.bool();
                        break;
                    }
                case 11: {
                        message.isSubscribed = reader.bool();
                        break;
                    }
                case 12: {
                        message["package"] = reader.uint32();
                        break;
                    }
                case 13: {
                        message.isFreeTrialAccount = reader.bool();
                        break;
                    }
                case 14: {
                        message.freeTrialExpiration = reader.uint32();
                        break;
                    }
                case 15: {
                        message.isLowViolence = reader.bool();
                        break;
                    }
                case 16: {
                        message.isAccountLockedDown = reader.bool();
                        break;
                    }
                case 17: {
                        message.isCommunityBanned = reader.bool();
                        break;
                    }
                case 18: {
                        message.isTradeBanned = reader.bool();
                        break;
                    }
                case 19: {
                        message.tradeBanExpiration = reader.uint32();
                        break;
                    }
                case 20: {
                        message.accountid = reader.uint32();
                        break;
                    }
                case 21: {
                        message.suspensionEndTime = reader.uint32();
                        break;
                    }
                case 22: {
                        message.currency = reader.string();
                        break;
                    }
                case 23: {
                        message.steamLevel = reader.uint32();
                        break;
                    }
                case 24: {
                        message.friendCount = reader.uint32();
                        break;
                    }
                case 25: {
                        message.accountCreationTime = reader.uint32();
                        break;
                    }
                case 27: {
                        message.isSteamguardEnabled = reader.bool();
                        break;
                    }
                case 28: {
                        message.isPhoneVerified = reader.bool();
                        break;
                    }
                case 29: {
                        message.isTwoFactorAuthEnabled = reader.bool();
                        break;
                    }
                case 30: {
                        message.twoFactorEnabledTime = reader.uint32();
                        break;
                    }
                case 31: {
                        message.phoneVerificationTime = reader.uint32();
                        break;
                    }
                case 33: {
                        message.phoneId = reader.uint64();
                        break;
                    }
                case 34: {
                        message.isPhoneIdentifying = reader.bool();
                        break;
                    }
                case 35: {
                        message.rtIdentityLinked = reader.uint32();
                        break;
                    }
                case 36: {
                        message.rtBirthDate = reader.uint32();
                        break;
                    }
                case 37: {
                        message.txnCountryCode = reader.string();
                        break;
                    }
                case 38: {
                        message.hasAcceptedChinaSsa = reader.bool();
                        break;
                    }
                case 39: {
                        message.isBannedSteamChina = reader.bool();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCSystemMsg_GetAccountDetails_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCSystemMsg_GetAccountDetails_Response} CGCSystemMsg_GetAccountDetails_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCSystemMsg_GetAccountDetails_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCSystemMsg_GetAccountDetails_Response message.
         * @function verify
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCSystemMsg_GetAccountDetails_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresultDeprecated != null && message.hasOwnProperty("eresultDeprecated"))
                if (!$util.isInteger(message.eresultDeprecated))
                    return "eresultDeprecated: integer expected";
            if (message.accountName != null && message.hasOwnProperty("accountName"))
                if (!$util.isString(message.accountName))
                    return "accountName: string expected";
            if (message.personaName != null && message.hasOwnProperty("personaName"))
                if (!$util.isString(message.personaName))
                    return "personaName: string expected";
            if (message.isProfilePublic != null && message.hasOwnProperty("isProfilePublic"))
                if (typeof message.isProfilePublic !== "boolean")
                    return "isProfilePublic: boolean expected";
            if (message.isInventoryPublic != null && message.hasOwnProperty("isInventoryPublic"))
                if (typeof message.isInventoryPublic !== "boolean")
                    return "isInventoryPublic: boolean expected";
            if (message.isVacBanned != null && message.hasOwnProperty("isVacBanned"))
                if (typeof message.isVacBanned !== "boolean")
                    return "isVacBanned: boolean expected";
            if (message.isCyberCafe != null && message.hasOwnProperty("isCyberCafe"))
                if (typeof message.isCyberCafe !== "boolean")
                    return "isCyberCafe: boolean expected";
            if (message.isSchoolAccount != null && message.hasOwnProperty("isSchoolAccount"))
                if (typeof message.isSchoolAccount !== "boolean")
                    return "isSchoolAccount: boolean expected";
            if (message.isLimited != null && message.hasOwnProperty("isLimited"))
                if (typeof message.isLimited !== "boolean")
                    return "isLimited: boolean expected";
            if (message.isSubscribed != null && message.hasOwnProperty("isSubscribed"))
                if (typeof message.isSubscribed !== "boolean")
                    return "isSubscribed: boolean expected";
            if (message["package"] != null && message.hasOwnProperty("package"))
                if (!$util.isInteger(message["package"]))
                    return "package: integer expected";
            if (message.isFreeTrialAccount != null && message.hasOwnProperty("isFreeTrialAccount"))
                if (typeof message.isFreeTrialAccount !== "boolean")
                    return "isFreeTrialAccount: boolean expected";
            if (message.freeTrialExpiration != null && message.hasOwnProperty("freeTrialExpiration"))
                if (!$util.isInteger(message.freeTrialExpiration))
                    return "freeTrialExpiration: integer expected";
            if (message.isLowViolence != null && message.hasOwnProperty("isLowViolence"))
                if (typeof message.isLowViolence !== "boolean")
                    return "isLowViolence: boolean expected";
            if (message.isAccountLockedDown != null && message.hasOwnProperty("isAccountLockedDown"))
                if (typeof message.isAccountLockedDown !== "boolean")
                    return "isAccountLockedDown: boolean expected";
            if (message.isCommunityBanned != null && message.hasOwnProperty("isCommunityBanned"))
                if (typeof message.isCommunityBanned !== "boolean")
                    return "isCommunityBanned: boolean expected";
            if (message.isTradeBanned != null && message.hasOwnProperty("isTradeBanned"))
                if (typeof message.isTradeBanned !== "boolean")
                    return "isTradeBanned: boolean expected";
            if (message.tradeBanExpiration != null && message.hasOwnProperty("tradeBanExpiration"))
                if (!$util.isInteger(message.tradeBanExpiration))
                    return "tradeBanExpiration: integer expected";
            if (message.accountid != null && message.hasOwnProperty("accountid"))
                if (!$util.isInteger(message.accountid))
                    return "accountid: integer expected";
            if (message.suspensionEndTime != null && message.hasOwnProperty("suspensionEndTime"))
                if (!$util.isInteger(message.suspensionEndTime))
                    return "suspensionEndTime: integer expected";
            if (message.currency != null && message.hasOwnProperty("currency"))
                if (!$util.isString(message.currency))
                    return "currency: string expected";
            if (message.steamLevel != null && message.hasOwnProperty("steamLevel"))
                if (!$util.isInteger(message.steamLevel))
                    return "steamLevel: integer expected";
            if (message.friendCount != null && message.hasOwnProperty("friendCount"))
                if (!$util.isInteger(message.friendCount))
                    return "friendCount: integer expected";
            if (message.accountCreationTime != null && message.hasOwnProperty("accountCreationTime"))
                if (!$util.isInteger(message.accountCreationTime))
                    return "accountCreationTime: integer expected";
            if (message.isSteamguardEnabled != null && message.hasOwnProperty("isSteamguardEnabled"))
                if (typeof message.isSteamguardEnabled !== "boolean")
                    return "isSteamguardEnabled: boolean expected";
            if (message.isPhoneVerified != null && message.hasOwnProperty("isPhoneVerified"))
                if (typeof message.isPhoneVerified !== "boolean")
                    return "isPhoneVerified: boolean expected";
            if (message.isTwoFactorAuthEnabled != null && message.hasOwnProperty("isTwoFactorAuthEnabled"))
                if (typeof message.isTwoFactorAuthEnabled !== "boolean")
                    return "isTwoFactorAuthEnabled: boolean expected";
            if (message.twoFactorEnabledTime != null && message.hasOwnProperty("twoFactorEnabledTime"))
                if (!$util.isInteger(message.twoFactorEnabledTime))
                    return "twoFactorEnabledTime: integer expected";
            if (message.phoneVerificationTime != null && message.hasOwnProperty("phoneVerificationTime"))
                if (!$util.isInteger(message.phoneVerificationTime))
                    return "phoneVerificationTime: integer expected";
            if (message.phoneId != null && message.hasOwnProperty("phoneId"))
                if (!$util.isInteger(message.phoneId) && !(message.phoneId && $util.isInteger(message.phoneId.low) && $util.isInteger(message.phoneId.high)))
                    return "phoneId: integer|Long expected";
            if (message.isPhoneIdentifying != null && message.hasOwnProperty("isPhoneIdentifying"))
                if (typeof message.isPhoneIdentifying !== "boolean")
                    return "isPhoneIdentifying: boolean expected";
            if (message.rtIdentityLinked != null && message.hasOwnProperty("rtIdentityLinked"))
                if (!$util.isInteger(message.rtIdentityLinked))
                    return "rtIdentityLinked: integer expected";
            if (message.rtBirthDate != null && message.hasOwnProperty("rtBirthDate"))
                if (!$util.isInteger(message.rtBirthDate))
                    return "rtBirthDate: integer expected";
            if (message.txnCountryCode != null && message.hasOwnProperty("txnCountryCode"))
                if (!$util.isString(message.txnCountryCode))
                    return "txnCountryCode: string expected";
            if (message.hasAcceptedChinaSsa != null && message.hasOwnProperty("hasAcceptedChinaSsa"))
                if (typeof message.hasAcceptedChinaSsa !== "boolean")
                    return "hasAcceptedChinaSsa: boolean expected";
            if (message.isBannedSteamChina != null && message.hasOwnProperty("isBannedSteamChina"))
                if (typeof message.isBannedSteamChina !== "boolean")
                    return "isBannedSteamChina: boolean expected";
            return null;
        };
    
        /**
         * Creates a CGCSystemMsg_GetAccountDetails_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCSystemMsg_GetAccountDetails_Response} CGCSystemMsg_GetAccountDetails_Response
         */
        CGCSystemMsg_GetAccountDetails_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCSystemMsg_GetAccountDetails_Response)
                return object;
            var message = new $root.CGCSystemMsg_GetAccountDetails_Response();
            if (object.eresultDeprecated != null)
                message.eresultDeprecated = object.eresultDeprecated >>> 0;
            if (object.accountName != null)
                message.accountName = String(object.accountName);
            if (object.personaName != null)
                message.personaName = String(object.personaName);
            if (object.isProfilePublic != null)
                message.isProfilePublic = Boolean(object.isProfilePublic);
            if (object.isInventoryPublic != null)
                message.isInventoryPublic = Boolean(object.isInventoryPublic);
            if (object.isVacBanned != null)
                message.isVacBanned = Boolean(object.isVacBanned);
            if (object.isCyberCafe != null)
                message.isCyberCafe = Boolean(object.isCyberCafe);
            if (object.isSchoolAccount != null)
                message.isSchoolAccount = Boolean(object.isSchoolAccount);
            if (object.isLimited != null)
                message.isLimited = Boolean(object.isLimited);
            if (object.isSubscribed != null)
                message.isSubscribed = Boolean(object.isSubscribed);
            if (object["package"] != null)
                message["package"] = object["package"] >>> 0;
            if (object.isFreeTrialAccount != null)
                message.isFreeTrialAccount = Boolean(object.isFreeTrialAccount);
            if (object.freeTrialExpiration != null)
                message.freeTrialExpiration = object.freeTrialExpiration >>> 0;
            if (object.isLowViolence != null)
                message.isLowViolence = Boolean(object.isLowViolence);
            if (object.isAccountLockedDown != null)
                message.isAccountLockedDown = Boolean(object.isAccountLockedDown);
            if (object.isCommunityBanned != null)
                message.isCommunityBanned = Boolean(object.isCommunityBanned);
            if (object.isTradeBanned != null)
                message.isTradeBanned = Boolean(object.isTradeBanned);
            if (object.tradeBanExpiration != null)
                message.tradeBanExpiration = object.tradeBanExpiration >>> 0;
            if (object.accountid != null)
                message.accountid = object.accountid >>> 0;
            if (object.suspensionEndTime != null)
                message.suspensionEndTime = object.suspensionEndTime >>> 0;
            if (object.currency != null)
                message.currency = String(object.currency);
            if (object.steamLevel != null)
                message.steamLevel = object.steamLevel >>> 0;
            if (object.friendCount != null)
                message.friendCount = object.friendCount >>> 0;
            if (object.accountCreationTime != null)
                message.accountCreationTime = object.accountCreationTime >>> 0;
            if (object.isSteamguardEnabled != null)
                message.isSteamguardEnabled = Boolean(object.isSteamguardEnabled);
            if (object.isPhoneVerified != null)
                message.isPhoneVerified = Boolean(object.isPhoneVerified);
            if (object.isTwoFactorAuthEnabled != null)
                message.isTwoFactorAuthEnabled = Boolean(object.isTwoFactorAuthEnabled);
            if (object.twoFactorEnabledTime != null)
                message.twoFactorEnabledTime = object.twoFactorEnabledTime >>> 0;
            if (object.phoneVerificationTime != null)
                message.phoneVerificationTime = object.phoneVerificationTime >>> 0;
            if (object.phoneId != null)
                if ($util.Long)
                    (message.phoneId = $util.Long.fromValue(object.phoneId)).unsigned = true;
                else if (typeof object.phoneId === "string")
                    message.phoneId = parseInt(object.phoneId, 10);
                else if (typeof object.phoneId === "number")
                    message.phoneId = object.phoneId;
                else if (typeof object.phoneId === "object")
                    message.phoneId = new $util.LongBits(object.phoneId.low >>> 0, object.phoneId.high >>> 0).toNumber(true);
            if (object.isPhoneIdentifying != null)
                message.isPhoneIdentifying = Boolean(object.isPhoneIdentifying);
            if (object.rtIdentityLinked != null)
                message.rtIdentityLinked = object.rtIdentityLinked >>> 0;
            if (object.rtBirthDate != null)
                message.rtBirthDate = object.rtBirthDate >>> 0;
            if (object.txnCountryCode != null)
                message.txnCountryCode = String(object.txnCountryCode);
            if (object.hasAcceptedChinaSsa != null)
                message.hasAcceptedChinaSsa = Boolean(object.hasAcceptedChinaSsa);
            if (object.isBannedSteamChina != null)
                message.isBannedSteamChina = Boolean(object.isBannedSteamChina);
            return message;
        };
    
        /**
         * Creates a plain object from a CGCSystemMsg_GetAccountDetails_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @static
         * @param {CGCSystemMsg_GetAccountDetails_Response} message CGCSystemMsg_GetAccountDetails_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCSystemMsg_GetAccountDetails_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresultDeprecated = 2;
                object.accountName = "";
                object.personaName = "";
                object.isProfilePublic = false;
                object.isInventoryPublic = false;
                object.isVacBanned = false;
                object.isCyberCafe = false;
                object.isSchoolAccount = false;
                object.isLimited = false;
                object.isSubscribed = false;
                object["package"] = 0;
                object.isFreeTrialAccount = false;
                object.freeTrialExpiration = 0;
                object.isLowViolence = false;
                object.isAccountLockedDown = false;
                object.isCommunityBanned = false;
                object.isTradeBanned = false;
                object.tradeBanExpiration = 0;
                object.accountid = 0;
                object.suspensionEndTime = 0;
                object.currency = "";
                object.steamLevel = 0;
                object.friendCount = 0;
                object.accountCreationTime = 0;
                object.isSteamguardEnabled = false;
                object.isPhoneVerified = false;
                object.isTwoFactorAuthEnabled = false;
                object.twoFactorEnabledTime = 0;
                object.phoneVerificationTime = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.phoneId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.phoneId = options.longs === String ? "0" : 0;
                object.isPhoneIdentifying = false;
                object.rtIdentityLinked = 0;
                object.rtBirthDate = 0;
                object.txnCountryCode = "";
                object.hasAcceptedChinaSsa = false;
                object.isBannedSteamChina = false;
            }
            if (message.eresultDeprecated != null && message.hasOwnProperty("eresultDeprecated"))
                object.eresultDeprecated = message.eresultDeprecated;
            if (message.accountName != null && message.hasOwnProperty("accountName"))
                object.accountName = message.accountName;
            if (message.personaName != null && message.hasOwnProperty("personaName"))
                object.personaName = message.personaName;
            if (message.isProfilePublic != null && message.hasOwnProperty("isProfilePublic"))
                object.isProfilePublic = message.isProfilePublic;
            if (message.isInventoryPublic != null && message.hasOwnProperty("isInventoryPublic"))
                object.isInventoryPublic = message.isInventoryPublic;
            if (message.isVacBanned != null && message.hasOwnProperty("isVacBanned"))
                object.isVacBanned = message.isVacBanned;
            if (message.isCyberCafe != null && message.hasOwnProperty("isCyberCafe"))
                object.isCyberCafe = message.isCyberCafe;
            if (message.isSchoolAccount != null && message.hasOwnProperty("isSchoolAccount"))
                object.isSchoolAccount = message.isSchoolAccount;
            if (message.isLimited != null && message.hasOwnProperty("isLimited"))
                object.isLimited = message.isLimited;
            if (message.isSubscribed != null && message.hasOwnProperty("isSubscribed"))
                object.isSubscribed = message.isSubscribed;
            if (message["package"] != null && message.hasOwnProperty("package"))
                object["package"] = message["package"];
            if (message.isFreeTrialAccount != null && message.hasOwnProperty("isFreeTrialAccount"))
                object.isFreeTrialAccount = message.isFreeTrialAccount;
            if (message.freeTrialExpiration != null && message.hasOwnProperty("freeTrialExpiration"))
                object.freeTrialExpiration = message.freeTrialExpiration;
            if (message.isLowViolence != null && message.hasOwnProperty("isLowViolence"))
                object.isLowViolence = message.isLowViolence;
            if (message.isAccountLockedDown != null && message.hasOwnProperty("isAccountLockedDown"))
                object.isAccountLockedDown = message.isAccountLockedDown;
            if (message.isCommunityBanned != null && message.hasOwnProperty("isCommunityBanned"))
                object.isCommunityBanned = message.isCommunityBanned;
            if (message.isTradeBanned != null && message.hasOwnProperty("isTradeBanned"))
                object.isTradeBanned = message.isTradeBanned;
            if (message.tradeBanExpiration != null && message.hasOwnProperty("tradeBanExpiration"))
                object.tradeBanExpiration = message.tradeBanExpiration;
            if (message.accountid != null && message.hasOwnProperty("accountid"))
                object.accountid = message.accountid;
            if (message.suspensionEndTime != null && message.hasOwnProperty("suspensionEndTime"))
                object.suspensionEndTime = message.suspensionEndTime;
            if (message.currency != null && message.hasOwnProperty("currency"))
                object.currency = message.currency;
            if (message.steamLevel != null && message.hasOwnProperty("steamLevel"))
                object.steamLevel = message.steamLevel;
            if (message.friendCount != null && message.hasOwnProperty("friendCount"))
                object.friendCount = message.friendCount;
            if (message.accountCreationTime != null && message.hasOwnProperty("accountCreationTime"))
                object.accountCreationTime = message.accountCreationTime;
            if (message.isSteamguardEnabled != null && message.hasOwnProperty("isSteamguardEnabled"))
                object.isSteamguardEnabled = message.isSteamguardEnabled;
            if (message.isPhoneVerified != null && message.hasOwnProperty("isPhoneVerified"))
                object.isPhoneVerified = message.isPhoneVerified;
            if (message.isTwoFactorAuthEnabled != null && message.hasOwnProperty("isTwoFactorAuthEnabled"))
                object.isTwoFactorAuthEnabled = message.isTwoFactorAuthEnabled;
            if (message.twoFactorEnabledTime != null && message.hasOwnProperty("twoFactorEnabledTime"))
                object.twoFactorEnabledTime = message.twoFactorEnabledTime;
            if (message.phoneVerificationTime != null && message.hasOwnProperty("phoneVerificationTime"))
                object.phoneVerificationTime = message.phoneVerificationTime;
            if (message.phoneId != null && message.hasOwnProperty("phoneId"))
                if (typeof message.phoneId === "number")
                    object.phoneId = options.longs === String ? String(message.phoneId) : message.phoneId;
                else
                    object.phoneId = options.longs === String ? $util.Long.prototype.toString.call(message.phoneId) : options.longs === Number ? new $util.LongBits(message.phoneId.low >>> 0, message.phoneId.high >>> 0).toNumber(true) : message.phoneId;
            if (message.isPhoneIdentifying != null && message.hasOwnProperty("isPhoneIdentifying"))
                object.isPhoneIdentifying = message.isPhoneIdentifying;
            if (message.rtIdentityLinked != null && message.hasOwnProperty("rtIdentityLinked"))
                object.rtIdentityLinked = message.rtIdentityLinked;
            if (message.rtBirthDate != null && message.hasOwnProperty("rtBirthDate"))
                object.rtBirthDate = message.rtBirthDate;
            if (message.txnCountryCode != null && message.hasOwnProperty("txnCountryCode"))
                object.txnCountryCode = message.txnCountryCode;
            if (message.hasAcceptedChinaSsa != null && message.hasOwnProperty("hasAcceptedChinaSsa"))
                object.hasAcceptedChinaSsa = message.hasAcceptedChinaSsa;
            if (message.isBannedSteamChina != null && message.hasOwnProperty("isBannedSteamChina"))
                object.isBannedSteamChina = message.isBannedSteamChina;
            return object;
        };
    
        /**
         * Converts this CGCSystemMsg_GetAccountDetails_Response to JSON.
         * @function toJSON
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCSystemMsg_GetAccountDetails_Response
         * @function getTypeUrl
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCSystemMsg_GetAccountDetails_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCSystemMsg_GetAccountDetails_Response";
        };
    
        return CGCSystemMsg_GetAccountDetails_Response;
    })();
    
    $root.CMsgGCGetPersonaNames = (function() {
    
        /**
         * Properties of a CMsgGCGetPersonaNames.
         * @exports ICMsgGCGetPersonaNames
         * @interface ICMsgGCGetPersonaNames
         * @property {Array.<number|Long>|null} [steamids] CMsgGCGetPersonaNames steamids
         */
    
        /**
         * Constructs a new CMsgGCGetPersonaNames.
         * @exports CMsgGCGetPersonaNames
         * @classdesc Represents a CMsgGCGetPersonaNames.
         * @implements ICMsgGCGetPersonaNames
         * @constructor
         * @param {ICMsgGCGetPersonaNames=} [properties] Properties to set
         */
        function CMsgGCGetPersonaNames(properties) {
            this.steamids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCGetPersonaNames steamids.
         * @member {Array.<number|Long>} steamids
         * @memberof CMsgGCGetPersonaNames
         * @instance
         */
        CMsgGCGetPersonaNames.prototype.steamids = $util.emptyArray;
    
        /**
         * Creates a new CMsgGCGetPersonaNames instance using the specified properties.
         * @function create
         * @memberof CMsgGCGetPersonaNames
         * @static
         * @param {ICMsgGCGetPersonaNames=} [properties] Properties to set
         * @returns {CMsgGCGetPersonaNames} CMsgGCGetPersonaNames instance
         */
        CMsgGCGetPersonaNames.create = function create(properties) {
            return new CMsgGCGetPersonaNames(properties);
        };
    
        /**
         * Encodes the specified CMsgGCGetPersonaNames message. Does not implicitly {@link CMsgGCGetPersonaNames.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCGetPersonaNames
         * @static
         * @param {ICMsgGCGetPersonaNames} message CMsgGCGetPersonaNames message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetPersonaNames.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamids != null && message.steamids.length)
                for (var i = 0; i < message.steamids.length; ++i)
                    writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamids[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCGetPersonaNames message, length delimited. Does not implicitly {@link CMsgGCGetPersonaNames.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCGetPersonaNames
         * @static
         * @param {ICMsgGCGetPersonaNames} message CMsgGCGetPersonaNames message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetPersonaNames.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCGetPersonaNames message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCGetPersonaNames
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCGetPersonaNames} CMsgGCGetPersonaNames
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetPersonaNames.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCGetPersonaNames();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.steamids && message.steamids.length))
                            message.steamids = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.steamids.push(reader.fixed64());
                        } else
                            message.steamids.push(reader.fixed64());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCGetPersonaNames message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCGetPersonaNames
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCGetPersonaNames} CMsgGCGetPersonaNames
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetPersonaNames.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCGetPersonaNames message.
         * @function verify
         * @memberof CMsgGCGetPersonaNames
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCGetPersonaNames.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamids != null && message.hasOwnProperty("steamids")) {
                if (!Array.isArray(message.steamids))
                    return "steamids: array expected";
                for (var i = 0; i < message.steamids.length; ++i)
                    if (!$util.isInteger(message.steamids[i]) && !(message.steamids[i] && $util.isInteger(message.steamids[i].low) && $util.isInteger(message.steamids[i].high)))
                        return "steamids: integer|Long[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCGetPersonaNames message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCGetPersonaNames
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCGetPersonaNames} CMsgGCGetPersonaNames
         */
        CMsgGCGetPersonaNames.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCGetPersonaNames)
                return object;
            var message = new $root.CMsgGCGetPersonaNames();
            if (object.steamids) {
                if (!Array.isArray(object.steamids))
                    throw TypeError(".CMsgGCGetPersonaNames.steamids: array expected");
                message.steamids = [];
                for (var i = 0; i < object.steamids.length; ++i)
                    if ($util.Long)
                        (message.steamids[i] = $util.Long.fromValue(object.steamids[i])).unsigned = false;
                    else if (typeof object.steamids[i] === "string")
                        message.steamids[i] = parseInt(object.steamids[i], 10);
                    else if (typeof object.steamids[i] === "number")
                        message.steamids[i] = object.steamids[i];
                    else if (typeof object.steamids[i] === "object")
                        message.steamids[i] = new $util.LongBits(object.steamids[i].low >>> 0, object.steamids[i].high >>> 0).toNumber();
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCGetPersonaNames message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCGetPersonaNames
         * @static
         * @param {CMsgGCGetPersonaNames} message CMsgGCGetPersonaNames
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCGetPersonaNames.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.steamids = [];
            if (message.steamids && message.steamids.length) {
                object.steamids = [];
                for (var j = 0; j < message.steamids.length; ++j)
                    if (typeof message.steamids[j] === "number")
                        object.steamids[j] = options.longs === String ? String(message.steamids[j]) : message.steamids[j];
                    else
                        object.steamids[j] = options.longs === String ? $util.Long.prototype.toString.call(message.steamids[j]) : options.longs === Number ? new $util.LongBits(message.steamids[j].low >>> 0, message.steamids[j].high >>> 0).toNumber() : message.steamids[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgGCGetPersonaNames to JSON.
         * @function toJSON
         * @memberof CMsgGCGetPersonaNames
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCGetPersonaNames.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCGetPersonaNames
         * @function getTypeUrl
         * @memberof CMsgGCGetPersonaNames
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCGetPersonaNames.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCGetPersonaNames";
        };
    
        return CMsgGCGetPersonaNames;
    })();
    
    $root.CMsgGCGetPersonaNames_Response = (function() {
    
        /**
         * Properties of a CMsgGCGetPersonaNames_Response.
         * @exports ICMsgGCGetPersonaNames_Response
         * @interface ICMsgGCGetPersonaNames_Response
         * @property {Array.<CMsgGCGetPersonaNames_Response.IPersonaName>|null} [succeededLookups] CMsgGCGetPersonaNames_Response succeededLookups
         * @property {Array.<number|Long>|null} [failedLookupSteamids] CMsgGCGetPersonaNames_Response failedLookupSteamids
         */
    
        /**
         * Constructs a new CMsgGCGetPersonaNames_Response.
         * @exports CMsgGCGetPersonaNames_Response
         * @classdesc Represents a CMsgGCGetPersonaNames_Response.
         * @implements ICMsgGCGetPersonaNames_Response
         * @constructor
         * @param {ICMsgGCGetPersonaNames_Response=} [properties] Properties to set
         */
        function CMsgGCGetPersonaNames_Response(properties) {
            this.succeededLookups = [];
            this.failedLookupSteamids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCGetPersonaNames_Response succeededLookups.
         * @member {Array.<CMsgGCGetPersonaNames_Response.IPersonaName>} succeededLookups
         * @memberof CMsgGCGetPersonaNames_Response
         * @instance
         */
        CMsgGCGetPersonaNames_Response.prototype.succeededLookups = $util.emptyArray;
    
        /**
         * CMsgGCGetPersonaNames_Response failedLookupSteamids.
         * @member {Array.<number|Long>} failedLookupSteamids
         * @memberof CMsgGCGetPersonaNames_Response
         * @instance
         */
        CMsgGCGetPersonaNames_Response.prototype.failedLookupSteamids = $util.emptyArray;
    
        /**
         * Creates a new CMsgGCGetPersonaNames_Response instance using the specified properties.
         * @function create
         * @memberof CMsgGCGetPersonaNames_Response
         * @static
         * @param {ICMsgGCGetPersonaNames_Response=} [properties] Properties to set
         * @returns {CMsgGCGetPersonaNames_Response} CMsgGCGetPersonaNames_Response instance
         */
        CMsgGCGetPersonaNames_Response.create = function create(properties) {
            return new CMsgGCGetPersonaNames_Response(properties);
        };
    
        /**
         * Encodes the specified CMsgGCGetPersonaNames_Response message. Does not implicitly {@link CMsgGCGetPersonaNames_Response.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCGetPersonaNames_Response
         * @static
         * @param {ICMsgGCGetPersonaNames_Response} message CMsgGCGetPersonaNames_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetPersonaNames_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.succeededLookups != null && message.succeededLookups.length)
                for (var i = 0; i < message.succeededLookups.length; ++i)
                    $root.CMsgGCGetPersonaNames_Response.PersonaName.encode(message.succeededLookups[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.failedLookupSteamids != null && message.failedLookupSteamids.length)
                for (var i = 0; i < message.failedLookupSteamids.length; ++i)
                    writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.failedLookupSteamids[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCGetPersonaNames_Response message, length delimited. Does not implicitly {@link CMsgGCGetPersonaNames_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCGetPersonaNames_Response
         * @static
         * @param {ICMsgGCGetPersonaNames_Response} message CMsgGCGetPersonaNames_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetPersonaNames_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCGetPersonaNames_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCGetPersonaNames_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCGetPersonaNames_Response} CMsgGCGetPersonaNames_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetPersonaNames_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCGetPersonaNames_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.succeededLookups && message.succeededLookups.length))
                            message.succeededLookups = [];
                        message.succeededLookups.push($root.CMsgGCGetPersonaNames_Response.PersonaName.decode(reader, reader.uint32()));
                        break;
                    }
                case 2: {
                        if (!(message.failedLookupSteamids && message.failedLookupSteamids.length))
                            message.failedLookupSteamids = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.failedLookupSteamids.push(reader.fixed64());
                        } else
                            message.failedLookupSteamids.push(reader.fixed64());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCGetPersonaNames_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCGetPersonaNames_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCGetPersonaNames_Response} CMsgGCGetPersonaNames_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetPersonaNames_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCGetPersonaNames_Response message.
         * @function verify
         * @memberof CMsgGCGetPersonaNames_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCGetPersonaNames_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.succeededLookups != null && message.hasOwnProperty("succeededLookups")) {
                if (!Array.isArray(message.succeededLookups))
                    return "succeededLookups: array expected";
                for (var i = 0; i < message.succeededLookups.length; ++i) {
                    var error = $root.CMsgGCGetPersonaNames_Response.PersonaName.verify(message.succeededLookups[i]);
                    if (error)
                        return "succeededLookups." + error;
                }
            }
            if (message.failedLookupSteamids != null && message.hasOwnProperty("failedLookupSteamids")) {
                if (!Array.isArray(message.failedLookupSteamids))
                    return "failedLookupSteamids: array expected";
                for (var i = 0; i < message.failedLookupSteamids.length; ++i)
                    if (!$util.isInteger(message.failedLookupSteamids[i]) && !(message.failedLookupSteamids[i] && $util.isInteger(message.failedLookupSteamids[i].low) && $util.isInteger(message.failedLookupSteamids[i].high)))
                        return "failedLookupSteamids: integer|Long[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCGetPersonaNames_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCGetPersonaNames_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCGetPersonaNames_Response} CMsgGCGetPersonaNames_Response
         */
        CMsgGCGetPersonaNames_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCGetPersonaNames_Response)
                return object;
            var message = new $root.CMsgGCGetPersonaNames_Response();
            if (object.succeededLookups) {
                if (!Array.isArray(object.succeededLookups))
                    throw TypeError(".CMsgGCGetPersonaNames_Response.succeededLookups: array expected");
                message.succeededLookups = [];
                for (var i = 0; i < object.succeededLookups.length; ++i) {
                    if (typeof object.succeededLookups[i] !== "object")
                        throw TypeError(".CMsgGCGetPersonaNames_Response.succeededLookups: object expected");
                    message.succeededLookups[i] = $root.CMsgGCGetPersonaNames_Response.PersonaName.fromObject(object.succeededLookups[i]);
                }
            }
            if (object.failedLookupSteamids) {
                if (!Array.isArray(object.failedLookupSteamids))
                    throw TypeError(".CMsgGCGetPersonaNames_Response.failedLookupSteamids: array expected");
                message.failedLookupSteamids = [];
                for (var i = 0; i < object.failedLookupSteamids.length; ++i)
                    if ($util.Long)
                        (message.failedLookupSteamids[i] = $util.Long.fromValue(object.failedLookupSteamids[i])).unsigned = false;
                    else if (typeof object.failedLookupSteamids[i] === "string")
                        message.failedLookupSteamids[i] = parseInt(object.failedLookupSteamids[i], 10);
                    else if (typeof object.failedLookupSteamids[i] === "number")
                        message.failedLookupSteamids[i] = object.failedLookupSteamids[i];
                    else if (typeof object.failedLookupSteamids[i] === "object")
                        message.failedLookupSteamids[i] = new $util.LongBits(object.failedLookupSteamids[i].low >>> 0, object.failedLookupSteamids[i].high >>> 0).toNumber();
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCGetPersonaNames_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCGetPersonaNames_Response
         * @static
         * @param {CMsgGCGetPersonaNames_Response} message CMsgGCGetPersonaNames_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCGetPersonaNames_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.succeededLookups = [];
                object.failedLookupSteamids = [];
            }
            if (message.succeededLookups && message.succeededLookups.length) {
                object.succeededLookups = [];
                for (var j = 0; j < message.succeededLookups.length; ++j)
                    object.succeededLookups[j] = $root.CMsgGCGetPersonaNames_Response.PersonaName.toObject(message.succeededLookups[j], options);
            }
            if (message.failedLookupSteamids && message.failedLookupSteamids.length) {
                object.failedLookupSteamids = [];
                for (var j = 0; j < message.failedLookupSteamids.length; ++j)
                    if (typeof message.failedLookupSteamids[j] === "number")
                        object.failedLookupSteamids[j] = options.longs === String ? String(message.failedLookupSteamids[j]) : message.failedLookupSteamids[j];
                    else
                        object.failedLookupSteamids[j] = options.longs === String ? $util.Long.prototype.toString.call(message.failedLookupSteamids[j]) : options.longs === Number ? new $util.LongBits(message.failedLookupSteamids[j].low >>> 0, message.failedLookupSteamids[j].high >>> 0).toNumber() : message.failedLookupSteamids[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgGCGetPersonaNames_Response to JSON.
         * @function toJSON
         * @memberof CMsgGCGetPersonaNames_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCGetPersonaNames_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCGetPersonaNames_Response
         * @function getTypeUrl
         * @memberof CMsgGCGetPersonaNames_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCGetPersonaNames_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCGetPersonaNames_Response";
        };
    
        CMsgGCGetPersonaNames_Response.PersonaName = (function() {
    
            /**
             * Properties of a PersonaName.
             * @memberof CMsgGCGetPersonaNames_Response
             * @interface IPersonaName
             * @property {number|Long|null} [steamid] PersonaName steamid
             * @property {string|null} [personaName] PersonaName personaName
             */
    
            /**
             * Constructs a new PersonaName.
             * @memberof CMsgGCGetPersonaNames_Response
             * @classdesc Represents a PersonaName.
             * @implements IPersonaName
             * @constructor
             * @param {CMsgGCGetPersonaNames_Response.IPersonaName=} [properties] Properties to set
             */
            function PersonaName(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * PersonaName steamid.
             * @member {number|Long} steamid
             * @memberof CMsgGCGetPersonaNames_Response.PersonaName
             * @instance
             */
            PersonaName.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
            /**
             * PersonaName personaName.
             * @member {string} personaName
             * @memberof CMsgGCGetPersonaNames_Response.PersonaName
             * @instance
             */
            PersonaName.prototype.personaName = "";
    
            /**
             * Creates a new PersonaName instance using the specified properties.
             * @function create
             * @memberof CMsgGCGetPersonaNames_Response.PersonaName
             * @static
             * @param {CMsgGCGetPersonaNames_Response.IPersonaName=} [properties] Properties to set
             * @returns {CMsgGCGetPersonaNames_Response.PersonaName} PersonaName instance
             */
            PersonaName.create = function create(properties) {
                return new PersonaName(properties);
            };
    
            /**
             * Encodes the specified PersonaName message. Does not implicitly {@link CMsgGCGetPersonaNames_Response.PersonaName.verify|verify} messages.
             * @function encode
             * @memberof CMsgGCGetPersonaNames_Response.PersonaName
             * @static
             * @param {CMsgGCGetPersonaNames_Response.IPersonaName} message PersonaName message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PersonaName.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                    writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
                if (message.personaName != null && Object.hasOwnProperty.call(message, "personaName"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.personaName);
                return writer;
            };
    
            /**
             * Encodes the specified PersonaName message, length delimited. Does not implicitly {@link CMsgGCGetPersonaNames_Response.PersonaName.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgGCGetPersonaNames_Response.PersonaName
             * @static
             * @param {CMsgGCGetPersonaNames_Response.IPersonaName} message PersonaName message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PersonaName.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a PersonaName message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgGCGetPersonaNames_Response.PersonaName
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgGCGetPersonaNames_Response.PersonaName} PersonaName
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PersonaName.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCGetPersonaNames_Response.PersonaName();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.steamid = reader.fixed64();
                            break;
                        }
                    case 2: {
                            message.personaName = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a PersonaName message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgGCGetPersonaNames_Response.PersonaName
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgGCGetPersonaNames_Response.PersonaName} PersonaName
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PersonaName.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a PersonaName message.
             * @function verify
             * @memberof CMsgGCGetPersonaNames_Response.PersonaName
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            PersonaName.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.steamid != null && message.hasOwnProperty("steamid"))
                    if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                        return "steamid: integer|Long expected";
                if (message.personaName != null && message.hasOwnProperty("personaName"))
                    if (!$util.isString(message.personaName))
                        return "personaName: string expected";
                return null;
            };
    
            /**
             * Creates a PersonaName message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgGCGetPersonaNames_Response.PersonaName
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgGCGetPersonaNames_Response.PersonaName} PersonaName
             */
            PersonaName.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgGCGetPersonaNames_Response.PersonaName)
                    return object;
                var message = new $root.CMsgGCGetPersonaNames_Response.PersonaName();
                if (object.steamid != null)
                    if ($util.Long)
                        (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                    else if (typeof object.steamid === "string")
                        message.steamid = parseInt(object.steamid, 10);
                    else if (typeof object.steamid === "number")
                        message.steamid = object.steamid;
                    else if (typeof object.steamid === "object")
                        message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
                if (object.personaName != null)
                    message.personaName = String(object.personaName);
                return message;
            };
    
            /**
             * Creates a plain object from a PersonaName message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgGCGetPersonaNames_Response.PersonaName
             * @static
             * @param {CMsgGCGetPersonaNames_Response.PersonaName} message PersonaName
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            PersonaName.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.steamid = options.longs === String ? "0" : 0;
                    object.personaName = "";
                }
                if (message.steamid != null && message.hasOwnProperty("steamid"))
                    if (typeof message.steamid === "number")
                        object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                    else
                        object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
                if (message.personaName != null && message.hasOwnProperty("personaName"))
                    object.personaName = message.personaName;
                return object;
            };
    
            /**
             * Converts this PersonaName to JSON.
             * @function toJSON
             * @memberof CMsgGCGetPersonaNames_Response.PersonaName
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            PersonaName.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for PersonaName
             * @function getTypeUrl
             * @memberof CMsgGCGetPersonaNames_Response.PersonaName
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            PersonaName.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgGCGetPersonaNames_Response.PersonaName";
            };
    
            return PersonaName;
        })();
    
        return CMsgGCGetPersonaNames_Response;
    })();
    
    $root.CMsgGCCheckFriendship = (function() {
    
        /**
         * Properties of a CMsgGCCheckFriendship.
         * @exports ICMsgGCCheckFriendship
         * @interface ICMsgGCCheckFriendship
         * @property {number|Long|null} [steamidLeft] CMsgGCCheckFriendship steamidLeft
         * @property {number|Long|null} [steamidRight] CMsgGCCheckFriendship steamidRight
         */
    
        /**
         * Constructs a new CMsgGCCheckFriendship.
         * @exports CMsgGCCheckFriendship
         * @classdesc Represents a CMsgGCCheckFriendship.
         * @implements ICMsgGCCheckFriendship
         * @constructor
         * @param {ICMsgGCCheckFriendship=} [properties] Properties to set
         */
        function CMsgGCCheckFriendship(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCCheckFriendship steamidLeft.
         * @member {number|Long} steamidLeft
         * @memberof CMsgGCCheckFriendship
         * @instance
         */
        CMsgGCCheckFriendship.prototype.steamidLeft = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGCCheckFriendship steamidRight.
         * @member {number|Long} steamidRight
         * @memberof CMsgGCCheckFriendship
         * @instance
         */
        CMsgGCCheckFriendship.prototype.steamidRight = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgGCCheckFriendship instance using the specified properties.
         * @function create
         * @memberof CMsgGCCheckFriendship
         * @static
         * @param {ICMsgGCCheckFriendship=} [properties] Properties to set
         * @returns {CMsgGCCheckFriendship} CMsgGCCheckFriendship instance
         */
        CMsgGCCheckFriendship.create = function create(properties) {
            return new CMsgGCCheckFriendship(properties);
        };
    
        /**
         * Encodes the specified CMsgGCCheckFriendship message. Does not implicitly {@link CMsgGCCheckFriendship.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCCheckFriendship
         * @static
         * @param {ICMsgGCCheckFriendship} message CMsgGCCheckFriendship message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCCheckFriendship.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamidLeft != null && Object.hasOwnProperty.call(message, "steamidLeft"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamidLeft);
            if (message.steamidRight != null && Object.hasOwnProperty.call(message, "steamidRight"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steamidRight);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCCheckFriendship message, length delimited. Does not implicitly {@link CMsgGCCheckFriendship.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCCheckFriendship
         * @static
         * @param {ICMsgGCCheckFriendship} message CMsgGCCheckFriendship message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCCheckFriendship.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCCheckFriendship message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCCheckFriendship
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCCheckFriendship} CMsgGCCheckFriendship
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCCheckFriendship.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCCheckFriendship();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamidLeft = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.steamidRight = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCCheckFriendship message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCCheckFriendship
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCCheckFriendship} CMsgGCCheckFriendship
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCCheckFriendship.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCCheckFriendship message.
         * @function verify
         * @memberof CMsgGCCheckFriendship
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCCheckFriendship.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamidLeft != null && message.hasOwnProperty("steamidLeft"))
                if (!$util.isInteger(message.steamidLeft) && !(message.steamidLeft && $util.isInteger(message.steamidLeft.low) && $util.isInteger(message.steamidLeft.high)))
                    return "steamidLeft: integer|Long expected";
            if (message.steamidRight != null && message.hasOwnProperty("steamidRight"))
                if (!$util.isInteger(message.steamidRight) && !(message.steamidRight && $util.isInteger(message.steamidRight.low) && $util.isInteger(message.steamidRight.high)))
                    return "steamidRight: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCCheckFriendship message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCCheckFriendship
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCCheckFriendship} CMsgGCCheckFriendship
         */
        CMsgGCCheckFriendship.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCCheckFriendship)
                return object;
            var message = new $root.CMsgGCCheckFriendship();
            if (object.steamidLeft != null)
                if ($util.Long)
                    (message.steamidLeft = $util.Long.fromValue(object.steamidLeft)).unsigned = false;
                else if (typeof object.steamidLeft === "string")
                    message.steamidLeft = parseInt(object.steamidLeft, 10);
                else if (typeof object.steamidLeft === "number")
                    message.steamidLeft = object.steamidLeft;
                else if (typeof object.steamidLeft === "object")
                    message.steamidLeft = new $util.LongBits(object.steamidLeft.low >>> 0, object.steamidLeft.high >>> 0).toNumber();
            if (object.steamidRight != null)
                if ($util.Long)
                    (message.steamidRight = $util.Long.fromValue(object.steamidRight)).unsigned = false;
                else if (typeof object.steamidRight === "string")
                    message.steamidRight = parseInt(object.steamidRight, 10);
                else if (typeof object.steamidRight === "number")
                    message.steamidRight = object.steamidRight;
                else if (typeof object.steamidRight === "object")
                    message.steamidRight = new $util.LongBits(object.steamidRight.low >>> 0, object.steamidRight.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCCheckFriendship message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCCheckFriendship
         * @static
         * @param {CMsgGCCheckFriendship} message CMsgGCCheckFriendship
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCCheckFriendship.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamidLeft = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamidLeft = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamidRight = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamidRight = options.longs === String ? "0" : 0;
            }
            if (message.steamidLeft != null && message.hasOwnProperty("steamidLeft"))
                if (typeof message.steamidLeft === "number")
                    object.steamidLeft = options.longs === String ? String(message.steamidLeft) : message.steamidLeft;
                else
                    object.steamidLeft = options.longs === String ? $util.Long.prototype.toString.call(message.steamidLeft) : options.longs === Number ? new $util.LongBits(message.steamidLeft.low >>> 0, message.steamidLeft.high >>> 0).toNumber() : message.steamidLeft;
            if (message.steamidRight != null && message.hasOwnProperty("steamidRight"))
                if (typeof message.steamidRight === "number")
                    object.steamidRight = options.longs === String ? String(message.steamidRight) : message.steamidRight;
                else
                    object.steamidRight = options.longs === String ? $util.Long.prototype.toString.call(message.steamidRight) : options.longs === Number ? new $util.LongBits(message.steamidRight.low >>> 0, message.steamidRight.high >>> 0).toNumber() : message.steamidRight;
            return object;
        };
    
        /**
         * Converts this CMsgGCCheckFriendship to JSON.
         * @function toJSON
         * @memberof CMsgGCCheckFriendship
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCCheckFriendship.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCCheckFriendship
         * @function getTypeUrl
         * @memberof CMsgGCCheckFriendship
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCCheckFriendship.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCCheckFriendship";
        };
    
        return CMsgGCCheckFriendship;
    })();
    
    $root.CMsgGCCheckFriendship_Response = (function() {
    
        /**
         * Properties of a CMsgGCCheckFriendship_Response.
         * @exports ICMsgGCCheckFriendship_Response
         * @interface ICMsgGCCheckFriendship_Response
         * @property {boolean|null} [success] CMsgGCCheckFriendship_Response success
         * @property {boolean|null} [foundFriendship] CMsgGCCheckFriendship_Response foundFriendship
         */
    
        /**
         * Constructs a new CMsgGCCheckFriendship_Response.
         * @exports CMsgGCCheckFriendship_Response
         * @classdesc Represents a CMsgGCCheckFriendship_Response.
         * @implements ICMsgGCCheckFriendship_Response
         * @constructor
         * @param {ICMsgGCCheckFriendship_Response=} [properties] Properties to set
         */
        function CMsgGCCheckFriendship_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCCheckFriendship_Response success.
         * @member {boolean} success
         * @memberof CMsgGCCheckFriendship_Response
         * @instance
         */
        CMsgGCCheckFriendship_Response.prototype.success = false;
    
        /**
         * CMsgGCCheckFriendship_Response foundFriendship.
         * @member {boolean} foundFriendship
         * @memberof CMsgGCCheckFriendship_Response
         * @instance
         */
        CMsgGCCheckFriendship_Response.prototype.foundFriendship = false;
    
        /**
         * Creates a new CMsgGCCheckFriendship_Response instance using the specified properties.
         * @function create
         * @memberof CMsgGCCheckFriendship_Response
         * @static
         * @param {ICMsgGCCheckFriendship_Response=} [properties] Properties to set
         * @returns {CMsgGCCheckFriendship_Response} CMsgGCCheckFriendship_Response instance
         */
        CMsgGCCheckFriendship_Response.create = function create(properties) {
            return new CMsgGCCheckFriendship_Response(properties);
        };
    
        /**
         * Encodes the specified CMsgGCCheckFriendship_Response message. Does not implicitly {@link CMsgGCCheckFriendship_Response.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCCheckFriendship_Response
         * @static
         * @param {ICMsgGCCheckFriendship_Response} message CMsgGCCheckFriendship_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCCheckFriendship_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.success != null && Object.hasOwnProperty.call(message, "success"))
                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.success);
            if (message.foundFriendship != null && Object.hasOwnProperty.call(message, "foundFriendship"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.foundFriendship);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCCheckFriendship_Response message, length delimited. Does not implicitly {@link CMsgGCCheckFriendship_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCCheckFriendship_Response
         * @static
         * @param {ICMsgGCCheckFriendship_Response} message CMsgGCCheckFriendship_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCCheckFriendship_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCCheckFriendship_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCCheckFriendship_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCCheckFriendship_Response} CMsgGCCheckFriendship_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCCheckFriendship_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCCheckFriendship_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.success = reader.bool();
                        break;
                    }
                case 2: {
                        message.foundFriendship = reader.bool();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCCheckFriendship_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCCheckFriendship_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCCheckFriendship_Response} CMsgGCCheckFriendship_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCCheckFriendship_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCCheckFriendship_Response message.
         * @function verify
         * @memberof CMsgGCCheckFriendship_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCCheckFriendship_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.success != null && message.hasOwnProperty("success"))
                if (typeof message.success !== "boolean")
                    return "success: boolean expected";
            if (message.foundFriendship != null && message.hasOwnProperty("foundFriendship"))
                if (typeof message.foundFriendship !== "boolean")
                    return "foundFriendship: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCCheckFriendship_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCCheckFriendship_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCCheckFriendship_Response} CMsgGCCheckFriendship_Response
         */
        CMsgGCCheckFriendship_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCCheckFriendship_Response)
                return object;
            var message = new $root.CMsgGCCheckFriendship_Response();
            if (object.success != null)
                message.success = Boolean(object.success);
            if (object.foundFriendship != null)
                message.foundFriendship = Boolean(object.foundFriendship);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCCheckFriendship_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCCheckFriendship_Response
         * @static
         * @param {CMsgGCCheckFriendship_Response} message CMsgGCCheckFriendship_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCCheckFriendship_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.success = false;
                object.foundFriendship = false;
            }
            if (message.success != null && message.hasOwnProperty("success"))
                object.success = message.success;
            if (message.foundFriendship != null && message.hasOwnProperty("foundFriendship"))
                object.foundFriendship = message.foundFriendship;
            return object;
        };
    
        /**
         * Converts this CMsgGCCheckFriendship_Response to JSON.
         * @function toJSON
         * @memberof CMsgGCCheckFriendship_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCCheckFriendship_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCCheckFriendship_Response
         * @function getTypeUrl
         * @memberof CMsgGCCheckFriendship_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCCheckFriendship_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCCheckFriendship_Response";
        };
    
        return CMsgGCCheckFriendship_Response;
    })();
    
    $root.CMsgGCMsgMasterSetDirectory = (function() {
    
        /**
         * Properties of a CMsgGCMsgMasterSetDirectory.
         * @exports ICMsgGCMsgMasterSetDirectory
         * @interface ICMsgGCMsgMasterSetDirectory
         * @property {number|null} [masterDirIndex] CMsgGCMsgMasterSetDirectory masterDirIndex
         * @property {Array.<CMsgGCMsgMasterSetDirectory.ISubGC>|null} [dir] CMsgGCMsgMasterSetDirectory dir
         */
    
        /**
         * Constructs a new CMsgGCMsgMasterSetDirectory.
         * @exports CMsgGCMsgMasterSetDirectory
         * @classdesc Represents a CMsgGCMsgMasterSetDirectory.
         * @implements ICMsgGCMsgMasterSetDirectory
         * @constructor
         * @param {ICMsgGCMsgMasterSetDirectory=} [properties] Properties to set
         */
        function CMsgGCMsgMasterSetDirectory(properties) {
            this.dir = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCMsgMasterSetDirectory masterDirIndex.
         * @member {number} masterDirIndex
         * @memberof CMsgGCMsgMasterSetDirectory
         * @instance
         */
        CMsgGCMsgMasterSetDirectory.prototype.masterDirIndex = 0;
    
        /**
         * CMsgGCMsgMasterSetDirectory dir.
         * @member {Array.<CMsgGCMsgMasterSetDirectory.ISubGC>} dir
         * @memberof CMsgGCMsgMasterSetDirectory
         * @instance
         */
        CMsgGCMsgMasterSetDirectory.prototype.dir = $util.emptyArray;
    
        /**
         * Creates a new CMsgGCMsgMasterSetDirectory instance using the specified properties.
         * @function create
         * @memberof CMsgGCMsgMasterSetDirectory
         * @static
         * @param {ICMsgGCMsgMasterSetDirectory=} [properties] Properties to set
         * @returns {CMsgGCMsgMasterSetDirectory} CMsgGCMsgMasterSetDirectory instance
         */
        CMsgGCMsgMasterSetDirectory.create = function create(properties) {
            return new CMsgGCMsgMasterSetDirectory(properties);
        };
    
        /**
         * Encodes the specified CMsgGCMsgMasterSetDirectory message. Does not implicitly {@link CMsgGCMsgMasterSetDirectory.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCMsgMasterSetDirectory
         * @static
         * @param {ICMsgGCMsgMasterSetDirectory} message CMsgGCMsgMasterSetDirectory message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgMasterSetDirectory.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.masterDirIndex != null && Object.hasOwnProperty.call(message, "masterDirIndex"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.masterDirIndex);
            if (message.dir != null && message.dir.length)
                for (var i = 0; i < message.dir.length; ++i)
                    $root.CMsgGCMsgMasterSetDirectory.SubGC.encode(message.dir[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCMsgMasterSetDirectory message, length delimited. Does not implicitly {@link CMsgGCMsgMasterSetDirectory.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCMsgMasterSetDirectory
         * @static
         * @param {ICMsgGCMsgMasterSetDirectory} message CMsgGCMsgMasterSetDirectory message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgMasterSetDirectory.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCMsgMasterSetDirectory message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCMsgMasterSetDirectory
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCMsgMasterSetDirectory} CMsgGCMsgMasterSetDirectory
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgMasterSetDirectory.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCMsgMasterSetDirectory();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.masterDirIndex = reader.uint32();
                        break;
                    }
                case 2: {
                        if (!(message.dir && message.dir.length))
                            message.dir = [];
                        message.dir.push($root.CMsgGCMsgMasterSetDirectory.SubGC.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCMsgMasterSetDirectory message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCMsgMasterSetDirectory
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCMsgMasterSetDirectory} CMsgGCMsgMasterSetDirectory
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgMasterSetDirectory.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCMsgMasterSetDirectory message.
         * @function verify
         * @memberof CMsgGCMsgMasterSetDirectory
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCMsgMasterSetDirectory.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.masterDirIndex != null && message.hasOwnProperty("masterDirIndex"))
                if (!$util.isInteger(message.masterDirIndex))
                    return "masterDirIndex: integer expected";
            if (message.dir != null && message.hasOwnProperty("dir")) {
                if (!Array.isArray(message.dir))
                    return "dir: array expected";
                for (var i = 0; i < message.dir.length; ++i) {
                    var error = $root.CMsgGCMsgMasterSetDirectory.SubGC.verify(message.dir[i]);
                    if (error)
                        return "dir." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCMsgMasterSetDirectory message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCMsgMasterSetDirectory
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCMsgMasterSetDirectory} CMsgGCMsgMasterSetDirectory
         */
        CMsgGCMsgMasterSetDirectory.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCMsgMasterSetDirectory)
                return object;
            var message = new $root.CMsgGCMsgMasterSetDirectory();
            if (object.masterDirIndex != null)
                message.masterDirIndex = object.masterDirIndex >>> 0;
            if (object.dir) {
                if (!Array.isArray(object.dir))
                    throw TypeError(".CMsgGCMsgMasterSetDirectory.dir: array expected");
                message.dir = [];
                for (var i = 0; i < object.dir.length; ++i) {
                    if (typeof object.dir[i] !== "object")
                        throw TypeError(".CMsgGCMsgMasterSetDirectory.dir: object expected");
                    message.dir[i] = $root.CMsgGCMsgMasterSetDirectory.SubGC.fromObject(object.dir[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCMsgMasterSetDirectory message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCMsgMasterSetDirectory
         * @static
         * @param {CMsgGCMsgMasterSetDirectory} message CMsgGCMsgMasterSetDirectory
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCMsgMasterSetDirectory.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.dir = [];
            if (options.defaults)
                object.masterDirIndex = 0;
            if (message.masterDirIndex != null && message.hasOwnProperty("masterDirIndex"))
                object.masterDirIndex = message.masterDirIndex;
            if (message.dir && message.dir.length) {
                object.dir = [];
                for (var j = 0; j < message.dir.length; ++j)
                    object.dir[j] = $root.CMsgGCMsgMasterSetDirectory.SubGC.toObject(message.dir[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgGCMsgMasterSetDirectory to JSON.
         * @function toJSON
         * @memberof CMsgGCMsgMasterSetDirectory
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCMsgMasterSetDirectory.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCMsgMasterSetDirectory
         * @function getTypeUrl
         * @memberof CMsgGCMsgMasterSetDirectory
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCMsgMasterSetDirectory.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCMsgMasterSetDirectory";
        };
    
        CMsgGCMsgMasterSetDirectory.SubGC = (function() {
    
            /**
             * Properties of a SubGC.
             * @memberof CMsgGCMsgMasterSetDirectory
             * @interface ISubGC
             * @property {number|null} [dirIndex] SubGC dirIndex
             * @property {string|null} [name] SubGC name
             * @property {string|null} [box] SubGC box
             * @property {string|null} [commandLine] SubGC commandLine
             * @property {string|null} [gcBinary] SubGC gcBinary
             */
    
            /**
             * Constructs a new SubGC.
             * @memberof CMsgGCMsgMasterSetDirectory
             * @classdesc Represents a SubGC.
             * @implements ISubGC
             * @constructor
             * @param {CMsgGCMsgMasterSetDirectory.ISubGC=} [properties] Properties to set
             */
            function SubGC(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * SubGC dirIndex.
             * @member {number} dirIndex
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @instance
             */
            SubGC.prototype.dirIndex = 0;
    
            /**
             * SubGC name.
             * @member {string} name
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @instance
             */
            SubGC.prototype.name = "";
    
            /**
             * SubGC box.
             * @member {string} box
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @instance
             */
            SubGC.prototype.box = "";
    
            /**
             * SubGC commandLine.
             * @member {string} commandLine
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @instance
             */
            SubGC.prototype.commandLine = "";
    
            /**
             * SubGC gcBinary.
             * @member {string} gcBinary
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @instance
             */
            SubGC.prototype.gcBinary = "";
    
            /**
             * Creates a new SubGC instance using the specified properties.
             * @function create
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @static
             * @param {CMsgGCMsgMasterSetDirectory.ISubGC=} [properties] Properties to set
             * @returns {CMsgGCMsgMasterSetDirectory.SubGC} SubGC instance
             */
            SubGC.create = function create(properties) {
                return new SubGC(properties);
            };
    
            /**
             * Encodes the specified SubGC message. Does not implicitly {@link CMsgGCMsgMasterSetDirectory.SubGC.verify|verify} messages.
             * @function encode
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @static
             * @param {CMsgGCMsgMasterSetDirectory.ISubGC} message SubGC message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SubGC.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.dirIndex != null && Object.hasOwnProperty.call(message, "dirIndex"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.dirIndex);
                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
                if (message.box != null && Object.hasOwnProperty.call(message, "box"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.box);
                if (message.commandLine != null && Object.hasOwnProperty.call(message, "commandLine"))
                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.commandLine);
                if (message.gcBinary != null && Object.hasOwnProperty.call(message, "gcBinary"))
                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.gcBinary);
                return writer;
            };
    
            /**
             * Encodes the specified SubGC message, length delimited. Does not implicitly {@link CMsgGCMsgMasterSetDirectory.SubGC.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @static
             * @param {CMsgGCMsgMasterSetDirectory.ISubGC} message SubGC message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SubGC.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a SubGC message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgGCMsgMasterSetDirectory.SubGC} SubGC
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SubGC.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCMsgMasterSetDirectory.SubGC();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.dirIndex = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.name = reader.string();
                            break;
                        }
                    case 3: {
                            message.box = reader.string();
                            break;
                        }
                    case 4: {
                            message.commandLine = reader.string();
                            break;
                        }
                    case 5: {
                            message.gcBinary = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a SubGC message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgGCMsgMasterSetDirectory.SubGC} SubGC
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SubGC.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a SubGC message.
             * @function verify
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SubGC.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.dirIndex != null && message.hasOwnProperty("dirIndex"))
                    if (!$util.isInteger(message.dirIndex))
                        return "dirIndex: integer expected";
                if (message.name != null && message.hasOwnProperty("name"))
                    if (!$util.isString(message.name))
                        return "name: string expected";
                if (message.box != null && message.hasOwnProperty("box"))
                    if (!$util.isString(message.box))
                        return "box: string expected";
                if (message.commandLine != null && message.hasOwnProperty("commandLine"))
                    if (!$util.isString(message.commandLine))
                        return "commandLine: string expected";
                if (message.gcBinary != null && message.hasOwnProperty("gcBinary"))
                    if (!$util.isString(message.gcBinary))
                        return "gcBinary: string expected";
                return null;
            };
    
            /**
             * Creates a SubGC message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgGCMsgMasterSetDirectory.SubGC} SubGC
             */
            SubGC.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgGCMsgMasterSetDirectory.SubGC)
                    return object;
                var message = new $root.CMsgGCMsgMasterSetDirectory.SubGC();
                if (object.dirIndex != null)
                    message.dirIndex = object.dirIndex >>> 0;
                if (object.name != null)
                    message.name = String(object.name);
                if (object.box != null)
                    message.box = String(object.box);
                if (object.commandLine != null)
                    message.commandLine = String(object.commandLine);
                if (object.gcBinary != null)
                    message.gcBinary = String(object.gcBinary);
                return message;
            };
    
            /**
             * Creates a plain object from a SubGC message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @static
             * @param {CMsgGCMsgMasterSetDirectory.SubGC} message SubGC
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SubGC.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.dirIndex = 0;
                    object.name = "";
                    object.box = "";
                    object.commandLine = "";
                    object.gcBinary = "";
                }
                if (message.dirIndex != null && message.hasOwnProperty("dirIndex"))
                    object.dirIndex = message.dirIndex;
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.box != null && message.hasOwnProperty("box"))
                    object.box = message.box;
                if (message.commandLine != null && message.hasOwnProperty("commandLine"))
                    object.commandLine = message.commandLine;
                if (message.gcBinary != null && message.hasOwnProperty("gcBinary"))
                    object.gcBinary = message.gcBinary;
                return object;
            };
    
            /**
             * Converts this SubGC to JSON.
             * @function toJSON
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SubGC.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for SubGC
             * @function getTypeUrl
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SubGC.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgGCMsgMasterSetDirectory.SubGC";
            };
    
            return SubGC;
        })();
    
        return CMsgGCMsgMasterSetDirectory;
    })();
    
    $root.CMsgGCMsgMasterSetDirectory_Response = (function() {
    
        /**
         * Properties of a CMsgGCMsgMasterSetDirectory_Response.
         * @exports ICMsgGCMsgMasterSetDirectory_Response
         * @interface ICMsgGCMsgMasterSetDirectory_Response
         * @property {number|null} [eresult] CMsgGCMsgMasterSetDirectory_Response eresult
         * @property {string|null} [message] CMsgGCMsgMasterSetDirectory_Response message
         */
    
        /**
         * Constructs a new CMsgGCMsgMasterSetDirectory_Response.
         * @exports CMsgGCMsgMasterSetDirectory_Response
         * @classdesc Represents a CMsgGCMsgMasterSetDirectory_Response.
         * @implements ICMsgGCMsgMasterSetDirectory_Response
         * @constructor
         * @param {ICMsgGCMsgMasterSetDirectory_Response=} [properties] Properties to set
         */
        function CMsgGCMsgMasterSetDirectory_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCMsgMasterSetDirectory_Response eresult.
         * @member {number} eresult
         * @memberof CMsgGCMsgMasterSetDirectory_Response
         * @instance
         */
        CMsgGCMsgMasterSetDirectory_Response.prototype.eresult = 2;
    
        /**
         * CMsgGCMsgMasterSetDirectory_Response message.
         * @member {string} message
         * @memberof CMsgGCMsgMasterSetDirectory_Response
         * @instance
         */
        CMsgGCMsgMasterSetDirectory_Response.prototype.message = "";
    
        /**
         * Creates a new CMsgGCMsgMasterSetDirectory_Response instance using the specified properties.
         * @function create
         * @memberof CMsgGCMsgMasterSetDirectory_Response
         * @static
         * @param {ICMsgGCMsgMasterSetDirectory_Response=} [properties] Properties to set
         * @returns {CMsgGCMsgMasterSetDirectory_Response} CMsgGCMsgMasterSetDirectory_Response instance
         */
        CMsgGCMsgMasterSetDirectory_Response.create = function create(properties) {
            return new CMsgGCMsgMasterSetDirectory_Response(properties);
        };
    
        /**
         * Encodes the specified CMsgGCMsgMasterSetDirectory_Response message. Does not implicitly {@link CMsgGCMsgMasterSetDirectory_Response.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCMsgMasterSetDirectory_Response
         * @static
         * @param {ICMsgGCMsgMasterSetDirectory_Response} message CMsgGCMsgMasterSetDirectory_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgMasterSetDirectory_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCMsgMasterSetDirectory_Response message, length delimited. Does not implicitly {@link CMsgGCMsgMasterSetDirectory_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCMsgMasterSetDirectory_Response
         * @static
         * @param {ICMsgGCMsgMasterSetDirectory_Response} message CMsgGCMsgMasterSetDirectory_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgMasterSetDirectory_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCMsgMasterSetDirectory_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCMsgMasterSetDirectory_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCMsgMasterSetDirectory_Response} CMsgGCMsgMasterSetDirectory_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgMasterSetDirectory_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCMsgMasterSetDirectory_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.eresult = reader.int32();
                        break;
                    }
                case 2: {
                        message.message = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCMsgMasterSetDirectory_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCMsgMasterSetDirectory_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCMsgMasterSetDirectory_Response} CMsgGCMsgMasterSetDirectory_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgMasterSetDirectory_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCMsgMasterSetDirectory_Response message.
         * @function verify
         * @memberof CMsgGCMsgMasterSetDirectory_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCMsgMasterSetDirectory_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.message != null && message.hasOwnProperty("message"))
                if (!$util.isString(message.message))
                    return "message: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCMsgMasterSetDirectory_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCMsgMasterSetDirectory_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCMsgMasterSetDirectory_Response} CMsgGCMsgMasterSetDirectory_Response
         */
        CMsgGCMsgMasterSetDirectory_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCMsgMasterSetDirectory_Response)
                return object;
            var message = new $root.CMsgGCMsgMasterSetDirectory_Response();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.message != null)
                message.message = String(object.message);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCMsgMasterSetDirectory_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCMsgMasterSetDirectory_Response
         * @static
         * @param {CMsgGCMsgMasterSetDirectory_Response} message CMsgGCMsgMasterSetDirectory_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCMsgMasterSetDirectory_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.message = "";
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.message != null && message.hasOwnProperty("message"))
                object.message = message.message;
            return object;
        };
    
        /**
         * Converts this CMsgGCMsgMasterSetDirectory_Response to JSON.
         * @function toJSON
         * @memberof CMsgGCMsgMasterSetDirectory_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCMsgMasterSetDirectory_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCMsgMasterSetDirectory_Response
         * @function getTypeUrl
         * @memberof CMsgGCMsgMasterSetDirectory_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCMsgMasterSetDirectory_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCMsgMasterSetDirectory_Response";
        };
    
        return CMsgGCMsgMasterSetDirectory_Response;
    })();
    
    $root.CMsgGCMsgWebAPIJobRequestForwardResponse = (function() {
    
        /**
         * Properties of a CMsgGCMsgWebAPIJobRequestForwardResponse.
         * @exports ICMsgGCMsgWebAPIJobRequestForwardResponse
         * @interface ICMsgGCMsgWebAPIJobRequestForwardResponse
         * @property {number|null} [dirIndex] CMsgGCMsgWebAPIJobRequestForwardResponse dirIndex
         */
    
        /**
         * Constructs a new CMsgGCMsgWebAPIJobRequestForwardResponse.
         * @exports CMsgGCMsgWebAPIJobRequestForwardResponse
         * @classdesc Represents a CMsgGCMsgWebAPIJobRequestForwardResponse.
         * @implements ICMsgGCMsgWebAPIJobRequestForwardResponse
         * @constructor
         * @param {ICMsgGCMsgWebAPIJobRequestForwardResponse=} [properties] Properties to set
         */
        function CMsgGCMsgWebAPIJobRequestForwardResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCMsgWebAPIJobRequestForwardResponse dirIndex.
         * @member {number} dirIndex
         * @memberof CMsgGCMsgWebAPIJobRequestForwardResponse
         * @instance
         */
        CMsgGCMsgWebAPIJobRequestForwardResponse.prototype.dirIndex = 0;
    
        /**
         * Creates a new CMsgGCMsgWebAPIJobRequestForwardResponse instance using the specified properties.
         * @function create
         * @memberof CMsgGCMsgWebAPIJobRequestForwardResponse
         * @static
         * @param {ICMsgGCMsgWebAPIJobRequestForwardResponse=} [properties] Properties to set
         * @returns {CMsgGCMsgWebAPIJobRequestForwardResponse} CMsgGCMsgWebAPIJobRequestForwardResponse instance
         */
        CMsgGCMsgWebAPIJobRequestForwardResponse.create = function create(properties) {
            return new CMsgGCMsgWebAPIJobRequestForwardResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgGCMsgWebAPIJobRequestForwardResponse message. Does not implicitly {@link CMsgGCMsgWebAPIJobRequestForwardResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCMsgWebAPIJobRequestForwardResponse
         * @static
         * @param {ICMsgGCMsgWebAPIJobRequestForwardResponse} message CMsgGCMsgWebAPIJobRequestForwardResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgWebAPIJobRequestForwardResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.dirIndex != null && Object.hasOwnProperty.call(message, "dirIndex"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.dirIndex);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCMsgWebAPIJobRequestForwardResponse message, length delimited. Does not implicitly {@link CMsgGCMsgWebAPIJobRequestForwardResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCMsgWebAPIJobRequestForwardResponse
         * @static
         * @param {ICMsgGCMsgWebAPIJobRequestForwardResponse} message CMsgGCMsgWebAPIJobRequestForwardResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgWebAPIJobRequestForwardResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCMsgWebAPIJobRequestForwardResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCMsgWebAPIJobRequestForwardResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCMsgWebAPIJobRequestForwardResponse} CMsgGCMsgWebAPIJobRequestForwardResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgWebAPIJobRequestForwardResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCMsgWebAPIJobRequestForwardResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.dirIndex = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCMsgWebAPIJobRequestForwardResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCMsgWebAPIJobRequestForwardResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCMsgWebAPIJobRequestForwardResponse} CMsgGCMsgWebAPIJobRequestForwardResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgWebAPIJobRequestForwardResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCMsgWebAPIJobRequestForwardResponse message.
         * @function verify
         * @memberof CMsgGCMsgWebAPIJobRequestForwardResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCMsgWebAPIJobRequestForwardResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.dirIndex != null && message.hasOwnProperty("dirIndex"))
                if (!$util.isInteger(message.dirIndex))
                    return "dirIndex: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCMsgWebAPIJobRequestForwardResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCMsgWebAPIJobRequestForwardResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCMsgWebAPIJobRequestForwardResponse} CMsgGCMsgWebAPIJobRequestForwardResponse
         */
        CMsgGCMsgWebAPIJobRequestForwardResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCMsgWebAPIJobRequestForwardResponse)
                return object;
            var message = new $root.CMsgGCMsgWebAPIJobRequestForwardResponse();
            if (object.dirIndex != null)
                message.dirIndex = object.dirIndex >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCMsgWebAPIJobRequestForwardResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCMsgWebAPIJobRequestForwardResponse
         * @static
         * @param {CMsgGCMsgWebAPIJobRequestForwardResponse} message CMsgGCMsgWebAPIJobRequestForwardResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCMsgWebAPIJobRequestForwardResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.dirIndex = 0;
            if (message.dirIndex != null && message.hasOwnProperty("dirIndex"))
                object.dirIndex = message.dirIndex;
            return object;
        };
    
        /**
         * Converts this CMsgGCMsgWebAPIJobRequestForwardResponse to JSON.
         * @function toJSON
         * @memberof CMsgGCMsgWebAPIJobRequestForwardResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCMsgWebAPIJobRequestForwardResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCMsgWebAPIJobRequestForwardResponse
         * @function getTypeUrl
         * @memberof CMsgGCMsgWebAPIJobRequestForwardResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCMsgWebAPIJobRequestForwardResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCMsgWebAPIJobRequestForwardResponse";
        };
    
        return CMsgGCMsgWebAPIJobRequestForwardResponse;
    })();
    
    $root.CGCSystemMsg_GetPurchaseTrust_Request = (function() {
    
        /**
         * Properties of a CGCSystemMsg_GetPurchaseTrust_Request.
         * @exports ICGCSystemMsg_GetPurchaseTrust_Request
         * @interface ICGCSystemMsg_GetPurchaseTrust_Request
         * @property {number|Long|null} [steamid] CGCSystemMsg_GetPurchaseTrust_Request steamid
         */
    
        /**
         * Constructs a new CGCSystemMsg_GetPurchaseTrust_Request.
         * @exports CGCSystemMsg_GetPurchaseTrust_Request
         * @classdesc Represents a CGCSystemMsg_GetPurchaseTrust_Request.
         * @implements ICGCSystemMsg_GetPurchaseTrust_Request
         * @constructor
         * @param {ICGCSystemMsg_GetPurchaseTrust_Request=} [properties] Properties to set
         */
        function CGCSystemMsg_GetPurchaseTrust_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCSystemMsg_GetPurchaseTrust_Request steamid.
         * @member {number|Long} steamid
         * @memberof CGCSystemMsg_GetPurchaseTrust_Request
         * @instance
         */
        CGCSystemMsg_GetPurchaseTrust_Request.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CGCSystemMsg_GetPurchaseTrust_Request instance using the specified properties.
         * @function create
         * @memberof CGCSystemMsg_GetPurchaseTrust_Request
         * @static
         * @param {ICGCSystemMsg_GetPurchaseTrust_Request=} [properties] Properties to set
         * @returns {CGCSystemMsg_GetPurchaseTrust_Request} CGCSystemMsg_GetPurchaseTrust_Request instance
         */
        CGCSystemMsg_GetPurchaseTrust_Request.create = function create(properties) {
            return new CGCSystemMsg_GetPurchaseTrust_Request(properties);
        };
    
        /**
         * Encodes the specified CGCSystemMsg_GetPurchaseTrust_Request message. Does not implicitly {@link CGCSystemMsg_GetPurchaseTrust_Request.verify|verify} messages.
         * @function encode
         * @memberof CGCSystemMsg_GetPurchaseTrust_Request
         * @static
         * @param {ICGCSystemMsg_GetPurchaseTrust_Request} message CGCSystemMsg_GetPurchaseTrust_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCSystemMsg_GetPurchaseTrust_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
            return writer;
        };
    
        /**
         * Encodes the specified CGCSystemMsg_GetPurchaseTrust_Request message, length delimited. Does not implicitly {@link CGCSystemMsg_GetPurchaseTrust_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCSystemMsg_GetPurchaseTrust_Request
         * @static
         * @param {ICGCSystemMsg_GetPurchaseTrust_Request} message CGCSystemMsg_GetPurchaseTrust_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCSystemMsg_GetPurchaseTrust_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCSystemMsg_GetPurchaseTrust_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CGCSystemMsg_GetPurchaseTrust_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCSystemMsg_GetPurchaseTrust_Request} CGCSystemMsg_GetPurchaseTrust_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCSystemMsg_GetPurchaseTrust_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCSystemMsg_GetPurchaseTrust_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamid = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCSystemMsg_GetPurchaseTrust_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCSystemMsg_GetPurchaseTrust_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCSystemMsg_GetPurchaseTrust_Request} CGCSystemMsg_GetPurchaseTrust_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCSystemMsg_GetPurchaseTrust_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCSystemMsg_GetPurchaseTrust_Request message.
         * @function verify
         * @memberof CGCSystemMsg_GetPurchaseTrust_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCSystemMsg_GetPurchaseTrust_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CGCSystemMsg_GetPurchaseTrust_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCSystemMsg_GetPurchaseTrust_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCSystemMsg_GetPurchaseTrust_Request} CGCSystemMsg_GetPurchaseTrust_Request
         */
        CGCSystemMsg_GetPurchaseTrust_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCSystemMsg_GetPurchaseTrust_Request)
                return object;
            var message = new $root.CGCSystemMsg_GetPurchaseTrust_Request();
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CGCSystemMsg_GetPurchaseTrust_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCSystemMsg_GetPurchaseTrust_Request
         * @static
         * @param {CGCSystemMsg_GetPurchaseTrust_Request} message CGCSystemMsg_GetPurchaseTrust_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCSystemMsg_GetPurchaseTrust_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            return object;
        };
    
        /**
         * Converts this CGCSystemMsg_GetPurchaseTrust_Request to JSON.
         * @function toJSON
         * @memberof CGCSystemMsg_GetPurchaseTrust_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCSystemMsg_GetPurchaseTrust_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCSystemMsg_GetPurchaseTrust_Request
         * @function getTypeUrl
         * @memberof CGCSystemMsg_GetPurchaseTrust_Request
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCSystemMsg_GetPurchaseTrust_Request.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCSystemMsg_GetPurchaseTrust_Request";
        };
    
        return CGCSystemMsg_GetPurchaseTrust_Request;
    })();
    
    $root.CGCSystemMsg_GetPurchaseTrust_Response = (function() {
    
        /**
         * Properties of a CGCSystemMsg_GetPurchaseTrust_Response.
         * @exports ICGCSystemMsg_GetPurchaseTrust_Response
         * @interface ICGCSystemMsg_GetPurchaseTrust_Response
         * @property {boolean|null} [hasPriorPurchaseHistory] CGCSystemMsg_GetPurchaseTrust_Response hasPriorPurchaseHistory
         * @property {boolean|null} [hasNoRecentPasswordResets] CGCSystemMsg_GetPurchaseTrust_Response hasNoRecentPasswordResets
         * @property {boolean|null} [isWalletCashTrusted] CGCSystemMsg_GetPurchaseTrust_Response isWalletCashTrusted
         * @property {number|null} [timeAllTrusted] CGCSystemMsg_GetPurchaseTrust_Response timeAllTrusted
         */
    
        /**
         * Constructs a new CGCSystemMsg_GetPurchaseTrust_Response.
         * @exports CGCSystemMsg_GetPurchaseTrust_Response
         * @classdesc Represents a CGCSystemMsg_GetPurchaseTrust_Response.
         * @implements ICGCSystemMsg_GetPurchaseTrust_Response
         * @constructor
         * @param {ICGCSystemMsg_GetPurchaseTrust_Response=} [properties] Properties to set
         */
        function CGCSystemMsg_GetPurchaseTrust_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCSystemMsg_GetPurchaseTrust_Response hasPriorPurchaseHistory.
         * @member {boolean} hasPriorPurchaseHistory
         * @memberof CGCSystemMsg_GetPurchaseTrust_Response
         * @instance
         */
        CGCSystemMsg_GetPurchaseTrust_Response.prototype.hasPriorPurchaseHistory = false;
    
        /**
         * CGCSystemMsg_GetPurchaseTrust_Response hasNoRecentPasswordResets.
         * @member {boolean} hasNoRecentPasswordResets
         * @memberof CGCSystemMsg_GetPurchaseTrust_Response
         * @instance
         */
        CGCSystemMsg_GetPurchaseTrust_Response.prototype.hasNoRecentPasswordResets = false;
    
        /**
         * CGCSystemMsg_GetPurchaseTrust_Response isWalletCashTrusted.
         * @member {boolean} isWalletCashTrusted
         * @memberof CGCSystemMsg_GetPurchaseTrust_Response
         * @instance
         */
        CGCSystemMsg_GetPurchaseTrust_Response.prototype.isWalletCashTrusted = false;
    
        /**
         * CGCSystemMsg_GetPurchaseTrust_Response timeAllTrusted.
         * @member {number} timeAllTrusted
         * @memberof CGCSystemMsg_GetPurchaseTrust_Response
         * @instance
         */
        CGCSystemMsg_GetPurchaseTrust_Response.prototype.timeAllTrusted = 0;
    
        /**
         * Creates a new CGCSystemMsg_GetPurchaseTrust_Response instance using the specified properties.
         * @function create
         * @memberof CGCSystemMsg_GetPurchaseTrust_Response
         * @static
         * @param {ICGCSystemMsg_GetPurchaseTrust_Response=} [properties] Properties to set
         * @returns {CGCSystemMsg_GetPurchaseTrust_Response} CGCSystemMsg_GetPurchaseTrust_Response instance
         */
        CGCSystemMsg_GetPurchaseTrust_Response.create = function create(properties) {
            return new CGCSystemMsg_GetPurchaseTrust_Response(properties);
        };
    
        /**
         * Encodes the specified CGCSystemMsg_GetPurchaseTrust_Response message. Does not implicitly {@link CGCSystemMsg_GetPurchaseTrust_Response.verify|verify} messages.
         * @function encode
         * @memberof CGCSystemMsg_GetPurchaseTrust_Response
         * @static
         * @param {ICGCSystemMsg_GetPurchaseTrust_Response} message CGCSystemMsg_GetPurchaseTrust_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCSystemMsg_GetPurchaseTrust_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.hasPriorPurchaseHistory != null && Object.hasOwnProperty.call(message, "hasPriorPurchaseHistory"))
                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.hasPriorPurchaseHistory);
            if (message.hasNoRecentPasswordResets != null && Object.hasOwnProperty.call(message, "hasNoRecentPasswordResets"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.hasNoRecentPasswordResets);
            if (message.isWalletCashTrusted != null && Object.hasOwnProperty.call(message, "isWalletCashTrusted"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.isWalletCashTrusted);
            if (message.timeAllTrusted != null && Object.hasOwnProperty.call(message, "timeAllTrusted"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.timeAllTrusted);
            return writer;
        };
    
        /**
         * Encodes the specified CGCSystemMsg_GetPurchaseTrust_Response message, length delimited. Does not implicitly {@link CGCSystemMsg_GetPurchaseTrust_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCSystemMsg_GetPurchaseTrust_Response
         * @static
         * @param {ICGCSystemMsg_GetPurchaseTrust_Response} message CGCSystemMsg_GetPurchaseTrust_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCSystemMsg_GetPurchaseTrust_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCSystemMsg_GetPurchaseTrust_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CGCSystemMsg_GetPurchaseTrust_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCSystemMsg_GetPurchaseTrust_Response} CGCSystemMsg_GetPurchaseTrust_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCSystemMsg_GetPurchaseTrust_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCSystemMsg_GetPurchaseTrust_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.hasPriorPurchaseHistory = reader.bool();
                        break;
                    }
                case 2: {
                        message.hasNoRecentPasswordResets = reader.bool();
                        break;
                    }
                case 3: {
                        message.isWalletCashTrusted = reader.bool();
                        break;
                    }
                case 4: {
                        message.timeAllTrusted = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCSystemMsg_GetPurchaseTrust_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCSystemMsg_GetPurchaseTrust_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCSystemMsg_GetPurchaseTrust_Response} CGCSystemMsg_GetPurchaseTrust_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCSystemMsg_GetPurchaseTrust_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCSystemMsg_GetPurchaseTrust_Response message.
         * @function verify
         * @memberof CGCSystemMsg_GetPurchaseTrust_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCSystemMsg_GetPurchaseTrust_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.hasPriorPurchaseHistory != null && message.hasOwnProperty("hasPriorPurchaseHistory"))
                if (typeof message.hasPriorPurchaseHistory !== "boolean")
                    return "hasPriorPurchaseHistory: boolean expected";
            if (message.hasNoRecentPasswordResets != null && message.hasOwnProperty("hasNoRecentPasswordResets"))
                if (typeof message.hasNoRecentPasswordResets !== "boolean")
                    return "hasNoRecentPasswordResets: boolean expected";
            if (message.isWalletCashTrusted != null && message.hasOwnProperty("isWalletCashTrusted"))
                if (typeof message.isWalletCashTrusted !== "boolean")
                    return "isWalletCashTrusted: boolean expected";
            if (message.timeAllTrusted != null && message.hasOwnProperty("timeAllTrusted"))
                if (!$util.isInteger(message.timeAllTrusted))
                    return "timeAllTrusted: integer expected";
            return null;
        };
    
        /**
         * Creates a CGCSystemMsg_GetPurchaseTrust_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCSystemMsg_GetPurchaseTrust_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCSystemMsg_GetPurchaseTrust_Response} CGCSystemMsg_GetPurchaseTrust_Response
         */
        CGCSystemMsg_GetPurchaseTrust_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCSystemMsg_GetPurchaseTrust_Response)
                return object;
            var message = new $root.CGCSystemMsg_GetPurchaseTrust_Response();
            if (object.hasPriorPurchaseHistory != null)
                message.hasPriorPurchaseHistory = Boolean(object.hasPriorPurchaseHistory);
            if (object.hasNoRecentPasswordResets != null)
                message.hasNoRecentPasswordResets = Boolean(object.hasNoRecentPasswordResets);
            if (object.isWalletCashTrusted != null)
                message.isWalletCashTrusted = Boolean(object.isWalletCashTrusted);
            if (object.timeAllTrusted != null)
                message.timeAllTrusted = object.timeAllTrusted >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CGCSystemMsg_GetPurchaseTrust_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCSystemMsg_GetPurchaseTrust_Response
         * @static
         * @param {CGCSystemMsg_GetPurchaseTrust_Response} message CGCSystemMsg_GetPurchaseTrust_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCSystemMsg_GetPurchaseTrust_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.hasPriorPurchaseHistory = false;
                object.hasNoRecentPasswordResets = false;
                object.isWalletCashTrusted = false;
                object.timeAllTrusted = 0;
            }
            if (message.hasPriorPurchaseHistory != null && message.hasOwnProperty("hasPriorPurchaseHistory"))
                object.hasPriorPurchaseHistory = message.hasPriorPurchaseHistory;
            if (message.hasNoRecentPasswordResets != null && message.hasOwnProperty("hasNoRecentPasswordResets"))
                object.hasNoRecentPasswordResets = message.hasNoRecentPasswordResets;
            if (message.isWalletCashTrusted != null && message.hasOwnProperty("isWalletCashTrusted"))
                object.isWalletCashTrusted = message.isWalletCashTrusted;
            if (message.timeAllTrusted != null && message.hasOwnProperty("timeAllTrusted"))
                object.timeAllTrusted = message.timeAllTrusted;
            return object;
        };
    
        /**
         * Converts this CGCSystemMsg_GetPurchaseTrust_Response to JSON.
         * @function toJSON
         * @memberof CGCSystemMsg_GetPurchaseTrust_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCSystemMsg_GetPurchaseTrust_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCSystemMsg_GetPurchaseTrust_Response
         * @function getTypeUrl
         * @memberof CGCSystemMsg_GetPurchaseTrust_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCSystemMsg_GetPurchaseTrust_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCSystemMsg_GetPurchaseTrust_Response";
        };
    
        return CGCSystemMsg_GetPurchaseTrust_Response;
    })();
    
    $root.CMsgGCHAccountVacStatusChange = (function() {
    
        /**
         * Properties of a CMsgGCHAccountVacStatusChange.
         * @exports ICMsgGCHAccountVacStatusChange
         * @interface ICMsgGCHAccountVacStatusChange
         * @property {number|Long|null} [steamId] CMsgGCHAccountVacStatusChange steamId
         * @property {number|null} [appId] CMsgGCHAccountVacStatusChange appId
         * @property {number|null} [rtimeVacbanStarts] CMsgGCHAccountVacStatusChange rtimeVacbanStarts
         * @property {boolean|null} [isBannedNow] CMsgGCHAccountVacStatusChange isBannedNow
         * @property {boolean|null} [isBannedFuture] CMsgGCHAccountVacStatusChange isBannedFuture
         */
    
        /**
         * Constructs a new CMsgGCHAccountVacStatusChange.
         * @exports CMsgGCHAccountVacStatusChange
         * @classdesc Represents a CMsgGCHAccountVacStatusChange.
         * @implements ICMsgGCHAccountVacStatusChange
         * @constructor
         * @param {ICMsgGCHAccountVacStatusChange=} [properties] Properties to set
         */
        function CMsgGCHAccountVacStatusChange(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCHAccountVacStatusChange steamId.
         * @member {number|Long} steamId
         * @memberof CMsgGCHAccountVacStatusChange
         * @instance
         */
        CMsgGCHAccountVacStatusChange.prototype.steamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGCHAccountVacStatusChange appId.
         * @member {number} appId
         * @memberof CMsgGCHAccountVacStatusChange
         * @instance
         */
        CMsgGCHAccountVacStatusChange.prototype.appId = 0;
    
        /**
         * CMsgGCHAccountVacStatusChange rtimeVacbanStarts.
         * @member {number} rtimeVacbanStarts
         * @memberof CMsgGCHAccountVacStatusChange
         * @instance
         */
        CMsgGCHAccountVacStatusChange.prototype.rtimeVacbanStarts = 0;
    
        /**
         * CMsgGCHAccountVacStatusChange isBannedNow.
         * @member {boolean} isBannedNow
         * @memberof CMsgGCHAccountVacStatusChange
         * @instance
         */
        CMsgGCHAccountVacStatusChange.prototype.isBannedNow = false;
    
        /**
         * CMsgGCHAccountVacStatusChange isBannedFuture.
         * @member {boolean} isBannedFuture
         * @memberof CMsgGCHAccountVacStatusChange
         * @instance
         */
        CMsgGCHAccountVacStatusChange.prototype.isBannedFuture = false;
    
        /**
         * Creates a new CMsgGCHAccountVacStatusChange instance using the specified properties.
         * @function create
         * @memberof CMsgGCHAccountVacStatusChange
         * @static
         * @param {ICMsgGCHAccountVacStatusChange=} [properties] Properties to set
         * @returns {CMsgGCHAccountVacStatusChange} CMsgGCHAccountVacStatusChange instance
         */
        CMsgGCHAccountVacStatusChange.create = function create(properties) {
            return new CMsgGCHAccountVacStatusChange(properties);
        };
    
        /**
         * Encodes the specified CMsgGCHAccountVacStatusChange message. Does not implicitly {@link CMsgGCHAccountVacStatusChange.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCHAccountVacStatusChange
         * @static
         * @param {ICMsgGCHAccountVacStatusChange} message CMsgGCHAccountVacStatusChange message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCHAccountVacStatusChange.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamId != null && Object.hasOwnProperty.call(message, "steamId"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamId);
            if (message.appId != null && Object.hasOwnProperty.call(message, "appId"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.appId);
            if (message.rtimeVacbanStarts != null && Object.hasOwnProperty.call(message, "rtimeVacbanStarts"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.rtimeVacbanStarts);
            if (message.isBannedNow != null && Object.hasOwnProperty.call(message, "isBannedNow"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.isBannedNow);
            if (message.isBannedFuture != null && Object.hasOwnProperty.call(message, "isBannedFuture"))
                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.isBannedFuture);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCHAccountVacStatusChange message, length delimited. Does not implicitly {@link CMsgGCHAccountVacStatusChange.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCHAccountVacStatusChange
         * @static
         * @param {ICMsgGCHAccountVacStatusChange} message CMsgGCHAccountVacStatusChange message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCHAccountVacStatusChange.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCHAccountVacStatusChange message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCHAccountVacStatusChange
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCHAccountVacStatusChange} CMsgGCHAccountVacStatusChange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCHAccountVacStatusChange.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCHAccountVacStatusChange();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamId = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.appId = reader.uint32();
                        break;
                    }
                case 3: {
                        message.rtimeVacbanStarts = reader.uint32();
                        break;
                    }
                case 4: {
                        message.isBannedNow = reader.bool();
                        break;
                    }
                case 5: {
                        message.isBannedFuture = reader.bool();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCHAccountVacStatusChange message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCHAccountVacStatusChange
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCHAccountVacStatusChange} CMsgGCHAccountVacStatusChange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCHAccountVacStatusChange.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCHAccountVacStatusChange message.
         * @function verify
         * @memberof CMsgGCHAccountVacStatusChange
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCHAccountVacStatusChange.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (!$util.isInteger(message.steamId) && !(message.steamId && $util.isInteger(message.steamId.low) && $util.isInteger(message.steamId.high)))
                    return "steamId: integer|Long expected";
            if (message.appId != null && message.hasOwnProperty("appId"))
                if (!$util.isInteger(message.appId))
                    return "appId: integer expected";
            if (message.rtimeVacbanStarts != null && message.hasOwnProperty("rtimeVacbanStarts"))
                if (!$util.isInteger(message.rtimeVacbanStarts))
                    return "rtimeVacbanStarts: integer expected";
            if (message.isBannedNow != null && message.hasOwnProperty("isBannedNow"))
                if (typeof message.isBannedNow !== "boolean")
                    return "isBannedNow: boolean expected";
            if (message.isBannedFuture != null && message.hasOwnProperty("isBannedFuture"))
                if (typeof message.isBannedFuture !== "boolean")
                    return "isBannedFuture: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCHAccountVacStatusChange message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCHAccountVacStatusChange
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCHAccountVacStatusChange} CMsgGCHAccountVacStatusChange
         */
        CMsgGCHAccountVacStatusChange.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCHAccountVacStatusChange)
                return object;
            var message = new $root.CMsgGCHAccountVacStatusChange();
            if (object.steamId != null)
                if ($util.Long)
                    (message.steamId = $util.Long.fromValue(object.steamId)).unsigned = false;
                else if (typeof object.steamId === "string")
                    message.steamId = parseInt(object.steamId, 10);
                else if (typeof object.steamId === "number")
                    message.steamId = object.steamId;
                else if (typeof object.steamId === "object")
                    message.steamId = new $util.LongBits(object.steamId.low >>> 0, object.steamId.high >>> 0).toNumber();
            if (object.appId != null)
                message.appId = object.appId >>> 0;
            if (object.rtimeVacbanStarts != null)
                message.rtimeVacbanStarts = object.rtimeVacbanStarts >>> 0;
            if (object.isBannedNow != null)
                message.isBannedNow = Boolean(object.isBannedNow);
            if (object.isBannedFuture != null)
                message.isBannedFuture = Boolean(object.isBannedFuture);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCHAccountVacStatusChange message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCHAccountVacStatusChange
         * @static
         * @param {CMsgGCHAccountVacStatusChange} message CMsgGCHAccountVacStatusChange
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCHAccountVacStatusChange.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamId = options.longs === String ? "0" : 0;
                object.appId = 0;
                object.rtimeVacbanStarts = 0;
                object.isBannedNow = false;
                object.isBannedFuture = false;
            }
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (typeof message.steamId === "number")
                    object.steamId = options.longs === String ? String(message.steamId) : message.steamId;
                else
                    object.steamId = options.longs === String ? $util.Long.prototype.toString.call(message.steamId) : options.longs === Number ? new $util.LongBits(message.steamId.low >>> 0, message.steamId.high >>> 0).toNumber() : message.steamId;
            if (message.appId != null && message.hasOwnProperty("appId"))
                object.appId = message.appId;
            if (message.rtimeVacbanStarts != null && message.hasOwnProperty("rtimeVacbanStarts"))
                object.rtimeVacbanStarts = message.rtimeVacbanStarts;
            if (message.isBannedNow != null && message.hasOwnProperty("isBannedNow"))
                object.isBannedNow = message.isBannedNow;
            if (message.isBannedFuture != null && message.hasOwnProperty("isBannedFuture"))
                object.isBannedFuture = message.isBannedFuture;
            return object;
        };
    
        /**
         * Converts this CMsgGCHAccountVacStatusChange to JSON.
         * @function toJSON
         * @memberof CMsgGCHAccountVacStatusChange
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCHAccountVacStatusChange.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCHAccountVacStatusChange
         * @function getTypeUrl
         * @memberof CMsgGCHAccountVacStatusChange
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCHAccountVacStatusChange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCHAccountVacStatusChange";
        };
    
        return CMsgGCHAccountVacStatusChange;
    })();
    
    $root.CMsgGCGetPartnerAccountLink = (function() {
    
        /**
         * Properties of a CMsgGCGetPartnerAccountLink.
         * @exports ICMsgGCGetPartnerAccountLink
         * @interface ICMsgGCGetPartnerAccountLink
         * @property {number|Long|null} [steamid] CMsgGCGetPartnerAccountLink steamid
         */
    
        /**
         * Constructs a new CMsgGCGetPartnerAccountLink.
         * @exports CMsgGCGetPartnerAccountLink
         * @classdesc Represents a CMsgGCGetPartnerAccountLink.
         * @implements ICMsgGCGetPartnerAccountLink
         * @constructor
         * @param {ICMsgGCGetPartnerAccountLink=} [properties] Properties to set
         */
        function CMsgGCGetPartnerAccountLink(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCGetPartnerAccountLink steamid.
         * @member {number|Long} steamid
         * @memberof CMsgGCGetPartnerAccountLink
         * @instance
         */
        CMsgGCGetPartnerAccountLink.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgGCGetPartnerAccountLink instance using the specified properties.
         * @function create
         * @memberof CMsgGCGetPartnerAccountLink
         * @static
         * @param {ICMsgGCGetPartnerAccountLink=} [properties] Properties to set
         * @returns {CMsgGCGetPartnerAccountLink} CMsgGCGetPartnerAccountLink instance
         */
        CMsgGCGetPartnerAccountLink.create = function create(properties) {
            return new CMsgGCGetPartnerAccountLink(properties);
        };
    
        /**
         * Encodes the specified CMsgGCGetPartnerAccountLink message. Does not implicitly {@link CMsgGCGetPartnerAccountLink.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCGetPartnerAccountLink
         * @static
         * @param {ICMsgGCGetPartnerAccountLink} message CMsgGCGetPartnerAccountLink message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetPartnerAccountLink.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCGetPartnerAccountLink message, length delimited. Does not implicitly {@link CMsgGCGetPartnerAccountLink.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCGetPartnerAccountLink
         * @static
         * @param {ICMsgGCGetPartnerAccountLink} message CMsgGCGetPartnerAccountLink message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetPartnerAccountLink.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCGetPartnerAccountLink message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCGetPartnerAccountLink
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCGetPartnerAccountLink} CMsgGCGetPartnerAccountLink
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetPartnerAccountLink.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCGetPartnerAccountLink();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamid = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCGetPartnerAccountLink message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCGetPartnerAccountLink
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCGetPartnerAccountLink} CMsgGCGetPartnerAccountLink
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetPartnerAccountLink.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCGetPartnerAccountLink message.
         * @function verify
         * @memberof CMsgGCGetPartnerAccountLink
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCGetPartnerAccountLink.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCGetPartnerAccountLink message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCGetPartnerAccountLink
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCGetPartnerAccountLink} CMsgGCGetPartnerAccountLink
         */
        CMsgGCGetPartnerAccountLink.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCGetPartnerAccountLink)
                return object;
            var message = new $root.CMsgGCGetPartnerAccountLink();
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCGetPartnerAccountLink message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCGetPartnerAccountLink
         * @static
         * @param {CMsgGCGetPartnerAccountLink} message CMsgGCGetPartnerAccountLink
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCGetPartnerAccountLink.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            return object;
        };
    
        /**
         * Converts this CMsgGCGetPartnerAccountLink to JSON.
         * @function toJSON
         * @memberof CMsgGCGetPartnerAccountLink
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCGetPartnerAccountLink.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCGetPartnerAccountLink
         * @function getTypeUrl
         * @memberof CMsgGCGetPartnerAccountLink
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCGetPartnerAccountLink.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCGetPartnerAccountLink";
        };
    
        return CMsgGCGetPartnerAccountLink;
    })();
    
    $root.CMsgGCGetPartnerAccountLink_Response = (function() {
    
        /**
         * Properties of a CMsgGCGetPartnerAccountLink_Response.
         * @exports ICMsgGCGetPartnerAccountLink_Response
         * @interface ICMsgGCGetPartnerAccountLink_Response
         * @property {number|null} [pwid] CMsgGCGetPartnerAccountLink_Response pwid
         * @property {number|null} [nexonid] CMsgGCGetPartnerAccountLink_Response nexonid
         * @property {number|null} [ageclass] CMsgGCGetPartnerAccountLink_Response ageclass
         * @property {boolean|null} [idVerified] CMsgGCGetPartnerAccountLink_Response idVerified
         * @property {boolean|null} [isAdult] CMsgGCGetPartnerAccountLink_Response isAdult
         */
    
        /**
         * Constructs a new CMsgGCGetPartnerAccountLink_Response.
         * @exports CMsgGCGetPartnerAccountLink_Response
         * @classdesc Represents a CMsgGCGetPartnerAccountLink_Response.
         * @implements ICMsgGCGetPartnerAccountLink_Response
         * @constructor
         * @param {ICMsgGCGetPartnerAccountLink_Response=} [properties] Properties to set
         */
        function CMsgGCGetPartnerAccountLink_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCGetPartnerAccountLink_Response pwid.
         * @member {number} pwid
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @instance
         */
        CMsgGCGetPartnerAccountLink_Response.prototype.pwid = 0;
    
        /**
         * CMsgGCGetPartnerAccountLink_Response nexonid.
         * @member {number} nexonid
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @instance
         */
        CMsgGCGetPartnerAccountLink_Response.prototype.nexonid = 0;
    
        /**
         * CMsgGCGetPartnerAccountLink_Response ageclass.
         * @member {number} ageclass
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @instance
         */
        CMsgGCGetPartnerAccountLink_Response.prototype.ageclass = 0;
    
        /**
         * CMsgGCGetPartnerAccountLink_Response idVerified.
         * @member {boolean} idVerified
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @instance
         */
        CMsgGCGetPartnerAccountLink_Response.prototype.idVerified = true;
    
        /**
         * CMsgGCGetPartnerAccountLink_Response isAdult.
         * @member {boolean} isAdult
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @instance
         */
        CMsgGCGetPartnerAccountLink_Response.prototype.isAdult = false;
    
        /**
         * Creates a new CMsgGCGetPartnerAccountLink_Response instance using the specified properties.
         * @function create
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @static
         * @param {ICMsgGCGetPartnerAccountLink_Response=} [properties] Properties to set
         * @returns {CMsgGCGetPartnerAccountLink_Response} CMsgGCGetPartnerAccountLink_Response instance
         */
        CMsgGCGetPartnerAccountLink_Response.create = function create(properties) {
            return new CMsgGCGetPartnerAccountLink_Response(properties);
        };
    
        /**
         * Encodes the specified CMsgGCGetPartnerAccountLink_Response message. Does not implicitly {@link CMsgGCGetPartnerAccountLink_Response.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @static
         * @param {ICMsgGCGetPartnerAccountLink_Response} message CMsgGCGetPartnerAccountLink_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetPartnerAccountLink_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.pwid != null && Object.hasOwnProperty.call(message, "pwid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.pwid);
            if (message.nexonid != null && Object.hasOwnProperty.call(message, "nexonid"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.nexonid);
            if (message.ageclass != null && Object.hasOwnProperty.call(message, "ageclass"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.ageclass);
            if (message.idVerified != null && Object.hasOwnProperty.call(message, "idVerified"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.idVerified);
            if (message.isAdult != null && Object.hasOwnProperty.call(message, "isAdult"))
                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.isAdult);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCGetPartnerAccountLink_Response message, length delimited. Does not implicitly {@link CMsgGCGetPartnerAccountLink_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @static
         * @param {ICMsgGCGetPartnerAccountLink_Response} message CMsgGCGetPartnerAccountLink_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetPartnerAccountLink_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCGetPartnerAccountLink_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCGetPartnerAccountLink_Response} CMsgGCGetPartnerAccountLink_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetPartnerAccountLink_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCGetPartnerAccountLink_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.pwid = reader.uint32();
                        break;
                    }
                case 2: {
                        message.nexonid = reader.uint32();
                        break;
                    }
                case 3: {
                        message.ageclass = reader.int32();
                        break;
                    }
                case 4: {
                        message.idVerified = reader.bool();
                        break;
                    }
                case 5: {
                        message.isAdult = reader.bool();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCGetPartnerAccountLink_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCGetPartnerAccountLink_Response} CMsgGCGetPartnerAccountLink_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetPartnerAccountLink_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCGetPartnerAccountLink_Response message.
         * @function verify
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCGetPartnerAccountLink_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.pwid != null && message.hasOwnProperty("pwid"))
                if (!$util.isInteger(message.pwid))
                    return "pwid: integer expected";
            if (message.nexonid != null && message.hasOwnProperty("nexonid"))
                if (!$util.isInteger(message.nexonid))
                    return "nexonid: integer expected";
            if (message.ageclass != null && message.hasOwnProperty("ageclass"))
                if (!$util.isInteger(message.ageclass))
                    return "ageclass: integer expected";
            if (message.idVerified != null && message.hasOwnProperty("idVerified"))
                if (typeof message.idVerified !== "boolean")
                    return "idVerified: boolean expected";
            if (message.isAdult != null && message.hasOwnProperty("isAdult"))
                if (typeof message.isAdult !== "boolean")
                    return "isAdult: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCGetPartnerAccountLink_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCGetPartnerAccountLink_Response} CMsgGCGetPartnerAccountLink_Response
         */
        CMsgGCGetPartnerAccountLink_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCGetPartnerAccountLink_Response)
                return object;
            var message = new $root.CMsgGCGetPartnerAccountLink_Response();
            if (object.pwid != null)
                message.pwid = object.pwid >>> 0;
            if (object.nexonid != null)
                message.nexonid = object.nexonid >>> 0;
            if (object.ageclass != null)
                message.ageclass = object.ageclass | 0;
            if (object.idVerified != null)
                message.idVerified = Boolean(object.idVerified);
            if (object.isAdult != null)
                message.isAdult = Boolean(object.isAdult);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCGetPartnerAccountLink_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @static
         * @param {CMsgGCGetPartnerAccountLink_Response} message CMsgGCGetPartnerAccountLink_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCGetPartnerAccountLink_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.pwid = 0;
                object.nexonid = 0;
                object.ageclass = 0;
                object.idVerified = true;
                object.isAdult = false;
            }
            if (message.pwid != null && message.hasOwnProperty("pwid"))
                object.pwid = message.pwid;
            if (message.nexonid != null && message.hasOwnProperty("nexonid"))
                object.nexonid = message.nexonid;
            if (message.ageclass != null && message.hasOwnProperty("ageclass"))
                object.ageclass = message.ageclass;
            if (message.idVerified != null && message.hasOwnProperty("idVerified"))
                object.idVerified = message.idVerified;
            if (message.isAdult != null && message.hasOwnProperty("isAdult"))
                object.isAdult = message.isAdult;
            return object;
        };
    
        /**
         * Converts this CMsgGCGetPartnerAccountLink_Response to JSON.
         * @function toJSON
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCGetPartnerAccountLink_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCGetPartnerAccountLink_Response
         * @function getTypeUrl
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCGetPartnerAccountLink_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCGetPartnerAccountLink_Response";
        };
    
        return CMsgGCGetPartnerAccountLink_Response;
    })();
    
    $root.CMsgGCRoutingInfo = (function() {
    
        /**
         * Properties of a CMsgGCRoutingInfo.
         * @exports ICMsgGCRoutingInfo
         * @interface ICMsgGCRoutingInfo
         * @property {Array.<number>|null} [dirIndex] CMsgGCRoutingInfo dirIndex
         * @property {CMsgGCRoutingInfo.RoutingMethod|null} [method] CMsgGCRoutingInfo method
         * @property {CMsgGCRoutingInfo.RoutingMethod|null} [fallback] CMsgGCRoutingInfo fallback
         * @property {number|null} [protobufField] CMsgGCRoutingInfo protobufField
         * @property {string|null} [webapiParam] CMsgGCRoutingInfo webapiParam
         */
    
        /**
         * Constructs a new CMsgGCRoutingInfo.
         * @exports CMsgGCRoutingInfo
         * @classdesc Represents a CMsgGCRoutingInfo.
         * @implements ICMsgGCRoutingInfo
         * @constructor
         * @param {ICMsgGCRoutingInfo=} [properties] Properties to set
         */
        function CMsgGCRoutingInfo(properties) {
            this.dirIndex = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCRoutingInfo dirIndex.
         * @member {Array.<number>} dirIndex
         * @memberof CMsgGCRoutingInfo
         * @instance
         */
        CMsgGCRoutingInfo.prototype.dirIndex = $util.emptyArray;
    
        /**
         * CMsgGCRoutingInfo method.
         * @member {CMsgGCRoutingInfo.RoutingMethod} method
         * @memberof CMsgGCRoutingInfo
         * @instance
         */
        CMsgGCRoutingInfo.prototype.method = 0;
    
        /**
         * CMsgGCRoutingInfo fallback.
         * @member {CMsgGCRoutingInfo.RoutingMethod} fallback
         * @memberof CMsgGCRoutingInfo
         * @instance
         */
        CMsgGCRoutingInfo.prototype.fallback = 1;
    
        /**
         * CMsgGCRoutingInfo protobufField.
         * @member {number} protobufField
         * @memberof CMsgGCRoutingInfo
         * @instance
         */
        CMsgGCRoutingInfo.prototype.protobufField = 0;
    
        /**
         * CMsgGCRoutingInfo webapiParam.
         * @member {string} webapiParam
         * @memberof CMsgGCRoutingInfo
         * @instance
         */
        CMsgGCRoutingInfo.prototype.webapiParam = "";
    
        /**
         * Creates a new CMsgGCRoutingInfo instance using the specified properties.
         * @function create
         * @memberof CMsgGCRoutingInfo
         * @static
         * @param {ICMsgGCRoutingInfo=} [properties] Properties to set
         * @returns {CMsgGCRoutingInfo} CMsgGCRoutingInfo instance
         */
        CMsgGCRoutingInfo.create = function create(properties) {
            return new CMsgGCRoutingInfo(properties);
        };
    
        /**
         * Encodes the specified CMsgGCRoutingInfo message. Does not implicitly {@link CMsgGCRoutingInfo.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCRoutingInfo
         * @static
         * @param {ICMsgGCRoutingInfo} message CMsgGCRoutingInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCRoutingInfo.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.dirIndex != null && message.dirIndex.length)
                for (var i = 0; i < message.dirIndex.length; ++i)
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.dirIndex[i]);
            if (message.method != null && Object.hasOwnProperty.call(message, "method"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.method);
            if (message.fallback != null && Object.hasOwnProperty.call(message, "fallback"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.fallback);
            if (message.protobufField != null && Object.hasOwnProperty.call(message, "protobufField"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.protobufField);
            if (message.webapiParam != null && Object.hasOwnProperty.call(message, "webapiParam"))
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.webapiParam);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCRoutingInfo message, length delimited. Does not implicitly {@link CMsgGCRoutingInfo.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCRoutingInfo
         * @static
         * @param {ICMsgGCRoutingInfo} message CMsgGCRoutingInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCRoutingInfo.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCRoutingInfo message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCRoutingInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCRoutingInfo} CMsgGCRoutingInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCRoutingInfo.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCRoutingInfo();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.dirIndex && message.dirIndex.length))
                            message.dirIndex = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.dirIndex.push(reader.uint32());
                        } else
                            message.dirIndex.push(reader.uint32());
                        break;
                    }
                case 2: {
                        message.method = reader.int32();
                        break;
                    }
                case 3: {
                        message.fallback = reader.int32();
                        break;
                    }
                case 4: {
                        message.protobufField = reader.uint32();
                        break;
                    }
                case 5: {
                        message.webapiParam = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCRoutingInfo message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCRoutingInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCRoutingInfo} CMsgGCRoutingInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCRoutingInfo.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCRoutingInfo message.
         * @function verify
         * @memberof CMsgGCRoutingInfo
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCRoutingInfo.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.dirIndex != null && message.hasOwnProperty("dirIndex")) {
                if (!Array.isArray(message.dirIndex))
                    return "dirIndex: array expected";
                for (var i = 0; i < message.dirIndex.length; ++i)
                    if (!$util.isInteger(message.dirIndex[i]))
                        return "dirIndex: integer[] expected";
            }
            if (message.method != null && message.hasOwnProperty("method"))
                switch (message.method) {
                default:
                    return "method: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                    break;
                }
            if (message.fallback != null && message.hasOwnProperty("fallback"))
                switch (message.fallback) {
                default:
                    return "fallback: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                    break;
                }
            if (message.protobufField != null && message.hasOwnProperty("protobufField"))
                if (!$util.isInteger(message.protobufField))
                    return "protobufField: integer expected";
            if (message.webapiParam != null && message.hasOwnProperty("webapiParam"))
                if (!$util.isString(message.webapiParam))
                    return "webapiParam: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCRoutingInfo message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCRoutingInfo
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCRoutingInfo} CMsgGCRoutingInfo
         */
        CMsgGCRoutingInfo.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCRoutingInfo)
                return object;
            var message = new $root.CMsgGCRoutingInfo();
            if (object.dirIndex) {
                if (!Array.isArray(object.dirIndex))
                    throw TypeError(".CMsgGCRoutingInfo.dirIndex: array expected");
                message.dirIndex = [];
                for (var i = 0; i < object.dirIndex.length; ++i)
                    message.dirIndex[i] = object.dirIndex[i] >>> 0;
            }
            switch (object.method) {
            default:
                if (typeof object.method === "number") {
                    message.method = object.method;
                    break;
                }
                break;
            case "RANDOM":
            case 0:
                message.method = 0;
                break;
            case "DISCARD":
            case 1:
                message.method = 1;
                break;
            case "CLIENT_STEAMID":
            case 2:
                message.method = 2;
                break;
            case "PROTOBUF_FIELD_UINT64":
            case 3:
                message.method = 3;
                break;
            case "WEBAPI_PARAM_UINT64":
            case 4:
                message.method = 4;
                break;
            }
            switch (object.fallback) {
            case "RANDOM":
            case 0:
                message.fallback = 0;
                break;
            default:
                if (typeof object.fallback === "number") {
                    message.fallback = object.fallback;
                    break;
                }
                break;
            case "DISCARD":
            case 1:
                message.fallback = 1;
                break;
            case "CLIENT_STEAMID":
            case 2:
                message.fallback = 2;
                break;
            case "PROTOBUF_FIELD_UINT64":
            case 3:
                message.fallback = 3;
                break;
            case "WEBAPI_PARAM_UINT64":
            case 4:
                message.fallback = 4;
                break;
            }
            if (object.protobufField != null)
                message.protobufField = object.protobufField >>> 0;
            if (object.webapiParam != null)
                message.webapiParam = String(object.webapiParam);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCRoutingInfo message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCRoutingInfo
         * @static
         * @param {CMsgGCRoutingInfo} message CMsgGCRoutingInfo
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCRoutingInfo.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.dirIndex = [];
            if (options.defaults) {
                object.method = options.enums === String ? "RANDOM" : 0;
                object.fallback = options.enums === String ? "DISCARD" : 1;
                object.protobufField = 0;
                object.webapiParam = "";
            }
            if (message.dirIndex && message.dirIndex.length) {
                object.dirIndex = [];
                for (var j = 0; j < message.dirIndex.length; ++j)
                    object.dirIndex[j] = message.dirIndex[j];
            }
            if (message.method != null && message.hasOwnProperty("method"))
                object.method = options.enums === String ? $root.CMsgGCRoutingInfo.RoutingMethod[message.method] === undefined ? message.method : $root.CMsgGCRoutingInfo.RoutingMethod[message.method] : message.method;
            if (message.fallback != null && message.hasOwnProperty("fallback"))
                object.fallback = options.enums === String ? $root.CMsgGCRoutingInfo.RoutingMethod[message.fallback] === undefined ? message.fallback : $root.CMsgGCRoutingInfo.RoutingMethod[message.fallback] : message.fallback;
            if (message.protobufField != null && message.hasOwnProperty("protobufField"))
                object.protobufField = message.protobufField;
            if (message.webapiParam != null && message.hasOwnProperty("webapiParam"))
                object.webapiParam = message.webapiParam;
            return object;
        };
    
        /**
         * Converts this CMsgGCRoutingInfo to JSON.
         * @function toJSON
         * @memberof CMsgGCRoutingInfo
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCRoutingInfo.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCRoutingInfo
         * @function getTypeUrl
         * @memberof CMsgGCRoutingInfo
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCRoutingInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCRoutingInfo";
        };
    
        /**
         * RoutingMethod enum.
         * @name CMsgGCRoutingInfo.RoutingMethod
         * @enum {number}
         * @property {number} RANDOM=0 RANDOM value
         * @property {number} DISCARD=1 DISCARD value
         * @property {number} CLIENT_STEAMID=2 CLIENT_STEAMID value
         * @property {number} PROTOBUF_FIELD_UINT64=3 PROTOBUF_FIELD_UINT64 value
         * @property {number} WEBAPI_PARAM_UINT64=4 WEBAPI_PARAM_UINT64 value
         */
        CMsgGCRoutingInfo.RoutingMethod = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "RANDOM"] = 0;
            values[valuesById[1] = "DISCARD"] = 1;
            values[valuesById[2] = "CLIENT_STEAMID"] = 2;
            values[valuesById[3] = "PROTOBUF_FIELD_UINT64"] = 3;
            values[valuesById[4] = "WEBAPI_PARAM_UINT64"] = 4;
            return values;
        })();
    
        return CMsgGCRoutingInfo;
    })();
    
    $root.CMsgGCMsgMasterSetWebAPIRouting = (function() {
    
        /**
         * Properties of a CMsgGCMsgMasterSetWebAPIRouting.
         * @exports ICMsgGCMsgMasterSetWebAPIRouting
         * @interface ICMsgGCMsgMasterSetWebAPIRouting
         * @property {Array.<CMsgGCMsgMasterSetWebAPIRouting.IEntry>|null} [entries] CMsgGCMsgMasterSetWebAPIRouting entries
         */
    
        /**
         * Constructs a new CMsgGCMsgMasterSetWebAPIRouting.
         * @exports CMsgGCMsgMasterSetWebAPIRouting
         * @classdesc Represents a CMsgGCMsgMasterSetWebAPIRouting.
         * @implements ICMsgGCMsgMasterSetWebAPIRouting
         * @constructor
         * @param {ICMsgGCMsgMasterSetWebAPIRouting=} [properties] Properties to set
         */
        function CMsgGCMsgMasterSetWebAPIRouting(properties) {
            this.entries = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCMsgMasterSetWebAPIRouting entries.
         * @member {Array.<CMsgGCMsgMasterSetWebAPIRouting.IEntry>} entries
         * @memberof CMsgGCMsgMasterSetWebAPIRouting
         * @instance
         */
        CMsgGCMsgMasterSetWebAPIRouting.prototype.entries = $util.emptyArray;
    
        /**
         * Creates a new CMsgGCMsgMasterSetWebAPIRouting instance using the specified properties.
         * @function create
         * @memberof CMsgGCMsgMasterSetWebAPIRouting
         * @static
         * @param {ICMsgGCMsgMasterSetWebAPIRouting=} [properties] Properties to set
         * @returns {CMsgGCMsgMasterSetWebAPIRouting} CMsgGCMsgMasterSetWebAPIRouting instance
         */
        CMsgGCMsgMasterSetWebAPIRouting.create = function create(properties) {
            return new CMsgGCMsgMasterSetWebAPIRouting(properties);
        };
    
        /**
         * Encodes the specified CMsgGCMsgMasterSetWebAPIRouting message. Does not implicitly {@link CMsgGCMsgMasterSetWebAPIRouting.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCMsgMasterSetWebAPIRouting
         * @static
         * @param {ICMsgGCMsgMasterSetWebAPIRouting} message CMsgGCMsgMasterSetWebAPIRouting message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgMasterSetWebAPIRouting.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.entries != null && message.entries.length)
                for (var i = 0; i < message.entries.length; ++i)
                    $root.CMsgGCMsgMasterSetWebAPIRouting.Entry.encode(message.entries[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCMsgMasterSetWebAPIRouting message, length delimited. Does not implicitly {@link CMsgGCMsgMasterSetWebAPIRouting.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCMsgMasterSetWebAPIRouting
         * @static
         * @param {ICMsgGCMsgMasterSetWebAPIRouting} message CMsgGCMsgMasterSetWebAPIRouting message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgMasterSetWebAPIRouting.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCMsgMasterSetWebAPIRouting message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCMsgMasterSetWebAPIRouting
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCMsgMasterSetWebAPIRouting} CMsgGCMsgMasterSetWebAPIRouting
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgMasterSetWebAPIRouting.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCMsgMasterSetWebAPIRouting();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.entries && message.entries.length))
                            message.entries = [];
                        message.entries.push($root.CMsgGCMsgMasterSetWebAPIRouting.Entry.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCMsgMasterSetWebAPIRouting message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCMsgMasterSetWebAPIRouting
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCMsgMasterSetWebAPIRouting} CMsgGCMsgMasterSetWebAPIRouting
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgMasterSetWebAPIRouting.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCMsgMasterSetWebAPIRouting message.
         * @function verify
         * @memberof CMsgGCMsgMasterSetWebAPIRouting
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCMsgMasterSetWebAPIRouting.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.entries != null && message.hasOwnProperty("entries")) {
                if (!Array.isArray(message.entries))
                    return "entries: array expected";
                for (var i = 0; i < message.entries.length; ++i) {
                    var error = $root.CMsgGCMsgMasterSetWebAPIRouting.Entry.verify(message.entries[i]);
                    if (error)
                        return "entries." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCMsgMasterSetWebAPIRouting message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCMsgMasterSetWebAPIRouting
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCMsgMasterSetWebAPIRouting} CMsgGCMsgMasterSetWebAPIRouting
         */
        CMsgGCMsgMasterSetWebAPIRouting.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCMsgMasterSetWebAPIRouting)
                return object;
            var message = new $root.CMsgGCMsgMasterSetWebAPIRouting();
            if (object.entries) {
                if (!Array.isArray(object.entries))
                    throw TypeError(".CMsgGCMsgMasterSetWebAPIRouting.entries: array expected");
                message.entries = [];
                for (var i = 0; i < object.entries.length; ++i) {
                    if (typeof object.entries[i] !== "object")
                        throw TypeError(".CMsgGCMsgMasterSetWebAPIRouting.entries: object expected");
                    message.entries[i] = $root.CMsgGCMsgMasterSetWebAPIRouting.Entry.fromObject(object.entries[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCMsgMasterSetWebAPIRouting message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCMsgMasterSetWebAPIRouting
         * @static
         * @param {CMsgGCMsgMasterSetWebAPIRouting} message CMsgGCMsgMasterSetWebAPIRouting
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCMsgMasterSetWebAPIRouting.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.entries = [];
            if (message.entries && message.entries.length) {
                object.entries = [];
                for (var j = 0; j < message.entries.length; ++j)
                    object.entries[j] = $root.CMsgGCMsgMasterSetWebAPIRouting.Entry.toObject(message.entries[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgGCMsgMasterSetWebAPIRouting to JSON.
         * @function toJSON
         * @memberof CMsgGCMsgMasterSetWebAPIRouting
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCMsgMasterSetWebAPIRouting.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCMsgMasterSetWebAPIRouting
         * @function getTypeUrl
         * @memberof CMsgGCMsgMasterSetWebAPIRouting
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCMsgMasterSetWebAPIRouting.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCMsgMasterSetWebAPIRouting";
        };
    
        CMsgGCMsgMasterSetWebAPIRouting.Entry = (function() {
    
            /**
             * Properties of an Entry.
             * @memberof CMsgGCMsgMasterSetWebAPIRouting
             * @interface IEntry
             * @property {string|null} [interfaceName] Entry interfaceName
             * @property {string|null} [methodName] Entry methodName
             * @property {ICMsgGCRoutingInfo|null} [routing] Entry routing
             */
    
            /**
             * Constructs a new Entry.
             * @memberof CMsgGCMsgMasterSetWebAPIRouting
             * @classdesc Represents an Entry.
             * @implements IEntry
             * @constructor
             * @param {CMsgGCMsgMasterSetWebAPIRouting.IEntry=} [properties] Properties to set
             */
            function Entry(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Entry interfaceName.
             * @member {string} interfaceName
             * @memberof CMsgGCMsgMasterSetWebAPIRouting.Entry
             * @instance
             */
            Entry.prototype.interfaceName = "";
    
            /**
             * Entry methodName.
             * @member {string} methodName
             * @memberof CMsgGCMsgMasterSetWebAPIRouting.Entry
             * @instance
             */
            Entry.prototype.methodName = "";
    
            /**
             * Entry routing.
             * @member {ICMsgGCRoutingInfo|null|undefined} routing
             * @memberof CMsgGCMsgMasterSetWebAPIRouting.Entry
             * @instance
             */
            Entry.prototype.routing = null;
    
            /**
             * Creates a new Entry instance using the specified properties.
             * @function create
             * @memberof CMsgGCMsgMasterSetWebAPIRouting.Entry
             * @static
             * @param {CMsgGCMsgMasterSetWebAPIRouting.IEntry=} [properties] Properties to set
             * @returns {CMsgGCMsgMasterSetWebAPIRouting.Entry} Entry instance
             */
            Entry.create = function create(properties) {
                return new Entry(properties);
            };
    
            /**
             * Encodes the specified Entry message. Does not implicitly {@link CMsgGCMsgMasterSetWebAPIRouting.Entry.verify|verify} messages.
             * @function encode
             * @memberof CMsgGCMsgMasterSetWebAPIRouting.Entry
             * @static
             * @param {CMsgGCMsgMasterSetWebAPIRouting.IEntry} message Entry message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Entry.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.interfaceName != null && Object.hasOwnProperty.call(message, "interfaceName"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.interfaceName);
                if (message.methodName != null && Object.hasOwnProperty.call(message, "methodName"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.methodName);
                if (message.routing != null && Object.hasOwnProperty.call(message, "routing"))
                    $root.CMsgGCRoutingInfo.encode(message.routing, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                return writer;
            };
    
            /**
             * Encodes the specified Entry message, length delimited. Does not implicitly {@link CMsgGCMsgMasterSetWebAPIRouting.Entry.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgGCMsgMasterSetWebAPIRouting.Entry
             * @static
             * @param {CMsgGCMsgMasterSetWebAPIRouting.IEntry} message Entry message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Entry.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an Entry message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgGCMsgMasterSetWebAPIRouting.Entry
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgGCMsgMasterSetWebAPIRouting.Entry} Entry
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Entry.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCMsgMasterSetWebAPIRouting.Entry();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.interfaceName = reader.string();
                            break;
                        }
                    case 2: {
                            message.methodName = reader.string();
                            break;
                        }
                    case 3: {
                            message.routing = $root.CMsgGCRoutingInfo.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an Entry message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgGCMsgMasterSetWebAPIRouting.Entry
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgGCMsgMasterSetWebAPIRouting.Entry} Entry
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Entry.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an Entry message.
             * @function verify
             * @memberof CMsgGCMsgMasterSetWebAPIRouting.Entry
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Entry.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.interfaceName != null && message.hasOwnProperty("interfaceName"))
                    if (!$util.isString(message.interfaceName))
                        return "interfaceName: string expected";
                if (message.methodName != null && message.hasOwnProperty("methodName"))
                    if (!$util.isString(message.methodName))
                        return "methodName: string expected";
                if (message.routing != null && message.hasOwnProperty("routing")) {
                    var error = $root.CMsgGCRoutingInfo.verify(message.routing);
                    if (error)
                        return "routing." + error;
                }
                return null;
            };
    
            /**
             * Creates an Entry message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgGCMsgMasterSetWebAPIRouting.Entry
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgGCMsgMasterSetWebAPIRouting.Entry} Entry
             */
            Entry.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgGCMsgMasterSetWebAPIRouting.Entry)
                    return object;
                var message = new $root.CMsgGCMsgMasterSetWebAPIRouting.Entry();
                if (object.interfaceName != null)
                    message.interfaceName = String(object.interfaceName);
                if (object.methodName != null)
                    message.methodName = String(object.methodName);
                if (object.routing != null) {
                    if (typeof object.routing !== "object")
                        throw TypeError(".CMsgGCMsgMasterSetWebAPIRouting.Entry.routing: object expected");
                    message.routing = $root.CMsgGCRoutingInfo.fromObject(object.routing);
                }
                return message;
            };
    
            /**
             * Creates a plain object from an Entry message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgGCMsgMasterSetWebAPIRouting.Entry
             * @static
             * @param {CMsgGCMsgMasterSetWebAPIRouting.Entry} message Entry
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Entry.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.interfaceName = "";
                    object.methodName = "";
                    object.routing = null;
                }
                if (message.interfaceName != null && message.hasOwnProperty("interfaceName"))
                    object.interfaceName = message.interfaceName;
                if (message.methodName != null && message.hasOwnProperty("methodName"))
                    object.methodName = message.methodName;
                if (message.routing != null && message.hasOwnProperty("routing"))
                    object.routing = $root.CMsgGCRoutingInfo.toObject(message.routing, options);
                return object;
            };
    
            /**
             * Converts this Entry to JSON.
             * @function toJSON
             * @memberof CMsgGCMsgMasterSetWebAPIRouting.Entry
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Entry.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for Entry
             * @function getTypeUrl
             * @memberof CMsgGCMsgMasterSetWebAPIRouting.Entry
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Entry.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgGCMsgMasterSetWebAPIRouting.Entry";
            };
    
            return Entry;
        })();
    
        return CMsgGCMsgMasterSetWebAPIRouting;
    })();
    
    $root.CMsgGCMsgMasterSetClientMsgRouting = (function() {
    
        /**
         * Properties of a CMsgGCMsgMasterSetClientMsgRouting.
         * @exports ICMsgGCMsgMasterSetClientMsgRouting
         * @interface ICMsgGCMsgMasterSetClientMsgRouting
         * @property {Array.<CMsgGCMsgMasterSetClientMsgRouting.IEntry>|null} [entries] CMsgGCMsgMasterSetClientMsgRouting entries
         */
    
        /**
         * Constructs a new CMsgGCMsgMasterSetClientMsgRouting.
         * @exports CMsgGCMsgMasterSetClientMsgRouting
         * @classdesc Represents a CMsgGCMsgMasterSetClientMsgRouting.
         * @implements ICMsgGCMsgMasterSetClientMsgRouting
         * @constructor
         * @param {ICMsgGCMsgMasterSetClientMsgRouting=} [properties] Properties to set
         */
        function CMsgGCMsgMasterSetClientMsgRouting(properties) {
            this.entries = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCMsgMasterSetClientMsgRouting entries.
         * @member {Array.<CMsgGCMsgMasterSetClientMsgRouting.IEntry>} entries
         * @memberof CMsgGCMsgMasterSetClientMsgRouting
         * @instance
         */
        CMsgGCMsgMasterSetClientMsgRouting.prototype.entries = $util.emptyArray;
    
        /**
         * Creates a new CMsgGCMsgMasterSetClientMsgRouting instance using the specified properties.
         * @function create
         * @memberof CMsgGCMsgMasterSetClientMsgRouting
         * @static
         * @param {ICMsgGCMsgMasterSetClientMsgRouting=} [properties] Properties to set
         * @returns {CMsgGCMsgMasterSetClientMsgRouting} CMsgGCMsgMasterSetClientMsgRouting instance
         */
        CMsgGCMsgMasterSetClientMsgRouting.create = function create(properties) {
            return new CMsgGCMsgMasterSetClientMsgRouting(properties);
        };
    
        /**
         * Encodes the specified CMsgGCMsgMasterSetClientMsgRouting message. Does not implicitly {@link CMsgGCMsgMasterSetClientMsgRouting.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCMsgMasterSetClientMsgRouting
         * @static
         * @param {ICMsgGCMsgMasterSetClientMsgRouting} message CMsgGCMsgMasterSetClientMsgRouting message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgMasterSetClientMsgRouting.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.entries != null && message.entries.length)
                for (var i = 0; i < message.entries.length; ++i)
                    $root.CMsgGCMsgMasterSetClientMsgRouting.Entry.encode(message.entries[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCMsgMasterSetClientMsgRouting message, length delimited. Does not implicitly {@link CMsgGCMsgMasterSetClientMsgRouting.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCMsgMasterSetClientMsgRouting
         * @static
         * @param {ICMsgGCMsgMasterSetClientMsgRouting} message CMsgGCMsgMasterSetClientMsgRouting message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgMasterSetClientMsgRouting.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCMsgMasterSetClientMsgRouting message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCMsgMasterSetClientMsgRouting
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCMsgMasterSetClientMsgRouting} CMsgGCMsgMasterSetClientMsgRouting
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgMasterSetClientMsgRouting.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCMsgMasterSetClientMsgRouting();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.entries && message.entries.length))
                            message.entries = [];
                        message.entries.push($root.CMsgGCMsgMasterSetClientMsgRouting.Entry.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCMsgMasterSetClientMsgRouting message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCMsgMasterSetClientMsgRouting
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCMsgMasterSetClientMsgRouting} CMsgGCMsgMasterSetClientMsgRouting
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgMasterSetClientMsgRouting.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCMsgMasterSetClientMsgRouting message.
         * @function verify
         * @memberof CMsgGCMsgMasterSetClientMsgRouting
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCMsgMasterSetClientMsgRouting.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.entries != null && message.hasOwnProperty("entries")) {
                if (!Array.isArray(message.entries))
                    return "entries: array expected";
                for (var i = 0; i < message.entries.length; ++i) {
                    var error = $root.CMsgGCMsgMasterSetClientMsgRouting.Entry.verify(message.entries[i]);
                    if (error)
                        return "entries." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCMsgMasterSetClientMsgRouting message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCMsgMasterSetClientMsgRouting
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCMsgMasterSetClientMsgRouting} CMsgGCMsgMasterSetClientMsgRouting
         */
        CMsgGCMsgMasterSetClientMsgRouting.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCMsgMasterSetClientMsgRouting)
                return object;
            var message = new $root.CMsgGCMsgMasterSetClientMsgRouting();
            if (object.entries) {
                if (!Array.isArray(object.entries))
                    throw TypeError(".CMsgGCMsgMasterSetClientMsgRouting.entries: array expected");
                message.entries = [];
                for (var i = 0; i < object.entries.length; ++i) {
                    if (typeof object.entries[i] !== "object")
                        throw TypeError(".CMsgGCMsgMasterSetClientMsgRouting.entries: object expected");
                    message.entries[i] = $root.CMsgGCMsgMasterSetClientMsgRouting.Entry.fromObject(object.entries[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCMsgMasterSetClientMsgRouting message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCMsgMasterSetClientMsgRouting
         * @static
         * @param {CMsgGCMsgMasterSetClientMsgRouting} message CMsgGCMsgMasterSetClientMsgRouting
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCMsgMasterSetClientMsgRouting.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.entries = [];
            if (message.entries && message.entries.length) {
                object.entries = [];
                for (var j = 0; j < message.entries.length; ++j)
                    object.entries[j] = $root.CMsgGCMsgMasterSetClientMsgRouting.Entry.toObject(message.entries[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgGCMsgMasterSetClientMsgRouting to JSON.
         * @function toJSON
         * @memberof CMsgGCMsgMasterSetClientMsgRouting
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCMsgMasterSetClientMsgRouting.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCMsgMasterSetClientMsgRouting
         * @function getTypeUrl
         * @memberof CMsgGCMsgMasterSetClientMsgRouting
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCMsgMasterSetClientMsgRouting.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCMsgMasterSetClientMsgRouting";
        };
    
        CMsgGCMsgMasterSetClientMsgRouting.Entry = (function() {
    
            /**
             * Properties of an Entry.
             * @memberof CMsgGCMsgMasterSetClientMsgRouting
             * @interface IEntry
             * @property {number|null} [msgType] Entry msgType
             * @property {ICMsgGCRoutingInfo|null} [routing] Entry routing
             */
    
            /**
             * Constructs a new Entry.
             * @memberof CMsgGCMsgMasterSetClientMsgRouting
             * @classdesc Represents an Entry.
             * @implements IEntry
             * @constructor
             * @param {CMsgGCMsgMasterSetClientMsgRouting.IEntry=} [properties] Properties to set
             */
            function Entry(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Entry msgType.
             * @member {number} msgType
             * @memberof CMsgGCMsgMasterSetClientMsgRouting.Entry
             * @instance
             */
            Entry.prototype.msgType = 0;
    
            /**
             * Entry routing.
             * @member {ICMsgGCRoutingInfo|null|undefined} routing
             * @memberof CMsgGCMsgMasterSetClientMsgRouting.Entry
             * @instance
             */
            Entry.prototype.routing = null;
    
            /**
             * Creates a new Entry instance using the specified properties.
             * @function create
             * @memberof CMsgGCMsgMasterSetClientMsgRouting.Entry
             * @static
             * @param {CMsgGCMsgMasterSetClientMsgRouting.IEntry=} [properties] Properties to set
             * @returns {CMsgGCMsgMasterSetClientMsgRouting.Entry} Entry instance
             */
            Entry.create = function create(properties) {
                return new Entry(properties);
            };
    
            /**
             * Encodes the specified Entry message. Does not implicitly {@link CMsgGCMsgMasterSetClientMsgRouting.Entry.verify|verify} messages.
             * @function encode
             * @memberof CMsgGCMsgMasterSetClientMsgRouting.Entry
             * @static
             * @param {CMsgGCMsgMasterSetClientMsgRouting.IEntry} message Entry message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Entry.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.msgType != null && Object.hasOwnProperty.call(message, "msgType"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.msgType);
                if (message.routing != null && Object.hasOwnProperty.call(message, "routing"))
                    $root.CMsgGCRoutingInfo.encode(message.routing, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };
    
            /**
             * Encodes the specified Entry message, length delimited. Does not implicitly {@link CMsgGCMsgMasterSetClientMsgRouting.Entry.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgGCMsgMasterSetClientMsgRouting.Entry
             * @static
             * @param {CMsgGCMsgMasterSetClientMsgRouting.IEntry} message Entry message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Entry.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an Entry message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgGCMsgMasterSetClientMsgRouting.Entry
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgGCMsgMasterSetClientMsgRouting.Entry} Entry
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Entry.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCMsgMasterSetClientMsgRouting.Entry();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.msgType = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.routing = $root.CMsgGCRoutingInfo.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an Entry message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgGCMsgMasterSetClientMsgRouting.Entry
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgGCMsgMasterSetClientMsgRouting.Entry} Entry
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Entry.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an Entry message.
             * @function verify
             * @memberof CMsgGCMsgMasterSetClientMsgRouting.Entry
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Entry.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.msgType != null && message.hasOwnProperty("msgType"))
                    if (!$util.isInteger(message.msgType))
                        return "msgType: integer expected";
                if (message.routing != null && message.hasOwnProperty("routing")) {
                    var error = $root.CMsgGCRoutingInfo.verify(message.routing);
                    if (error)
                        return "routing." + error;
                }
                return null;
            };
    
            /**
             * Creates an Entry message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgGCMsgMasterSetClientMsgRouting.Entry
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgGCMsgMasterSetClientMsgRouting.Entry} Entry
             */
            Entry.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgGCMsgMasterSetClientMsgRouting.Entry)
                    return object;
                var message = new $root.CMsgGCMsgMasterSetClientMsgRouting.Entry();
                if (object.msgType != null)
                    message.msgType = object.msgType >>> 0;
                if (object.routing != null) {
                    if (typeof object.routing !== "object")
                        throw TypeError(".CMsgGCMsgMasterSetClientMsgRouting.Entry.routing: object expected");
                    message.routing = $root.CMsgGCRoutingInfo.fromObject(object.routing);
                }
                return message;
            };
    
            /**
             * Creates a plain object from an Entry message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgGCMsgMasterSetClientMsgRouting.Entry
             * @static
             * @param {CMsgGCMsgMasterSetClientMsgRouting.Entry} message Entry
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Entry.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.msgType = 0;
                    object.routing = null;
                }
                if (message.msgType != null && message.hasOwnProperty("msgType"))
                    object.msgType = message.msgType;
                if (message.routing != null && message.hasOwnProperty("routing"))
                    object.routing = $root.CMsgGCRoutingInfo.toObject(message.routing, options);
                return object;
            };
    
            /**
             * Converts this Entry to JSON.
             * @function toJSON
             * @memberof CMsgGCMsgMasterSetClientMsgRouting.Entry
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Entry.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for Entry
             * @function getTypeUrl
             * @memberof CMsgGCMsgMasterSetClientMsgRouting.Entry
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Entry.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgGCMsgMasterSetClientMsgRouting.Entry";
            };
    
            return Entry;
        })();
    
        return CMsgGCMsgMasterSetClientMsgRouting;
    })();
    
    $root.CMsgGCMsgMasterSetWebAPIRouting_Response = (function() {
    
        /**
         * Properties of a CMsgGCMsgMasterSetWebAPIRouting_Response.
         * @exports ICMsgGCMsgMasterSetWebAPIRouting_Response
         * @interface ICMsgGCMsgMasterSetWebAPIRouting_Response
         * @property {number|null} [eresult] CMsgGCMsgMasterSetWebAPIRouting_Response eresult
         */
    
        /**
         * Constructs a new CMsgGCMsgMasterSetWebAPIRouting_Response.
         * @exports CMsgGCMsgMasterSetWebAPIRouting_Response
         * @classdesc Represents a CMsgGCMsgMasterSetWebAPIRouting_Response.
         * @implements ICMsgGCMsgMasterSetWebAPIRouting_Response
         * @constructor
         * @param {ICMsgGCMsgMasterSetWebAPIRouting_Response=} [properties] Properties to set
         */
        function CMsgGCMsgMasterSetWebAPIRouting_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCMsgMasterSetWebAPIRouting_Response eresult.
         * @member {number} eresult
         * @memberof CMsgGCMsgMasterSetWebAPIRouting_Response
         * @instance
         */
        CMsgGCMsgMasterSetWebAPIRouting_Response.prototype.eresult = 2;
    
        /**
         * Creates a new CMsgGCMsgMasterSetWebAPIRouting_Response instance using the specified properties.
         * @function create
         * @memberof CMsgGCMsgMasterSetWebAPIRouting_Response
         * @static
         * @param {ICMsgGCMsgMasterSetWebAPIRouting_Response=} [properties] Properties to set
         * @returns {CMsgGCMsgMasterSetWebAPIRouting_Response} CMsgGCMsgMasterSetWebAPIRouting_Response instance
         */
        CMsgGCMsgMasterSetWebAPIRouting_Response.create = function create(properties) {
            return new CMsgGCMsgMasterSetWebAPIRouting_Response(properties);
        };
    
        /**
         * Encodes the specified CMsgGCMsgMasterSetWebAPIRouting_Response message. Does not implicitly {@link CMsgGCMsgMasterSetWebAPIRouting_Response.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCMsgMasterSetWebAPIRouting_Response
         * @static
         * @param {ICMsgGCMsgMasterSetWebAPIRouting_Response} message CMsgGCMsgMasterSetWebAPIRouting_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgMasterSetWebAPIRouting_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCMsgMasterSetWebAPIRouting_Response message, length delimited. Does not implicitly {@link CMsgGCMsgMasterSetWebAPIRouting_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCMsgMasterSetWebAPIRouting_Response
         * @static
         * @param {ICMsgGCMsgMasterSetWebAPIRouting_Response} message CMsgGCMsgMasterSetWebAPIRouting_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgMasterSetWebAPIRouting_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCMsgMasterSetWebAPIRouting_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCMsgMasterSetWebAPIRouting_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCMsgMasterSetWebAPIRouting_Response} CMsgGCMsgMasterSetWebAPIRouting_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgMasterSetWebAPIRouting_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCMsgMasterSetWebAPIRouting_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.eresult = reader.int32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCMsgMasterSetWebAPIRouting_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCMsgMasterSetWebAPIRouting_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCMsgMasterSetWebAPIRouting_Response} CMsgGCMsgMasterSetWebAPIRouting_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgMasterSetWebAPIRouting_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCMsgMasterSetWebAPIRouting_Response message.
         * @function verify
         * @memberof CMsgGCMsgMasterSetWebAPIRouting_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCMsgMasterSetWebAPIRouting_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCMsgMasterSetWebAPIRouting_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCMsgMasterSetWebAPIRouting_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCMsgMasterSetWebAPIRouting_Response} CMsgGCMsgMasterSetWebAPIRouting_Response
         */
        CMsgGCMsgMasterSetWebAPIRouting_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCMsgMasterSetWebAPIRouting_Response)
                return object;
            var message = new $root.CMsgGCMsgMasterSetWebAPIRouting_Response();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCMsgMasterSetWebAPIRouting_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCMsgMasterSetWebAPIRouting_Response
         * @static
         * @param {CMsgGCMsgMasterSetWebAPIRouting_Response} message CMsgGCMsgMasterSetWebAPIRouting_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCMsgMasterSetWebAPIRouting_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.eresult = 2;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            return object;
        };
    
        /**
         * Converts this CMsgGCMsgMasterSetWebAPIRouting_Response to JSON.
         * @function toJSON
         * @memberof CMsgGCMsgMasterSetWebAPIRouting_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCMsgMasterSetWebAPIRouting_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCMsgMasterSetWebAPIRouting_Response
         * @function getTypeUrl
         * @memberof CMsgGCMsgMasterSetWebAPIRouting_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCMsgMasterSetWebAPIRouting_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCMsgMasterSetWebAPIRouting_Response";
        };
    
        return CMsgGCMsgMasterSetWebAPIRouting_Response;
    })();
    
    $root.CMsgGCMsgMasterSetClientMsgRouting_Response = (function() {
    
        /**
         * Properties of a CMsgGCMsgMasterSetClientMsgRouting_Response.
         * @exports ICMsgGCMsgMasterSetClientMsgRouting_Response
         * @interface ICMsgGCMsgMasterSetClientMsgRouting_Response
         * @property {number|null} [eresult] CMsgGCMsgMasterSetClientMsgRouting_Response eresult
         */
    
        /**
         * Constructs a new CMsgGCMsgMasterSetClientMsgRouting_Response.
         * @exports CMsgGCMsgMasterSetClientMsgRouting_Response
         * @classdesc Represents a CMsgGCMsgMasterSetClientMsgRouting_Response.
         * @implements ICMsgGCMsgMasterSetClientMsgRouting_Response
         * @constructor
         * @param {ICMsgGCMsgMasterSetClientMsgRouting_Response=} [properties] Properties to set
         */
        function CMsgGCMsgMasterSetClientMsgRouting_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCMsgMasterSetClientMsgRouting_Response eresult.
         * @member {number} eresult
         * @memberof CMsgGCMsgMasterSetClientMsgRouting_Response
         * @instance
         */
        CMsgGCMsgMasterSetClientMsgRouting_Response.prototype.eresult = 2;
    
        /**
         * Creates a new CMsgGCMsgMasterSetClientMsgRouting_Response instance using the specified properties.
         * @function create
         * @memberof CMsgGCMsgMasterSetClientMsgRouting_Response
         * @static
         * @param {ICMsgGCMsgMasterSetClientMsgRouting_Response=} [properties] Properties to set
         * @returns {CMsgGCMsgMasterSetClientMsgRouting_Response} CMsgGCMsgMasterSetClientMsgRouting_Response instance
         */
        CMsgGCMsgMasterSetClientMsgRouting_Response.create = function create(properties) {
            return new CMsgGCMsgMasterSetClientMsgRouting_Response(properties);
        };
    
        /**
         * Encodes the specified CMsgGCMsgMasterSetClientMsgRouting_Response message. Does not implicitly {@link CMsgGCMsgMasterSetClientMsgRouting_Response.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCMsgMasterSetClientMsgRouting_Response
         * @static
         * @param {ICMsgGCMsgMasterSetClientMsgRouting_Response} message CMsgGCMsgMasterSetClientMsgRouting_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgMasterSetClientMsgRouting_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCMsgMasterSetClientMsgRouting_Response message, length delimited. Does not implicitly {@link CMsgGCMsgMasterSetClientMsgRouting_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCMsgMasterSetClientMsgRouting_Response
         * @static
         * @param {ICMsgGCMsgMasterSetClientMsgRouting_Response} message CMsgGCMsgMasterSetClientMsgRouting_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgMasterSetClientMsgRouting_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCMsgMasterSetClientMsgRouting_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCMsgMasterSetClientMsgRouting_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCMsgMasterSetClientMsgRouting_Response} CMsgGCMsgMasterSetClientMsgRouting_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgMasterSetClientMsgRouting_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCMsgMasterSetClientMsgRouting_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.eresult = reader.int32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCMsgMasterSetClientMsgRouting_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCMsgMasterSetClientMsgRouting_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCMsgMasterSetClientMsgRouting_Response} CMsgGCMsgMasterSetClientMsgRouting_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgMasterSetClientMsgRouting_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCMsgMasterSetClientMsgRouting_Response message.
         * @function verify
         * @memberof CMsgGCMsgMasterSetClientMsgRouting_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCMsgMasterSetClientMsgRouting_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCMsgMasterSetClientMsgRouting_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCMsgMasterSetClientMsgRouting_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCMsgMasterSetClientMsgRouting_Response} CMsgGCMsgMasterSetClientMsgRouting_Response
         */
        CMsgGCMsgMasterSetClientMsgRouting_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCMsgMasterSetClientMsgRouting_Response)
                return object;
            var message = new $root.CMsgGCMsgMasterSetClientMsgRouting_Response();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCMsgMasterSetClientMsgRouting_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCMsgMasterSetClientMsgRouting_Response
         * @static
         * @param {CMsgGCMsgMasterSetClientMsgRouting_Response} message CMsgGCMsgMasterSetClientMsgRouting_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCMsgMasterSetClientMsgRouting_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.eresult = 2;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            return object;
        };
    
        /**
         * Converts this CMsgGCMsgMasterSetClientMsgRouting_Response to JSON.
         * @function toJSON
         * @memberof CMsgGCMsgMasterSetClientMsgRouting_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCMsgMasterSetClientMsgRouting_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCMsgMasterSetClientMsgRouting_Response
         * @function getTypeUrl
         * @memberof CMsgGCMsgMasterSetClientMsgRouting_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCMsgMasterSetClientMsgRouting_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCMsgMasterSetClientMsgRouting_Response";
        };
    
        return CMsgGCMsgMasterSetClientMsgRouting_Response;
    })();
    
    $root.CMsgGCMsgSetOptions = (function() {
    
        /**
         * Properties of a CMsgGCMsgSetOptions.
         * @exports ICMsgGCMsgSetOptions
         * @interface ICMsgGCMsgSetOptions
         * @property {Array.<CMsgGCMsgSetOptions.Option>|null} [options] CMsgGCMsgSetOptions options
         * @property {Array.<CMsgGCMsgSetOptions.IMessageRange>|null} [clientMsgRanges] CMsgGCMsgSetOptions clientMsgRanges
         */
    
        /**
         * Constructs a new CMsgGCMsgSetOptions.
         * @exports CMsgGCMsgSetOptions
         * @classdesc Represents a CMsgGCMsgSetOptions.
         * @implements ICMsgGCMsgSetOptions
         * @constructor
         * @param {ICMsgGCMsgSetOptions=} [properties] Properties to set
         */
        function CMsgGCMsgSetOptions(properties) {
            this.options = [];
            this.clientMsgRanges = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCMsgSetOptions options.
         * @member {Array.<CMsgGCMsgSetOptions.Option>} options
         * @memberof CMsgGCMsgSetOptions
         * @instance
         */
        CMsgGCMsgSetOptions.prototype.options = $util.emptyArray;
    
        /**
         * CMsgGCMsgSetOptions clientMsgRanges.
         * @member {Array.<CMsgGCMsgSetOptions.IMessageRange>} clientMsgRanges
         * @memberof CMsgGCMsgSetOptions
         * @instance
         */
        CMsgGCMsgSetOptions.prototype.clientMsgRanges = $util.emptyArray;
    
        /**
         * Creates a new CMsgGCMsgSetOptions instance using the specified properties.
         * @function create
         * @memberof CMsgGCMsgSetOptions
         * @static
         * @param {ICMsgGCMsgSetOptions=} [properties] Properties to set
         * @returns {CMsgGCMsgSetOptions} CMsgGCMsgSetOptions instance
         */
        CMsgGCMsgSetOptions.create = function create(properties) {
            return new CMsgGCMsgSetOptions(properties);
        };
    
        /**
         * Encodes the specified CMsgGCMsgSetOptions message. Does not implicitly {@link CMsgGCMsgSetOptions.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCMsgSetOptions
         * @static
         * @param {ICMsgGCMsgSetOptions} message CMsgGCMsgSetOptions message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgSetOptions.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.options != null && message.options.length)
                for (var i = 0; i < message.options.length; ++i)
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.options[i]);
            if (message.clientMsgRanges != null && message.clientMsgRanges.length)
                for (var i = 0; i < message.clientMsgRanges.length; ++i)
                    $root.CMsgGCMsgSetOptions.MessageRange.encode(message.clientMsgRanges[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCMsgSetOptions message, length delimited. Does not implicitly {@link CMsgGCMsgSetOptions.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCMsgSetOptions
         * @static
         * @param {ICMsgGCMsgSetOptions} message CMsgGCMsgSetOptions message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgSetOptions.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCMsgSetOptions message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCMsgSetOptions
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCMsgSetOptions} CMsgGCMsgSetOptions
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgSetOptions.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCMsgSetOptions();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.options && message.options.length))
                            message.options = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.options.push(reader.int32());
                        } else
                            message.options.push(reader.int32());
                        break;
                    }
                case 2: {
                        if (!(message.clientMsgRanges && message.clientMsgRanges.length))
                            message.clientMsgRanges = [];
                        message.clientMsgRanges.push($root.CMsgGCMsgSetOptions.MessageRange.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCMsgSetOptions message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCMsgSetOptions
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCMsgSetOptions} CMsgGCMsgSetOptions
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgSetOptions.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCMsgSetOptions message.
         * @function verify
         * @memberof CMsgGCMsgSetOptions
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCMsgSetOptions.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.options != null && message.hasOwnProperty("options")) {
                if (!Array.isArray(message.options))
                    return "options: array expected";
                for (var i = 0; i < message.options.length; ++i)
                    switch (message.options[i]) {
                    default:
                        return "options: enum value[] expected";
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    }
            }
            if (message.clientMsgRanges != null && message.hasOwnProperty("clientMsgRanges")) {
                if (!Array.isArray(message.clientMsgRanges))
                    return "clientMsgRanges: array expected";
                for (var i = 0; i < message.clientMsgRanges.length; ++i) {
                    var error = $root.CMsgGCMsgSetOptions.MessageRange.verify(message.clientMsgRanges[i]);
                    if (error)
                        return "clientMsgRanges." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCMsgSetOptions message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCMsgSetOptions
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCMsgSetOptions} CMsgGCMsgSetOptions
         */
        CMsgGCMsgSetOptions.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCMsgSetOptions)
                return object;
            var message = new $root.CMsgGCMsgSetOptions();
            if (object.options) {
                if (!Array.isArray(object.options))
                    throw TypeError(".CMsgGCMsgSetOptions.options: array expected");
                message.options = [];
                for (var i = 0; i < object.options.length; ++i)
                    switch (object.options[i]) {
                    default:
                        if (typeof object.options[i] === "number") {
                            message.options[i] = object.options[i];
                            break;
                        }
                    case "NOTIFY_USER_SESSIONS":
                    case 0:
                        message.options[i] = 0;
                        break;
                    case "NOTIFY_SERVER_SESSIONS":
                    case 1:
                        message.options[i] = 1;
                        break;
                    case "NOTIFY_ACHIEVEMENTS":
                    case 2:
                        message.options[i] = 2;
                        break;
                    case "NOTIFY_VAC_ACTION":
                    case 3:
                        message.options[i] = 3;
                        break;
                    }
            }
            if (object.clientMsgRanges) {
                if (!Array.isArray(object.clientMsgRanges))
                    throw TypeError(".CMsgGCMsgSetOptions.clientMsgRanges: array expected");
                message.clientMsgRanges = [];
                for (var i = 0; i < object.clientMsgRanges.length; ++i) {
                    if (typeof object.clientMsgRanges[i] !== "object")
                        throw TypeError(".CMsgGCMsgSetOptions.clientMsgRanges: object expected");
                    message.clientMsgRanges[i] = $root.CMsgGCMsgSetOptions.MessageRange.fromObject(object.clientMsgRanges[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCMsgSetOptions message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCMsgSetOptions
         * @static
         * @param {CMsgGCMsgSetOptions} message CMsgGCMsgSetOptions
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCMsgSetOptions.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.options = [];
                object.clientMsgRanges = [];
            }
            if (message.options && message.options.length) {
                object.options = [];
                for (var j = 0; j < message.options.length; ++j)
                    object.options[j] = options.enums === String ? $root.CMsgGCMsgSetOptions.Option[message.options[j]] === undefined ? message.options[j] : $root.CMsgGCMsgSetOptions.Option[message.options[j]] : message.options[j];
            }
            if (message.clientMsgRanges && message.clientMsgRanges.length) {
                object.clientMsgRanges = [];
                for (var j = 0; j < message.clientMsgRanges.length; ++j)
                    object.clientMsgRanges[j] = $root.CMsgGCMsgSetOptions.MessageRange.toObject(message.clientMsgRanges[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgGCMsgSetOptions to JSON.
         * @function toJSON
         * @memberof CMsgGCMsgSetOptions
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCMsgSetOptions.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCMsgSetOptions
         * @function getTypeUrl
         * @memberof CMsgGCMsgSetOptions
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCMsgSetOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCMsgSetOptions";
        };
    
        CMsgGCMsgSetOptions.MessageRange = (function() {
    
            /**
             * Properties of a MessageRange.
             * @memberof CMsgGCMsgSetOptions
             * @interface IMessageRange
             * @property {number} low MessageRange low
             * @property {number} high MessageRange high
             */
    
            /**
             * Constructs a new MessageRange.
             * @memberof CMsgGCMsgSetOptions
             * @classdesc Represents a MessageRange.
             * @implements IMessageRange
             * @constructor
             * @param {CMsgGCMsgSetOptions.IMessageRange=} [properties] Properties to set
             */
            function MessageRange(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * MessageRange low.
             * @member {number} low
             * @memberof CMsgGCMsgSetOptions.MessageRange
             * @instance
             */
            MessageRange.prototype.low = 0;
    
            /**
             * MessageRange high.
             * @member {number} high
             * @memberof CMsgGCMsgSetOptions.MessageRange
             * @instance
             */
            MessageRange.prototype.high = 0;
    
            /**
             * Creates a new MessageRange instance using the specified properties.
             * @function create
             * @memberof CMsgGCMsgSetOptions.MessageRange
             * @static
             * @param {CMsgGCMsgSetOptions.IMessageRange=} [properties] Properties to set
             * @returns {CMsgGCMsgSetOptions.MessageRange} MessageRange instance
             */
            MessageRange.create = function create(properties) {
                return new MessageRange(properties);
            };
    
            /**
             * Encodes the specified MessageRange message. Does not implicitly {@link CMsgGCMsgSetOptions.MessageRange.verify|verify} messages.
             * @function encode
             * @memberof CMsgGCMsgSetOptions.MessageRange
             * @static
             * @param {CMsgGCMsgSetOptions.IMessageRange} message MessageRange message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MessageRange.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.low);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.high);
                return writer;
            };
    
            /**
             * Encodes the specified MessageRange message, length delimited. Does not implicitly {@link CMsgGCMsgSetOptions.MessageRange.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgGCMsgSetOptions.MessageRange
             * @static
             * @param {CMsgGCMsgSetOptions.IMessageRange} message MessageRange message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MessageRange.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a MessageRange message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgGCMsgSetOptions.MessageRange
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgGCMsgSetOptions.MessageRange} MessageRange
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MessageRange.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCMsgSetOptions.MessageRange();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.low = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.high = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("low"))
                    throw $util.ProtocolError("missing required 'low'", { instance: message });
                if (!message.hasOwnProperty("high"))
                    throw $util.ProtocolError("missing required 'high'", { instance: message });
                return message;
            };
    
            /**
             * Decodes a MessageRange message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgGCMsgSetOptions.MessageRange
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgGCMsgSetOptions.MessageRange} MessageRange
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MessageRange.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a MessageRange message.
             * @function verify
             * @memberof CMsgGCMsgSetOptions.MessageRange
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MessageRange.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.low))
                    return "low: integer expected";
                if (!$util.isInteger(message.high))
                    return "high: integer expected";
                return null;
            };
    
            /**
             * Creates a MessageRange message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgGCMsgSetOptions.MessageRange
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgGCMsgSetOptions.MessageRange} MessageRange
             */
            MessageRange.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgGCMsgSetOptions.MessageRange)
                    return object;
                var message = new $root.CMsgGCMsgSetOptions.MessageRange();
                if (object.low != null)
                    message.low = object.low >>> 0;
                if (object.high != null)
                    message.high = object.high >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a MessageRange message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgGCMsgSetOptions.MessageRange
             * @static
             * @param {CMsgGCMsgSetOptions.MessageRange} message MessageRange
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MessageRange.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.low = 0;
                    object.high = 0;
                }
                if (message.low != null && message.hasOwnProperty("low"))
                    object.low = message.low;
                if (message.high != null && message.hasOwnProperty("high"))
                    object.high = message.high;
                return object;
            };
    
            /**
             * Converts this MessageRange to JSON.
             * @function toJSON
             * @memberof CMsgGCMsgSetOptions.MessageRange
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MessageRange.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for MessageRange
             * @function getTypeUrl
             * @memberof CMsgGCMsgSetOptions.MessageRange
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            MessageRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgGCMsgSetOptions.MessageRange";
            };
    
            return MessageRange;
        })();
    
        /**
         * Option enum.
         * @name CMsgGCMsgSetOptions.Option
         * @enum {number}
         * @property {number} NOTIFY_USER_SESSIONS=0 NOTIFY_USER_SESSIONS value
         * @property {number} NOTIFY_SERVER_SESSIONS=1 NOTIFY_SERVER_SESSIONS value
         * @property {number} NOTIFY_ACHIEVEMENTS=2 NOTIFY_ACHIEVEMENTS value
         * @property {number} NOTIFY_VAC_ACTION=3 NOTIFY_VAC_ACTION value
         */
        CMsgGCMsgSetOptions.Option = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "NOTIFY_USER_SESSIONS"] = 0;
            values[valuesById[1] = "NOTIFY_SERVER_SESSIONS"] = 1;
            values[valuesById[2] = "NOTIFY_ACHIEVEMENTS"] = 2;
            values[valuesById[3] = "NOTIFY_VAC_ACTION"] = 3;
            return values;
        })();
    
        return CMsgGCMsgSetOptions;
    })();
    
    $root.CMsgGCHUpdateSession = (function() {
    
        /**
         * Properties of a CMsgGCHUpdateSession.
         * @exports ICMsgGCHUpdateSession
         * @interface ICMsgGCHUpdateSession
         * @property {number|Long|null} [steamId] CMsgGCHUpdateSession steamId
         * @property {number|null} [appId] CMsgGCHUpdateSession appId
         * @property {boolean|null} [online] CMsgGCHUpdateSession online
         * @property {number|Long|null} [serverSteamId] CMsgGCHUpdateSession serverSteamId
         * @property {number|null} [serverAddr] CMsgGCHUpdateSession serverAddr
         * @property {number|null} [serverPort] CMsgGCHUpdateSession serverPort
         * @property {number|null} [osType] CMsgGCHUpdateSession osType
         * @property {number|null} [clientAddr] CMsgGCHUpdateSession clientAddr
         * @property {Array.<CMsgGCHUpdateSession.IExtraField>|null} [extraFields] CMsgGCHUpdateSession extraFields
         * @property {number|Long|null} [ownerId] CMsgGCHUpdateSession ownerId
         * @property {number|null} [cmSessionSysid] CMsgGCHUpdateSession cmSessionSysid
         * @property {number|null} [cmSessionIdentifier] CMsgGCHUpdateSession cmSessionIdentifier
         * @property {Array.<number>|null} [depotIds] CMsgGCHUpdateSession depotIds
         */
    
        /**
         * Constructs a new CMsgGCHUpdateSession.
         * @exports CMsgGCHUpdateSession
         * @classdesc Represents a CMsgGCHUpdateSession.
         * @implements ICMsgGCHUpdateSession
         * @constructor
         * @param {ICMsgGCHUpdateSession=} [properties] Properties to set
         */
        function CMsgGCHUpdateSession(properties) {
            this.extraFields = [];
            this.depotIds = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCHUpdateSession steamId.
         * @member {number|Long} steamId
         * @memberof CMsgGCHUpdateSession
         * @instance
         */
        CMsgGCHUpdateSession.prototype.steamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGCHUpdateSession appId.
         * @member {number} appId
         * @memberof CMsgGCHUpdateSession
         * @instance
         */
        CMsgGCHUpdateSession.prototype.appId = 0;
    
        /**
         * CMsgGCHUpdateSession online.
         * @member {boolean} online
         * @memberof CMsgGCHUpdateSession
         * @instance
         */
        CMsgGCHUpdateSession.prototype.online = false;
    
        /**
         * CMsgGCHUpdateSession serverSteamId.
         * @member {number|Long} serverSteamId
         * @memberof CMsgGCHUpdateSession
         * @instance
         */
        CMsgGCHUpdateSession.prototype.serverSteamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGCHUpdateSession serverAddr.
         * @member {number} serverAddr
         * @memberof CMsgGCHUpdateSession
         * @instance
         */
        CMsgGCHUpdateSession.prototype.serverAddr = 0;
    
        /**
         * CMsgGCHUpdateSession serverPort.
         * @member {number} serverPort
         * @memberof CMsgGCHUpdateSession
         * @instance
         */
        CMsgGCHUpdateSession.prototype.serverPort = 0;
    
        /**
         * CMsgGCHUpdateSession osType.
         * @member {number} osType
         * @memberof CMsgGCHUpdateSession
         * @instance
         */
        CMsgGCHUpdateSession.prototype.osType = 0;
    
        /**
         * CMsgGCHUpdateSession clientAddr.
         * @member {number} clientAddr
         * @memberof CMsgGCHUpdateSession
         * @instance
         */
        CMsgGCHUpdateSession.prototype.clientAddr = 0;
    
        /**
         * CMsgGCHUpdateSession extraFields.
         * @member {Array.<CMsgGCHUpdateSession.IExtraField>} extraFields
         * @memberof CMsgGCHUpdateSession
         * @instance
         */
        CMsgGCHUpdateSession.prototype.extraFields = $util.emptyArray;
    
        /**
         * CMsgGCHUpdateSession ownerId.
         * @member {number|Long} ownerId
         * @memberof CMsgGCHUpdateSession
         * @instance
         */
        CMsgGCHUpdateSession.prototype.ownerId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGCHUpdateSession cmSessionSysid.
         * @member {number} cmSessionSysid
         * @memberof CMsgGCHUpdateSession
         * @instance
         */
        CMsgGCHUpdateSession.prototype.cmSessionSysid = 0;
    
        /**
         * CMsgGCHUpdateSession cmSessionIdentifier.
         * @member {number} cmSessionIdentifier
         * @memberof CMsgGCHUpdateSession
         * @instance
         */
        CMsgGCHUpdateSession.prototype.cmSessionIdentifier = 0;
    
        /**
         * CMsgGCHUpdateSession depotIds.
         * @member {Array.<number>} depotIds
         * @memberof CMsgGCHUpdateSession
         * @instance
         */
        CMsgGCHUpdateSession.prototype.depotIds = $util.emptyArray;
    
        /**
         * Creates a new CMsgGCHUpdateSession instance using the specified properties.
         * @function create
         * @memberof CMsgGCHUpdateSession
         * @static
         * @param {ICMsgGCHUpdateSession=} [properties] Properties to set
         * @returns {CMsgGCHUpdateSession} CMsgGCHUpdateSession instance
         */
        CMsgGCHUpdateSession.create = function create(properties) {
            return new CMsgGCHUpdateSession(properties);
        };
    
        /**
         * Encodes the specified CMsgGCHUpdateSession message. Does not implicitly {@link CMsgGCHUpdateSession.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCHUpdateSession
         * @static
         * @param {ICMsgGCHUpdateSession} message CMsgGCHUpdateSession message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCHUpdateSession.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamId != null && Object.hasOwnProperty.call(message, "steamId"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamId);
            if (message.appId != null && Object.hasOwnProperty.call(message, "appId"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.appId);
            if (message.online != null && Object.hasOwnProperty.call(message, "online"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.online);
            if (message.serverSteamId != null && Object.hasOwnProperty.call(message, "serverSteamId"))
                writer.uint32(/* id 4, wireType 1 =*/33).fixed64(message.serverSteamId);
            if (message.serverAddr != null && Object.hasOwnProperty.call(message, "serverAddr"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.serverAddr);
            if (message.serverPort != null && Object.hasOwnProperty.call(message, "serverPort"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.serverPort);
            if (message.osType != null && Object.hasOwnProperty.call(message, "osType"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.osType);
            if (message.clientAddr != null && Object.hasOwnProperty.call(message, "clientAddr"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.clientAddr);
            if (message.extraFields != null && message.extraFields.length)
                for (var i = 0; i < message.extraFields.length; ++i)
                    $root.CMsgGCHUpdateSession.ExtraField.encode(message.extraFields[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
            if (message.ownerId != null && Object.hasOwnProperty.call(message, "ownerId"))
                writer.uint32(/* id 10, wireType 1 =*/81).fixed64(message.ownerId);
            if (message.cmSessionSysid != null && Object.hasOwnProperty.call(message, "cmSessionSysid"))
                writer.uint32(/* id 11, wireType 0 =*/88).uint32(message.cmSessionSysid);
            if (message.cmSessionIdentifier != null && Object.hasOwnProperty.call(message, "cmSessionIdentifier"))
                writer.uint32(/* id 12, wireType 0 =*/96).uint32(message.cmSessionIdentifier);
            if (message.depotIds != null && message.depotIds.length)
                for (var i = 0; i < message.depotIds.length; ++i)
                    writer.uint32(/* id 13, wireType 0 =*/104).uint32(message.depotIds[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCHUpdateSession message, length delimited. Does not implicitly {@link CMsgGCHUpdateSession.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCHUpdateSession
         * @static
         * @param {ICMsgGCHUpdateSession} message CMsgGCHUpdateSession message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCHUpdateSession.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCHUpdateSession message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCHUpdateSession
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCHUpdateSession} CMsgGCHUpdateSession
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCHUpdateSession.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCHUpdateSession();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamId = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.appId = reader.uint32();
                        break;
                    }
                case 3: {
                        message.online = reader.bool();
                        break;
                    }
                case 4: {
                        message.serverSteamId = reader.fixed64();
                        break;
                    }
                case 5: {
                        message.serverAddr = reader.uint32();
                        break;
                    }
                case 6: {
                        message.serverPort = reader.uint32();
                        break;
                    }
                case 7: {
                        message.osType = reader.uint32();
                        break;
                    }
                case 8: {
                        message.clientAddr = reader.uint32();
                        break;
                    }
                case 9: {
                        if (!(message.extraFields && message.extraFields.length))
                            message.extraFields = [];
                        message.extraFields.push($root.CMsgGCHUpdateSession.ExtraField.decode(reader, reader.uint32()));
                        break;
                    }
                case 10: {
                        message.ownerId = reader.fixed64();
                        break;
                    }
                case 11: {
                        message.cmSessionSysid = reader.uint32();
                        break;
                    }
                case 12: {
                        message.cmSessionIdentifier = reader.uint32();
                        break;
                    }
                case 13: {
                        if (!(message.depotIds && message.depotIds.length))
                            message.depotIds = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.depotIds.push(reader.uint32());
                        } else
                            message.depotIds.push(reader.uint32());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCHUpdateSession message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCHUpdateSession
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCHUpdateSession} CMsgGCHUpdateSession
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCHUpdateSession.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCHUpdateSession message.
         * @function verify
         * @memberof CMsgGCHUpdateSession
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCHUpdateSession.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (!$util.isInteger(message.steamId) && !(message.steamId && $util.isInteger(message.steamId.low) && $util.isInteger(message.steamId.high)))
                    return "steamId: integer|Long expected";
            if (message.appId != null && message.hasOwnProperty("appId"))
                if (!$util.isInteger(message.appId))
                    return "appId: integer expected";
            if (message.online != null && message.hasOwnProperty("online"))
                if (typeof message.online !== "boolean")
                    return "online: boolean expected";
            if (message.serverSteamId != null && message.hasOwnProperty("serverSteamId"))
                if (!$util.isInteger(message.serverSteamId) && !(message.serverSteamId && $util.isInteger(message.serverSteamId.low) && $util.isInteger(message.serverSteamId.high)))
                    return "serverSteamId: integer|Long expected";
            if (message.serverAddr != null && message.hasOwnProperty("serverAddr"))
                if (!$util.isInteger(message.serverAddr))
                    return "serverAddr: integer expected";
            if (message.serverPort != null && message.hasOwnProperty("serverPort"))
                if (!$util.isInteger(message.serverPort))
                    return "serverPort: integer expected";
            if (message.osType != null && message.hasOwnProperty("osType"))
                if (!$util.isInteger(message.osType))
                    return "osType: integer expected";
            if (message.clientAddr != null && message.hasOwnProperty("clientAddr"))
                if (!$util.isInteger(message.clientAddr))
                    return "clientAddr: integer expected";
            if (message.extraFields != null && message.hasOwnProperty("extraFields")) {
                if (!Array.isArray(message.extraFields))
                    return "extraFields: array expected";
                for (var i = 0; i < message.extraFields.length; ++i) {
                    var error = $root.CMsgGCHUpdateSession.ExtraField.verify(message.extraFields[i]);
                    if (error)
                        return "extraFields." + error;
                }
            }
            if (message.ownerId != null && message.hasOwnProperty("ownerId"))
                if (!$util.isInteger(message.ownerId) && !(message.ownerId && $util.isInteger(message.ownerId.low) && $util.isInteger(message.ownerId.high)))
                    return "ownerId: integer|Long expected";
            if (message.cmSessionSysid != null && message.hasOwnProperty("cmSessionSysid"))
                if (!$util.isInteger(message.cmSessionSysid))
                    return "cmSessionSysid: integer expected";
            if (message.cmSessionIdentifier != null && message.hasOwnProperty("cmSessionIdentifier"))
                if (!$util.isInteger(message.cmSessionIdentifier))
                    return "cmSessionIdentifier: integer expected";
            if (message.depotIds != null && message.hasOwnProperty("depotIds")) {
                if (!Array.isArray(message.depotIds))
                    return "depotIds: array expected";
                for (var i = 0; i < message.depotIds.length; ++i)
                    if (!$util.isInteger(message.depotIds[i]))
                        return "depotIds: integer[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCHUpdateSession message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCHUpdateSession
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCHUpdateSession} CMsgGCHUpdateSession
         */
        CMsgGCHUpdateSession.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCHUpdateSession)
                return object;
            var message = new $root.CMsgGCHUpdateSession();
            if (object.steamId != null)
                if ($util.Long)
                    (message.steamId = $util.Long.fromValue(object.steamId)).unsigned = false;
                else if (typeof object.steamId === "string")
                    message.steamId = parseInt(object.steamId, 10);
                else if (typeof object.steamId === "number")
                    message.steamId = object.steamId;
                else if (typeof object.steamId === "object")
                    message.steamId = new $util.LongBits(object.steamId.low >>> 0, object.steamId.high >>> 0).toNumber();
            if (object.appId != null)
                message.appId = object.appId >>> 0;
            if (object.online != null)
                message.online = Boolean(object.online);
            if (object.serverSteamId != null)
                if ($util.Long)
                    (message.serverSteamId = $util.Long.fromValue(object.serverSteamId)).unsigned = false;
                else if (typeof object.serverSteamId === "string")
                    message.serverSteamId = parseInt(object.serverSteamId, 10);
                else if (typeof object.serverSteamId === "number")
                    message.serverSteamId = object.serverSteamId;
                else if (typeof object.serverSteamId === "object")
                    message.serverSteamId = new $util.LongBits(object.serverSteamId.low >>> 0, object.serverSteamId.high >>> 0).toNumber();
            if (object.serverAddr != null)
                message.serverAddr = object.serverAddr >>> 0;
            if (object.serverPort != null)
                message.serverPort = object.serverPort >>> 0;
            if (object.osType != null)
                message.osType = object.osType >>> 0;
            if (object.clientAddr != null)
                message.clientAddr = object.clientAddr >>> 0;
            if (object.extraFields) {
                if (!Array.isArray(object.extraFields))
                    throw TypeError(".CMsgGCHUpdateSession.extraFields: array expected");
                message.extraFields = [];
                for (var i = 0; i < object.extraFields.length; ++i) {
                    if (typeof object.extraFields[i] !== "object")
                        throw TypeError(".CMsgGCHUpdateSession.extraFields: object expected");
                    message.extraFields[i] = $root.CMsgGCHUpdateSession.ExtraField.fromObject(object.extraFields[i]);
                }
            }
            if (object.ownerId != null)
                if ($util.Long)
                    (message.ownerId = $util.Long.fromValue(object.ownerId)).unsigned = false;
                else if (typeof object.ownerId === "string")
                    message.ownerId = parseInt(object.ownerId, 10);
                else if (typeof object.ownerId === "number")
                    message.ownerId = object.ownerId;
                else if (typeof object.ownerId === "object")
                    message.ownerId = new $util.LongBits(object.ownerId.low >>> 0, object.ownerId.high >>> 0).toNumber();
            if (object.cmSessionSysid != null)
                message.cmSessionSysid = object.cmSessionSysid >>> 0;
            if (object.cmSessionIdentifier != null)
                message.cmSessionIdentifier = object.cmSessionIdentifier >>> 0;
            if (object.depotIds) {
                if (!Array.isArray(object.depotIds))
                    throw TypeError(".CMsgGCHUpdateSession.depotIds: array expected");
                message.depotIds = [];
                for (var i = 0; i < object.depotIds.length; ++i)
                    message.depotIds[i] = object.depotIds[i] >>> 0;
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCHUpdateSession message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCHUpdateSession
         * @static
         * @param {CMsgGCHUpdateSession} message CMsgGCHUpdateSession
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCHUpdateSession.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.extraFields = [];
                object.depotIds = [];
            }
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamId = options.longs === String ? "0" : 0;
                object.appId = 0;
                object.online = false;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.serverSteamId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.serverSteamId = options.longs === String ? "0" : 0;
                object.serverAddr = 0;
                object.serverPort = 0;
                object.osType = 0;
                object.clientAddr = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.ownerId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.ownerId = options.longs === String ? "0" : 0;
                object.cmSessionSysid = 0;
                object.cmSessionIdentifier = 0;
            }
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (typeof message.steamId === "number")
                    object.steamId = options.longs === String ? String(message.steamId) : message.steamId;
                else
                    object.steamId = options.longs === String ? $util.Long.prototype.toString.call(message.steamId) : options.longs === Number ? new $util.LongBits(message.steamId.low >>> 0, message.steamId.high >>> 0).toNumber() : message.steamId;
            if (message.appId != null && message.hasOwnProperty("appId"))
                object.appId = message.appId;
            if (message.online != null && message.hasOwnProperty("online"))
                object.online = message.online;
            if (message.serverSteamId != null && message.hasOwnProperty("serverSteamId"))
                if (typeof message.serverSteamId === "number")
                    object.serverSteamId = options.longs === String ? String(message.serverSteamId) : message.serverSteamId;
                else
                    object.serverSteamId = options.longs === String ? $util.Long.prototype.toString.call(message.serverSteamId) : options.longs === Number ? new $util.LongBits(message.serverSteamId.low >>> 0, message.serverSteamId.high >>> 0).toNumber() : message.serverSteamId;
            if (message.serverAddr != null && message.hasOwnProperty("serverAddr"))
                object.serverAddr = message.serverAddr;
            if (message.serverPort != null && message.hasOwnProperty("serverPort"))
                object.serverPort = message.serverPort;
            if (message.osType != null && message.hasOwnProperty("osType"))
                object.osType = message.osType;
            if (message.clientAddr != null && message.hasOwnProperty("clientAddr"))
                object.clientAddr = message.clientAddr;
            if (message.extraFields && message.extraFields.length) {
                object.extraFields = [];
                for (var j = 0; j < message.extraFields.length; ++j)
                    object.extraFields[j] = $root.CMsgGCHUpdateSession.ExtraField.toObject(message.extraFields[j], options);
            }
            if (message.ownerId != null && message.hasOwnProperty("ownerId"))
                if (typeof message.ownerId === "number")
                    object.ownerId = options.longs === String ? String(message.ownerId) : message.ownerId;
                else
                    object.ownerId = options.longs === String ? $util.Long.prototype.toString.call(message.ownerId) : options.longs === Number ? new $util.LongBits(message.ownerId.low >>> 0, message.ownerId.high >>> 0).toNumber() : message.ownerId;
            if (message.cmSessionSysid != null && message.hasOwnProperty("cmSessionSysid"))
                object.cmSessionSysid = message.cmSessionSysid;
            if (message.cmSessionIdentifier != null && message.hasOwnProperty("cmSessionIdentifier"))
                object.cmSessionIdentifier = message.cmSessionIdentifier;
            if (message.depotIds && message.depotIds.length) {
                object.depotIds = [];
                for (var j = 0; j < message.depotIds.length; ++j)
                    object.depotIds[j] = message.depotIds[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgGCHUpdateSession to JSON.
         * @function toJSON
         * @memberof CMsgGCHUpdateSession
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCHUpdateSession.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCHUpdateSession
         * @function getTypeUrl
         * @memberof CMsgGCHUpdateSession
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCHUpdateSession.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCHUpdateSession";
        };
    
        CMsgGCHUpdateSession.ExtraField = (function() {
    
            /**
             * Properties of an ExtraField.
             * @memberof CMsgGCHUpdateSession
             * @interface IExtraField
             * @property {string|null} [name] ExtraField name
             * @property {string|null} [value] ExtraField value
             */
    
            /**
             * Constructs a new ExtraField.
             * @memberof CMsgGCHUpdateSession
             * @classdesc Represents an ExtraField.
             * @implements IExtraField
             * @constructor
             * @param {CMsgGCHUpdateSession.IExtraField=} [properties] Properties to set
             */
            function ExtraField(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * ExtraField name.
             * @member {string} name
             * @memberof CMsgGCHUpdateSession.ExtraField
             * @instance
             */
            ExtraField.prototype.name = "";
    
            /**
             * ExtraField value.
             * @member {string} value
             * @memberof CMsgGCHUpdateSession.ExtraField
             * @instance
             */
            ExtraField.prototype.value = "";
    
            /**
             * Creates a new ExtraField instance using the specified properties.
             * @function create
             * @memberof CMsgGCHUpdateSession.ExtraField
             * @static
             * @param {CMsgGCHUpdateSession.IExtraField=} [properties] Properties to set
             * @returns {CMsgGCHUpdateSession.ExtraField} ExtraField instance
             */
            ExtraField.create = function create(properties) {
                return new ExtraField(properties);
            };
    
            /**
             * Encodes the specified ExtraField message. Does not implicitly {@link CMsgGCHUpdateSession.ExtraField.verify|verify} messages.
             * @function encode
             * @memberof CMsgGCHUpdateSession.ExtraField
             * @static
             * @param {CMsgGCHUpdateSession.IExtraField} message ExtraField message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ExtraField.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
                return writer;
            };
    
            /**
             * Encodes the specified ExtraField message, length delimited. Does not implicitly {@link CMsgGCHUpdateSession.ExtraField.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgGCHUpdateSession.ExtraField
             * @static
             * @param {CMsgGCHUpdateSession.IExtraField} message ExtraField message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ExtraField.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an ExtraField message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgGCHUpdateSession.ExtraField
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgGCHUpdateSession.ExtraField} ExtraField
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ExtraField.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCHUpdateSession.ExtraField();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.name = reader.string();
                            break;
                        }
                    case 2: {
                            message.value = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an ExtraField message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgGCHUpdateSession.ExtraField
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgGCHUpdateSession.ExtraField} ExtraField
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ExtraField.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an ExtraField message.
             * @function verify
             * @memberof CMsgGCHUpdateSession.ExtraField
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ExtraField.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.name != null && message.hasOwnProperty("name"))
                    if (!$util.isString(message.name))
                        return "name: string expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (!$util.isString(message.value))
                        return "value: string expected";
                return null;
            };
    
            /**
             * Creates an ExtraField message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgGCHUpdateSession.ExtraField
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgGCHUpdateSession.ExtraField} ExtraField
             */
            ExtraField.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgGCHUpdateSession.ExtraField)
                    return object;
                var message = new $root.CMsgGCHUpdateSession.ExtraField();
                if (object.name != null)
                    message.name = String(object.name);
                if (object.value != null)
                    message.value = String(object.value);
                return message;
            };
    
            /**
             * Creates a plain object from an ExtraField message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgGCHUpdateSession.ExtraField
             * @static
             * @param {CMsgGCHUpdateSession.ExtraField} message ExtraField
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ExtraField.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.name = "";
                    object.value = "";
                }
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = message.value;
                return object;
            };
    
            /**
             * Converts this ExtraField to JSON.
             * @function toJSON
             * @memberof CMsgGCHUpdateSession.ExtraField
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ExtraField.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for ExtraField
             * @function getTypeUrl
             * @memberof CMsgGCHUpdateSession.ExtraField
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ExtraField.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgGCHUpdateSession.ExtraField";
            };
    
            return ExtraField;
        })();
    
        return CMsgGCHUpdateSession;
    })();
    
    $root.CMsgNotificationOfSuspiciousActivity = (function() {
    
        /**
         * Properties of a CMsgNotificationOfSuspiciousActivity.
         * @exports ICMsgNotificationOfSuspiciousActivity
         * @interface ICMsgNotificationOfSuspiciousActivity
         * @property {number|Long|null} [steamid] CMsgNotificationOfSuspiciousActivity steamid
         * @property {number|null} [appid] CMsgNotificationOfSuspiciousActivity appid
         * @property {CMsgNotificationOfSuspiciousActivity.IMultipleGameInstances|null} [multipleInstances] CMsgNotificationOfSuspiciousActivity multipleInstances
         */
    
        /**
         * Constructs a new CMsgNotificationOfSuspiciousActivity.
         * @exports CMsgNotificationOfSuspiciousActivity
         * @classdesc Represents a CMsgNotificationOfSuspiciousActivity.
         * @implements ICMsgNotificationOfSuspiciousActivity
         * @constructor
         * @param {ICMsgNotificationOfSuspiciousActivity=} [properties] Properties to set
         */
        function CMsgNotificationOfSuspiciousActivity(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgNotificationOfSuspiciousActivity steamid.
         * @member {number|Long} steamid
         * @memberof CMsgNotificationOfSuspiciousActivity
         * @instance
         */
        CMsgNotificationOfSuspiciousActivity.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgNotificationOfSuspiciousActivity appid.
         * @member {number} appid
         * @memberof CMsgNotificationOfSuspiciousActivity
         * @instance
         */
        CMsgNotificationOfSuspiciousActivity.prototype.appid = 0;
    
        /**
         * CMsgNotificationOfSuspiciousActivity multipleInstances.
         * @member {CMsgNotificationOfSuspiciousActivity.IMultipleGameInstances|null|undefined} multipleInstances
         * @memberof CMsgNotificationOfSuspiciousActivity
         * @instance
         */
        CMsgNotificationOfSuspiciousActivity.prototype.multipleInstances = null;
    
        /**
         * Creates a new CMsgNotificationOfSuspiciousActivity instance using the specified properties.
         * @function create
         * @memberof CMsgNotificationOfSuspiciousActivity
         * @static
         * @param {ICMsgNotificationOfSuspiciousActivity=} [properties] Properties to set
         * @returns {CMsgNotificationOfSuspiciousActivity} CMsgNotificationOfSuspiciousActivity instance
         */
        CMsgNotificationOfSuspiciousActivity.create = function create(properties) {
            return new CMsgNotificationOfSuspiciousActivity(properties);
        };
    
        /**
         * Encodes the specified CMsgNotificationOfSuspiciousActivity message. Does not implicitly {@link CMsgNotificationOfSuspiciousActivity.verify|verify} messages.
         * @function encode
         * @memberof CMsgNotificationOfSuspiciousActivity
         * @static
         * @param {ICMsgNotificationOfSuspiciousActivity} message CMsgNotificationOfSuspiciousActivity message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgNotificationOfSuspiciousActivity.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.appid);
            if (message.multipleInstances != null && Object.hasOwnProperty.call(message, "multipleInstances"))
                $root.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.encode(message.multipleInstances, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgNotificationOfSuspiciousActivity message, length delimited. Does not implicitly {@link CMsgNotificationOfSuspiciousActivity.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgNotificationOfSuspiciousActivity
         * @static
         * @param {ICMsgNotificationOfSuspiciousActivity} message CMsgNotificationOfSuspiciousActivity message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgNotificationOfSuspiciousActivity.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgNotificationOfSuspiciousActivity message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgNotificationOfSuspiciousActivity
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgNotificationOfSuspiciousActivity} CMsgNotificationOfSuspiciousActivity
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgNotificationOfSuspiciousActivity.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgNotificationOfSuspiciousActivity();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamid = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.appid = reader.uint32();
                        break;
                    }
                case 3: {
                        message.multipleInstances = $root.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.decode(reader, reader.uint32());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgNotificationOfSuspiciousActivity message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgNotificationOfSuspiciousActivity
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgNotificationOfSuspiciousActivity} CMsgNotificationOfSuspiciousActivity
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgNotificationOfSuspiciousActivity.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgNotificationOfSuspiciousActivity message.
         * @function verify
         * @memberof CMsgNotificationOfSuspiciousActivity
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgNotificationOfSuspiciousActivity.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.multipleInstances != null && message.hasOwnProperty("multipleInstances")) {
                var error = $root.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.verify(message.multipleInstances);
                if (error)
                    return "multipleInstances." + error;
            }
            return null;
        };
    
        /**
         * Creates a CMsgNotificationOfSuspiciousActivity message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgNotificationOfSuspiciousActivity
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgNotificationOfSuspiciousActivity} CMsgNotificationOfSuspiciousActivity
         */
        CMsgNotificationOfSuspiciousActivity.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgNotificationOfSuspiciousActivity)
                return object;
            var message = new $root.CMsgNotificationOfSuspiciousActivity();
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.multipleInstances != null) {
                if (typeof object.multipleInstances !== "object")
                    throw TypeError(".CMsgNotificationOfSuspiciousActivity.multipleInstances: object expected");
                message.multipleInstances = $root.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.fromObject(object.multipleInstances);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgNotificationOfSuspiciousActivity message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgNotificationOfSuspiciousActivity
         * @static
         * @param {CMsgNotificationOfSuspiciousActivity} message CMsgNotificationOfSuspiciousActivity
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgNotificationOfSuspiciousActivity.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
                object.appid = 0;
                object.multipleInstances = null;
            }
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.multipleInstances != null && message.hasOwnProperty("multipleInstances"))
                object.multipleInstances = $root.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.toObject(message.multipleInstances, options);
            return object;
        };
    
        /**
         * Converts this CMsgNotificationOfSuspiciousActivity to JSON.
         * @function toJSON
         * @memberof CMsgNotificationOfSuspiciousActivity
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgNotificationOfSuspiciousActivity.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgNotificationOfSuspiciousActivity
         * @function getTypeUrl
         * @memberof CMsgNotificationOfSuspiciousActivity
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgNotificationOfSuspiciousActivity.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgNotificationOfSuspiciousActivity";
        };
    
        CMsgNotificationOfSuspiciousActivity.MultipleGameInstances = (function() {
    
            /**
             * Properties of a MultipleGameInstances.
             * @memberof CMsgNotificationOfSuspiciousActivity
             * @interface IMultipleGameInstances
             * @property {number|null} [appInstanceCount] MultipleGameInstances appInstanceCount
             * @property {Array.<number|Long>|null} [otherSteamids] MultipleGameInstances otherSteamids
             */
    
            /**
             * Constructs a new MultipleGameInstances.
             * @memberof CMsgNotificationOfSuspiciousActivity
             * @classdesc Represents a MultipleGameInstances.
             * @implements IMultipleGameInstances
             * @constructor
             * @param {CMsgNotificationOfSuspiciousActivity.IMultipleGameInstances=} [properties] Properties to set
             */
            function MultipleGameInstances(properties) {
                this.otherSteamids = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * MultipleGameInstances appInstanceCount.
             * @member {number} appInstanceCount
             * @memberof CMsgNotificationOfSuspiciousActivity.MultipleGameInstances
             * @instance
             */
            MultipleGameInstances.prototype.appInstanceCount = 0;
    
            /**
             * MultipleGameInstances otherSteamids.
             * @member {Array.<number|Long>} otherSteamids
             * @memberof CMsgNotificationOfSuspiciousActivity.MultipleGameInstances
             * @instance
             */
            MultipleGameInstances.prototype.otherSteamids = $util.emptyArray;
    
            /**
             * Creates a new MultipleGameInstances instance using the specified properties.
             * @function create
             * @memberof CMsgNotificationOfSuspiciousActivity.MultipleGameInstances
             * @static
             * @param {CMsgNotificationOfSuspiciousActivity.IMultipleGameInstances=} [properties] Properties to set
             * @returns {CMsgNotificationOfSuspiciousActivity.MultipleGameInstances} MultipleGameInstances instance
             */
            MultipleGameInstances.create = function create(properties) {
                return new MultipleGameInstances(properties);
            };
    
            /**
             * Encodes the specified MultipleGameInstances message. Does not implicitly {@link CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.verify|verify} messages.
             * @function encode
             * @memberof CMsgNotificationOfSuspiciousActivity.MultipleGameInstances
             * @static
             * @param {CMsgNotificationOfSuspiciousActivity.IMultipleGameInstances} message MultipleGameInstances message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MultipleGameInstances.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.appInstanceCount != null && Object.hasOwnProperty.call(message, "appInstanceCount"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appInstanceCount);
                if (message.otherSteamids != null && message.otherSteamids.length)
                    for (var i = 0; i < message.otherSteamids.length; ++i)
                        writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.otherSteamids[i]);
                return writer;
            };
    
            /**
             * Encodes the specified MultipleGameInstances message, length delimited. Does not implicitly {@link CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgNotificationOfSuspiciousActivity.MultipleGameInstances
             * @static
             * @param {CMsgNotificationOfSuspiciousActivity.IMultipleGameInstances} message MultipleGameInstances message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MultipleGameInstances.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a MultipleGameInstances message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgNotificationOfSuspiciousActivity.MultipleGameInstances
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgNotificationOfSuspiciousActivity.MultipleGameInstances} MultipleGameInstances
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MultipleGameInstances.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.appInstanceCount = reader.uint32();
                            break;
                        }
                    case 2: {
                            if (!(message.otherSteamids && message.otherSteamids.length))
                                message.otherSteamids = [];
                            if ((tag & 7) === 2) {
                                var end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.otherSteamids.push(reader.fixed64());
                            } else
                                message.otherSteamids.push(reader.fixed64());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a MultipleGameInstances message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgNotificationOfSuspiciousActivity.MultipleGameInstances
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgNotificationOfSuspiciousActivity.MultipleGameInstances} MultipleGameInstances
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MultipleGameInstances.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a MultipleGameInstances message.
             * @function verify
             * @memberof CMsgNotificationOfSuspiciousActivity.MultipleGameInstances
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MultipleGameInstances.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.appInstanceCount != null && message.hasOwnProperty("appInstanceCount"))
                    if (!$util.isInteger(message.appInstanceCount))
                        return "appInstanceCount: integer expected";
                if (message.otherSteamids != null && message.hasOwnProperty("otherSteamids")) {
                    if (!Array.isArray(message.otherSteamids))
                        return "otherSteamids: array expected";
                    for (var i = 0; i < message.otherSteamids.length; ++i)
                        if (!$util.isInteger(message.otherSteamids[i]) && !(message.otherSteamids[i] && $util.isInteger(message.otherSteamids[i].low) && $util.isInteger(message.otherSteamids[i].high)))
                            return "otherSteamids: integer|Long[] expected";
                }
                return null;
            };
    
            /**
             * Creates a MultipleGameInstances message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgNotificationOfSuspiciousActivity.MultipleGameInstances
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgNotificationOfSuspiciousActivity.MultipleGameInstances} MultipleGameInstances
             */
            MultipleGameInstances.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
                    return object;
                var message = new $root.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances();
                if (object.appInstanceCount != null)
                    message.appInstanceCount = object.appInstanceCount >>> 0;
                if (object.otherSteamids) {
                    if (!Array.isArray(object.otherSteamids))
                        throw TypeError(".CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.otherSteamids: array expected");
                    message.otherSteamids = [];
                    for (var i = 0; i < object.otherSteamids.length; ++i)
                        if ($util.Long)
                            (message.otherSteamids[i] = $util.Long.fromValue(object.otherSteamids[i])).unsigned = false;
                        else if (typeof object.otherSteamids[i] === "string")
                            message.otherSteamids[i] = parseInt(object.otherSteamids[i], 10);
                        else if (typeof object.otherSteamids[i] === "number")
                            message.otherSteamids[i] = object.otherSteamids[i];
                        else if (typeof object.otherSteamids[i] === "object")
                            message.otherSteamids[i] = new $util.LongBits(object.otherSteamids[i].low >>> 0, object.otherSteamids[i].high >>> 0).toNumber();
                }
                return message;
            };
    
            /**
             * Creates a plain object from a MultipleGameInstances message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgNotificationOfSuspiciousActivity.MultipleGameInstances
             * @static
             * @param {CMsgNotificationOfSuspiciousActivity.MultipleGameInstances} message MultipleGameInstances
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MultipleGameInstances.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.otherSteamids = [];
                if (options.defaults)
                    object.appInstanceCount = 0;
                if (message.appInstanceCount != null && message.hasOwnProperty("appInstanceCount"))
                    object.appInstanceCount = message.appInstanceCount;
                if (message.otherSteamids && message.otherSteamids.length) {
                    object.otherSteamids = [];
                    for (var j = 0; j < message.otherSteamids.length; ++j)
                        if (typeof message.otherSteamids[j] === "number")
                            object.otherSteamids[j] = options.longs === String ? String(message.otherSteamids[j]) : message.otherSteamids[j];
                        else
                            object.otherSteamids[j] = options.longs === String ? $util.Long.prototype.toString.call(message.otherSteamids[j]) : options.longs === Number ? new $util.LongBits(message.otherSteamids[j].low >>> 0, message.otherSteamids[j].high >>> 0).toNumber() : message.otherSteamids[j];
                }
                return object;
            };
    
            /**
             * Converts this MultipleGameInstances to JSON.
             * @function toJSON
             * @memberof CMsgNotificationOfSuspiciousActivity.MultipleGameInstances
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MultipleGameInstances.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for MultipleGameInstances
             * @function getTypeUrl
             * @memberof CMsgNotificationOfSuspiciousActivity.MultipleGameInstances
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            MultipleGameInstances.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgNotificationOfSuspiciousActivity.MultipleGameInstances";
            };
    
            return MultipleGameInstances;
        })();
    
        return CMsgNotificationOfSuspiciousActivity;
    })();
    
    $root.CMsgDPPartnerMicroTxns = (function() {
    
        /**
         * Properties of a CMsgDPPartnerMicroTxns.
         * @exports ICMsgDPPartnerMicroTxns
         * @interface ICMsgDPPartnerMicroTxns
         * @property {number|null} [appid] CMsgDPPartnerMicroTxns appid
         * @property {string|null} [gcName] CMsgDPPartnerMicroTxns gcName
         * @property {CMsgDPPartnerMicroTxns.IPartnerInfo|null} [partner] CMsgDPPartnerMicroTxns partner
         * @property {Array.<CMsgDPPartnerMicroTxns.IPartnerMicroTxn>|null} [transactions] CMsgDPPartnerMicroTxns transactions
         */
    
        /**
         * Constructs a new CMsgDPPartnerMicroTxns.
         * @exports CMsgDPPartnerMicroTxns
         * @classdesc Represents a CMsgDPPartnerMicroTxns.
         * @implements ICMsgDPPartnerMicroTxns
         * @constructor
         * @param {ICMsgDPPartnerMicroTxns=} [properties] Properties to set
         */
        function CMsgDPPartnerMicroTxns(properties) {
            this.transactions = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgDPPartnerMicroTxns appid.
         * @member {number} appid
         * @memberof CMsgDPPartnerMicroTxns
         * @instance
         */
        CMsgDPPartnerMicroTxns.prototype.appid = 0;
    
        /**
         * CMsgDPPartnerMicroTxns gcName.
         * @member {string} gcName
         * @memberof CMsgDPPartnerMicroTxns
         * @instance
         */
        CMsgDPPartnerMicroTxns.prototype.gcName = "";
    
        /**
         * CMsgDPPartnerMicroTxns partner.
         * @member {CMsgDPPartnerMicroTxns.IPartnerInfo|null|undefined} partner
         * @memberof CMsgDPPartnerMicroTxns
         * @instance
         */
        CMsgDPPartnerMicroTxns.prototype.partner = null;
    
        /**
         * CMsgDPPartnerMicroTxns transactions.
         * @member {Array.<CMsgDPPartnerMicroTxns.IPartnerMicroTxn>} transactions
         * @memberof CMsgDPPartnerMicroTxns
         * @instance
         */
        CMsgDPPartnerMicroTxns.prototype.transactions = $util.emptyArray;
    
        /**
         * Creates a new CMsgDPPartnerMicroTxns instance using the specified properties.
         * @function create
         * @memberof CMsgDPPartnerMicroTxns
         * @static
         * @param {ICMsgDPPartnerMicroTxns=} [properties] Properties to set
         * @returns {CMsgDPPartnerMicroTxns} CMsgDPPartnerMicroTxns instance
         */
        CMsgDPPartnerMicroTxns.create = function create(properties) {
            return new CMsgDPPartnerMicroTxns(properties);
        };
    
        /**
         * Encodes the specified CMsgDPPartnerMicroTxns message. Does not implicitly {@link CMsgDPPartnerMicroTxns.verify|verify} messages.
         * @function encode
         * @memberof CMsgDPPartnerMicroTxns
         * @static
         * @param {ICMsgDPPartnerMicroTxns} message CMsgDPPartnerMicroTxns message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgDPPartnerMicroTxns.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
            if (message.gcName != null && Object.hasOwnProperty.call(message, "gcName"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.gcName);
            if (message.partner != null && Object.hasOwnProperty.call(message, "partner"))
                $root.CMsgDPPartnerMicroTxns.PartnerInfo.encode(message.partner, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            if (message.transactions != null && message.transactions.length)
                for (var i = 0; i < message.transactions.length; ++i)
                    $root.CMsgDPPartnerMicroTxns.PartnerMicroTxn.encode(message.transactions[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgDPPartnerMicroTxns message, length delimited. Does not implicitly {@link CMsgDPPartnerMicroTxns.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgDPPartnerMicroTxns
         * @static
         * @param {ICMsgDPPartnerMicroTxns} message CMsgDPPartnerMicroTxns message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgDPPartnerMicroTxns.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgDPPartnerMicroTxns message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgDPPartnerMicroTxns
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgDPPartnerMicroTxns} CMsgDPPartnerMicroTxns
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgDPPartnerMicroTxns.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgDPPartnerMicroTxns();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.appid = reader.uint32();
                        break;
                    }
                case 2: {
                        message.gcName = reader.string();
                        break;
                    }
                case 3: {
                        message.partner = $root.CMsgDPPartnerMicroTxns.PartnerInfo.decode(reader, reader.uint32());
                        break;
                    }
                case 4: {
                        if (!(message.transactions && message.transactions.length))
                            message.transactions = [];
                        message.transactions.push($root.CMsgDPPartnerMicroTxns.PartnerMicroTxn.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgDPPartnerMicroTxns message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgDPPartnerMicroTxns
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgDPPartnerMicroTxns} CMsgDPPartnerMicroTxns
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgDPPartnerMicroTxns.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgDPPartnerMicroTxns message.
         * @function verify
         * @memberof CMsgDPPartnerMicroTxns
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgDPPartnerMicroTxns.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.gcName != null && message.hasOwnProperty("gcName"))
                if (!$util.isString(message.gcName))
                    return "gcName: string expected";
            if (message.partner != null && message.hasOwnProperty("partner")) {
                var error = $root.CMsgDPPartnerMicroTxns.PartnerInfo.verify(message.partner);
                if (error)
                    return "partner." + error;
            }
            if (message.transactions != null && message.hasOwnProperty("transactions")) {
                if (!Array.isArray(message.transactions))
                    return "transactions: array expected";
                for (var i = 0; i < message.transactions.length; ++i) {
                    var error = $root.CMsgDPPartnerMicroTxns.PartnerMicroTxn.verify(message.transactions[i]);
                    if (error)
                        return "transactions." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgDPPartnerMicroTxns message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgDPPartnerMicroTxns
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgDPPartnerMicroTxns} CMsgDPPartnerMicroTxns
         */
        CMsgDPPartnerMicroTxns.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgDPPartnerMicroTxns)
                return object;
            var message = new $root.CMsgDPPartnerMicroTxns();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.gcName != null)
                message.gcName = String(object.gcName);
            if (object.partner != null) {
                if (typeof object.partner !== "object")
                    throw TypeError(".CMsgDPPartnerMicroTxns.partner: object expected");
                message.partner = $root.CMsgDPPartnerMicroTxns.PartnerInfo.fromObject(object.partner);
            }
            if (object.transactions) {
                if (!Array.isArray(object.transactions))
                    throw TypeError(".CMsgDPPartnerMicroTxns.transactions: array expected");
                message.transactions = [];
                for (var i = 0; i < object.transactions.length; ++i) {
                    if (typeof object.transactions[i] !== "object")
                        throw TypeError(".CMsgDPPartnerMicroTxns.transactions: object expected");
                    message.transactions[i] = $root.CMsgDPPartnerMicroTxns.PartnerMicroTxn.fromObject(object.transactions[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgDPPartnerMicroTxns message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgDPPartnerMicroTxns
         * @static
         * @param {CMsgDPPartnerMicroTxns} message CMsgDPPartnerMicroTxns
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgDPPartnerMicroTxns.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.transactions = [];
            if (options.defaults) {
                object.appid = 0;
                object.gcName = "";
                object.partner = null;
            }
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.gcName != null && message.hasOwnProperty("gcName"))
                object.gcName = message.gcName;
            if (message.partner != null && message.hasOwnProperty("partner"))
                object.partner = $root.CMsgDPPartnerMicroTxns.PartnerInfo.toObject(message.partner, options);
            if (message.transactions && message.transactions.length) {
                object.transactions = [];
                for (var j = 0; j < message.transactions.length; ++j)
                    object.transactions[j] = $root.CMsgDPPartnerMicroTxns.PartnerMicroTxn.toObject(message.transactions[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgDPPartnerMicroTxns to JSON.
         * @function toJSON
         * @memberof CMsgDPPartnerMicroTxns
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgDPPartnerMicroTxns.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgDPPartnerMicroTxns
         * @function getTypeUrl
         * @memberof CMsgDPPartnerMicroTxns
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgDPPartnerMicroTxns.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgDPPartnerMicroTxns";
        };
    
        CMsgDPPartnerMicroTxns.PartnerMicroTxn = (function() {
    
            /**
             * Properties of a PartnerMicroTxn.
             * @memberof CMsgDPPartnerMicroTxns
             * @interface IPartnerMicroTxn
             * @property {number|null} [initTime] PartnerMicroTxn initTime
             * @property {number|null} [lastUpdateTime] PartnerMicroTxn lastUpdateTime
             * @property {number|Long|null} [txnId] PartnerMicroTxn txnId
             * @property {number|null} [accountId] PartnerMicroTxn accountId
             * @property {number|null} [lineItem] PartnerMicroTxn lineItem
             * @property {number|Long|null} [itemId] PartnerMicroTxn itemId
             * @property {number|null} [defIndex] PartnerMicroTxn defIndex
             * @property {number|Long|null} [price] PartnerMicroTxn price
             * @property {number|Long|null} [tax] PartnerMicroTxn tax
             * @property {number|Long|null} [priceUsd] PartnerMicroTxn priceUsd
             * @property {number|Long|null} [taxUsd] PartnerMicroTxn taxUsd
             * @property {number|null} [purchaseType] PartnerMicroTxn purchaseType
             * @property {number|null} [steamTxnType] PartnerMicroTxn steamTxnType
             * @property {string|null} [countryCode] PartnerMicroTxn countryCode
             * @property {string|null} [regionCode] PartnerMicroTxn regionCode
             * @property {number|null} [quantity] PartnerMicroTxn quantity
             * @property {number|Long|null} [refTransId] PartnerMicroTxn refTransId
             */
    
            /**
             * Constructs a new PartnerMicroTxn.
             * @memberof CMsgDPPartnerMicroTxns
             * @classdesc Represents a PartnerMicroTxn.
             * @implements IPartnerMicroTxn
             * @constructor
             * @param {CMsgDPPartnerMicroTxns.IPartnerMicroTxn=} [properties] Properties to set
             */
            function PartnerMicroTxn(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * PartnerMicroTxn initTime.
             * @member {number} initTime
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.initTime = 0;
    
            /**
             * PartnerMicroTxn lastUpdateTime.
             * @member {number} lastUpdateTime
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.lastUpdateTime = 0;
    
            /**
             * PartnerMicroTxn txnId.
             * @member {number|Long} txnId
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.txnId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * PartnerMicroTxn accountId.
             * @member {number} accountId
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.accountId = 0;
    
            /**
             * PartnerMicroTxn lineItem.
             * @member {number} lineItem
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.lineItem = 0;
    
            /**
             * PartnerMicroTxn itemId.
             * @member {number|Long} itemId
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.itemId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * PartnerMicroTxn defIndex.
             * @member {number} defIndex
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.defIndex = 0;
    
            /**
             * PartnerMicroTxn price.
             * @member {number|Long} price
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.price = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * PartnerMicroTxn tax.
             * @member {number|Long} tax
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.tax = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * PartnerMicroTxn priceUsd.
             * @member {number|Long} priceUsd
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.priceUsd = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * PartnerMicroTxn taxUsd.
             * @member {number|Long} taxUsd
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.taxUsd = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * PartnerMicroTxn purchaseType.
             * @member {number} purchaseType
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.purchaseType = 0;
    
            /**
             * PartnerMicroTxn steamTxnType.
             * @member {number} steamTxnType
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.steamTxnType = 0;
    
            /**
             * PartnerMicroTxn countryCode.
             * @member {string} countryCode
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.countryCode = "";
    
            /**
             * PartnerMicroTxn regionCode.
             * @member {string} regionCode
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.regionCode = "";
    
            /**
             * PartnerMicroTxn quantity.
             * @member {number} quantity
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.quantity = 0;
    
            /**
             * PartnerMicroTxn refTransId.
             * @member {number|Long} refTransId
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.refTransId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Creates a new PartnerMicroTxn instance using the specified properties.
             * @function create
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @static
             * @param {CMsgDPPartnerMicroTxns.IPartnerMicroTxn=} [properties] Properties to set
             * @returns {CMsgDPPartnerMicroTxns.PartnerMicroTxn} PartnerMicroTxn instance
             */
            PartnerMicroTxn.create = function create(properties) {
                return new PartnerMicroTxn(properties);
            };
    
            /**
             * Encodes the specified PartnerMicroTxn message. Does not implicitly {@link CMsgDPPartnerMicroTxns.PartnerMicroTxn.verify|verify} messages.
             * @function encode
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @static
             * @param {CMsgDPPartnerMicroTxns.IPartnerMicroTxn} message PartnerMicroTxn message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PartnerMicroTxn.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.initTime != null && Object.hasOwnProperty.call(message, "initTime"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.initTime);
                if (message.lastUpdateTime != null && Object.hasOwnProperty.call(message, "lastUpdateTime"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.lastUpdateTime);
                if (message.txnId != null && Object.hasOwnProperty.call(message, "txnId"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.txnId);
                if (message.accountId != null && Object.hasOwnProperty.call(message, "accountId"))
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.accountId);
                if (message.lineItem != null && Object.hasOwnProperty.call(message, "lineItem"))
                    writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.lineItem);
                if (message.itemId != null && Object.hasOwnProperty.call(message, "itemId"))
                    writer.uint32(/* id 6, wireType 0 =*/48).uint64(message.itemId);
                if (message.defIndex != null && Object.hasOwnProperty.call(message, "defIndex"))
                    writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.defIndex);
                if (message.price != null && Object.hasOwnProperty.call(message, "price"))
                    writer.uint32(/* id 8, wireType 0 =*/64).uint64(message.price);
                if (message.tax != null && Object.hasOwnProperty.call(message, "tax"))
                    writer.uint32(/* id 9, wireType 0 =*/72).uint64(message.tax);
                if (message.priceUsd != null && Object.hasOwnProperty.call(message, "priceUsd"))
                    writer.uint32(/* id 10, wireType 0 =*/80).uint64(message.priceUsd);
                if (message.taxUsd != null && Object.hasOwnProperty.call(message, "taxUsd"))
                    writer.uint32(/* id 11, wireType 0 =*/88).uint64(message.taxUsd);
                if (message.purchaseType != null && Object.hasOwnProperty.call(message, "purchaseType"))
                    writer.uint32(/* id 12, wireType 0 =*/96).uint32(message.purchaseType);
                if (message.steamTxnType != null && Object.hasOwnProperty.call(message, "steamTxnType"))
                    writer.uint32(/* id 13, wireType 0 =*/104).uint32(message.steamTxnType);
                if (message.countryCode != null && Object.hasOwnProperty.call(message, "countryCode"))
                    writer.uint32(/* id 14, wireType 2 =*/114).string(message.countryCode);
                if (message.regionCode != null && Object.hasOwnProperty.call(message, "regionCode"))
                    writer.uint32(/* id 15, wireType 2 =*/122).string(message.regionCode);
                if (message.quantity != null && Object.hasOwnProperty.call(message, "quantity"))
                    writer.uint32(/* id 16, wireType 0 =*/128).int32(message.quantity);
                if (message.refTransId != null && Object.hasOwnProperty.call(message, "refTransId"))
                    writer.uint32(/* id 17, wireType 0 =*/136).uint64(message.refTransId);
                return writer;
            };
    
            /**
             * Encodes the specified PartnerMicroTxn message, length delimited. Does not implicitly {@link CMsgDPPartnerMicroTxns.PartnerMicroTxn.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @static
             * @param {CMsgDPPartnerMicroTxns.IPartnerMicroTxn} message PartnerMicroTxn message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PartnerMicroTxn.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a PartnerMicroTxn message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgDPPartnerMicroTxns.PartnerMicroTxn} PartnerMicroTxn
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PartnerMicroTxn.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgDPPartnerMicroTxns.PartnerMicroTxn();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.initTime = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.lastUpdateTime = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.txnId = reader.uint64();
                            break;
                        }
                    case 4: {
                            message.accountId = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.lineItem = reader.uint32();
                            break;
                        }
                    case 6: {
                            message.itemId = reader.uint64();
                            break;
                        }
                    case 7: {
                            message.defIndex = reader.uint32();
                            break;
                        }
                    case 8: {
                            message.price = reader.uint64();
                            break;
                        }
                    case 9: {
                            message.tax = reader.uint64();
                            break;
                        }
                    case 10: {
                            message.priceUsd = reader.uint64();
                            break;
                        }
                    case 11: {
                            message.taxUsd = reader.uint64();
                            break;
                        }
                    case 12: {
                            message.purchaseType = reader.uint32();
                            break;
                        }
                    case 13: {
                            message.steamTxnType = reader.uint32();
                            break;
                        }
                    case 14: {
                            message.countryCode = reader.string();
                            break;
                        }
                    case 15: {
                            message.regionCode = reader.string();
                            break;
                        }
                    case 16: {
                            message.quantity = reader.int32();
                            break;
                        }
                    case 17: {
                            message.refTransId = reader.uint64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a PartnerMicroTxn message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgDPPartnerMicroTxns.PartnerMicroTxn} PartnerMicroTxn
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PartnerMicroTxn.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a PartnerMicroTxn message.
             * @function verify
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            PartnerMicroTxn.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.initTime != null && message.hasOwnProperty("initTime"))
                    if (!$util.isInteger(message.initTime))
                        return "initTime: integer expected";
                if (message.lastUpdateTime != null && message.hasOwnProperty("lastUpdateTime"))
                    if (!$util.isInteger(message.lastUpdateTime))
                        return "lastUpdateTime: integer expected";
                if (message.txnId != null && message.hasOwnProperty("txnId"))
                    if (!$util.isInteger(message.txnId) && !(message.txnId && $util.isInteger(message.txnId.low) && $util.isInteger(message.txnId.high)))
                        return "txnId: integer|Long expected";
                if (message.accountId != null && message.hasOwnProperty("accountId"))
                    if (!$util.isInteger(message.accountId))
                        return "accountId: integer expected";
                if (message.lineItem != null && message.hasOwnProperty("lineItem"))
                    if (!$util.isInteger(message.lineItem))
                        return "lineItem: integer expected";
                if (message.itemId != null && message.hasOwnProperty("itemId"))
                    if (!$util.isInteger(message.itemId) && !(message.itemId && $util.isInteger(message.itemId.low) && $util.isInteger(message.itemId.high)))
                        return "itemId: integer|Long expected";
                if (message.defIndex != null && message.hasOwnProperty("defIndex"))
                    if (!$util.isInteger(message.defIndex))
                        return "defIndex: integer expected";
                if (message.price != null && message.hasOwnProperty("price"))
                    if (!$util.isInteger(message.price) && !(message.price && $util.isInteger(message.price.low) && $util.isInteger(message.price.high)))
                        return "price: integer|Long expected";
                if (message.tax != null && message.hasOwnProperty("tax"))
                    if (!$util.isInteger(message.tax) && !(message.tax && $util.isInteger(message.tax.low) && $util.isInteger(message.tax.high)))
                        return "tax: integer|Long expected";
                if (message.priceUsd != null && message.hasOwnProperty("priceUsd"))
                    if (!$util.isInteger(message.priceUsd) && !(message.priceUsd && $util.isInteger(message.priceUsd.low) && $util.isInteger(message.priceUsd.high)))
                        return "priceUsd: integer|Long expected";
                if (message.taxUsd != null && message.hasOwnProperty("taxUsd"))
                    if (!$util.isInteger(message.taxUsd) && !(message.taxUsd && $util.isInteger(message.taxUsd.low) && $util.isInteger(message.taxUsd.high)))
                        return "taxUsd: integer|Long expected";
                if (message.purchaseType != null && message.hasOwnProperty("purchaseType"))
                    if (!$util.isInteger(message.purchaseType))
                        return "purchaseType: integer expected";
                if (message.steamTxnType != null && message.hasOwnProperty("steamTxnType"))
                    if (!$util.isInteger(message.steamTxnType))
                        return "steamTxnType: integer expected";
                if (message.countryCode != null && message.hasOwnProperty("countryCode"))
                    if (!$util.isString(message.countryCode))
                        return "countryCode: string expected";
                if (message.regionCode != null && message.hasOwnProperty("regionCode"))
                    if (!$util.isString(message.regionCode))
                        return "regionCode: string expected";
                if (message.quantity != null && message.hasOwnProperty("quantity"))
                    if (!$util.isInteger(message.quantity))
                        return "quantity: integer expected";
                if (message.refTransId != null && message.hasOwnProperty("refTransId"))
                    if (!$util.isInteger(message.refTransId) && !(message.refTransId && $util.isInteger(message.refTransId.low) && $util.isInteger(message.refTransId.high)))
                        return "refTransId: integer|Long expected";
                return null;
            };
    
            /**
             * Creates a PartnerMicroTxn message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgDPPartnerMicroTxns.PartnerMicroTxn} PartnerMicroTxn
             */
            PartnerMicroTxn.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgDPPartnerMicroTxns.PartnerMicroTxn)
                    return object;
                var message = new $root.CMsgDPPartnerMicroTxns.PartnerMicroTxn();
                if (object.initTime != null)
                    message.initTime = object.initTime >>> 0;
                if (object.lastUpdateTime != null)
                    message.lastUpdateTime = object.lastUpdateTime >>> 0;
                if (object.txnId != null)
                    if ($util.Long)
                        (message.txnId = $util.Long.fromValue(object.txnId)).unsigned = true;
                    else if (typeof object.txnId === "string")
                        message.txnId = parseInt(object.txnId, 10);
                    else if (typeof object.txnId === "number")
                        message.txnId = object.txnId;
                    else if (typeof object.txnId === "object")
                        message.txnId = new $util.LongBits(object.txnId.low >>> 0, object.txnId.high >>> 0).toNumber(true);
                if (object.accountId != null)
                    message.accountId = object.accountId >>> 0;
                if (object.lineItem != null)
                    message.lineItem = object.lineItem >>> 0;
                if (object.itemId != null)
                    if ($util.Long)
                        (message.itemId = $util.Long.fromValue(object.itemId)).unsigned = true;
                    else if (typeof object.itemId === "string")
                        message.itemId = parseInt(object.itemId, 10);
                    else if (typeof object.itemId === "number")
                        message.itemId = object.itemId;
                    else if (typeof object.itemId === "object")
                        message.itemId = new $util.LongBits(object.itemId.low >>> 0, object.itemId.high >>> 0).toNumber(true);
                if (object.defIndex != null)
                    message.defIndex = object.defIndex >>> 0;
                if (object.price != null)
                    if ($util.Long)
                        (message.price = $util.Long.fromValue(object.price)).unsigned = true;
                    else if (typeof object.price === "string")
                        message.price = parseInt(object.price, 10);
                    else if (typeof object.price === "number")
                        message.price = object.price;
                    else if (typeof object.price === "object")
                        message.price = new $util.LongBits(object.price.low >>> 0, object.price.high >>> 0).toNumber(true);
                if (object.tax != null)
                    if ($util.Long)
                        (message.tax = $util.Long.fromValue(object.tax)).unsigned = true;
                    else if (typeof object.tax === "string")
                        message.tax = parseInt(object.tax, 10);
                    else if (typeof object.tax === "number")
                        message.tax = object.tax;
                    else if (typeof object.tax === "object")
                        message.tax = new $util.LongBits(object.tax.low >>> 0, object.tax.high >>> 0).toNumber(true);
                if (object.priceUsd != null)
                    if ($util.Long)
                        (message.priceUsd = $util.Long.fromValue(object.priceUsd)).unsigned = true;
                    else if (typeof object.priceUsd === "string")
                        message.priceUsd = parseInt(object.priceUsd, 10);
                    else if (typeof object.priceUsd === "number")
                        message.priceUsd = object.priceUsd;
                    else if (typeof object.priceUsd === "object")
                        message.priceUsd = new $util.LongBits(object.priceUsd.low >>> 0, object.priceUsd.high >>> 0).toNumber(true);
                if (object.taxUsd != null)
                    if ($util.Long)
                        (message.taxUsd = $util.Long.fromValue(object.taxUsd)).unsigned = true;
                    else if (typeof object.taxUsd === "string")
                        message.taxUsd = parseInt(object.taxUsd, 10);
                    else if (typeof object.taxUsd === "number")
                        message.taxUsd = object.taxUsd;
                    else if (typeof object.taxUsd === "object")
                        message.taxUsd = new $util.LongBits(object.taxUsd.low >>> 0, object.taxUsd.high >>> 0).toNumber(true);
                if (object.purchaseType != null)
                    message.purchaseType = object.purchaseType >>> 0;
                if (object.steamTxnType != null)
                    message.steamTxnType = object.steamTxnType >>> 0;
                if (object.countryCode != null)
                    message.countryCode = String(object.countryCode);
                if (object.regionCode != null)
                    message.regionCode = String(object.regionCode);
                if (object.quantity != null)
                    message.quantity = object.quantity | 0;
                if (object.refTransId != null)
                    if ($util.Long)
                        (message.refTransId = $util.Long.fromValue(object.refTransId)).unsigned = true;
                    else if (typeof object.refTransId === "string")
                        message.refTransId = parseInt(object.refTransId, 10);
                    else if (typeof object.refTransId === "number")
                        message.refTransId = object.refTransId;
                    else if (typeof object.refTransId === "object")
                        message.refTransId = new $util.LongBits(object.refTransId.low >>> 0, object.refTransId.high >>> 0).toNumber(true);
                return message;
            };
    
            /**
             * Creates a plain object from a PartnerMicroTxn message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @static
             * @param {CMsgDPPartnerMicroTxns.PartnerMicroTxn} message PartnerMicroTxn
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            PartnerMicroTxn.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.initTime = 0;
                    object.lastUpdateTime = 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.txnId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.txnId = options.longs === String ? "0" : 0;
                    object.accountId = 0;
                    object.lineItem = 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.itemId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.itemId = options.longs === String ? "0" : 0;
                    object.defIndex = 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.price = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.price = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.tax = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.tax = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.priceUsd = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.priceUsd = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.taxUsd = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.taxUsd = options.longs === String ? "0" : 0;
                    object.purchaseType = 0;
                    object.steamTxnType = 0;
                    object.countryCode = "";
                    object.regionCode = "";
                    object.quantity = 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.refTransId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.refTransId = options.longs === String ? "0" : 0;
                }
                if (message.initTime != null && message.hasOwnProperty("initTime"))
                    object.initTime = message.initTime;
                if (message.lastUpdateTime != null && message.hasOwnProperty("lastUpdateTime"))
                    object.lastUpdateTime = message.lastUpdateTime;
                if (message.txnId != null && message.hasOwnProperty("txnId"))
                    if (typeof message.txnId === "number")
                        object.txnId = options.longs === String ? String(message.txnId) : message.txnId;
                    else
                        object.txnId = options.longs === String ? $util.Long.prototype.toString.call(message.txnId) : options.longs === Number ? new $util.LongBits(message.txnId.low >>> 0, message.txnId.high >>> 0).toNumber(true) : message.txnId;
                if (message.accountId != null && message.hasOwnProperty("accountId"))
                    object.accountId = message.accountId;
                if (message.lineItem != null && message.hasOwnProperty("lineItem"))
                    object.lineItem = message.lineItem;
                if (message.itemId != null && message.hasOwnProperty("itemId"))
                    if (typeof message.itemId === "number")
                        object.itemId = options.longs === String ? String(message.itemId) : message.itemId;
                    else
                        object.itemId = options.longs === String ? $util.Long.prototype.toString.call(message.itemId) : options.longs === Number ? new $util.LongBits(message.itemId.low >>> 0, message.itemId.high >>> 0).toNumber(true) : message.itemId;
                if (message.defIndex != null && message.hasOwnProperty("defIndex"))
                    object.defIndex = message.defIndex;
                if (message.price != null && message.hasOwnProperty("price"))
                    if (typeof message.price === "number")
                        object.price = options.longs === String ? String(message.price) : message.price;
                    else
                        object.price = options.longs === String ? $util.Long.prototype.toString.call(message.price) : options.longs === Number ? new $util.LongBits(message.price.low >>> 0, message.price.high >>> 0).toNumber(true) : message.price;
                if (message.tax != null && message.hasOwnProperty("tax"))
                    if (typeof message.tax === "number")
                        object.tax = options.longs === String ? String(message.tax) : message.tax;
                    else
                        object.tax = options.longs === String ? $util.Long.prototype.toString.call(message.tax) : options.longs === Number ? new $util.LongBits(message.tax.low >>> 0, message.tax.high >>> 0).toNumber(true) : message.tax;
                if (message.priceUsd != null && message.hasOwnProperty("priceUsd"))
                    if (typeof message.priceUsd === "number")
                        object.priceUsd = options.longs === String ? String(message.priceUsd) : message.priceUsd;
                    else
                        object.priceUsd = options.longs === String ? $util.Long.prototype.toString.call(message.priceUsd) : options.longs === Number ? new $util.LongBits(message.priceUsd.low >>> 0, message.priceUsd.high >>> 0).toNumber(true) : message.priceUsd;
                if (message.taxUsd != null && message.hasOwnProperty("taxUsd"))
                    if (typeof message.taxUsd === "number")
                        object.taxUsd = options.longs === String ? String(message.taxUsd) : message.taxUsd;
                    else
                        object.taxUsd = options.longs === String ? $util.Long.prototype.toString.call(message.taxUsd) : options.longs === Number ? new $util.LongBits(message.taxUsd.low >>> 0, message.taxUsd.high >>> 0).toNumber(true) : message.taxUsd;
                if (message.purchaseType != null && message.hasOwnProperty("purchaseType"))
                    object.purchaseType = message.purchaseType;
                if (message.steamTxnType != null && message.hasOwnProperty("steamTxnType"))
                    object.steamTxnType = message.steamTxnType;
                if (message.countryCode != null && message.hasOwnProperty("countryCode"))
                    object.countryCode = message.countryCode;
                if (message.regionCode != null && message.hasOwnProperty("regionCode"))
                    object.regionCode = message.regionCode;
                if (message.quantity != null && message.hasOwnProperty("quantity"))
                    object.quantity = message.quantity;
                if (message.refTransId != null && message.hasOwnProperty("refTransId"))
                    if (typeof message.refTransId === "number")
                        object.refTransId = options.longs === String ? String(message.refTransId) : message.refTransId;
                    else
                        object.refTransId = options.longs === String ? $util.Long.prototype.toString.call(message.refTransId) : options.longs === Number ? new $util.LongBits(message.refTransId.low >>> 0, message.refTransId.high >>> 0).toNumber(true) : message.refTransId;
                return object;
            };
    
            /**
             * Converts this PartnerMicroTxn to JSON.
             * @function toJSON
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            PartnerMicroTxn.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for PartnerMicroTxn
             * @function getTypeUrl
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            PartnerMicroTxn.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgDPPartnerMicroTxns.PartnerMicroTxn";
            };
    
            return PartnerMicroTxn;
        })();
    
        CMsgDPPartnerMicroTxns.PartnerInfo = (function() {
    
            /**
             * Properties of a PartnerInfo.
             * @memberof CMsgDPPartnerMicroTxns
             * @interface IPartnerInfo
             * @property {number|null} [partnerId] PartnerInfo partnerId
             * @property {string|null} [partnerName] PartnerInfo partnerName
             * @property {string|null} [currencyCode] PartnerInfo currencyCode
             * @property {string|null} [currencyName] PartnerInfo currencyName
             */
    
            /**
             * Constructs a new PartnerInfo.
             * @memberof CMsgDPPartnerMicroTxns
             * @classdesc Represents a PartnerInfo.
             * @implements IPartnerInfo
             * @constructor
             * @param {CMsgDPPartnerMicroTxns.IPartnerInfo=} [properties] Properties to set
             */
            function PartnerInfo(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * PartnerInfo partnerId.
             * @member {number} partnerId
             * @memberof CMsgDPPartnerMicroTxns.PartnerInfo
             * @instance
             */
            PartnerInfo.prototype.partnerId = 0;
    
            /**
             * PartnerInfo partnerName.
             * @member {string} partnerName
             * @memberof CMsgDPPartnerMicroTxns.PartnerInfo
             * @instance
             */
            PartnerInfo.prototype.partnerName = "";
    
            /**
             * PartnerInfo currencyCode.
             * @member {string} currencyCode
             * @memberof CMsgDPPartnerMicroTxns.PartnerInfo
             * @instance
             */
            PartnerInfo.prototype.currencyCode = "";
    
            /**
             * PartnerInfo currencyName.
             * @member {string} currencyName
             * @memberof CMsgDPPartnerMicroTxns.PartnerInfo
             * @instance
             */
            PartnerInfo.prototype.currencyName = "";
    
            /**
             * Creates a new PartnerInfo instance using the specified properties.
             * @function create
             * @memberof CMsgDPPartnerMicroTxns.PartnerInfo
             * @static
             * @param {CMsgDPPartnerMicroTxns.IPartnerInfo=} [properties] Properties to set
             * @returns {CMsgDPPartnerMicroTxns.PartnerInfo} PartnerInfo instance
             */
            PartnerInfo.create = function create(properties) {
                return new PartnerInfo(properties);
            };
    
            /**
             * Encodes the specified PartnerInfo message. Does not implicitly {@link CMsgDPPartnerMicroTxns.PartnerInfo.verify|verify} messages.
             * @function encode
             * @memberof CMsgDPPartnerMicroTxns.PartnerInfo
             * @static
             * @param {CMsgDPPartnerMicroTxns.IPartnerInfo} message PartnerInfo message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PartnerInfo.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.partnerId != null && Object.hasOwnProperty.call(message, "partnerId"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.partnerId);
                if (message.partnerName != null && Object.hasOwnProperty.call(message, "partnerName"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.partnerName);
                if (message.currencyCode != null && Object.hasOwnProperty.call(message, "currencyCode"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.currencyCode);
                if (message.currencyName != null && Object.hasOwnProperty.call(message, "currencyName"))
                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.currencyName);
                return writer;
            };
    
            /**
             * Encodes the specified PartnerInfo message, length delimited. Does not implicitly {@link CMsgDPPartnerMicroTxns.PartnerInfo.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgDPPartnerMicroTxns.PartnerInfo
             * @static
             * @param {CMsgDPPartnerMicroTxns.IPartnerInfo} message PartnerInfo message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PartnerInfo.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a PartnerInfo message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgDPPartnerMicroTxns.PartnerInfo
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgDPPartnerMicroTxns.PartnerInfo} PartnerInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PartnerInfo.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgDPPartnerMicroTxns.PartnerInfo();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.partnerId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.partnerName = reader.string();
                            break;
                        }
                    case 3: {
                            message.currencyCode = reader.string();
                            break;
                        }
                    case 4: {
                            message.currencyName = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a PartnerInfo message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgDPPartnerMicroTxns.PartnerInfo
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgDPPartnerMicroTxns.PartnerInfo} PartnerInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PartnerInfo.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a PartnerInfo message.
             * @function verify
             * @memberof CMsgDPPartnerMicroTxns.PartnerInfo
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            PartnerInfo.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.partnerId != null && message.hasOwnProperty("partnerId"))
                    if (!$util.isInteger(message.partnerId))
                        return "partnerId: integer expected";
                if (message.partnerName != null && message.hasOwnProperty("partnerName"))
                    if (!$util.isString(message.partnerName))
                        return "partnerName: string expected";
                if (message.currencyCode != null && message.hasOwnProperty("currencyCode"))
                    if (!$util.isString(message.currencyCode))
                        return "currencyCode: string expected";
                if (message.currencyName != null && message.hasOwnProperty("currencyName"))
                    if (!$util.isString(message.currencyName))
                        return "currencyName: string expected";
                return null;
            };
    
            /**
             * Creates a PartnerInfo message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgDPPartnerMicroTxns.PartnerInfo
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgDPPartnerMicroTxns.PartnerInfo} PartnerInfo
             */
            PartnerInfo.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgDPPartnerMicroTxns.PartnerInfo)
                    return object;
                var message = new $root.CMsgDPPartnerMicroTxns.PartnerInfo();
                if (object.partnerId != null)
                    message.partnerId = object.partnerId >>> 0;
                if (object.partnerName != null)
                    message.partnerName = String(object.partnerName);
                if (object.currencyCode != null)
                    message.currencyCode = String(object.currencyCode);
                if (object.currencyName != null)
                    message.currencyName = String(object.currencyName);
                return message;
            };
    
            /**
             * Creates a plain object from a PartnerInfo message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgDPPartnerMicroTxns.PartnerInfo
             * @static
             * @param {CMsgDPPartnerMicroTxns.PartnerInfo} message PartnerInfo
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            PartnerInfo.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.partnerId = 0;
                    object.partnerName = "";
                    object.currencyCode = "";
                    object.currencyName = "";
                }
                if (message.partnerId != null && message.hasOwnProperty("partnerId"))
                    object.partnerId = message.partnerId;
                if (message.partnerName != null && message.hasOwnProperty("partnerName"))
                    object.partnerName = message.partnerName;
                if (message.currencyCode != null && message.hasOwnProperty("currencyCode"))
                    object.currencyCode = message.currencyCode;
                if (message.currencyName != null && message.hasOwnProperty("currencyName"))
                    object.currencyName = message.currencyName;
                return object;
            };
    
            /**
             * Converts this PartnerInfo to JSON.
             * @function toJSON
             * @memberof CMsgDPPartnerMicroTxns.PartnerInfo
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            PartnerInfo.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for PartnerInfo
             * @function getTypeUrl
             * @memberof CMsgDPPartnerMicroTxns.PartnerInfo
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            PartnerInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgDPPartnerMicroTxns.PartnerInfo";
            };
    
            return PartnerInfo;
        })();
    
        return CMsgDPPartnerMicroTxns;
    })();
    
    $root.CMsgDPPartnerMicroTxnsResponse = (function() {
    
        /**
         * Properties of a CMsgDPPartnerMicroTxnsResponse.
         * @exports ICMsgDPPartnerMicroTxnsResponse
         * @interface ICMsgDPPartnerMicroTxnsResponse
         * @property {number|null} [eresult] CMsgDPPartnerMicroTxnsResponse eresult
         * @property {CMsgDPPartnerMicroTxnsResponse.EErrorCode|null} [eerrorcode] CMsgDPPartnerMicroTxnsResponse eerrorcode
         */
    
        /**
         * Constructs a new CMsgDPPartnerMicroTxnsResponse.
         * @exports CMsgDPPartnerMicroTxnsResponse
         * @classdesc Represents a CMsgDPPartnerMicroTxnsResponse.
         * @implements ICMsgDPPartnerMicroTxnsResponse
         * @constructor
         * @param {ICMsgDPPartnerMicroTxnsResponse=} [properties] Properties to set
         */
        function CMsgDPPartnerMicroTxnsResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgDPPartnerMicroTxnsResponse eresult.
         * @member {number} eresult
         * @memberof CMsgDPPartnerMicroTxnsResponse
         * @instance
         */
        CMsgDPPartnerMicroTxnsResponse.prototype.eresult = 2;
    
        /**
         * CMsgDPPartnerMicroTxnsResponse eerrorcode.
         * @member {CMsgDPPartnerMicroTxnsResponse.EErrorCode} eerrorcode
         * @memberof CMsgDPPartnerMicroTxnsResponse
         * @instance
         */
        CMsgDPPartnerMicroTxnsResponse.prototype.eerrorcode = 0;
    
        /**
         * Creates a new CMsgDPPartnerMicroTxnsResponse instance using the specified properties.
         * @function create
         * @memberof CMsgDPPartnerMicroTxnsResponse
         * @static
         * @param {ICMsgDPPartnerMicroTxnsResponse=} [properties] Properties to set
         * @returns {CMsgDPPartnerMicroTxnsResponse} CMsgDPPartnerMicroTxnsResponse instance
         */
        CMsgDPPartnerMicroTxnsResponse.create = function create(properties) {
            return new CMsgDPPartnerMicroTxnsResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgDPPartnerMicroTxnsResponse message. Does not implicitly {@link CMsgDPPartnerMicroTxnsResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgDPPartnerMicroTxnsResponse
         * @static
         * @param {ICMsgDPPartnerMicroTxnsResponse} message CMsgDPPartnerMicroTxnsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgDPPartnerMicroTxnsResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.eresult);
            if (message.eerrorcode != null && Object.hasOwnProperty.call(message, "eerrorcode"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.eerrorcode);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgDPPartnerMicroTxnsResponse message, length delimited. Does not implicitly {@link CMsgDPPartnerMicroTxnsResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgDPPartnerMicroTxnsResponse
         * @static
         * @param {ICMsgDPPartnerMicroTxnsResponse} message CMsgDPPartnerMicroTxnsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgDPPartnerMicroTxnsResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgDPPartnerMicroTxnsResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgDPPartnerMicroTxnsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgDPPartnerMicroTxnsResponse} CMsgDPPartnerMicroTxnsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgDPPartnerMicroTxnsResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgDPPartnerMicroTxnsResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.eresult = reader.uint32();
                        break;
                    }
                case 2: {
                        message.eerrorcode = reader.int32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgDPPartnerMicroTxnsResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgDPPartnerMicroTxnsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgDPPartnerMicroTxnsResponse} CMsgDPPartnerMicroTxnsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgDPPartnerMicroTxnsResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgDPPartnerMicroTxnsResponse message.
         * @function verify
         * @memberof CMsgDPPartnerMicroTxnsResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgDPPartnerMicroTxnsResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.eerrorcode != null && message.hasOwnProperty("eerrorcode"))
                switch (message.eerrorcode) {
                default:
                    return "eerrorcode: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 7:
                case 8:
                case 9:
                    break;
                }
            return null;
        };
    
        /**
         * Creates a CMsgDPPartnerMicroTxnsResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgDPPartnerMicroTxnsResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgDPPartnerMicroTxnsResponse} CMsgDPPartnerMicroTxnsResponse
         */
        CMsgDPPartnerMicroTxnsResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgDPPartnerMicroTxnsResponse)
                return object;
            var message = new $root.CMsgDPPartnerMicroTxnsResponse();
            if (object.eresult != null)
                message.eresult = object.eresult >>> 0;
            switch (object.eerrorcode) {
            default:
                if (typeof object.eerrorcode === "number") {
                    message.eerrorcode = object.eerrorcode;
                    break;
                }
                break;
            case "k_MsgValid":
            case 0:
                message.eerrorcode = 0;
                break;
            case "k_MsgInvalidAppID":
            case 1:
                message.eerrorcode = 1;
                break;
            case "k_MsgInvalidPartnerInfo":
            case 2:
                message.eerrorcode = 2;
                break;
            case "k_MsgNoTransactions":
            case 3:
                message.eerrorcode = 3;
                break;
            case "k_MsgSQLFailure":
            case 4:
                message.eerrorcode = 4;
                break;
            case "k_MsgPartnerInfoDiscrepancy":
            case 5:
                message.eerrorcode = 5;
                break;
            case "k_MsgTransactionInsertFailed":
            case 7:
                message.eerrorcode = 7;
                break;
            case "k_MsgAlreadyRunning":
            case 8:
                message.eerrorcode = 8;
                break;
            case "k_MsgInvalidTransactionData":
            case 9:
                message.eerrorcode = 9;
                break;
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgDPPartnerMicroTxnsResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgDPPartnerMicroTxnsResponse
         * @static
         * @param {CMsgDPPartnerMicroTxnsResponse} message CMsgDPPartnerMicroTxnsResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgDPPartnerMicroTxnsResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.eerrorcode = options.enums === String ? "k_MsgValid" : 0;
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.eerrorcode != null && message.hasOwnProperty("eerrorcode"))
                object.eerrorcode = options.enums === String ? $root.CMsgDPPartnerMicroTxnsResponse.EErrorCode[message.eerrorcode] === undefined ? message.eerrorcode : $root.CMsgDPPartnerMicroTxnsResponse.EErrorCode[message.eerrorcode] : message.eerrorcode;
            return object;
        };
    
        /**
         * Converts this CMsgDPPartnerMicroTxnsResponse to JSON.
         * @function toJSON
         * @memberof CMsgDPPartnerMicroTxnsResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgDPPartnerMicroTxnsResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgDPPartnerMicroTxnsResponse
         * @function getTypeUrl
         * @memberof CMsgDPPartnerMicroTxnsResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgDPPartnerMicroTxnsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgDPPartnerMicroTxnsResponse";
        };
    
        /**
         * EErrorCode enum.
         * @name CMsgDPPartnerMicroTxnsResponse.EErrorCode
         * @enum {number}
         * @property {number} k_MsgValid=0 k_MsgValid value
         * @property {number} k_MsgInvalidAppID=1 k_MsgInvalidAppID value
         * @property {number} k_MsgInvalidPartnerInfo=2 k_MsgInvalidPartnerInfo value
         * @property {number} k_MsgNoTransactions=3 k_MsgNoTransactions value
         * @property {number} k_MsgSQLFailure=4 k_MsgSQLFailure value
         * @property {number} k_MsgPartnerInfoDiscrepancy=5 k_MsgPartnerInfoDiscrepancy value
         * @property {number} k_MsgTransactionInsertFailed=7 k_MsgTransactionInsertFailed value
         * @property {number} k_MsgAlreadyRunning=8 k_MsgAlreadyRunning value
         * @property {number} k_MsgInvalidTransactionData=9 k_MsgInvalidTransactionData value
         */
        CMsgDPPartnerMicroTxnsResponse.EErrorCode = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "k_MsgValid"] = 0;
            values[valuesById[1] = "k_MsgInvalidAppID"] = 1;
            values[valuesById[2] = "k_MsgInvalidPartnerInfo"] = 2;
            values[valuesById[3] = "k_MsgNoTransactions"] = 3;
            values[valuesById[4] = "k_MsgSQLFailure"] = 4;
            values[valuesById[5] = "k_MsgPartnerInfoDiscrepancy"] = 5;
            values[valuesById[7] = "k_MsgTransactionInsertFailed"] = 7;
            values[valuesById[8] = "k_MsgAlreadyRunning"] = 8;
            values[valuesById[9] = "k_MsgInvalidTransactionData"] = 9;
            return values;
        })();
    
        return CMsgDPPartnerMicroTxnsResponse;
    })();
    
    $root.CChinaAgreementSessions_StartAgreementSessionInGame_Request = (function() {
    
        /**
         * Properties of a CChinaAgreementSessions_StartAgreementSessionInGame_Request.
         * @exports ICChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @interface ICChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @property {number|null} [appid] CChinaAgreementSessions_StartAgreementSessionInGame_Request appid
         * @property {number|Long|null} [steamid] CChinaAgreementSessions_StartAgreementSessionInGame_Request steamid
         * @property {string|null} [clientIpaddress] CChinaAgreementSessions_StartAgreementSessionInGame_Request clientIpaddress
         */
    
        /**
         * Constructs a new CChinaAgreementSessions_StartAgreementSessionInGame_Request.
         * @exports CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @classdesc Represents a CChinaAgreementSessions_StartAgreementSessionInGame_Request.
         * @implements ICChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @constructor
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Request=} [properties] Properties to set
         */
        function CChinaAgreementSessions_StartAgreementSessionInGame_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChinaAgreementSessions_StartAgreementSessionInGame_Request appid.
         * @member {number} appid
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @instance
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.prototype.appid = 0;
    
        /**
         * CChinaAgreementSessions_StartAgreementSessionInGame_Request steamid.
         * @member {number|Long} steamid
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @instance
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CChinaAgreementSessions_StartAgreementSessionInGame_Request clientIpaddress.
         * @member {string} clientIpaddress
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @instance
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.prototype.clientIpaddress = "";
    
        /**
         * Creates a new CChinaAgreementSessions_StartAgreementSessionInGame_Request instance using the specified properties.
         * @function create
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Request=} [properties] Properties to set
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Request} CChinaAgreementSessions_StartAgreementSessionInGame_Request instance
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.create = function create(properties) {
            return new CChinaAgreementSessions_StartAgreementSessionInGame_Request(properties);
        };
    
        /**
         * Encodes the specified CChinaAgreementSessions_StartAgreementSessionInGame_Request message. Does not implicitly {@link CChinaAgreementSessions_StartAgreementSessionInGame_Request.verify|verify} messages.
         * @function encode
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Request} message CChinaAgreementSessions_StartAgreementSessionInGame_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
            if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steamid);
            if (message.clientIpaddress != null && Object.hasOwnProperty.call(message, "clientIpaddress"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.clientIpaddress);
            return writer;
        };
    
        /**
         * Encodes the specified CChinaAgreementSessions_StartAgreementSessionInGame_Request message, length delimited. Does not implicitly {@link CChinaAgreementSessions_StartAgreementSessionInGame_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Request} message CChinaAgreementSessions_StartAgreementSessionInGame_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChinaAgreementSessions_StartAgreementSessionInGame_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Request} CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChinaAgreementSessions_StartAgreementSessionInGame_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.appid = reader.uint32();
                        break;
                    }
                case 2: {
                        message.steamid = reader.fixed64();
                        break;
                    }
                case 3: {
                        message.clientIpaddress = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChinaAgreementSessions_StartAgreementSessionInGame_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Request} CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChinaAgreementSessions_StartAgreementSessionInGame_Request message.
         * @function verify
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.clientIpaddress != null && message.hasOwnProperty("clientIpaddress"))
                if (!$util.isString(message.clientIpaddress))
                    return "clientIpaddress: string expected";
            return null;
        };
    
        /**
         * Creates a CChinaAgreementSessions_StartAgreementSessionInGame_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Request} CChinaAgreementSessions_StartAgreementSessionInGame_Request
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChinaAgreementSessions_StartAgreementSessionInGame_Request)
                return object;
            var message = new $root.CChinaAgreementSessions_StartAgreementSessionInGame_Request();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.clientIpaddress != null)
                message.clientIpaddress = String(object.clientIpaddress);
            return message;
        };
    
        /**
         * Creates a plain object from a CChinaAgreementSessions_StartAgreementSessionInGame_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {CChinaAgreementSessions_StartAgreementSessionInGame_Request} message CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.appid = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
                object.clientIpaddress = "";
            }
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.clientIpaddress != null && message.hasOwnProperty("clientIpaddress"))
                object.clientIpaddress = message.clientIpaddress;
            return object;
        };
    
        /**
         * Converts this CChinaAgreementSessions_StartAgreementSessionInGame_Request to JSON.
         * @function toJSON
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @function getTypeUrl
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CChinaAgreementSessions_StartAgreementSessionInGame_Request";
        };
    
        return CChinaAgreementSessions_StartAgreementSessionInGame_Request;
    })();
    
    $root.CChinaAgreementSessions_StartAgreementSessionInGame_Response = (function() {
    
        /**
         * Properties of a CChinaAgreementSessions_StartAgreementSessionInGame_Response.
         * @exports ICChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @interface ICChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @property {string|null} [agreementUrl] CChinaAgreementSessions_StartAgreementSessionInGame_Response agreementUrl
         */
    
        /**
         * Constructs a new CChinaAgreementSessions_StartAgreementSessionInGame_Response.
         * @exports CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @classdesc Represents a CChinaAgreementSessions_StartAgreementSessionInGame_Response.
         * @implements ICChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @constructor
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Response=} [properties] Properties to set
         */
        function CChinaAgreementSessions_StartAgreementSessionInGame_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChinaAgreementSessions_StartAgreementSessionInGame_Response agreementUrl.
         * @member {string} agreementUrl
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @instance
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.prototype.agreementUrl = "";
    
        /**
         * Creates a new CChinaAgreementSessions_StartAgreementSessionInGame_Response instance using the specified properties.
         * @function create
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Response=} [properties] Properties to set
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Response} CChinaAgreementSessions_StartAgreementSessionInGame_Response instance
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.create = function create(properties) {
            return new CChinaAgreementSessions_StartAgreementSessionInGame_Response(properties);
        };
    
        /**
         * Encodes the specified CChinaAgreementSessions_StartAgreementSessionInGame_Response message. Does not implicitly {@link CChinaAgreementSessions_StartAgreementSessionInGame_Response.verify|verify} messages.
         * @function encode
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Response} message CChinaAgreementSessions_StartAgreementSessionInGame_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.agreementUrl != null && Object.hasOwnProperty.call(message, "agreementUrl"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.agreementUrl);
            return writer;
        };
    
        /**
         * Encodes the specified CChinaAgreementSessions_StartAgreementSessionInGame_Response message, length delimited. Does not implicitly {@link CChinaAgreementSessions_StartAgreementSessionInGame_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Response} message CChinaAgreementSessions_StartAgreementSessionInGame_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChinaAgreementSessions_StartAgreementSessionInGame_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Response} CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChinaAgreementSessions_StartAgreementSessionInGame_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.agreementUrl = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChinaAgreementSessions_StartAgreementSessionInGame_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Response} CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChinaAgreementSessions_StartAgreementSessionInGame_Response message.
         * @function verify
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.agreementUrl != null && message.hasOwnProperty("agreementUrl"))
                if (!$util.isString(message.agreementUrl))
                    return "agreementUrl: string expected";
            return null;
        };
    
        /**
         * Creates a CChinaAgreementSessions_StartAgreementSessionInGame_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Response} CChinaAgreementSessions_StartAgreementSessionInGame_Response
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChinaAgreementSessions_StartAgreementSessionInGame_Response)
                return object;
            var message = new $root.CChinaAgreementSessions_StartAgreementSessionInGame_Response();
            if (object.agreementUrl != null)
                message.agreementUrl = String(object.agreementUrl);
            return message;
        };
    
        /**
         * Creates a plain object from a CChinaAgreementSessions_StartAgreementSessionInGame_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {CChinaAgreementSessions_StartAgreementSessionInGame_Response} message CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.agreementUrl = "";
            if (message.agreementUrl != null && message.hasOwnProperty("agreementUrl"))
                object.agreementUrl = message.agreementUrl;
            return object;
        };
    
        /**
         * Converts this CChinaAgreementSessions_StartAgreementSessionInGame_Response to JSON.
         * @function toJSON
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @function getTypeUrl
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CChinaAgreementSessions_StartAgreementSessionInGame_Response";
        };
    
        return CChinaAgreementSessions_StartAgreementSessionInGame_Response;
    })();
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.file && message.file.length))
                                    message.file = [];
                                message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorSet";
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && Object.hasOwnProperty.call(message, "sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message["package"] = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.dependency && message.dependency.length))
                                    message.dependency = [];
                                message.dependency.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.publicDependency && message.publicDependency.length))
                                    message.publicDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.publicDependency.push(reader.int32());
                                } else
                                    message.publicDependency.push(reader.int32());
                                break;
                            }
                        case 11: {
                                if (!(message.weakDependency && message.weakDependency.length))
                                    message.weakDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.weakDependency.push(reader.int32());
                                } else
                                    message.weakDependency.push(reader.int32());
                                break;
                            }
                        case 4: {
                                if (!(message.messageType && message.messageType.length))
                                    message.messageType = [];
                                message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.service && message.service.length))
                                    message.service = [];
                                message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                                break;
                            }
                        case 12: {
                                message.syntax = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorProto";
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.field && message.field.length))
                                    message.field = [];
                                message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                if (!(message.nestedType && message.nestedType.length))
                                    message.nestedType = [];
                                message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.extensionRange && message.extensionRange.length))
                                    message.extensionRange = [];
                                message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                if (!(message.oneofDecl && message.oneofDecl.length))
                                    message.oneofDecl = [];
                                message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 10: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DescriptorProto";
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ExtensionRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ExtensionRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ExtensionRange";
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ReservedRange";
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && Object.hasOwnProperty.call(message, "typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && Object.hasOwnProperty.call(message, "defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && Object.hasOwnProperty.call(message, "oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && Object.hasOwnProperty.call(message, "jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.number = reader.int32();
                                break;
                            }
                        case 4: {
                                message.label = reader.int32();
                                break;
                            }
                        case 5: {
                                message.type = reader.int32();
                                break;
                            }
                        case 6: {
                                message.typeName = reader.string();
                                break;
                            }
                        case 2: {
                                message.extendee = reader.string();
                                break;
                            }
                        case 7: {
                                message.defaultValue = reader.string();
                                break;
                            }
                        case 9: {
                                message.oneofIndex = reader.int32();
                                break;
                            }
                        case 10: {
                                message.jsonName = reader.string();
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    default:
                        if (typeof object.label === "number") {
                            message.label = object.label;
                            break;
                        }
                        break;
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    default:
                        if (typeof object.type === "number") {
                            message.type = object.type;
                            break;
                        }
                        break;
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] === undefined ? message.label : $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] === undefined ? message.type : $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldDescriptorProto";
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofDescriptorProto";
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.value && message.value.length))
                                    message.value = [];
                                message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.value = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto";
                };
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.number = reader.int32();
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueDescriptorProto";
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.method && message.method.length))
                                    message.method = [];
                                message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceDescriptorProto";
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && Object.hasOwnProperty.call(message, "inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && Object.hasOwnProperty.call(message, "outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && Object.hasOwnProperty.call(message, "clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && Object.hasOwnProperty.call(message, "serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.inputType = reader.string();
                                break;
                            }
                        case 3: {
                                message.outputType = reader.string();
                                break;
                            }
                        case 4: {
                                message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.clientStreaming = reader.bool();
                                break;
                            }
                        case 6: {
                                message.serverStreaming = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodDescriptorProto";
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = false;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && Object.hasOwnProperty.call(message, "javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && Object.hasOwnProperty.call(message, "javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && Object.hasOwnProperty.call(message, "optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && Object.hasOwnProperty.call(message, "javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && Object.hasOwnProperty.call(message, "goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && Object.hasOwnProperty.call(message, "ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && Object.hasOwnProperty.call(message, "javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && Object.hasOwnProperty.call(message, "pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && Object.hasOwnProperty.call(message, "javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && Object.hasOwnProperty.call(message, "javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && Object.hasOwnProperty.call(message, "ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && Object.hasOwnProperty.call(message, "objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && Object.hasOwnProperty.call(message, "csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.javaPackage = reader.string();
                                break;
                            }
                        case 8: {
                                message.javaOuterClassname = reader.string();
                                break;
                            }
                        case 10: {
                                message.javaMultipleFiles = reader.bool();
                                break;
                            }
                        case 20: {
                                message.javaGenerateEqualsAndHash = reader.bool();
                                break;
                            }
                        case 27: {
                                message.javaStringCheckUtf8 = reader.bool();
                                break;
                            }
                        case 9: {
                                message.optimizeFor = reader.int32();
                                break;
                            }
                        case 11: {
                                message.goPackage = reader.string();
                                break;
                            }
                        case 16: {
                                message.ccGenericServices = reader.bool();
                                break;
                            }
                        case 17: {
                                message.javaGenericServices = reader.bool();
                                break;
                            }
                        case 18: {
                                message.pyGenericServices = reader.bool();
                                break;
                            }
                        case 23: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 31: {
                                message.ccEnableArenas = reader.bool();
                                break;
                            }
                        case 36: {
                                message.objcClassPrefix = reader.string();
                                break;
                            }
                        case 37: {
                                message.csharpNamespace = reader.string();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    default:
                        if (typeof object.optimizeFor === "number") {
                            message.optimizeFor = object.optimizeFor;
                            break;
                        }
                        break;
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = false;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] === undefined ? message.optimizeFor : $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileOptions";
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 * @property {number|null} [".msgpoolSoftLimit"] MessageOptions .msgpoolSoftLimit
                 * @property {number|null} [".msgpoolHardLimit"] MessageOptions .msgpoolHardLimit
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MessageOptions .msgpoolSoftLimit.
                 * @member {number} .msgpoolSoftLimit
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".msgpoolSoftLimit"] = 32;
    
                /**
                 * MessageOptions .msgpoolHardLimit.
                 * @member {number} .msgpoolHardLimit
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".msgpoolHardLimit"] = 384;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && Object.hasOwnProperty.call(message, "messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && Object.hasOwnProperty.call(message, "noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && Object.hasOwnProperty.call(message, "mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".msgpoolSoftLimit"] != null && Object.hasOwnProperty.call(message, ".msgpoolSoftLimit"))
                        writer.uint32(/* id 60000, wireType 0 =*/480000).int32(message[".msgpoolSoftLimit"]);
                    if (message[".msgpoolHardLimit"] != null && Object.hasOwnProperty.call(message, ".msgpoolHardLimit"))
                        writer.uint32(/* id 60001, wireType 0 =*/480008).int32(message[".msgpoolHardLimit"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.messageSetWireFormat = reader.bool();
                                break;
                            }
                        case 2: {
                                message.noStandardDescriptorAccessor = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 7: {
                                message.mapEntry = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 60000: {
                                message[".msgpoolSoftLimit"] = reader.int32();
                                break;
                            }
                        case 60001: {
                                message[".msgpoolHardLimit"] = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".msgpoolSoftLimit"] != null && message.hasOwnProperty(".msgpoolSoftLimit"))
                        if (!$util.isInteger(message[".msgpoolSoftLimit"]))
                            return ".msgpoolSoftLimit: integer expected";
                    if (message[".msgpoolHardLimit"] != null && message.hasOwnProperty(".msgpoolHardLimit"))
                        if (!$util.isInteger(message[".msgpoolHardLimit"]))
                            return ".msgpoolHardLimit: integer expected";
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".msgpoolSoftLimit"] != null)
                        message[".msgpoolSoftLimit"] = object[".msgpoolSoftLimit"] | 0;
                    if (object[".msgpoolHardLimit"] != null)
                        message[".msgpoolHardLimit"] = object[".msgpoolHardLimit"] | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                        object[".msgpoolSoftLimit"] = 32;
                        object[".msgpoolHardLimit"] = 384;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".msgpoolSoftLimit"] != null && message.hasOwnProperty(".msgpoolSoftLimit"))
                        object[".msgpoolSoftLimit"] = message[".msgpoolSoftLimit"];
                    if (message[".msgpoolHardLimit"] != null && message.hasOwnProperty(".msgpoolHardLimit"))
                        object[".msgpoolHardLimit"] = message[".msgpoolHardLimit"];
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MessageOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MessageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MessageOptions";
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 * @property {boolean|null} [".keyField"] FieldOptions .keyField
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FieldOptions .keyField.
                 * @member {boolean} .keyField
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".keyField"] = false;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".keyField"] != null && Object.hasOwnProperty.call(message, ".keyField"))
                        writer.uint32(/* id 60000, wireType 0 =*/480000).bool(message[".keyField"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.ctype = reader.int32();
                                break;
                            }
                        case 2: {
                                message.packed = reader.bool();
                                break;
                            }
                        case 6: {
                                message.jstype = reader.int32();
                                break;
                            }
                        case 5: {
                                message.lazy = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 10: {
                                message.weak = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 60000: {
                                message[".keyField"] = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".keyField"] != null && message.hasOwnProperty(".keyField"))
                        if (typeof message[".keyField"] !== "boolean")
                            return ".keyField: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    default:
                        if (typeof object.ctype === "number") {
                            message.ctype = object.ctype;
                            break;
                        }
                        break;
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    default:
                        if (typeof object.jstype === "number") {
                            message.jstype = object.jstype;
                            break;
                        }
                        break;
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".keyField"] != null)
                        message[".keyField"] = Boolean(object[".keyField"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object[".keyField"] = false;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] === undefined ? message.ctype : $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] === undefined ? message.jstype : $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".keyField"] != null && message.hasOwnProperty(".keyField"))
                        object[".keyField"] = message[".keyField"];
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldOptions";
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofOptions";
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && Object.hasOwnProperty.call(message, "allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                message.allowAlias = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumOptions";
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueOptions";
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceOptions";
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodOptions";
                };
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && Object.hasOwnProperty.call(message, "identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && Object.hasOwnProperty.call(message, "positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && Object.hasOwnProperty.call(message, "negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && Object.hasOwnProperty.call(message, "aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.name && message.name.length))
                                    message.name = [];
                                message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.identifierValue = reader.string();
                                break;
                            }
                        case 4: {
                                message.positiveIntValue = reader.uint64();
                                break;
                            }
                        case 5: {
                                message.negativeIntValue = reader.int64();
                                break;
                            }
                        case 6: {
                                message.doubleValue = reader.double();
                                break;
                            }
                        case 7: {
                                message.stringValue = reader.bytes();
                                break;
                            }
                        case 8: {
                                message.aggregateValue = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length >= 0)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UninterpretedOption
                 * @function getTypeUrl
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UninterpretedOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UninterpretedOption";
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.namePart = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.isExtension = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NamePart
                     * @function getTypeUrl
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NamePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.UninterpretedOption.NamePart";
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.location && message.location.length))
                                    message.location = [];
                                message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for SourceCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SourceCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.SourceCodeInfo";
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && Object.hasOwnProperty.call(message, "leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && Object.hasOwnProperty.call(message, "trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    if (!(message.span && message.span.length))
                                        message.span = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.span.push(reader.int32());
                                    } else
                                        message.span.push(reader.int32());
                                    break;
                                }
                            case 3: {
                                    message.leadingComments = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.trailingComments = reader.string();
                                    break;
                                }
                            case 6: {
                                    if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                        message.leadingDetachedComments = [];
                                    message.leadingDetachedComments.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Location
                     * @function getTypeUrl
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.SourceCodeInfo.Location";
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.annotation && message.annotation.length))
                                    message.annotation = [];
                                message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GeneratedCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GeneratedCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo";
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && Object.hasOwnProperty.call(message, "sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    message.sourceFile = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.begin = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Annotation
                     * @function getTypeUrl
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Annotation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo.Annotation";
                    };
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            return protobuf;
        })();
    
        return google;
    })();

    return $root;
});
