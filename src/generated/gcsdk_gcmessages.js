/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("protobufjs/minimal"));

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots["default"] || ($protobuf.roots["default"] = {});
    
    /**
     * GCClientLauncherType enum.
     * @exports GCClientLauncherType
     * @enum {number}
     * @property {number} GCClientLauncherType_DEFAULT=0 GCClientLauncherType_DEFAULT value
     * @property {number} GCClientLauncherType_PERFECTWORLD=1 GCClientLauncherType_PERFECTWORLD value
     * @property {number} GCClientLauncherType_STEAMCHINA=2 GCClientLauncherType_STEAMCHINA value
     */
    $root.GCClientLauncherType = (function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[0] = "GCClientLauncherType_DEFAULT"] = 0;
        values[valuesById[1] = "GCClientLauncherType_PERFECTWORLD"] = 1;
        values[valuesById[2] = "GCClientLauncherType_STEAMCHINA"] = 2;
        return values;
    })();
    
    /**
     * GCConnectionStatus enum.
     * @exports GCConnectionStatus
     * @enum {number}
     * @property {number} GCConnectionStatus_HAVE_SESSION=0 GCConnectionStatus_HAVE_SESSION value
     * @property {number} GCConnectionStatus_GC_GOING_DOWN=1 GCConnectionStatus_GC_GOING_DOWN value
     * @property {number} GCConnectionStatus_NO_SESSION=2 GCConnectionStatus_NO_SESSION value
     * @property {number} GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE=3 GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE value
     * @property {number} GCConnectionStatus_NO_STEAM=4 GCConnectionStatus_NO_STEAM value
     */
    $root.GCConnectionStatus = (function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[0] = "GCConnectionStatus_HAVE_SESSION"] = 0;
        values[valuesById[1] = "GCConnectionStatus_GC_GOING_DOWN"] = 1;
        values[valuesById[2] = "GCConnectionStatus_NO_SESSION"] = 2;
        values[valuesById[3] = "GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE"] = 3;
        values[valuesById[4] = "GCConnectionStatus_NO_STEAM"] = 4;
        return values;
    })();
    
    $root.CMsgSOIDOwner = (function() {
    
        /**
         * Properties of a CMsgSOIDOwner.
         * @exports ICMsgSOIDOwner
         * @interface ICMsgSOIDOwner
         * @property {number|null} [type] CMsgSOIDOwner type
         * @property {number|Long|null} [id] CMsgSOIDOwner id
         */
    
        /**
         * Constructs a new CMsgSOIDOwner.
         * @exports CMsgSOIDOwner
         * @classdesc Represents a CMsgSOIDOwner.
         * @implements ICMsgSOIDOwner
         * @constructor
         * @param {ICMsgSOIDOwner=} [properties] Properties to set
         */
        function CMsgSOIDOwner(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgSOIDOwner type.
         * @member {number} type
         * @memberof CMsgSOIDOwner
         * @instance
         */
        CMsgSOIDOwner.prototype.type = 0;
    
        /**
         * CMsgSOIDOwner id.
         * @member {number|Long} id
         * @memberof CMsgSOIDOwner
         * @instance
         */
        CMsgSOIDOwner.prototype.id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgSOIDOwner instance using the specified properties.
         * @function create
         * @memberof CMsgSOIDOwner
         * @static
         * @param {ICMsgSOIDOwner=} [properties] Properties to set
         * @returns {CMsgSOIDOwner} CMsgSOIDOwner instance
         */
        CMsgSOIDOwner.create = function create(properties) {
            return new CMsgSOIDOwner(properties);
        };
    
        /**
         * Encodes the specified CMsgSOIDOwner message. Does not implicitly {@link CMsgSOIDOwner.verify|verify} messages.
         * @function encode
         * @memberof CMsgSOIDOwner
         * @static
         * @param {ICMsgSOIDOwner} message CMsgSOIDOwner message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOIDOwner.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.type);
            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgSOIDOwner message, length delimited. Does not implicitly {@link CMsgSOIDOwner.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgSOIDOwner
         * @static
         * @param {ICMsgSOIDOwner} message CMsgSOIDOwner message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOIDOwner.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgSOIDOwner message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgSOIDOwner
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgSOIDOwner} CMsgSOIDOwner
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOIDOwner.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSOIDOwner();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.type = reader.uint32();
                        break;
                    }
                case 2: {
                        message.id = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgSOIDOwner message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgSOIDOwner
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgSOIDOwner} CMsgSOIDOwner
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOIDOwner.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgSOIDOwner message.
         * @function verify
         * @memberof CMsgSOIDOwner
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgSOIDOwner.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.type != null && message.hasOwnProperty("type"))
                if (!$util.isInteger(message.type))
                    return "type: integer expected";
            if (message.id != null && message.hasOwnProperty("id"))
                if (!$util.isInteger(message.id) && !(message.id && $util.isInteger(message.id.low) && $util.isInteger(message.id.high)))
                    return "id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgSOIDOwner message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgSOIDOwner
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgSOIDOwner} CMsgSOIDOwner
         */
        CMsgSOIDOwner.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgSOIDOwner)
                return object;
            var message = new $root.CMsgSOIDOwner();
            if (object.type != null)
                message.type = object.type >>> 0;
            if (object.id != null)
                if ($util.Long)
                    (message.id = $util.Long.fromValue(object.id)).unsigned = true;
                else if (typeof object.id === "string")
                    message.id = parseInt(object.id, 10);
                else if (typeof object.id === "number")
                    message.id = object.id;
                else if (typeof object.id === "object")
                    message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgSOIDOwner message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgSOIDOwner
         * @static
         * @param {CMsgSOIDOwner} message CMsgSOIDOwner
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgSOIDOwner.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.type = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.id = options.longs === String ? "0" : 0;
            }
            if (message.type != null && message.hasOwnProperty("type"))
                object.type = message.type;
            if (message.id != null && message.hasOwnProperty("id"))
                if (typeof message.id === "number")
                    object.id = options.longs === String ? String(message.id) : message.id;
                else
                    object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber(true) : message.id;
            return object;
        };
    
        /**
         * Converts this CMsgSOIDOwner to JSON.
         * @function toJSON
         * @memberof CMsgSOIDOwner
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgSOIDOwner.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgSOIDOwner
         * @function getTypeUrl
         * @memberof CMsgSOIDOwner
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgSOIDOwner.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgSOIDOwner";
        };
    
        return CMsgSOIDOwner;
    })();
    
    $root.CMsgSOSingleObject = (function() {
    
        /**
         * Properties of a CMsgSOSingleObject.
         * @exports ICMsgSOSingleObject
         * @interface ICMsgSOSingleObject
         * @property {number|null} [typeId] CMsgSOSingleObject typeId
         * @property {Uint8Array|null} [objectData] CMsgSOSingleObject objectData
         * @property {number|Long|null} [version] CMsgSOSingleObject version
         * @property {ICMsgSOIDOwner|null} [ownerSoid] CMsgSOSingleObject ownerSoid
         */
    
        /**
         * Constructs a new CMsgSOSingleObject.
         * @exports CMsgSOSingleObject
         * @classdesc Represents a CMsgSOSingleObject.
         * @implements ICMsgSOSingleObject
         * @constructor
         * @param {ICMsgSOSingleObject=} [properties] Properties to set
         */
        function CMsgSOSingleObject(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgSOSingleObject typeId.
         * @member {number} typeId
         * @memberof CMsgSOSingleObject
         * @instance
         */
        CMsgSOSingleObject.prototype.typeId = 0;
    
        /**
         * CMsgSOSingleObject objectData.
         * @member {Uint8Array} objectData
         * @memberof CMsgSOSingleObject
         * @instance
         */
        CMsgSOSingleObject.prototype.objectData = $util.newBuffer([]);
    
        /**
         * CMsgSOSingleObject version.
         * @member {number|Long} version
         * @memberof CMsgSOSingleObject
         * @instance
         */
        CMsgSOSingleObject.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgSOSingleObject ownerSoid.
         * @member {ICMsgSOIDOwner|null|undefined} ownerSoid
         * @memberof CMsgSOSingleObject
         * @instance
         */
        CMsgSOSingleObject.prototype.ownerSoid = null;
    
        /**
         * Creates a new CMsgSOSingleObject instance using the specified properties.
         * @function create
         * @memberof CMsgSOSingleObject
         * @static
         * @param {ICMsgSOSingleObject=} [properties] Properties to set
         * @returns {CMsgSOSingleObject} CMsgSOSingleObject instance
         */
        CMsgSOSingleObject.create = function create(properties) {
            return new CMsgSOSingleObject(properties);
        };
    
        /**
         * Encodes the specified CMsgSOSingleObject message. Does not implicitly {@link CMsgSOSingleObject.verify|verify} messages.
         * @function encode
         * @memberof CMsgSOSingleObject
         * @static
         * @param {ICMsgSOSingleObject} message CMsgSOSingleObject message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOSingleObject.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.typeId != null && Object.hasOwnProperty.call(message, "typeId"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.typeId);
            if (message.objectData != null && Object.hasOwnProperty.call(message, "objectData"))
                writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.objectData);
            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                writer.uint32(/* id 4, wireType 1 =*/33).fixed64(message.version);
            if (message.ownerSoid != null && Object.hasOwnProperty.call(message, "ownerSoid"))
                $root.CMsgSOIDOwner.encode(message.ownerSoid, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgSOSingleObject message, length delimited. Does not implicitly {@link CMsgSOSingleObject.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgSOSingleObject
         * @static
         * @param {ICMsgSOSingleObject} message CMsgSOSingleObject message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOSingleObject.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgSOSingleObject message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgSOSingleObject
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgSOSingleObject} CMsgSOSingleObject
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOSingleObject.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSOSingleObject();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 2: {
                        message.typeId = reader.int32();
                        break;
                    }
                case 3: {
                        message.objectData = reader.bytes();
                        break;
                    }
                case 4: {
                        message.version = reader.fixed64();
                        break;
                    }
                case 5: {
                        message.ownerSoid = $root.CMsgSOIDOwner.decode(reader, reader.uint32());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgSOSingleObject message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgSOSingleObject
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgSOSingleObject} CMsgSOSingleObject
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOSingleObject.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgSOSingleObject message.
         * @function verify
         * @memberof CMsgSOSingleObject
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgSOSingleObject.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.typeId != null && message.hasOwnProperty("typeId"))
                if (!$util.isInteger(message.typeId))
                    return "typeId: integer expected";
            if (message.objectData != null && message.hasOwnProperty("objectData"))
                if (!(message.objectData && typeof message.objectData.length === "number" || $util.isString(message.objectData)))
                    return "objectData: buffer expected";
            if (message.version != null && message.hasOwnProperty("version"))
                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))
                    return "version: integer|Long expected";
            if (message.ownerSoid != null && message.hasOwnProperty("ownerSoid")) {
                var error = $root.CMsgSOIDOwner.verify(message.ownerSoid);
                if (error)
                    return "ownerSoid." + error;
            }
            return null;
        };
    
        /**
         * Creates a CMsgSOSingleObject message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgSOSingleObject
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgSOSingleObject} CMsgSOSingleObject
         */
        CMsgSOSingleObject.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgSOSingleObject)
                return object;
            var message = new $root.CMsgSOSingleObject();
            if (object.typeId != null)
                message.typeId = object.typeId | 0;
            if (object.objectData != null)
                if (typeof object.objectData === "string")
                    $util.base64.decode(object.objectData, message.objectData = $util.newBuffer($util.base64.length(object.objectData)), 0);
                else if (object.objectData.length >= 0)
                    message.objectData = object.objectData;
            if (object.version != null)
                if ($util.Long)
                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;
                else if (typeof object.version === "string")
                    message.version = parseInt(object.version, 10);
                else if (typeof object.version === "number")
                    message.version = object.version;
                else if (typeof object.version === "object")
                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();
            if (object.ownerSoid != null) {
                if (typeof object.ownerSoid !== "object")
                    throw TypeError(".CMsgSOSingleObject.ownerSoid: object expected");
                message.ownerSoid = $root.CMsgSOIDOwner.fromObject(object.ownerSoid);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgSOSingleObject message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgSOSingleObject
         * @static
         * @param {CMsgSOSingleObject} message CMsgSOSingleObject
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgSOSingleObject.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.typeId = 0;
                if (options.bytes === String)
                    object.objectData = "";
                else {
                    object.objectData = [];
                    if (options.bytes !== Array)
                        object.objectData = $util.newBuffer(object.objectData);
                }
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.version = options.longs === String ? "0" : 0;
                object.ownerSoid = null;
            }
            if (message.typeId != null && message.hasOwnProperty("typeId"))
                object.typeId = message.typeId;
            if (message.objectData != null && message.hasOwnProperty("objectData"))
                object.objectData = options.bytes === String ? $util.base64.encode(message.objectData, 0, message.objectData.length) : options.bytes === Array ? Array.prototype.slice.call(message.objectData) : message.objectData;
            if (message.version != null && message.hasOwnProperty("version"))
                if (typeof message.version === "number")
                    object.version = options.longs === String ? String(message.version) : message.version;
                else
                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;
            if (message.ownerSoid != null && message.hasOwnProperty("ownerSoid"))
                object.ownerSoid = $root.CMsgSOIDOwner.toObject(message.ownerSoid, options);
            return object;
        };
    
        /**
         * Converts this CMsgSOSingleObject to JSON.
         * @function toJSON
         * @memberof CMsgSOSingleObject
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgSOSingleObject.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgSOSingleObject
         * @function getTypeUrl
         * @memberof CMsgSOSingleObject
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgSOSingleObject.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgSOSingleObject";
        };
    
        return CMsgSOSingleObject;
    })();
    
    $root.CMsgSOMultipleObjects = (function() {
    
        /**
         * Properties of a CMsgSOMultipleObjects.
         * @exports ICMsgSOMultipleObjects
         * @interface ICMsgSOMultipleObjects
         * @property {Array.<CMsgSOMultipleObjects.ISingleObject>|null} [objectsModified] CMsgSOMultipleObjects objectsModified
         * @property {number|Long|null} [version] CMsgSOMultipleObjects version
         * @property {ICMsgSOIDOwner|null} [ownerSoid] CMsgSOMultipleObjects ownerSoid
         */
    
        /**
         * Constructs a new CMsgSOMultipleObjects.
         * @exports CMsgSOMultipleObjects
         * @classdesc Represents a CMsgSOMultipleObjects.
         * @implements ICMsgSOMultipleObjects
         * @constructor
         * @param {ICMsgSOMultipleObjects=} [properties] Properties to set
         */
        function CMsgSOMultipleObjects(properties) {
            this.objectsModified = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgSOMultipleObjects objectsModified.
         * @member {Array.<CMsgSOMultipleObjects.ISingleObject>} objectsModified
         * @memberof CMsgSOMultipleObjects
         * @instance
         */
        CMsgSOMultipleObjects.prototype.objectsModified = $util.emptyArray;
    
        /**
         * CMsgSOMultipleObjects version.
         * @member {number|Long} version
         * @memberof CMsgSOMultipleObjects
         * @instance
         */
        CMsgSOMultipleObjects.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgSOMultipleObjects ownerSoid.
         * @member {ICMsgSOIDOwner|null|undefined} ownerSoid
         * @memberof CMsgSOMultipleObjects
         * @instance
         */
        CMsgSOMultipleObjects.prototype.ownerSoid = null;
    
        /**
         * Creates a new CMsgSOMultipleObjects instance using the specified properties.
         * @function create
         * @memberof CMsgSOMultipleObjects
         * @static
         * @param {ICMsgSOMultipleObjects=} [properties] Properties to set
         * @returns {CMsgSOMultipleObjects} CMsgSOMultipleObjects instance
         */
        CMsgSOMultipleObjects.create = function create(properties) {
            return new CMsgSOMultipleObjects(properties);
        };
    
        /**
         * Encodes the specified CMsgSOMultipleObjects message. Does not implicitly {@link CMsgSOMultipleObjects.verify|verify} messages.
         * @function encode
         * @memberof CMsgSOMultipleObjects
         * @static
         * @param {ICMsgSOMultipleObjects} message CMsgSOMultipleObjects message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOMultipleObjects.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.objectsModified != null && message.objectsModified.length)
                for (var i = 0; i < message.objectsModified.length; ++i)
                    $root.CMsgSOMultipleObjects.SingleObject.encode(message.objectsModified[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.version);
            if (message.ownerSoid != null && Object.hasOwnProperty.call(message, "ownerSoid"))
                $root.CMsgSOIDOwner.encode(message.ownerSoid, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgSOMultipleObjects message, length delimited. Does not implicitly {@link CMsgSOMultipleObjects.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgSOMultipleObjects
         * @static
         * @param {ICMsgSOMultipleObjects} message CMsgSOMultipleObjects message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOMultipleObjects.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgSOMultipleObjects message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgSOMultipleObjects
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgSOMultipleObjects} CMsgSOMultipleObjects
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOMultipleObjects.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSOMultipleObjects();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 2: {
                        if (!(message.objectsModified && message.objectsModified.length))
                            message.objectsModified = [];
                        message.objectsModified.push($root.CMsgSOMultipleObjects.SingleObject.decode(reader, reader.uint32()));
                        break;
                    }
                case 3: {
                        message.version = reader.fixed64();
                        break;
                    }
                case 6: {
                        message.ownerSoid = $root.CMsgSOIDOwner.decode(reader, reader.uint32());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgSOMultipleObjects message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgSOMultipleObjects
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgSOMultipleObjects} CMsgSOMultipleObjects
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOMultipleObjects.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgSOMultipleObjects message.
         * @function verify
         * @memberof CMsgSOMultipleObjects
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgSOMultipleObjects.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.objectsModified != null && message.hasOwnProperty("objectsModified")) {
                if (!Array.isArray(message.objectsModified))
                    return "objectsModified: array expected";
                for (var i = 0; i < message.objectsModified.length; ++i) {
                    var error = $root.CMsgSOMultipleObjects.SingleObject.verify(message.objectsModified[i]);
                    if (error)
                        return "objectsModified." + error;
                }
            }
            if (message.version != null && message.hasOwnProperty("version"))
                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))
                    return "version: integer|Long expected";
            if (message.ownerSoid != null && message.hasOwnProperty("ownerSoid")) {
                var error = $root.CMsgSOIDOwner.verify(message.ownerSoid);
                if (error)
                    return "ownerSoid." + error;
            }
            return null;
        };
    
        /**
         * Creates a CMsgSOMultipleObjects message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgSOMultipleObjects
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgSOMultipleObjects} CMsgSOMultipleObjects
         */
        CMsgSOMultipleObjects.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgSOMultipleObjects)
                return object;
            var message = new $root.CMsgSOMultipleObjects();
            if (object.objectsModified) {
                if (!Array.isArray(object.objectsModified))
                    throw TypeError(".CMsgSOMultipleObjects.objectsModified: array expected");
                message.objectsModified = [];
                for (var i = 0; i < object.objectsModified.length; ++i) {
                    if (typeof object.objectsModified[i] !== "object")
                        throw TypeError(".CMsgSOMultipleObjects.objectsModified: object expected");
                    message.objectsModified[i] = $root.CMsgSOMultipleObjects.SingleObject.fromObject(object.objectsModified[i]);
                }
            }
            if (object.version != null)
                if ($util.Long)
                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;
                else if (typeof object.version === "string")
                    message.version = parseInt(object.version, 10);
                else if (typeof object.version === "number")
                    message.version = object.version;
                else if (typeof object.version === "object")
                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();
            if (object.ownerSoid != null) {
                if (typeof object.ownerSoid !== "object")
                    throw TypeError(".CMsgSOMultipleObjects.ownerSoid: object expected");
                message.ownerSoid = $root.CMsgSOIDOwner.fromObject(object.ownerSoid);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgSOMultipleObjects message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgSOMultipleObjects
         * @static
         * @param {CMsgSOMultipleObjects} message CMsgSOMultipleObjects
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgSOMultipleObjects.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.objectsModified = [];
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.version = options.longs === String ? "0" : 0;
                object.ownerSoid = null;
            }
            if (message.objectsModified && message.objectsModified.length) {
                object.objectsModified = [];
                for (var j = 0; j < message.objectsModified.length; ++j)
                    object.objectsModified[j] = $root.CMsgSOMultipleObjects.SingleObject.toObject(message.objectsModified[j], options);
            }
            if (message.version != null && message.hasOwnProperty("version"))
                if (typeof message.version === "number")
                    object.version = options.longs === String ? String(message.version) : message.version;
                else
                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;
            if (message.ownerSoid != null && message.hasOwnProperty("ownerSoid"))
                object.ownerSoid = $root.CMsgSOIDOwner.toObject(message.ownerSoid, options);
            return object;
        };
    
        /**
         * Converts this CMsgSOMultipleObjects to JSON.
         * @function toJSON
         * @memberof CMsgSOMultipleObjects
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgSOMultipleObjects.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgSOMultipleObjects
         * @function getTypeUrl
         * @memberof CMsgSOMultipleObjects
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgSOMultipleObjects.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgSOMultipleObjects";
        };
    
        CMsgSOMultipleObjects.SingleObject = (function() {
    
            /**
             * Properties of a SingleObject.
             * @memberof CMsgSOMultipleObjects
             * @interface ISingleObject
             * @property {number|null} [typeId] SingleObject typeId
             * @property {Uint8Array|null} [objectData] SingleObject objectData
             */
    
            /**
             * Constructs a new SingleObject.
             * @memberof CMsgSOMultipleObjects
             * @classdesc Represents a SingleObject.
             * @implements ISingleObject
             * @constructor
             * @param {CMsgSOMultipleObjects.ISingleObject=} [properties] Properties to set
             */
            function SingleObject(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * SingleObject typeId.
             * @member {number} typeId
             * @memberof CMsgSOMultipleObjects.SingleObject
             * @instance
             */
            SingleObject.prototype.typeId = 0;
    
            /**
             * SingleObject objectData.
             * @member {Uint8Array} objectData
             * @memberof CMsgSOMultipleObjects.SingleObject
             * @instance
             */
            SingleObject.prototype.objectData = $util.newBuffer([]);
    
            /**
             * Creates a new SingleObject instance using the specified properties.
             * @function create
             * @memberof CMsgSOMultipleObjects.SingleObject
             * @static
             * @param {CMsgSOMultipleObjects.ISingleObject=} [properties] Properties to set
             * @returns {CMsgSOMultipleObjects.SingleObject} SingleObject instance
             */
            SingleObject.create = function create(properties) {
                return new SingleObject(properties);
            };
    
            /**
             * Encodes the specified SingleObject message. Does not implicitly {@link CMsgSOMultipleObjects.SingleObject.verify|verify} messages.
             * @function encode
             * @memberof CMsgSOMultipleObjects.SingleObject
             * @static
             * @param {CMsgSOMultipleObjects.ISingleObject} message SingleObject message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SingleObject.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.typeId != null && Object.hasOwnProperty.call(message, "typeId"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.typeId);
                if (message.objectData != null && Object.hasOwnProperty.call(message, "objectData"))
                    writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.objectData);
                return writer;
            };
    
            /**
             * Encodes the specified SingleObject message, length delimited. Does not implicitly {@link CMsgSOMultipleObjects.SingleObject.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgSOMultipleObjects.SingleObject
             * @static
             * @param {CMsgSOMultipleObjects.ISingleObject} message SingleObject message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SingleObject.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a SingleObject message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgSOMultipleObjects.SingleObject
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgSOMultipleObjects.SingleObject} SingleObject
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SingleObject.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSOMultipleObjects.SingleObject();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.typeId = reader.int32();
                            break;
                        }
                    case 2: {
                            message.objectData = reader.bytes();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a SingleObject message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgSOMultipleObjects.SingleObject
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgSOMultipleObjects.SingleObject} SingleObject
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SingleObject.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a SingleObject message.
             * @function verify
             * @memberof CMsgSOMultipleObjects.SingleObject
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SingleObject.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.typeId != null && message.hasOwnProperty("typeId"))
                    if (!$util.isInteger(message.typeId))
                        return "typeId: integer expected";
                if (message.objectData != null && message.hasOwnProperty("objectData"))
                    if (!(message.objectData && typeof message.objectData.length === "number" || $util.isString(message.objectData)))
                        return "objectData: buffer expected";
                return null;
            };
    
            /**
             * Creates a SingleObject message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgSOMultipleObjects.SingleObject
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgSOMultipleObjects.SingleObject} SingleObject
             */
            SingleObject.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgSOMultipleObjects.SingleObject)
                    return object;
                var message = new $root.CMsgSOMultipleObjects.SingleObject();
                if (object.typeId != null)
                    message.typeId = object.typeId | 0;
                if (object.objectData != null)
                    if (typeof object.objectData === "string")
                        $util.base64.decode(object.objectData, message.objectData = $util.newBuffer($util.base64.length(object.objectData)), 0);
                    else if (object.objectData.length >= 0)
                        message.objectData = object.objectData;
                return message;
            };
    
            /**
             * Creates a plain object from a SingleObject message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgSOMultipleObjects.SingleObject
             * @static
             * @param {CMsgSOMultipleObjects.SingleObject} message SingleObject
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SingleObject.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.typeId = 0;
                    if (options.bytes === String)
                        object.objectData = "";
                    else {
                        object.objectData = [];
                        if (options.bytes !== Array)
                            object.objectData = $util.newBuffer(object.objectData);
                    }
                }
                if (message.typeId != null && message.hasOwnProperty("typeId"))
                    object.typeId = message.typeId;
                if (message.objectData != null && message.hasOwnProperty("objectData"))
                    object.objectData = options.bytes === String ? $util.base64.encode(message.objectData, 0, message.objectData.length) : options.bytes === Array ? Array.prototype.slice.call(message.objectData) : message.objectData;
                return object;
            };
    
            /**
             * Converts this SingleObject to JSON.
             * @function toJSON
             * @memberof CMsgSOMultipleObjects.SingleObject
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SingleObject.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for SingleObject
             * @function getTypeUrl
             * @memberof CMsgSOMultipleObjects.SingleObject
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SingleObject.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgSOMultipleObjects.SingleObject";
            };
    
            return SingleObject;
        })();
    
        return CMsgSOMultipleObjects;
    })();
    
    $root.CMsgSOCacheSubscribed = (function() {
    
        /**
         * Properties of a CMsgSOCacheSubscribed.
         * @exports ICMsgSOCacheSubscribed
         * @interface ICMsgSOCacheSubscribed
         * @property {Array.<CMsgSOCacheSubscribed.ISubscribedType>|null} [objects] CMsgSOCacheSubscribed objects
         * @property {number|Long|null} [version] CMsgSOCacheSubscribed version
         * @property {ICMsgSOIDOwner|null} [ownerSoid] CMsgSOCacheSubscribed ownerSoid
         */
    
        /**
         * Constructs a new CMsgSOCacheSubscribed.
         * @exports CMsgSOCacheSubscribed
         * @classdesc Represents a CMsgSOCacheSubscribed.
         * @implements ICMsgSOCacheSubscribed
         * @constructor
         * @param {ICMsgSOCacheSubscribed=} [properties] Properties to set
         */
        function CMsgSOCacheSubscribed(properties) {
            this.objects = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgSOCacheSubscribed objects.
         * @member {Array.<CMsgSOCacheSubscribed.ISubscribedType>} objects
         * @memberof CMsgSOCacheSubscribed
         * @instance
         */
        CMsgSOCacheSubscribed.prototype.objects = $util.emptyArray;
    
        /**
         * CMsgSOCacheSubscribed version.
         * @member {number|Long} version
         * @memberof CMsgSOCacheSubscribed
         * @instance
         */
        CMsgSOCacheSubscribed.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgSOCacheSubscribed ownerSoid.
         * @member {ICMsgSOIDOwner|null|undefined} ownerSoid
         * @memberof CMsgSOCacheSubscribed
         * @instance
         */
        CMsgSOCacheSubscribed.prototype.ownerSoid = null;
    
        /**
         * Creates a new CMsgSOCacheSubscribed instance using the specified properties.
         * @function create
         * @memberof CMsgSOCacheSubscribed
         * @static
         * @param {ICMsgSOCacheSubscribed=} [properties] Properties to set
         * @returns {CMsgSOCacheSubscribed} CMsgSOCacheSubscribed instance
         */
        CMsgSOCacheSubscribed.create = function create(properties) {
            return new CMsgSOCacheSubscribed(properties);
        };
    
        /**
         * Encodes the specified CMsgSOCacheSubscribed message. Does not implicitly {@link CMsgSOCacheSubscribed.verify|verify} messages.
         * @function encode
         * @memberof CMsgSOCacheSubscribed
         * @static
         * @param {ICMsgSOCacheSubscribed} message CMsgSOCacheSubscribed message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOCacheSubscribed.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.objects != null && message.objects.length)
                for (var i = 0; i < message.objects.length; ++i)
                    $root.CMsgSOCacheSubscribed.SubscribedType.encode(message.objects[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.version);
            if (message.ownerSoid != null && Object.hasOwnProperty.call(message, "ownerSoid"))
                $root.CMsgSOIDOwner.encode(message.ownerSoid, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgSOCacheSubscribed message, length delimited. Does not implicitly {@link CMsgSOCacheSubscribed.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgSOCacheSubscribed
         * @static
         * @param {ICMsgSOCacheSubscribed} message CMsgSOCacheSubscribed message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOCacheSubscribed.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgSOCacheSubscribed message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgSOCacheSubscribed
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgSOCacheSubscribed} CMsgSOCacheSubscribed
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOCacheSubscribed.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSOCacheSubscribed();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 2: {
                        if (!(message.objects && message.objects.length))
                            message.objects = [];
                        message.objects.push($root.CMsgSOCacheSubscribed.SubscribedType.decode(reader, reader.uint32()));
                        break;
                    }
                case 3: {
                        message.version = reader.fixed64();
                        break;
                    }
                case 4: {
                        message.ownerSoid = $root.CMsgSOIDOwner.decode(reader, reader.uint32());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgSOCacheSubscribed message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgSOCacheSubscribed
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgSOCacheSubscribed} CMsgSOCacheSubscribed
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOCacheSubscribed.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgSOCacheSubscribed message.
         * @function verify
         * @memberof CMsgSOCacheSubscribed
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgSOCacheSubscribed.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.objects != null && message.hasOwnProperty("objects")) {
                if (!Array.isArray(message.objects))
                    return "objects: array expected";
                for (var i = 0; i < message.objects.length; ++i) {
                    var error = $root.CMsgSOCacheSubscribed.SubscribedType.verify(message.objects[i]);
                    if (error)
                        return "objects." + error;
                }
            }
            if (message.version != null && message.hasOwnProperty("version"))
                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))
                    return "version: integer|Long expected";
            if (message.ownerSoid != null && message.hasOwnProperty("ownerSoid")) {
                var error = $root.CMsgSOIDOwner.verify(message.ownerSoid);
                if (error)
                    return "ownerSoid." + error;
            }
            return null;
        };
    
        /**
         * Creates a CMsgSOCacheSubscribed message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgSOCacheSubscribed
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgSOCacheSubscribed} CMsgSOCacheSubscribed
         */
        CMsgSOCacheSubscribed.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgSOCacheSubscribed)
                return object;
            var message = new $root.CMsgSOCacheSubscribed();
            if (object.objects) {
                if (!Array.isArray(object.objects))
                    throw TypeError(".CMsgSOCacheSubscribed.objects: array expected");
                message.objects = [];
                for (var i = 0; i < object.objects.length; ++i) {
                    if (typeof object.objects[i] !== "object")
                        throw TypeError(".CMsgSOCacheSubscribed.objects: object expected");
                    message.objects[i] = $root.CMsgSOCacheSubscribed.SubscribedType.fromObject(object.objects[i]);
                }
            }
            if (object.version != null)
                if ($util.Long)
                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;
                else if (typeof object.version === "string")
                    message.version = parseInt(object.version, 10);
                else if (typeof object.version === "number")
                    message.version = object.version;
                else if (typeof object.version === "object")
                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();
            if (object.ownerSoid != null) {
                if (typeof object.ownerSoid !== "object")
                    throw TypeError(".CMsgSOCacheSubscribed.ownerSoid: object expected");
                message.ownerSoid = $root.CMsgSOIDOwner.fromObject(object.ownerSoid);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgSOCacheSubscribed message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgSOCacheSubscribed
         * @static
         * @param {CMsgSOCacheSubscribed} message CMsgSOCacheSubscribed
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgSOCacheSubscribed.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.objects = [];
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.version = options.longs === String ? "0" : 0;
                object.ownerSoid = null;
            }
            if (message.objects && message.objects.length) {
                object.objects = [];
                for (var j = 0; j < message.objects.length; ++j)
                    object.objects[j] = $root.CMsgSOCacheSubscribed.SubscribedType.toObject(message.objects[j], options);
            }
            if (message.version != null && message.hasOwnProperty("version"))
                if (typeof message.version === "number")
                    object.version = options.longs === String ? String(message.version) : message.version;
                else
                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;
            if (message.ownerSoid != null && message.hasOwnProperty("ownerSoid"))
                object.ownerSoid = $root.CMsgSOIDOwner.toObject(message.ownerSoid, options);
            return object;
        };
    
        /**
         * Converts this CMsgSOCacheSubscribed to JSON.
         * @function toJSON
         * @memberof CMsgSOCacheSubscribed
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgSOCacheSubscribed.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgSOCacheSubscribed
         * @function getTypeUrl
         * @memberof CMsgSOCacheSubscribed
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgSOCacheSubscribed.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgSOCacheSubscribed";
        };
    
        CMsgSOCacheSubscribed.SubscribedType = (function() {
    
            /**
             * Properties of a SubscribedType.
             * @memberof CMsgSOCacheSubscribed
             * @interface ISubscribedType
             * @property {number|null} [typeId] SubscribedType typeId
             * @property {Array.<Uint8Array>|null} [objectData] SubscribedType objectData
             */
    
            /**
             * Constructs a new SubscribedType.
             * @memberof CMsgSOCacheSubscribed
             * @classdesc Represents a SubscribedType.
             * @implements ISubscribedType
             * @constructor
             * @param {CMsgSOCacheSubscribed.ISubscribedType=} [properties] Properties to set
             */
            function SubscribedType(properties) {
                this.objectData = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * SubscribedType typeId.
             * @member {number} typeId
             * @memberof CMsgSOCacheSubscribed.SubscribedType
             * @instance
             */
            SubscribedType.prototype.typeId = 0;
    
            /**
             * SubscribedType objectData.
             * @member {Array.<Uint8Array>} objectData
             * @memberof CMsgSOCacheSubscribed.SubscribedType
             * @instance
             */
            SubscribedType.prototype.objectData = $util.emptyArray;
    
            /**
             * Creates a new SubscribedType instance using the specified properties.
             * @function create
             * @memberof CMsgSOCacheSubscribed.SubscribedType
             * @static
             * @param {CMsgSOCacheSubscribed.ISubscribedType=} [properties] Properties to set
             * @returns {CMsgSOCacheSubscribed.SubscribedType} SubscribedType instance
             */
            SubscribedType.create = function create(properties) {
                return new SubscribedType(properties);
            };
    
            /**
             * Encodes the specified SubscribedType message. Does not implicitly {@link CMsgSOCacheSubscribed.SubscribedType.verify|verify} messages.
             * @function encode
             * @memberof CMsgSOCacheSubscribed.SubscribedType
             * @static
             * @param {CMsgSOCacheSubscribed.ISubscribedType} message SubscribedType message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SubscribedType.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.typeId != null && Object.hasOwnProperty.call(message, "typeId"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.typeId);
                if (message.objectData != null && message.objectData.length)
                    for (var i = 0; i < message.objectData.length; ++i)
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.objectData[i]);
                return writer;
            };
    
            /**
             * Encodes the specified SubscribedType message, length delimited. Does not implicitly {@link CMsgSOCacheSubscribed.SubscribedType.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgSOCacheSubscribed.SubscribedType
             * @static
             * @param {CMsgSOCacheSubscribed.ISubscribedType} message SubscribedType message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SubscribedType.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a SubscribedType message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgSOCacheSubscribed.SubscribedType
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgSOCacheSubscribed.SubscribedType} SubscribedType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SubscribedType.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSOCacheSubscribed.SubscribedType();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.typeId = reader.int32();
                            break;
                        }
                    case 2: {
                            if (!(message.objectData && message.objectData.length))
                                message.objectData = [];
                            message.objectData.push(reader.bytes());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a SubscribedType message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgSOCacheSubscribed.SubscribedType
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgSOCacheSubscribed.SubscribedType} SubscribedType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SubscribedType.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a SubscribedType message.
             * @function verify
             * @memberof CMsgSOCacheSubscribed.SubscribedType
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SubscribedType.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.typeId != null && message.hasOwnProperty("typeId"))
                    if (!$util.isInteger(message.typeId))
                        return "typeId: integer expected";
                if (message.objectData != null && message.hasOwnProperty("objectData")) {
                    if (!Array.isArray(message.objectData))
                        return "objectData: array expected";
                    for (var i = 0; i < message.objectData.length; ++i)
                        if (!(message.objectData[i] && typeof message.objectData[i].length === "number" || $util.isString(message.objectData[i])))
                            return "objectData: buffer[] expected";
                }
                return null;
            };
    
            /**
             * Creates a SubscribedType message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgSOCacheSubscribed.SubscribedType
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgSOCacheSubscribed.SubscribedType} SubscribedType
             */
            SubscribedType.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgSOCacheSubscribed.SubscribedType)
                    return object;
                var message = new $root.CMsgSOCacheSubscribed.SubscribedType();
                if (object.typeId != null)
                    message.typeId = object.typeId | 0;
                if (object.objectData) {
                    if (!Array.isArray(object.objectData))
                        throw TypeError(".CMsgSOCacheSubscribed.SubscribedType.objectData: array expected");
                    message.objectData = [];
                    for (var i = 0; i < object.objectData.length; ++i)
                        if (typeof object.objectData[i] === "string")
                            $util.base64.decode(object.objectData[i], message.objectData[i] = $util.newBuffer($util.base64.length(object.objectData[i])), 0);
                        else if (object.objectData[i].length >= 0)
                            message.objectData[i] = object.objectData[i];
                }
                return message;
            };
    
            /**
             * Creates a plain object from a SubscribedType message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgSOCacheSubscribed.SubscribedType
             * @static
             * @param {CMsgSOCacheSubscribed.SubscribedType} message SubscribedType
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SubscribedType.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.objectData = [];
                if (options.defaults)
                    object.typeId = 0;
                if (message.typeId != null && message.hasOwnProperty("typeId"))
                    object.typeId = message.typeId;
                if (message.objectData && message.objectData.length) {
                    object.objectData = [];
                    for (var j = 0; j < message.objectData.length; ++j)
                        object.objectData[j] = options.bytes === String ? $util.base64.encode(message.objectData[j], 0, message.objectData[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.objectData[j]) : message.objectData[j];
                }
                return object;
            };
    
            /**
             * Converts this SubscribedType to JSON.
             * @function toJSON
             * @memberof CMsgSOCacheSubscribed.SubscribedType
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SubscribedType.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for SubscribedType
             * @function getTypeUrl
             * @memberof CMsgSOCacheSubscribed.SubscribedType
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SubscribedType.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgSOCacheSubscribed.SubscribedType";
            };
    
            return SubscribedType;
        })();
    
        return CMsgSOCacheSubscribed;
    })();
    
    $root.CMsgSOCacheUnsubscribed = (function() {
    
        /**
         * Properties of a CMsgSOCacheUnsubscribed.
         * @exports ICMsgSOCacheUnsubscribed
         * @interface ICMsgSOCacheUnsubscribed
         * @property {ICMsgSOIDOwner|null} [ownerSoid] CMsgSOCacheUnsubscribed ownerSoid
         */
    
        /**
         * Constructs a new CMsgSOCacheUnsubscribed.
         * @exports CMsgSOCacheUnsubscribed
         * @classdesc Represents a CMsgSOCacheUnsubscribed.
         * @implements ICMsgSOCacheUnsubscribed
         * @constructor
         * @param {ICMsgSOCacheUnsubscribed=} [properties] Properties to set
         */
        function CMsgSOCacheUnsubscribed(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgSOCacheUnsubscribed ownerSoid.
         * @member {ICMsgSOIDOwner|null|undefined} ownerSoid
         * @memberof CMsgSOCacheUnsubscribed
         * @instance
         */
        CMsgSOCacheUnsubscribed.prototype.ownerSoid = null;
    
        /**
         * Creates a new CMsgSOCacheUnsubscribed instance using the specified properties.
         * @function create
         * @memberof CMsgSOCacheUnsubscribed
         * @static
         * @param {ICMsgSOCacheUnsubscribed=} [properties] Properties to set
         * @returns {CMsgSOCacheUnsubscribed} CMsgSOCacheUnsubscribed instance
         */
        CMsgSOCacheUnsubscribed.create = function create(properties) {
            return new CMsgSOCacheUnsubscribed(properties);
        };
    
        /**
         * Encodes the specified CMsgSOCacheUnsubscribed message. Does not implicitly {@link CMsgSOCacheUnsubscribed.verify|verify} messages.
         * @function encode
         * @memberof CMsgSOCacheUnsubscribed
         * @static
         * @param {ICMsgSOCacheUnsubscribed} message CMsgSOCacheUnsubscribed message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOCacheUnsubscribed.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.ownerSoid != null && Object.hasOwnProperty.call(message, "ownerSoid"))
                $root.CMsgSOIDOwner.encode(message.ownerSoid, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgSOCacheUnsubscribed message, length delimited. Does not implicitly {@link CMsgSOCacheUnsubscribed.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgSOCacheUnsubscribed
         * @static
         * @param {ICMsgSOCacheUnsubscribed} message CMsgSOCacheUnsubscribed message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOCacheUnsubscribed.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgSOCacheUnsubscribed message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgSOCacheUnsubscribed
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgSOCacheUnsubscribed} CMsgSOCacheUnsubscribed
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOCacheUnsubscribed.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSOCacheUnsubscribed();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 2: {
                        message.ownerSoid = $root.CMsgSOIDOwner.decode(reader, reader.uint32());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgSOCacheUnsubscribed message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgSOCacheUnsubscribed
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgSOCacheUnsubscribed} CMsgSOCacheUnsubscribed
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOCacheUnsubscribed.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgSOCacheUnsubscribed message.
         * @function verify
         * @memberof CMsgSOCacheUnsubscribed
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgSOCacheUnsubscribed.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.ownerSoid != null && message.hasOwnProperty("ownerSoid")) {
                var error = $root.CMsgSOIDOwner.verify(message.ownerSoid);
                if (error)
                    return "ownerSoid." + error;
            }
            return null;
        };
    
        /**
         * Creates a CMsgSOCacheUnsubscribed message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgSOCacheUnsubscribed
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgSOCacheUnsubscribed} CMsgSOCacheUnsubscribed
         */
        CMsgSOCacheUnsubscribed.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgSOCacheUnsubscribed)
                return object;
            var message = new $root.CMsgSOCacheUnsubscribed();
            if (object.ownerSoid != null) {
                if (typeof object.ownerSoid !== "object")
                    throw TypeError(".CMsgSOCacheUnsubscribed.ownerSoid: object expected");
                message.ownerSoid = $root.CMsgSOIDOwner.fromObject(object.ownerSoid);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgSOCacheUnsubscribed message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgSOCacheUnsubscribed
         * @static
         * @param {CMsgSOCacheUnsubscribed} message CMsgSOCacheUnsubscribed
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgSOCacheUnsubscribed.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.ownerSoid = null;
            if (message.ownerSoid != null && message.hasOwnProperty("ownerSoid"))
                object.ownerSoid = $root.CMsgSOIDOwner.toObject(message.ownerSoid, options);
            return object;
        };
    
        /**
         * Converts this CMsgSOCacheUnsubscribed to JSON.
         * @function toJSON
         * @memberof CMsgSOCacheUnsubscribed
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgSOCacheUnsubscribed.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgSOCacheUnsubscribed
         * @function getTypeUrl
         * @memberof CMsgSOCacheUnsubscribed
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgSOCacheUnsubscribed.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgSOCacheUnsubscribed";
        };
    
        return CMsgSOCacheUnsubscribed;
    })();
    
    $root.CMsgSOCacheSubscriptionCheck = (function() {
    
        /**
         * Properties of a CMsgSOCacheSubscriptionCheck.
         * @exports ICMsgSOCacheSubscriptionCheck
         * @interface ICMsgSOCacheSubscriptionCheck
         * @property {number|Long|null} [version] CMsgSOCacheSubscriptionCheck version
         * @property {ICMsgSOIDOwner|null} [ownerSoid] CMsgSOCacheSubscriptionCheck ownerSoid
         */
    
        /**
         * Constructs a new CMsgSOCacheSubscriptionCheck.
         * @exports CMsgSOCacheSubscriptionCheck
         * @classdesc Represents a CMsgSOCacheSubscriptionCheck.
         * @implements ICMsgSOCacheSubscriptionCheck
         * @constructor
         * @param {ICMsgSOCacheSubscriptionCheck=} [properties] Properties to set
         */
        function CMsgSOCacheSubscriptionCheck(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgSOCacheSubscriptionCheck version.
         * @member {number|Long} version
         * @memberof CMsgSOCacheSubscriptionCheck
         * @instance
         */
        CMsgSOCacheSubscriptionCheck.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgSOCacheSubscriptionCheck ownerSoid.
         * @member {ICMsgSOIDOwner|null|undefined} ownerSoid
         * @memberof CMsgSOCacheSubscriptionCheck
         * @instance
         */
        CMsgSOCacheSubscriptionCheck.prototype.ownerSoid = null;
    
        /**
         * Creates a new CMsgSOCacheSubscriptionCheck instance using the specified properties.
         * @function create
         * @memberof CMsgSOCacheSubscriptionCheck
         * @static
         * @param {ICMsgSOCacheSubscriptionCheck=} [properties] Properties to set
         * @returns {CMsgSOCacheSubscriptionCheck} CMsgSOCacheSubscriptionCheck instance
         */
        CMsgSOCacheSubscriptionCheck.create = function create(properties) {
            return new CMsgSOCacheSubscriptionCheck(properties);
        };
    
        /**
         * Encodes the specified CMsgSOCacheSubscriptionCheck message. Does not implicitly {@link CMsgSOCacheSubscriptionCheck.verify|verify} messages.
         * @function encode
         * @memberof CMsgSOCacheSubscriptionCheck
         * @static
         * @param {ICMsgSOCacheSubscriptionCheck} message CMsgSOCacheSubscriptionCheck message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOCacheSubscriptionCheck.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.version);
            if (message.ownerSoid != null && Object.hasOwnProperty.call(message, "ownerSoid"))
                $root.CMsgSOIDOwner.encode(message.ownerSoid, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgSOCacheSubscriptionCheck message, length delimited. Does not implicitly {@link CMsgSOCacheSubscriptionCheck.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgSOCacheSubscriptionCheck
         * @static
         * @param {ICMsgSOCacheSubscriptionCheck} message CMsgSOCacheSubscriptionCheck message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOCacheSubscriptionCheck.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgSOCacheSubscriptionCheck message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgSOCacheSubscriptionCheck
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgSOCacheSubscriptionCheck} CMsgSOCacheSubscriptionCheck
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOCacheSubscriptionCheck.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSOCacheSubscriptionCheck();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 2: {
                        message.version = reader.fixed64();
                        break;
                    }
                case 3: {
                        message.ownerSoid = $root.CMsgSOIDOwner.decode(reader, reader.uint32());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgSOCacheSubscriptionCheck message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgSOCacheSubscriptionCheck
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgSOCacheSubscriptionCheck} CMsgSOCacheSubscriptionCheck
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOCacheSubscriptionCheck.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgSOCacheSubscriptionCheck message.
         * @function verify
         * @memberof CMsgSOCacheSubscriptionCheck
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgSOCacheSubscriptionCheck.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.version != null && message.hasOwnProperty("version"))
                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))
                    return "version: integer|Long expected";
            if (message.ownerSoid != null && message.hasOwnProperty("ownerSoid")) {
                var error = $root.CMsgSOIDOwner.verify(message.ownerSoid);
                if (error)
                    return "ownerSoid." + error;
            }
            return null;
        };
    
        /**
         * Creates a CMsgSOCacheSubscriptionCheck message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgSOCacheSubscriptionCheck
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgSOCacheSubscriptionCheck} CMsgSOCacheSubscriptionCheck
         */
        CMsgSOCacheSubscriptionCheck.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgSOCacheSubscriptionCheck)
                return object;
            var message = new $root.CMsgSOCacheSubscriptionCheck();
            if (object.version != null)
                if ($util.Long)
                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;
                else if (typeof object.version === "string")
                    message.version = parseInt(object.version, 10);
                else if (typeof object.version === "number")
                    message.version = object.version;
                else if (typeof object.version === "object")
                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();
            if (object.ownerSoid != null) {
                if (typeof object.ownerSoid !== "object")
                    throw TypeError(".CMsgSOCacheSubscriptionCheck.ownerSoid: object expected");
                message.ownerSoid = $root.CMsgSOIDOwner.fromObject(object.ownerSoid);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgSOCacheSubscriptionCheck message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgSOCacheSubscriptionCheck
         * @static
         * @param {CMsgSOCacheSubscriptionCheck} message CMsgSOCacheSubscriptionCheck
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgSOCacheSubscriptionCheck.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.version = options.longs === String ? "0" : 0;
                object.ownerSoid = null;
            }
            if (message.version != null && message.hasOwnProperty("version"))
                if (typeof message.version === "number")
                    object.version = options.longs === String ? String(message.version) : message.version;
                else
                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;
            if (message.ownerSoid != null && message.hasOwnProperty("ownerSoid"))
                object.ownerSoid = $root.CMsgSOIDOwner.toObject(message.ownerSoid, options);
            return object;
        };
    
        /**
         * Converts this CMsgSOCacheSubscriptionCheck to JSON.
         * @function toJSON
         * @memberof CMsgSOCacheSubscriptionCheck
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgSOCacheSubscriptionCheck.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgSOCacheSubscriptionCheck
         * @function getTypeUrl
         * @memberof CMsgSOCacheSubscriptionCheck
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgSOCacheSubscriptionCheck.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgSOCacheSubscriptionCheck";
        };
    
        return CMsgSOCacheSubscriptionCheck;
    })();
    
    $root.CMsgSOCacheSubscriptionRefresh = (function() {
    
        /**
         * Properties of a CMsgSOCacheSubscriptionRefresh.
         * @exports ICMsgSOCacheSubscriptionRefresh
         * @interface ICMsgSOCacheSubscriptionRefresh
         * @property {ICMsgSOIDOwner|null} [ownerSoid] CMsgSOCacheSubscriptionRefresh ownerSoid
         */
    
        /**
         * Constructs a new CMsgSOCacheSubscriptionRefresh.
         * @exports CMsgSOCacheSubscriptionRefresh
         * @classdesc Represents a CMsgSOCacheSubscriptionRefresh.
         * @implements ICMsgSOCacheSubscriptionRefresh
         * @constructor
         * @param {ICMsgSOCacheSubscriptionRefresh=} [properties] Properties to set
         */
        function CMsgSOCacheSubscriptionRefresh(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgSOCacheSubscriptionRefresh ownerSoid.
         * @member {ICMsgSOIDOwner|null|undefined} ownerSoid
         * @memberof CMsgSOCacheSubscriptionRefresh
         * @instance
         */
        CMsgSOCacheSubscriptionRefresh.prototype.ownerSoid = null;
    
        /**
         * Creates a new CMsgSOCacheSubscriptionRefresh instance using the specified properties.
         * @function create
         * @memberof CMsgSOCacheSubscriptionRefresh
         * @static
         * @param {ICMsgSOCacheSubscriptionRefresh=} [properties] Properties to set
         * @returns {CMsgSOCacheSubscriptionRefresh} CMsgSOCacheSubscriptionRefresh instance
         */
        CMsgSOCacheSubscriptionRefresh.create = function create(properties) {
            return new CMsgSOCacheSubscriptionRefresh(properties);
        };
    
        /**
         * Encodes the specified CMsgSOCacheSubscriptionRefresh message. Does not implicitly {@link CMsgSOCacheSubscriptionRefresh.verify|verify} messages.
         * @function encode
         * @memberof CMsgSOCacheSubscriptionRefresh
         * @static
         * @param {ICMsgSOCacheSubscriptionRefresh} message CMsgSOCacheSubscriptionRefresh message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOCacheSubscriptionRefresh.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.ownerSoid != null && Object.hasOwnProperty.call(message, "ownerSoid"))
                $root.CMsgSOIDOwner.encode(message.ownerSoid, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgSOCacheSubscriptionRefresh message, length delimited. Does not implicitly {@link CMsgSOCacheSubscriptionRefresh.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgSOCacheSubscriptionRefresh
         * @static
         * @param {ICMsgSOCacheSubscriptionRefresh} message CMsgSOCacheSubscriptionRefresh message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOCacheSubscriptionRefresh.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgSOCacheSubscriptionRefresh message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgSOCacheSubscriptionRefresh
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgSOCacheSubscriptionRefresh} CMsgSOCacheSubscriptionRefresh
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOCacheSubscriptionRefresh.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSOCacheSubscriptionRefresh();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 2: {
                        message.ownerSoid = $root.CMsgSOIDOwner.decode(reader, reader.uint32());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgSOCacheSubscriptionRefresh message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgSOCacheSubscriptionRefresh
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgSOCacheSubscriptionRefresh} CMsgSOCacheSubscriptionRefresh
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOCacheSubscriptionRefresh.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgSOCacheSubscriptionRefresh message.
         * @function verify
         * @memberof CMsgSOCacheSubscriptionRefresh
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgSOCacheSubscriptionRefresh.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.ownerSoid != null && message.hasOwnProperty("ownerSoid")) {
                var error = $root.CMsgSOIDOwner.verify(message.ownerSoid);
                if (error)
                    return "ownerSoid." + error;
            }
            return null;
        };
    
        /**
         * Creates a CMsgSOCacheSubscriptionRefresh message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgSOCacheSubscriptionRefresh
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgSOCacheSubscriptionRefresh} CMsgSOCacheSubscriptionRefresh
         */
        CMsgSOCacheSubscriptionRefresh.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgSOCacheSubscriptionRefresh)
                return object;
            var message = new $root.CMsgSOCacheSubscriptionRefresh();
            if (object.ownerSoid != null) {
                if (typeof object.ownerSoid !== "object")
                    throw TypeError(".CMsgSOCacheSubscriptionRefresh.ownerSoid: object expected");
                message.ownerSoid = $root.CMsgSOIDOwner.fromObject(object.ownerSoid);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgSOCacheSubscriptionRefresh message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgSOCacheSubscriptionRefresh
         * @static
         * @param {CMsgSOCacheSubscriptionRefresh} message CMsgSOCacheSubscriptionRefresh
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgSOCacheSubscriptionRefresh.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.ownerSoid = null;
            if (message.ownerSoid != null && message.hasOwnProperty("ownerSoid"))
                object.ownerSoid = $root.CMsgSOIDOwner.toObject(message.ownerSoid, options);
            return object;
        };
    
        /**
         * Converts this CMsgSOCacheSubscriptionRefresh to JSON.
         * @function toJSON
         * @memberof CMsgSOCacheSubscriptionRefresh
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgSOCacheSubscriptionRefresh.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgSOCacheSubscriptionRefresh
         * @function getTypeUrl
         * @memberof CMsgSOCacheSubscriptionRefresh
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgSOCacheSubscriptionRefresh.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgSOCacheSubscriptionRefresh";
        };
    
        return CMsgSOCacheSubscriptionRefresh;
    })();
    
    $root.CMsgSOCacheVersion = (function() {
    
        /**
         * Properties of a CMsgSOCacheVersion.
         * @exports ICMsgSOCacheVersion
         * @interface ICMsgSOCacheVersion
         * @property {number|Long|null} [version] CMsgSOCacheVersion version
         */
    
        /**
         * Constructs a new CMsgSOCacheVersion.
         * @exports CMsgSOCacheVersion
         * @classdesc Represents a CMsgSOCacheVersion.
         * @implements ICMsgSOCacheVersion
         * @constructor
         * @param {ICMsgSOCacheVersion=} [properties] Properties to set
         */
        function CMsgSOCacheVersion(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgSOCacheVersion version.
         * @member {number|Long} version
         * @memberof CMsgSOCacheVersion
         * @instance
         */
        CMsgSOCacheVersion.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgSOCacheVersion instance using the specified properties.
         * @function create
         * @memberof CMsgSOCacheVersion
         * @static
         * @param {ICMsgSOCacheVersion=} [properties] Properties to set
         * @returns {CMsgSOCacheVersion} CMsgSOCacheVersion instance
         */
        CMsgSOCacheVersion.create = function create(properties) {
            return new CMsgSOCacheVersion(properties);
        };
    
        /**
         * Encodes the specified CMsgSOCacheVersion message. Does not implicitly {@link CMsgSOCacheVersion.verify|verify} messages.
         * @function encode
         * @memberof CMsgSOCacheVersion
         * @static
         * @param {ICMsgSOCacheVersion} message CMsgSOCacheVersion message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOCacheVersion.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.version);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgSOCacheVersion message, length delimited. Does not implicitly {@link CMsgSOCacheVersion.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgSOCacheVersion
         * @static
         * @param {ICMsgSOCacheVersion} message CMsgSOCacheVersion message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOCacheVersion.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgSOCacheVersion message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgSOCacheVersion
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgSOCacheVersion} CMsgSOCacheVersion
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOCacheVersion.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSOCacheVersion();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.version = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgSOCacheVersion message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgSOCacheVersion
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgSOCacheVersion} CMsgSOCacheVersion
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOCacheVersion.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgSOCacheVersion message.
         * @function verify
         * @memberof CMsgSOCacheVersion
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgSOCacheVersion.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.version != null && message.hasOwnProperty("version"))
                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))
                    return "version: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgSOCacheVersion message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgSOCacheVersion
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgSOCacheVersion} CMsgSOCacheVersion
         */
        CMsgSOCacheVersion.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgSOCacheVersion)
                return object;
            var message = new $root.CMsgSOCacheVersion();
            if (object.version != null)
                if ($util.Long)
                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;
                else if (typeof object.version === "string")
                    message.version = parseInt(object.version, 10);
                else if (typeof object.version === "number")
                    message.version = object.version;
                else if (typeof object.version === "object")
                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgSOCacheVersion message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgSOCacheVersion
         * @static
         * @param {CMsgSOCacheVersion} message CMsgSOCacheVersion
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgSOCacheVersion.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.version = options.longs === String ? "0" : 0;
            if (message.version != null && message.hasOwnProperty("version"))
                if (typeof message.version === "number")
                    object.version = options.longs === String ? String(message.version) : message.version;
                else
                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;
            return object;
        };
    
        /**
         * Converts this CMsgSOCacheVersion to JSON.
         * @function toJSON
         * @memberof CMsgSOCacheVersion
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgSOCacheVersion.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgSOCacheVersion
         * @function getTypeUrl
         * @memberof CMsgSOCacheVersion
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgSOCacheVersion.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgSOCacheVersion";
        };
    
        return CMsgSOCacheVersion;
    })();
    
    $root.CMsgAccountDetails = (function() {
    
        /**
         * Properties of a CMsgAccountDetails.
         * @exports ICMsgAccountDetails
         * @interface ICMsgAccountDetails
         * @property {boolean|null} [valid] CMsgAccountDetails valid
         * @property {string|null} [accountName] CMsgAccountDetails accountName
         * @property {boolean|null} [publicProfile] CMsgAccountDetails publicProfile
         * @property {boolean|null} [publicInventory] CMsgAccountDetails publicInventory
         * @property {boolean|null} [vacBanned] CMsgAccountDetails vacBanned
         * @property {boolean|null} [cyberCafe] CMsgAccountDetails cyberCafe
         * @property {boolean|null} [schoolAccount] CMsgAccountDetails schoolAccount
         * @property {boolean|null} [freeTrialAccount] CMsgAccountDetails freeTrialAccount
         * @property {boolean|null} [subscribed] CMsgAccountDetails subscribed
         * @property {boolean|null} [lowViolence] CMsgAccountDetails lowViolence
         * @property {boolean|null} [limited] CMsgAccountDetails limited
         * @property {boolean|null} [trusted] CMsgAccountDetails trusted
         * @property {number|null} ["package"] CMsgAccountDetails package
         * @property {number|null} [timeCached] CMsgAccountDetails timeCached
         * @property {boolean|null} [accountLocked] CMsgAccountDetails accountLocked
         * @property {boolean|null} [communityBanned] CMsgAccountDetails communityBanned
         * @property {boolean|null} [tradeBanned] CMsgAccountDetails tradeBanned
         * @property {boolean|null} [eligibleForCommunityMarket] CMsgAccountDetails eligibleForCommunityMarket
         */
    
        /**
         * Constructs a new CMsgAccountDetails.
         * @exports CMsgAccountDetails
         * @classdesc Represents a CMsgAccountDetails.
         * @implements ICMsgAccountDetails
         * @constructor
         * @param {ICMsgAccountDetails=} [properties] Properties to set
         */
        function CMsgAccountDetails(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAccountDetails valid.
         * @member {boolean} valid
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.valid = false;
    
        /**
         * CMsgAccountDetails accountName.
         * @member {string} accountName
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.accountName = "";
    
        /**
         * CMsgAccountDetails publicProfile.
         * @member {boolean} publicProfile
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.publicProfile = false;
    
        /**
         * CMsgAccountDetails publicInventory.
         * @member {boolean} publicInventory
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.publicInventory = false;
    
        /**
         * CMsgAccountDetails vacBanned.
         * @member {boolean} vacBanned
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.vacBanned = false;
    
        /**
         * CMsgAccountDetails cyberCafe.
         * @member {boolean} cyberCafe
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.cyberCafe = false;
    
        /**
         * CMsgAccountDetails schoolAccount.
         * @member {boolean} schoolAccount
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.schoolAccount = false;
    
        /**
         * CMsgAccountDetails freeTrialAccount.
         * @member {boolean} freeTrialAccount
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.freeTrialAccount = false;
    
        /**
         * CMsgAccountDetails subscribed.
         * @member {boolean} subscribed
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.subscribed = false;
    
        /**
         * CMsgAccountDetails lowViolence.
         * @member {boolean} lowViolence
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.lowViolence = false;
    
        /**
         * CMsgAccountDetails limited.
         * @member {boolean} limited
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.limited = false;
    
        /**
         * CMsgAccountDetails trusted.
         * @member {boolean} trusted
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.trusted = false;
    
        /**
         * CMsgAccountDetails package.
         * @member {number} package
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype["package"] = 0;
    
        /**
         * CMsgAccountDetails timeCached.
         * @member {number} timeCached
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.timeCached = 0;
    
        /**
         * CMsgAccountDetails accountLocked.
         * @member {boolean} accountLocked
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.accountLocked = false;
    
        /**
         * CMsgAccountDetails communityBanned.
         * @member {boolean} communityBanned
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.communityBanned = false;
    
        /**
         * CMsgAccountDetails tradeBanned.
         * @member {boolean} tradeBanned
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.tradeBanned = false;
    
        /**
         * CMsgAccountDetails eligibleForCommunityMarket.
         * @member {boolean} eligibleForCommunityMarket
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.eligibleForCommunityMarket = false;
    
        /**
         * Creates a new CMsgAccountDetails instance using the specified properties.
         * @function create
         * @memberof CMsgAccountDetails
         * @static
         * @param {ICMsgAccountDetails=} [properties] Properties to set
         * @returns {CMsgAccountDetails} CMsgAccountDetails instance
         */
        CMsgAccountDetails.create = function create(properties) {
            return new CMsgAccountDetails(properties);
        };
    
        /**
         * Encodes the specified CMsgAccountDetails message. Does not implicitly {@link CMsgAccountDetails.verify|verify} messages.
         * @function encode
         * @memberof CMsgAccountDetails
         * @static
         * @param {ICMsgAccountDetails} message CMsgAccountDetails message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAccountDetails.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.valid != null && Object.hasOwnProperty.call(message, "valid"))
                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.valid);
            if (message.accountName != null && Object.hasOwnProperty.call(message, "accountName"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.accountName);
            if (message.publicProfile != null && Object.hasOwnProperty.call(message, "publicProfile"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.publicProfile);
            if (message.publicInventory != null && Object.hasOwnProperty.call(message, "publicInventory"))
                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.publicInventory);
            if (message.vacBanned != null && Object.hasOwnProperty.call(message, "vacBanned"))
                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.vacBanned);
            if (message.cyberCafe != null && Object.hasOwnProperty.call(message, "cyberCafe"))
                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.cyberCafe);
            if (message.schoolAccount != null && Object.hasOwnProperty.call(message, "schoolAccount"))
                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.schoolAccount);
            if (message.freeTrialAccount != null && Object.hasOwnProperty.call(message, "freeTrialAccount"))
                writer.uint32(/* id 9, wireType 0 =*/72).bool(message.freeTrialAccount);
            if (message.subscribed != null && Object.hasOwnProperty.call(message, "subscribed"))
                writer.uint32(/* id 10, wireType 0 =*/80).bool(message.subscribed);
            if (message.lowViolence != null && Object.hasOwnProperty.call(message, "lowViolence"))
                writer.uint32(/* id 11, wireType 0 =*/88).bool(message.lowViolence);
            if (message.limited != null && Object.hasOwnProperty.call(message, "limited"))
                writer.uint32(/* id 12, wireType 0 =*/96).bool(message.limited);
            if (message.trusted != null && Object.hasOwnProperty.call(message, "trusted"))
                writer.uint32(/* id 13, wireType 0 =*/104).bool(message.trusted);
            if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                writer.uint32(/* id 14, wireType 0 =*/112).uint32(message["package"]);
            if (message.timeCached != null && Object.hasOwnProperty.call(message, "timeCached"))
                writer.uint32(/* id 15, wireType 5 =*/125).fixed32(message.timeCached);
            if (message.accountLocked != null && Object.hasOwnProperty.call(message, "accountLocked"))
                writer.uint32(/* id 16, wireType 0 =*/128).bool(message.accountLocked);
            if (message.communityBanned != null && Object.hasOwnProperty.call(message, "communityBanned"))
                writer.uint32(/* id 17, wireType 0 =*/136).bool(message.communityBanned);
            if (message.tradeBanned != null && Object.hasOwnProperty.call(message, "tradeBanned"))
                writer.uint32(/* id 18, wireType 0 =*/144).bool(message.tradeBanned);
            if (message.eligibleForCommunityMarket != null && Object.hasOwnProperty.call(message, "eligibleForCommunityMarket"))
                writer.uint32(/* id 19, wireType 0 =*/152).bool(message.eligibleForCommunityMarket);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAccountDetails message, length delimited. Does not implicitly {@link CMsgAccountDetails.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAccountDetails
         * @static
         * @param {ICMsgAccountDetails} message CMsgAccountDetails message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAccountDetails.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAccountDetails message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAccountDetails
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAccountDetails} CMsgAccountDetails
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAccountDetails.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAccountDetails();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.valid = reader.bool();
                        break;
                    }
                case 2: {
                        message.accountName = reader.string();
                        break;
                    }
                case 4: {
                        message.publicProfile = reader.bool();
                        break;
                    }
                case 5: {
                        message.publicInventory = reader.bool();
                        break;
                    }
                case 6: {
                        message.vacBanned = reader.bool();
                        break;
                    }
                case 7: {
                        message.cyberCafe = reader.bool();
                        break;
                    }
                case 8: {
                        message.schoolAccount = reader.bool();
                        break;
                    }
                case 9: {
                        message.freeTrialAccount = reader.bool();
                        break;
                    }
                case 10: {
                        message.subscribed = reader.bool();
                        break;
                    }
                case 11: {
                        message.lowViolence = reader.bool();
                        break;
                    }
                case 12: {
                        message.limited = reader.bool();
                        break;
                    }
                case 13: {
                        message.trusted = reader.bool();
                        break;
                    }
                case 14: {
                        message["package"] = reader.uint32();
                        break;
                    }
                case 15: {
                        message.timeCached = reader.fixed32();
                        break;
                    }
                case 16: {
                        message.accountLocked = reader.bool();
                        break;
                    }
                case 17: {
                        message.communityBanned = reader.bool();
                        break;
                    }
                case 18: {
                        message.tradeBanned = reader.bool();
                        break;
                    }
                case 19: {
                        message.eligibleForCommunityMarket = reader.bool();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAccountDetails message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAccountDetails
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAccountDetails} CMsgAccountDetails
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAccountDetails.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAccountDetails message.
         * @function verify
         * @memberof CMsgAccountDetails
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAccountDetails.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.valid != null && message.hasOwnProperty("valid"))
                if (typeof message.valid !== "boolean")
                    return "valid: boolean expected";
            if (message.accountName != null && message.hasOwnProperty("accountName"))
                if (!$util.isString(message.accountName))
                    return "accountName: string expected";
            if (message.publicProfile != null && message.hasOwnProperty("publicProfile"))
                if (typeof message.publicProfile !== "boolean")
                    return "publicProfile: boolean expected";
            if (message.publicInventory != null && message.hasOwnProperty("publicInventory"))
                if (typeof message.publicInventory !== "boolean")
                    return "publicInventory: boolean expected";
            if (message.vacBanned != null && message.hasOwnProperty("vacBanned"))
                if (typeof message.vacBanned !== "boolean")
                    return "vacBanned: boolean expected";
            if (message.cyberCafe != null && message.hasOwnProperty("cyberCafe"))
                if (typeof message.cyberCafe !== "boolean")
                    return "cyberCafe: boolean expected";
            if (message.schoolAccount != null && message.hasOwnProperty("schoolAccount"))
                if (typeof message.schoolAccount !== "boolean")
                    return "schoolAccount: boolean expected";
            if (message.freeTrialAccount != null && message.hasOwnProperty("freeTrialAccount"))
                if (typeof message.freeTrialAccount !== "boolean")
                    return "freeTrialAccount: boolean expected";
            if (message.subscribed != null && message.hasOwnProperty("subscribed"))
                if (typeof message.subscribed !== "boolean")
                    return "subscribed: boolean expected";
            if (message.lowViolence != null && message.hasOwnProperty("lowViolence"))
                if (typeof message.lowViolence !== "boolean")
                    return "lowViolence: boolean expected";
            if (message.limited != null && message.hasOwnProperty("limited"))
                if (typeof message.limited !== "boolean")
                    return "limited: boolean expected";
            if (message.trusted != null && message.hasOwnProperty("trusted"))
                if (typeof message.trusted !== "boolean")
                    return "trusted: boolean expected";
            if (message["package"] != null && message.hasOwnProperty("package"))
                if (!$util.isInteger(message["package"]))
                    return "package: integer expected";
            if (message.timeCached != null && message.hasOwnProperty("timeCached"))
                if (!$util.isInteger(message.timeCached))
                    return "timeCached: integer expected";
            if (message.accountLocked != null && message.hasOwnProperty("accountLocked"))
                if (typeof message.accountLocked !== "boolean")
                    return "accountLocked: boolean expected";
            if (message.communityBanned != null && message.hasOwnProperty("communityBanned"))
                if (typeof message.communityBanned !== "boolean")
                    return "communityBanned: boolean expected";
            if (message.tradeBanned != null && message.hasOwnProperty("tradeBanned"))
                if (typeof message.tradeBanned !== "boolean")
                    return "tradeBanned: boolean expected";
            if (message.eligibleForCommunityMarket != null && message.hasOwnProperty("eligibleForCommunityMarket"))
                if (typeof message.eligibleForCommunityMarket !== "boolean")
                    return "eligibleForCommunityMarket: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgAccountDetails message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAccountDetails
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAccountDetails} CMsgAccountDetails
         */
        CMsgAccountDetails.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAccountDetails)
                return object;
            var message = new $root.CMsgAccountDetails();
            if (object.valid != null)
                message.valid = Boolean(object.valid);
            if (object.accountName != null)
                message.accountName = String(object.accountName);
            if (object.publicProfile != null)
                message.publicProfile = Boolean(object.publicProfile);
            if (object.publicInventory != null)
                message.publicInventory = Boolean(object.publicInventory);
            if (object.vacBanned != null)
                message.vacBanned = Boolean(object.vacBanned);
            if (object.cyberCafe != null)
                message.cyberCafe = Boolean(object.cyberCafe);
            if (object.schoolAccount != null)
                message.schoolAccount = Boolean(object.schoolAccount);
            if (object.freeTrialAccount != null)
                message.freeTrialAccount = Boolean(object.freeTrialAccount);
            if (object.subscribed != null)
                message.subscribed = Boolean(object.subscribed);
            if (object.lowViolence != null)
                message.lowViolence = Boolean(object.lowViolence);
            if (object.limited != null)
                message.limited = Boolean(object.limited);
            if (object.trusted != null)
                message.trusted = Boolean(object.trusted);
            if (object["package"] != null)
                message["package"] = object["package"] >>> 0;
            if (object.timeCached != null)
                message.timeCached = object.timeCached >>> 0;
            if (object.accountLocked != null)
                message.accountLocked = Boolean(object.accountLocked);
            if (object.communityBanned != null)
                message.communityBanned = Boolean(object.communityBanned);
            if (object.tradeBanned != null)
                message.tradeBanned = Boolean(object.tradeBanned);
            if (object.eligibleForCommunityMarket != null)
                message.eligibleForCommunityMarket = Boolean(object.eligibleForCommunityMarket);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAccountDetails message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAccountDetails
         * @static
         * @param {CMsgAccountDetails} message CMsgAccountDetails
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAccountDetails.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.valid = false;
                object.accountName = "";
                object.publicProfile = false;
                object.publicInventory = false;
                object.vacBanned = false;
                object.cyberCafe = false;
                object.schoolAccount = false;
                object.freeTrialAccount = false;
                object.subscribed = false;
                object.lowViolence = false;
                object.limited = false;
                object.trusted = false;
                object["package"] = 0;
                object.timeCached = 0;
                object.accountLocked = false;
                object.communityBanned = false;
                object.tradeBanned = false;
                object.eligibleForCommunityMarket = false;
            }
            if (message.valid != null && message.hasOwnProperty("valid"))
                object.valid = message.valid;
            if (message.accountName != null && message.hasOwnProperty("accountName"))
                object.accountName = message.accountName;
            if (message.publicProfile != null && message.hasOwnProperty("publicProfile"))
                object.publicProfile = message.publicProfile;
            if (message.publicInventory != null && message.hasOwnProperty("publicInventory"))
                object.publicInventory = message.publicInventory;
            if (message.vacBanned != null && message.hasOwnProperty("vacBanned"))
                object.vacBanned = message.vacBanned;
            if (message.cyberCafe != null && message.hasOwnProperty("cyberCafe"))
                object.cyberCafe = message.cyberCafe;
            if (message.schoolAccount != null && message.hasOwnProperty("schoolAccount"))
                object.schoolAccount = message.schoolAccount;
            if (message.freeTrialAccount != null && message.hasOwnProperty("freeTrialAccount"))
                object.freeTrialAccount = message.freeTrialAccount;
            if (message.subscribed != null && message.hasOwnProperty("subscribed"))
                object.subscribed = message.subscribed;
            if (message.lowViolence != null && message.hasOwnProperty("lowViolence"))
                object.lowViolence = message.lowViolence;
            if (message.limited != null && message.hasOwnProperty("limited"))
                object.limited = message.limited;
            if (message.trusted != null && message.hasOwnProperty("trusted"))
                object.trusted = message.trusted;
            if (message["package"] != null && message.hasOwnProperty("package"))
                object["package"] = message["package"];
            if (message.timeCached != null && message.hasOwnProperty("timeCached"))
                object.timeCached = message.timeCached;
            if (message.accountLocked != null && message.hasOwnProperty("accountLocked"))
                object.accountLocked = message.accountLocked;
            if (message.communityBanned != null && message.hasOwnProperty("communityBanned"))
                object.communityBanned = message.communityBanned;
            if (message.tradeBanned != null && message.hasOwnProperty("tradeBanned"))
                object.tradeBanned = message.tradeBanned;
            if (message.eligibleForCommunityMarket != null && message.hasOwnProperty("eligibleForCommunityMarket"))
                object.eligibleForCommunityMarket = message.eligibleForCommunityMarket;
            return object;
        };
    
        /**
         * Converts this CMsgAccountDetails to JSON.
         * @function toJSON
         * @memberof CMsgAccountDetails
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAccountDetails.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAccountDetails
         * @function getTypeUrl
         * @memberof CMsgAccountDetails
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAccountDetails.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAccountDetails";
        };
    
        return CMsgAccountDetails;
    })();
    
    $root.CMsgGCMultiplexMessage = (function() {
    
        /**
         * Properties of a CMsgGCMultiplexMessage.
         * @exports ICMsgGCMultiplexMessage
         * @interface ICMsgGCMultiplexMessage
         * @property {number|null} [msgtype] CMsgGCMultiplexMessage msgtype
         * @property {Uint8Array|null} [payload] CMsgGCMultiplexMessage payload
         * @property {Array.<number|Long>|null} [steamids] CMsgGCMultiplexMessage steamids
         * @property {boolean|null} [replytogc] CMsgGCMultiplexMessage replytogc
         */
    
        /**
         * Constructs a new CMsgGCMultiplexMessage.
         * @exports CMsgGCMultiplexMessage
         * @classdesc Represents a CMsgGCMultiplexMessage.
         * @implements ICMsgGCMultiplexMessage
         * @constructor
         * @param {ICMsgGCMultiplexMessage=} [properties] Properties to set
         */
        function CMsgGCMultiplexMessage(properties) {
            this.steamids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCMultiplexMessage msgtype.
         * @member {number} msgtype
         * @memberof CMsgGCMultiplexMessage
         * @instance
         */
        CMsgGCMultiplexMessage.prototype.msgtype = 0;
    
        /**
         * CMsgGCMultiplexMessage payload.
         * @member {Uint8Array} payload
         * @memberof CMsgGCMultiplexMessage
         * @instance
         */
        CMsgGCMultiplexMessage.prototype.payload = $util.newBuffer([]);
    
        /**
         * CMsgGCMultiplexMessage steamids.
         * @member {Array.<number|Long>} steamids
         * @memberof CMsgGCMultiplexMessage
         * @instance
         */
        CMsgGCMultiplexMessage.prototype.steamids = $util.emptyArray;
    
        /**
         * CMsgGCMultiplexMessage replytogc.
         * @member {boolean} replytogc
         * @memberof CMsgGCMultiplexMessage
         * @instance
         */
        CMsgGCMultiplexMessage.prototype.replytogc = false;
    
        /**
         * Creates a new CMsgGCMultiplexMessage instance using the specified properties.
         * @function create
         * @memberof CMsgGCMultiplexMessage
         * @static
         * @param {ICMsgGCMultiplexMessage=} [properties] Properties to set
         * @returns {CMsgGCMultiplexMessage} CMsgGCMultiplexMessage instance
         */
        CMsgGCMultiplexMessage.create = function create(properties) {
            return new CMsgGCMultiplexMessage(properties);
        };
    
        /**
         * Encodes the specified CMsgGCMultiplexMessage message. Does not implicitly {@link CMsgGCMultiplexMessage.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCMultiplexMessage
         * @static
         * @param {ICMsgGCMultiplexMessage} message CMsgGCMultiplexMessage message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMultiplexMessage.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.msgtype != null && Object.hasOwnProperty.call(message, "msgtype"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.msgtype);
            if (message.payload != null && Object.hasOwnProperty.call(message, "payload"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.payload);
            if (message.steamids != null && message.steamids.length)
                for (var i = 0; i < message.steamids.length; ++i)
                    writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.steamids[i]);
            if (message.replytogc != null && Object.hasOwnProperty.call(message, "replytogc"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.replytogc);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCMultiplexMessage message, length delimited. Does not implicitly {@link CMsgGCMultiplexMessage.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCMultiplexMessage
         * @static
         * @param {ICMsgGCMultiplexMessage} message CMsgGCMultiplexMessage message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMultiplexMessage.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCMultiplexMessage message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCMultiplexMessage
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCMultiplexMessage} CMsgGCMultiplexMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMultiplexMessage.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCMultiplexMessage();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.msgtype = reader.uint32();
                        break;
                    }
                case 2: {
                        message.payload = reader.bytes();
                        break;
                    }
                case 3: {
                        if (!(message.steamids && message.steamids.length))
                            message.steamids = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.steamids.push(reader.fixed64());
                        } else
                            message.steamids.push(reader.fixed64());
                        break;
                    }
                case 4: {
                        message.replytogc = reader.bool();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCMultiplexMessage message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCMultiplexMessage
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCMultiplexMessage} CMsgGCMultiplexMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMultiplexMessage.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCMultiplexMessage message.
         * @function verify
         * @memberof CMsgGCMultiplexMessage
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCMultiplexMessage.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.msgtype != null && message.hasOwnProperty("msgtype"))
                if (!$util.isInteger(message.msgtype))
                    return "msgtype: integer expected";
            if (message.payload != null && message.hasOwnProperty("payload"))
                if (!(message.payload && typeof message.payload.length === "number" || $util.isString(message.payload)))
                    return "payload: buffer expected";
            if (message.steamids != null && message.hasOwnProperty("steamids")) {
                if (!Array.isArray(message.steamids))
                    return "steamids: array expected";
                for (var i = 0; i < message.steamids.length; ++i)
                    if (!$util.isInteger(message.steamids[i]) && !(message.steamids[i] && $util.isInteger(message.steamids[i].low) && $util.isInteger(message.steamids[i].high)))
                        return "steamids: integer|Long[] expected";
            }
            if (message.replytogc != null && message.hasOwnProperty("replytogc"))
                if (typeof message.replytogc !== "boolean")
                    return "replytogc: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCMultiplexMessage message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCMultiplexMessage
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCMultiplexMessage} CMsgGCMultiplexMessage
         */
        CMsgGCMultiplexMessage.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCMultiplexMessage)
                return object;
            var message = new $root.CMsgGCMultiplexMessage();
            if (object.msgtype != null)
                message.msgtype = object.msgtype >>> 0;
            if (object.payload != null)
                if (typeof object.payload === "string")
                    $util.base64.decode(object.payload, message.payload = $util.newBuffer($util.base64.length(object.payload)), 0);
                else if (object.payload.length >= 0)
                    message.payload = object.payload;
            if (object.steamids) {
                if (!Array.isArray(object.steamids))
                    throw TypeError(".CMsgGCMultiplexMessage.steamids: array expected");
                message.steamids = [];
                for (var i = 0; i < object.steamids.length; ++i)
                    if ($util.Long)
                        (message.steamids[i] = $util.Long.fromValue(object.steamids[i])).unsigned = false;
                    else if (typeof object.steamids[i] === "string")
                        message.steamids[i] = parseInt(object.steamids[i], 10);
                    else if (typeof object.steamids[i] === "number")
                        message.steamids[i] = object.steamids[i];
                    else if (typeof object.steamids[i] === "object")
                        message.steamids[i] = new $util.LongBits(object.steamids[i].low >>> 0, object.steamids[i].high >>> 0).toNumber();
            }
            if (object.replytogc != null)
                message.replytogc = Boolean(object.replytogc);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCMultiplexMessage message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCMultiplexMessage
         * @static
         * @param {CMsgGCMultiplexMessage} message CMsgGCMultiplexMessage
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCMultiplexMessage.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.steamids = [];
            if (options.defaults) {
                object.msgtype = 0;
                if (options.bytes === String)
                    object.payload = "";
                else {
                    object.payload = [];
                    if (options.bytes !== Array)
                        object.payload = $util.newBuffer(object.payload);
                }
                object.replytogc = false;
            }
            if (message.msgtype != null && message.hasOwnProperty("msgtype"))
                object.msgtype = message.msgtype;
            if (message.payload != null && message.hasOwnProperty("payload"))
                object.payload = options.bytes === String ? $util.base64.encode(message.payload, 0, message.payload.length) : options.bytes === Array ? Array.prototype.slice.call(message.payload) : message.payload;
            if (message.steamids && message.steamids.length) {
                object.steamids = [];
                for (var j = 0; j < message.steamids.length; ++j)
                    if (typeof message.steamids[j] === "number")
                        object.steamids[j] = options.longs === String ? String(message.steamids[j]) : message.steamids[j];
                    else
                        object.steamids[j] = options.longs === String ? $util.Long.prototype.toString.call(message.steamids[j]) : options.longs === Number ? new $util.LongBits(message.steamids[j].low >>> 0, message.steamids[j].high >>> 0).toNumber() : message.steamids[j];
            }
            if (message.replytogc != null && message.hasOwnProperty("replytogc"))
                object.replytogc = message.replytogc;
            return object;
        };
    
        /**
         * Converts this CMsgGCMultiplexMessage to JSON.
         * @function toJSON
         * @memberof CMsgGCMultiplexMessage
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCMultiplexMessage.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCMultiplexMessage
         * @function getTypeUrl
         * @memberof CMsgGCMultiplexMessage
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCMultiplexMessage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCMultiplexMessage";
        };
    
        return CMsgGCMultiplexMessage;
    })();
    
    $root.CMsgGCMultiplexMessage_Response = (function() {
    
        /**
         * Properties of a CMsgGCMultiplexMessage_Response.
         * @exports ICMsgGCMultiplexMessage_Response
         * @interface ICMsgGCMultiplexMessage_Response
         * @property {number|null} [msgtype] CMsgGCMultiplexMessage_Response msgtype
         */
    
        /**
         * Constructs a new CMsgGCMultiplexMessage_Response.
         * @exports CMsgGCMultiplexMessage_Response
         * @classdesc Represents a CMsgGCMultiplexMessage_Response.
         * @implements ICMsgGCMultiplexMessage_Response
         * @constructor
         * @param {ICMsgGCMultiplexMessage_Response=} [properties] Properties to set
         */
        function CMsgGCMultiplexMessage_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCMultiplexMessage_Response msgtype.
         * @member {number} msgtype
         * @memberof CMsgGCMultiplexMessage_Response
         * @instance
         */
        CMsgGCMultiplexMessage_Response.prototype.msgtype = 0;
    
        /**
         * Creates a new CMsgGCMultiplexMessage_Response instance using the specified properties.
         * @function create
         * @memberof CMsgGCMultiplexMessage_Response
         * @static
         * @param {ICMsgGCMultiplexMessage_Response=} [properties] Properties to set
         * @returns {CMsgGCMultiplexMessage_Response} CMsgGCMultiplexMessage_Response instance
         */
        CMsgGCMultiplexMessage_Response.create = function create(properties) {
            return new CMsgGCMultiplexMessage_Response(properties);
        };
    
        /**
         * Encodes the specified CMsgGCMultiplexMessage_Response message. Does not implicitly {@link CMsgGCMultiplexMessage_Response.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCMultiplexMessage_Response
         * @static
         * @param {ICMsgGCMultiplexMessage_Response} message CMsgGCMultiplexMessage_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMultiplexMessage_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.msgtype != null && Object.hasOwnProperty.call(message, "msgtype"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.msgtype);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCMultiplexMessage_Response message, length delimited. Does not implicitly {@link CMsgGCMultiplexMessage_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCMultiplexMessage_Response
         * @static
         * @param {ICMsgGCMultiplexMessage_Response} message CMsgGCMultiplexMessage_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMultiplexMessage_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCMultiplexMessage_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCMultiplexMessage_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCMultiplexMessage_Response} CMsgGCMultiplexMessage_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMultiplexMessage_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCMultiplexMessage_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.msgtype = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCMultiplexMessage_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCMultiplexMessage_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCMultiplexMessage_Response} CMsgGCMultiplexMessage_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMultiplexMessage_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCMultiplexMessage_Response message.
         * @function verify
         * @memberof CMsgGCMultiplexMessage_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCMultiplexMessage_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.msgtype != null && message.hasOwnProperty("msgtype"))
                if (!$util.isInteger(message.msgtype))
                    return "msgtype: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCMultiplexMessage_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCMultiplexMessage_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCMultiplexMessage_Response} CMsgGCMultiplexMessage_Response
         */
        CMsgGCMultiplexMessage_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCMultiplexMessage_Response)
                return object;
            var message = new $root.CMsgGCMultiplexMessage_Response();
            if (object.msgtype != null)
                message.msgtype = object.msgtype >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCMultiplexMessage_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCMultiplexMessage_Response
         * @static
         * @param {CMsgGCMultiplexMessage_Response} message CMsgGCMultiplexMessage_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCMultiplexMessage_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.msgtype = 0;
            if (message.msgtype != null && message.hasOwnProperty("msgtype"))
                object.msgtype = message.msgtype;
            return object;
        };
    
        /**
         * Converts this CMsgGCMultiplexMessage_Response to JSON.
         * @function toJSON
         * @memberof CMsgGCMultiplexMessage_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCMultiplexMessage_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCMultiplexMessage_Response
         * @function getTypeUrl
         * @memberof CMsgGCMultiplexMessage_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCMultiplexMessage_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCMultiplexMessage_Response";
        };
    
        return CMsgGCMultiplexMessage_Response;
    })();
    
    $root.CGCToGCMsgMasterAck = (function() {
    
        /**
         * Properties of a CGCToGCMsgMasterAck.
         * @exports ICGCToGCMsgMasterAck
         * @interface ICGCToGCMsgMasterAck
         * @property {number|null} [dirIndex] CGCToGCMsgMasterAck dirIndex
         * @property {number|null} [gcType] CGCToGCMsgMasterAck gcType
         */
    
        /**
         * Constructs a new CGCToGCMsgMasterAck.
         * @exports CGCToGCMsgMasterAck
         * @classdesc Represents a CGCToGCMsgMasterAck.
         * @implements ICGCToGCMsgMasterAck
         * @constructor
         * @param {ICGCToGCMsgMasterAck=} [properties] Properties to set
         */
        function CGCToGCMsgMasterAck(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCToGCMsgMasterAck dirIndex.
         * @member {number} dirIndex
         * @memberof CGCToGCMsgMasterAck
         * @instance
         */
        CGCToGCMsgMasterAck.prototype.dirIndex = 0;
    
        /**
         * CGCToGCMsgMasterAck gcType.
         * @member {number} gcType
         * @memberof CGCToGCMsgMasterAck
         * @instance
         */
        CGCToGCMsgMasterAck.prototype.gcType = 0;
    
        /**
         * Creates a new CGCToGCMsgMasterAck instance using the specified properties.
         * @function create
         * @memberof CGCToGCMsgMasterAck
         * @static
         * @param {ICGCToGCMsgMasterAck=} [properties] Properties to set
         * @returns {CGCToGCMsgMasterAck} CGCToGCMsgMasterAck instance
         */
        CGCToGCMsgMasterAck.create = function create(properties) {
            return new CGCToGCMsgMasterAck(properties);
        };
    
        /**
         * Encodes the specified CGCToGCMsgMasterAck message. Does not implicitly {@link CGCToGCMsgMasterAck.verify|verify} messages.
         * @function encode
         * @memberof CGCToGCMsgMasterAck
         * @static
         * @param {ICGCToGCMsgMasterAck} message CGCToGCMsgMasterAck message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCToGCMsgMasterAck.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.dirIndex != null && Object.hasOwnProperty.call(message, "dirIndex"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.dirIndex);
            if (message.gcType != null && Object.hasOwnProperty.call(message, "gcType"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.gcType);
            return writer;
        };
    
        /**
         * Encodes the specified CGCToGCMsgMasterAck message, length delimited. Does not implicitly {@link CGCToGCMsgMasterAck.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCToGCMsgMasterAck
         * @static
         * @param {ICGCToGCMsgMasterAck} message CGCToGCMsgMasterAck message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCToGCMsgMasterAck.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCToGCMsgMasterAck message from the specified reader or buffer.
         * @function decode
         * @memberof CGCToGCMsgMasterAck
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCToGCMsgMasterAck} CGCToGCMsgMasterAck
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCToGCMsgMasterAck.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCToGCMsgMasterAck();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.dirIndex = reader.uint32();
                        break;
                    }
                case 2: {
                        message.gcType = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCToGCMsgMasterAck message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCToGCMsgMasterAck
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCToGCMsgMasterAck} CGCToGCMsgMasterAck
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCToGCMsgMasterAck.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCToGCMsgMasterAck message.
         * @function verify
         * @memberof CGCToGCMsgMasterAck
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCToGCMsgMasterAck.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.dirIndex != null && message.hasOwnProperty("dirIndex"))
                if (!$util.isInteger(message.dirIndex))
                    return "dirIndex: integer expected";
            if (message.gcType != null && message.hasOwnProperty("gcType"))
                if (!$util.isInteger(message.gcType))
                    return "gcType: integer expected";
            return null;
        };
    
        /**
         * Creates a CGCToGCMsgMasterAck message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCToGCMsgMasterAck
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCToGCMsgMasterAck} CGCToGCMsgMasterAck
         */
        CGCToGCMsgMasterAck.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCToGCMsgMasterAck)
                return object;
            var message = new $root.CGCToGCMsgMasterAck();
            if (object.dirIndex != null)
                message.dirIndex = object.dirIndex >>> 0;
            if (object.gcType != null)
                message.gcType = object.gcType >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CGCToGCMsgMasterAck message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCToGCMsgMasterAck
         * @static
         * @param {CGCToGCMsgMasterAck} message CGCToGCMsgMasterAck
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCToGCMsgMasterAck.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.dirIndex = 0;
                object.gcType = 0;
            }
            if (message.dirIndex != null && message.hasOwnProperty("dirIndex"))
                object.dirIndex = message.dirIndex;
            if (message.gcType != null && message.hasOwnProperty("gcType"))
                object.gcType = message.gcType;
            return object;
        };
    
        /**
         * Converts this CGCToGCMsgMasterAck to JSON.
         * @function toJSON
         * @memberof CGCToGCMsgMasterAck
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCToGCMsgMasterAck.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCToGCMsgMasterAck
         * @function getTypeUrl
         * @memberof CGCToGCMsgMasterAck
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCToGCMsgMasterAck.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCToGCMsgMasterAck";
        };
    
        return CGCToGCMsgMasterAck;
    })();
    
    $root.CGCToGCMsgMasterAck_Response = (function() {
    
        /**
         * Properties of a CGCToGCMsgMasterAck_Response.
         * @exports ICGCToGCMsgMasterAck_Response
         * @interface ICGCToGCMsgMasterAck_Response
         * @property {number|null} [eresult] CGCToGCMsgMasterAck_Response eresult
         */
    
        /**
         * Constructs a new CGCToGCMsgMasterAck_Response.
         * @exports CGCToGCMsgMasterAck_Response
         * @classdesc Represents a CGCToGCMsgMasterAck_Response.
         * @implements ICGCToGCMsgMasterAck_Response
         * @constructor
         * @param {ICGCToGCMsgMasterAck_Response=} [properties] Properties to set
         */
        function CGCToGCMsgMasterAck_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCToGCMsgMasterAck_Response eresult.
         * @member {number} eresult
         * @memberof CGCToGCMsgMasterAck_Response
         * @instance
         */
        CGCToGCMsgMasterAck_Response.prototype.eresult = 2;
    
        /**
         * Creates a new CGCToGCMsgMasterAck_Response instance using the specified properties.
         * @function create
         * @memberof CGCToGCMsgMasterAck_Response
         * @static
         * @param {ICGCToGCMsgMasterAck_Response=} [properties] Properties to set
         * @returns {CGCToGCMsgMasterAck_Response} CGCToGCMsgMasterAck_Response instance
         */
        CGCToGCMsgMasterAck_Response.create = function create(properties) {
            return new CGCToGCMsgMasterAck_Response(properties);
        };
    
        /**
         * Encodes the specified CGCToGCMsgMasterAck_Response message. Does not implicitly {@link CGCToGCMsgMasterAck_Response.verify|verify} messages.
         * @function encode
         * @memberof CGCToGCMsgMasterAck_Response
         * @static
         * @param {ICGCToGCMsgMasterAck_Response} message CGCToGCMsgMasterAck_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCToGCMsgMasterAck_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            return writer;
        };
    
        /**
         * Encodes the specified CGCToGCMsgMasterAck_Response message, length delimited. Does not implicitly {@link CGCToGCMsgMasterAck_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCToGCMsgMasterAck_Response
         * @static
         * @param {ICGCToGCMsgMasterAck_Response} message CGCToGCMsgMasterAck_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCToGCMsgMasterAck_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCToGCMsgMasterAck_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CGCToGCMsgMasterAck_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCToGCMsgMasterAck_Response} CGCToGCMsgMasterAck_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCToGCMsgMasterAck_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCToGCMsgMasterAck_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.eresult = reader.int32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCToGCMsgMasterAck_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCToGCMsgMasterAck_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCToGCMsgMasterAck_Response} CGCToGCMsgMasterAck_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCToGCMsgMasterAck_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCToGCMsgMasterAck_Response message.
         * @function verify
         * @memberof CGCToGCMsgMasterAck_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCToGCMsgMasterAck_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            return null;
        };
    
        /**
         * Creates a CGCToGCMsgMasterAck_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCToGCMsgMasterAck_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCToGCMsgMasterAck_Response} CGCToGCMsgMasterAck_Response
         */
        CGCToGCMsgMasterAck_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCToGCMsgMasterAck_Response)
                return object;
            var message = new $root.CGCToGCMsgMasterAck_Response();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CGCToGCMsgMasterAck_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCToGCMsgMasterAck_Response
         * @static
         * @param {CGCToGCMsgMasterAck_Response} message CGCToGCMsgMasterAck_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCToGCMsgMasterAck_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.eresult = 2;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            return object;
        };
    
        /**
         * Converts this CGCToGCMsgMasterAck_Response to JSON.
         * @function toJSON
         * @memberof CGCToGCMsgMasterAck_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCToGCMsgMasterAck_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCToGCMsgMasterAck_Response
         * @function getTypeUrl
         * @memberof CGCToGCMsgMasterAck_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCToGCMsgMasterAck_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCToGCMsgMasterAck_Response";
        };
    
        return CGCToGCMsgMasterAck_Response;
    })();
    
    $root.CGCToGCMsgMasterStartupComplete = (function() {
    
        /**
         * Properties of a CGCToGCMsgMasterStartupComplete.
         * @exports ICGCToGCMsgMasterStartupComplete
         * @interface ICGCToGCMsgMasterStartupComplete
         */
    
        /**
         * Constructs a new CGCToGCMsgMasterStartupComplete.
         * @exports CGCToGCMsgMasterStartupComplete
         * @classdesc Represents a CGCToGCMsgMasterStartupComplete.
         * @implements ICGCToGCMsgMasterStartupComplete
         * @constructor
         * @param {ICGCToGCMsgMasterStartupComplete=} [properties] Properties to set
         */
        function CGCToGCMsgMasterStartupComplete(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CGCToGCMsgMasterStartupComplete instance using the specified properties.
         * @function create
         * @memberof CGCToGCMsgMasterStartupComplete
         * @static
         * @param {ICGCToGCMsgMasterStartupComplete=} [properties] Properties to set
         * @returns {CGCToGCMsgMasterStartupComplete} CGCToGCMsgMasterStartupComplete instance
         */
        CGCToGCMsgMasterStartupComplete.create = function create(properties) {
            return new CGCToGCMsgMasterStartupComplete(properties);
        };
    
        /**
         * Encodes the specified CGCToGCMsgMasterStartupComplete message. Does not implicitly {@link CGCToGCMsgMasterStartupComplete.verify|verify} messages.
         * @function encode
         * @memberof CGCToGCMsgMasterStartupComplete
         * @static
         * @param {ICGCToGCMsgMasterStartupComplete} message CGCToGCMsgMasterStartupComplete message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCToGCMsgMasterStartupComplete.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CGCToGCMsgMasterStartupComplete message, length delimited. Does not implicitly {@link CGCToGCMsgMasterStartupComplete.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCToGCMsgMasterStartupComplete
         * @static
         * @param {ICGCToGCMsgMasterStartupComplete} message CGCToGCMsgMasterStartupComplete message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCToGCMsgMasterStartupComplete.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCToGCMsgMasterStartupComplete message from the specified reader or buffer.
         * @function decode
         * @memberof CGCToGCMsgMasterStartupComplete
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCToGCMsgMasterStartupComplete} CGCToGCMsgMasterStartupComplete
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCToGCMsgMasterStartupComplete.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCToGCMsgMasterStartupComplete();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCToGCMsgMasterStartupComplete message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCToGCMsgMasterStartupComplete
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCToGCMsgMasterStartupComplete} CGCToGCMsgMasterStartupComplete
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCToGCMsgMasterStartupComplete.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCToGCMsgMasterStartupComplete message.
         * @function verify
         * @memberof CGCToGCMsgMasterStartupComplete
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCToGCMsgMasterStartupComplete.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CGCToGCMsgMasterStartupComplete message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCToGCMsgMasterStartupComplete
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCToGCMsgMasterStartupComplete} CGCToGCMsgMasterStartupComplete
         */
        CGCToGCMsgMasterStartupComplete.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCToGCMsgMasterStartupComplete)
                return object;
            return new $root.CGCToGCMsgMasterStartupComplete();
        };
    
        /**
         * Creates a plain object from a CGCToGCMsgMasterStartupComplete message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCToGCMsgMasterStartupComplete
         * @static
         * @param {CGCToGCMsgMasterStartupComplete} message CGCToGCMsgMasterStartupComplete
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCToGCMsgMasterStartupComplete.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CGCToGCMsgMasterStartupComplete to JSON.
         * @function toJSON
         * @memberof CGCToGCMsgMasterStartupComplete
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCToGCMsgMasterStartupComplete.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCToGCMsgMasterStartupComplete
         * @function getTypeUrl
         * @memberof CGCToGCMsgMasterStartupComplete
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCToGCMsgMasterStartupComplete.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCToGCMsgMasterStartupComplete";
        };
    
        return CGCToGCMsgMasterStartupComplete;
    })();
    
    $root.CGCToGCMsgRouted = (function() {
    
        /**
         * Properties of a CGCToGCMsgRouted.
         * @exports ICGCToGCMsgRouted
         * @interface ICGCToGCMsgRouted
         * @property {number|null} [msgType] CGCToGCMsgRouted msgType
         * @property {number|Long|null} [senderId] CGCToGCMsgRouted senderId
         * @property {Uint8Array|null} [netMessage] CGCToGCMsgRouted netMessage
         * @property {number|null} [ip] CGCToGCMsgRouted ip
         */
    
        /**
         * Constructs a new CGCToGCMsgRouted.
         * @exports CGCToGCMsgRouted
         * @classdesc Represents a CGCToGCMsgRouted.
         * @implements ICGCToGCMsgRouted
         * @constructor
         * @param {ICGCToGCMsgRouted=} [properties] Properties to set
         */
        function CGCToGCMsgRouted(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCToGCMsgRouted msgType.
         * @member {number} msgType
         * @memberof CGCToGCMsgRouted
         * @instance
         */
        CGCToGCMsgRouted.prototype.msgType = 0;
    
        /**
         * CGCToGCMsgRouted senderId.
         * @member {number|Long} senderId
         * @memberof CGCToGCMsgRouted
         * @instance
         */
        CGCToGCMsgRouted.prototype.senderId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CGCToGCMsgRouted netMessage.
         * @member {Uint8Array} netMessage
         * @memberof CGCToGCMsgRouted
         * @instance
         */
        CGCToGCMsgRouted.prototype.netMessage = $util.newBuffer([]);
    
        /**
         * CGCToGCMsgRouted ip.
         * @member {number} ip
         * @memberof CGCToGCMsgRouted
         * @instance
         */
        CGCToGCMsgRouted.prototype.ip = 0;
    
        /**
         * Creates a new CGCToGCMsgRouted instance using the specified properties.
         * @function create
         * @memberof CGCToGCMsgRouted
         * @static
         * @param {ICGCToGCMsgRouted=} [properties] Properties to set
         * @returns {CGCToGCMsgRouted} CGCToGCMsgRouted instance
         */
        CGCToGCMsgRouted.create = function create(properties) {
            return new CGCToGCMsgRouted(properties);
        };
    
        /**
         * Encodes the specified CGCToGCMsgRouted message. Does not implicitly {@link CGCToGCMsgRouted.verify|verify} messages.
         * @function encode
         * @memberof CGCToGCMsgRouted
         * @static
         * @param {ICGCToGCMsgRouted} message CGCToGCMsgRouted message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCToGCMsgRouted.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.msgType != null && Object.hasOwnProperty.call(message, "msgType"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.msgType);
            if (message.senderId != null && Object.hasOwnProperty.call(message, "senderId"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.senderId);
            if (message.netMessage != null && Object.hasOwnProperty.call(message, "netMessage"))
                writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.netMessage);
            if (message.ip != null && Object.hasOwnProperty.call(message, "ip"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.ip);
            return writer;
        };
    
        /**
         * Encodes the specified CGCToGCMsgRouted message, length delimited. Does not implicitly {@link CGCToGCMsgRouted.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCToGCMsgRouted
         * @static
         * @param {ICGCToGCMsgRouted} message CGCToGCMsgRouted message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCToGCMsgRouted.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCToGCMsgRouted message from the specified reader or buffer.
         * @function decode
         * @memberof CGCToGCMsgRouted
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCToGCMsgRouted} CGCToGCMsgRouted
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCToGCMsgRouted.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCToGCMsgRouted();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.msgType = reader.uint32();
                        break;
                    }
                case 2: {
                        message.senderId = reader.fixed64();
                        break;
                    }
                case 3: {
                        message.netMessage = reader.bytes();
                        break;
                    }
                case 4: {
                        message.ip = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCToGCMsgRouted message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCToGCMsgRouted
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCToGCMsgRouted} CGCToGCMsgRouted
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCToGCMsgRouted.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCToGCMsgRouted message.
         * @function verify
         * @memberof CGCToGCMsgRouted
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCToGCMsgRouted.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.msgType != null && message.hasOwnProperty("msgType"))
                if (!$util.isInteger(message.msgType))
                    return "msgType: integer expected";
            if (message.senderId != null && message.hasOwnProperty("senderId"))
                if (!$util.isInteger(message.senderId) && !(message.senderId && $util.isInteger(message.senderId.low) && $util.isInteger(message.senderId.high)))
                    return "senderId: integer|Long expected";
            if (message.netMessage != null && message.hasOwnProperty("netMessage"))
                if (!(message.netMessage && typeof message.netMessage.length === "number" || $util.isString(message.netMessage)))
                    return "netMessage: buffer expected";
            if (message.ip != null && message.hasOwnProperty("ip"))
                if (!$util.isInteger(message.ip))
                    return "ip: integer expected";
            return null;
        };
    
        /**
         * Creates a CGCToGCMsgRouted message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCToGCMsgRouted
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCToGCMsgRouted} CGCToGCMsgRouted
         */
        CGCToGCMsgRouted.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCToGCMsgRouted)
                return object;
            var message = new $root.CGCToGCMsgRouted();
            if (object.msgType != null)
                message.msgType = object.msgType >>> 0;
            if (object.senderId != null)
                if ($util.Long)
                    (message.senderId = $util.Long.fromValue(object.senderId)).unsigned = false;
                else if (typeof object.senderId === "string")
                    message.senderId = parseInt(object.senderId, 10);
                else if (typeof object.senderId === "number")
                    message.senderId = object.senderId;
                else if (typeof object.senderId === "object")
                    message.senderId = new $util.LongBits(object.senderId.low >>> 0, object.senderId.high >>> 0).toNumber();
            if (object.netMessage != null)
                if (typeof object.netMessage === "string")
                    $util.base64.decode(object.netMessage, message.netMessage = $util.newBuffer($util.base64.length(object.netMessage)), 0);
                else if (object.netMessage.length >= 0)
                    message.netMessage = object.netMessage;
            if (object.ip != null)
                message.ip = object.ip >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CGCToGCMsgRouted message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCToGCMsgRouted
         * @static
         * @param {CGCToGCMsgRouted} message CGCToGCMsgRouted
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCToGCMsgRouted.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.msgType = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.senderId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.senderId = options.longs === String ? "0" : 0;
                if (options.bytes === String)
                    object.netMessage = "";
                else {
                    object.netMessage = [];
                    if (options.bytes !== Array)
                        object.netMessage = $util.newBuffer(object.netMessage);
                }
                object.ip = 0;
            }
            if (message.msgType != null && message.hasOwnProperty("msgType"))
                object.msgType = message.msgType;
            if (message.senderId != null && message.hasOwnProperty("senderId"))
                if (typeof message.senderId === "number")
                    object.senderId = options.longs === String ? String(message.senderId) : message.senderId;
                else
                    object.senderId = options.longs === String ? $util.Long.prototype.toString.call(message.senderId) : options.longs === Number ? new $util.LongBits(message.senderId.low >>> 0, message.senderId.high >>> 0).toNumber() : message.senderId;
            if (message.netMessage != null && message.hasOwnProperty("netMessage"))
                object.netMessage = options.bytes === String ? $util.base64.encode(message.netMessage, 0, message.netMessage.length) : options.bytes === Array ? Array.prototype.slice.call(message.netMessage) : message.netMessage;
            if (message.ip != null && message.hasOwnProperty("ip"))
                object.ip = message.ip;
            return object;
        };
    
        /**
         * Converts this CGCToGCMsgRouted to JSON.
         * @function toJSON
         * @memberof CGCToGCMsgRouted
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCToGCMsgRouted.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCToGCMsgRouted
         * @function getTypeUrl
         * @memberof CGCToGCMsgRouted
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCToGCMsgRouted.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCToGCMsgRouted";
        };
    
        return CGCToGCMsgRouted;
    })();
    
    $root.CGCToGCMsgRoutedReply = (function() {
    
        /**
         * Properties of a CGCToGCMsgRoutedReply.
         * @exports ICGCToGCMsgRoutedReply
         * @interface ICGCToGCMsgRoutedReply
         * @property {number|null} [msgType] CGCToGCMsgRoutedReply msgType
         * @property {Uint8Array|null} [netMessage] CGCToGCMsgRoutedReply netMessage
         */
    
        /**
         * Constructs a new CGCToGCMsgRoutedReply.
         * @exports CGCToGCMsgRoutedReply
         * @classdesc Represents a CGCToGCMsgRoutedReply.
         * @implements ICGCToGCMsgRoutedReply
         * @constructor
         * @param {ICGCToGCMsgRoutedReply=} [properties] Properties to set
         */
        function CGCToGCMsgRoutedReply(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCToGCMsgRoutedReply msgType.
         * @member {number} msgType
         * @memberof CGCToGCMsgRoutedReply
         * @instance
         */
        CGCToGCMsgRoutedReply.prototype.msgType = 0;
    
        /**
         * CGCToGCMsgRoutedReply netMessage.
         * @member {Uint8Array} netMessage
         * @memberof CGCToGCMsgRoutedReply
         * @instance
         */
        CGCToGCMsgRoutedReply.prototype.netMessage = $util.newBuffer([]);
    
        /**
         * Creates a new CGCToGCMsgRoutedReply instance using the specified properties.
         * @function create
         * @memberof CGCToGCMsgRoutedReply
         * @static
         * @param {ICGCToGCMsgRoutedReply=} [properties] Properties to set
         * @returns {CGCToGCMsgRoutedReply} CGCToGCMsgRoutedReply instance
         */
        CGCToGCMsgRoutedReply.create = function create(properties) {
            return new CGCToGCMsgRoutedReply(properties);
        };
    
        /**
         * Encodes the specified CGCToGCMsgRoutedReply message. Does not implicitly {@link CGCToGCMsgRoutedReply.verify|verify} messages.
         * @function encode
         * @memberof CGCToGCMsgRoutedReply
         * @static
         * @param {ICGCToGCMsgRoutedReply} message CGCToGCMsgRoutedReply message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCToGCMsgRoutedReply.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.msgType != null && Object.hasOwnProperty.call(message, "msgType"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.msgType);
            if (message.netMessage != null && Object.hasOwnProperty.call(message, "netMessage"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.netMessage);
            return writer;
        };
    
        /**
         * Encodes the specified CGCToGCMsgRoutedReply message, length delimited. Does not implicitly {@link CGCToGCMsgRoutedReply.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCToGCMsgRoutedReply
         * @static
         * @param {ICGCToGCMsgRoutedReply} message CGCToGCMsgRoutedReply message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCToGCMsgRoutedReply.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCToGCMsgRoutedReply message from the specified reader or buffer.
         * @function decode
         * @memberof CGCToGCMsgRoutedReply
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCToGCMsgRoutedReply} CGCToGCMsgRoutedReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCToGCMsgRoutedReply.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCToGCMsgRoutedReply();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.msgType = reader.uint32();
                        break;
                    }
                case 2: {
                        message.netMessage = reader.bytes();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCToGCMsgRoutedReply message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCToGCMsgRoutedReply
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCToGCMsgRoutedReply} CGCToGCMsgRoutedReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCToGCMsgRoutedReply.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCToGCMsgRoutedReply message.
         * @function verify
         * @memberof CGCToGCMsgRoutedReply
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCToGCMsgRoutedReply.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.msgType != null && message.hasOwnProperty("msgType"))
                if (!$util.isInteger(message.msgType))
                    return "msgType: integer expected";
            if (message.netMessage != null && message.hasOwnProperty("netMessage"))
                if (!(message.netMessage && typeof message.netMessage.length === "number" || $util.isString(message.netMessage)))
                    return "netMessage: buffer expected";
            return null;
        };
    
        /**
         * Creates a CGCToGCMsgRoutedReply message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCToGCMsgRoutedReply
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCToGCMsgRoutedReply} CGCToGCMsgRoutedReply
         */
        CGCToGCMsgRoutedReply.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCToGCMsgRoutedReply)
                return object;
            var message = new $root.CGCToGCMsgRoutedReply();
            if (object.msgType != null)
                message.msgType = object.msgType >>> 0;
            if (object.netMessage != null)
                if (typeof object.netMessage === "string")
                    $util.base64.decode(object.netMessage, message.netMessage = $util.newBuffer($util.base64.length(object.netMessage)), 0);
                else if (object.netMessage.length >= 0)
                    message.netMessage = object.netMessage;
            return message;
        };
    
        /**
         * Creates a plain object from a CGCToGCMsgRoutedReply message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCToGCMsgRoutedReply
         * @static
         * @param {CGCToGCMsgRoutedReply} message CGCToGCMsgRoutedReply
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCToGCMsgRoutedReply.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.msgType = 0;
                if (options.bytes === String)
                    object.netMessage = "";
                else {
                    object.netMessage = [];
                    if (options.bytes !== Array)
                        object.netMessage = $util.newBuffer(object.netMessage);
                }
            }
            if (message.msgType != null && message.hasOwnProperty("msgType"))
                object.msgType = message.msgType;
            if (message.netMessage != null && message.hasOwnProperty("netMessage"))
                object.netMessage = options.bytes === String ? $util.base64.encode(message.netMessage, 0, message.netMessage.length) : options.bytes === Array ? Array.prototype.slice.call(message.netMessage) : message.netMessage;
            return object;
        };
    
        /**
         * Converts this CGCToGCMsgRoutedReply to JSON.
         * @function toJSON
         * @memberof CGCToGCMsgRoutedReply
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCToGCMsgRoutedReply.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCToGCMsgRoutedReply
         * @function getTypeUrl
         * @memberof CGCToGCMsgRoutedReply
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCToGCMsgRoutedReply.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCToGCMsgRoutedReply";
        };
    
        return CGCToGCMsgRoutedReply;
    })();
    
    $root.CMsgGCUpdateSessionIP = (function() {
    
        /**
         * Properties of a CMsgGCUpdateSessionIP.
         * @exports ICMsgGCUpdateSessionIP
         * @interface ICMsgGCUpdateSessionIP
         * @property {number|Long|null} [steamid] CMsgGCUpdateSessionIP steamid
         * @property {number|null} [ip] CMsgGCUpdateSessionIP ip
         */
    
        /**
         * Constructs a new CMsgGCUpdateSessionIP.
         * @exports CMsgGCUpdateSessionIP
         * @classdesc Represents a CMsgGCUpdateSessionIP.
         * @implements ICMsgGCUpdateSessionIP
         * @constructor
         * @param {ICMsgGCUpdateSessionIP=} [properties] Properties to set
         */
        function CMsgGCUpdateSessionIP(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCUpdateSessionIP steamid.
         * @member {number|Long} steamid
         * @memberof CMsgGCUpdateSessionIP
         * @instance
         */
        CMsgGCUpdateSessionIP.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGCUpdateSessionIP ip.
         * @member {number} ip
         * @memberof CMsgGCUpdateSessionIP
         * @instance
         */
        CMsgGCUpdateSessionIP.prototype.ip = 0;
    
        /**
         * Creates a new CMsgGCUpdateSessionIP instance using the specified properties.
         * @function create
         * @memberof CMsgGCUpdateSessionIP
         * @static
         * @param {ICMsgGCUpdateSessionIP=} [properties] Properties to set
         * @returns {CMsgGCUpdateSessionIP} CMsgGCUpdateSessionIP instance
         */
        CMsgGCUpdateSessionIP.create = function create(properties) {
            return new CMsgGCUpdateSessionIP(properties);
        };
    
        /**
         * Encodes the specified CMsgGCUpdateSessionIP message. Does not implicitly {@link CMsgGCUpdateSessionIP.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCUpdateSessionIP
         * @static
         * @param {ICMsgGCUpdateSessionIP} message CMsgGCUpdateSessionIP message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCUpdateSessionIP.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
            if (message.ip != null && Object.hasOwnProperty.call(message, "ip"))
                writer.uint32(/* id 2, wireType 5 =*/21).fixed32(message.ip);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCUpdateSessionIP message, length delimited. Does not implicitly {@link CMsgGCUpdateSessionIP.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCUpdateSessionIP
         * @static
         * @param {ICMsgGCUpdateSessionIP} message CMsgGCUpdateSessionIP message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCUpdateSessionIP.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCUpdateSessionIP message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCUpdateSessionIP
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCUpdateSessionIP} CMsgGCUpdateSessionIP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCUpdateSessionIP.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCUpdateSessionIP();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamid = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.ip = reader.fixed32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCUpdateSessionIP message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCUpdateSessionIP
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCUpdateSessionIP} CMsgGCUpdateSessionIP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCUpdateSessionIP.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCUpdateSessionIP message.
         * @function verify
         * @memberof CMsgGCUpdateSessionIP
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCUpdateSessionIP.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.ip != null && message.hasOwnProperty("ip"))
                if (!$util.isInteger(message.ip))
                    return "ip: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCUpdateSessionIP message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCUpdateSessionIP
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCUpdateSessionIP} CMsgGCUpdateSessionIP
         */
        CMsgGCUpdateSessionIP.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCUpdateSessionIP)
                return object;
            var message = new $root.CMsgGCUpdateSessionIP();
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.ip != null)
                message.ip = object.ip >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCUpdateSessionIP message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCUpdateSessionIP
         * @static
         * @param {CMsgGCUpdateSessionIP} message CMsgGCUpdateSessionIP
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCUpdateSessionIP.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
                object.ip = 0;
            }
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.ip != null && message.hasOwnProperty("ip"))
                object.ip = message.ip;
            return object;
        };
    
        /**
         * Converts this CMsgGCUpdateSessionIP to JSON.
         * @function toJSON
         * @memberof CMsgGCUpdateSessionIP
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCUpdateSessionIP.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCUpdateSessionIP
         * @function getTypeUrl
         * @memberof CMsgGCUpdateSessionIP
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCUpdateSessionIP.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCUpdateSessionIP";
        };
    
        return CMsgGCUpdateSessionIP;
    })();
    
    $root.CMsgGCRequestSessionIP = (function() {
    
        /**
         * Properties of a CMsgGCRequestSessionIP.
         * @exports ICMsgGCRequestSessionIP
         * @interface ICMsgGCRequestSessionIP
         * @property {number|Long|null} [steamid] CMsgGCRequestSessionIP steamid
         */
    
        /**
         * Constructs a new CMsgGCRequestSessionIP.
         * @exports CMsgGCRequestSessionIP
         * @classdesc Represents a CMsgGCRequestSessionIP.
         * @implements ICMsgGCRequestSessionIP
         * @constructor
         * @param {ICMsgGCRequestSessionIP=} [properties] Properties to set
         */
        function CMsgGCRequestSessionIP(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCRequestSessionIP steamid.
         * @member {number|Long} steamid
         * @memberof CMsgGCRequestSessionIP
         * @instance
         */
        CMsgGCRequestSessionIP.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgGCRequestSessionIP instance using the specified properties.
         * @function create
         * @memberof CMsgGCRequestSessionIP
         * @static
         * @param {ICMsgGCRequestSessionIP=} [properties] Properties to set
         * @returns {CMsgGCRequestSessionIP} CMsgGCRequestSessionIP instance
         */
        CMsgGCRequestSessionIP.create = function create(properties) {
            return new CMsgGCRequestSessionIP(properties);
        };
    
        /**
         * Encodes the specified CMsgGCRequestSessionIP message. Does not implicitly {@link CMsgGCRequestSessionIP.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCRequestSessionIP
         * @static
         * @param {ICMsgGCRequestSessionIP} message CMsgGCRequestSessionIP message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCRequestSessionIP.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCRequestSessionIP message, length delimited. Does not implicitly {@link CMsgGCRequestSessionIP.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCRequestSessionIP
         * @static
         * @param {ICMsgGCRequestSessionIP} message CMsgGCRequestSessionIP message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCRequestSessionIP.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCRequestSessionIP message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCRequestSessionIP
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCRequestSessionIP} CMsgGCRequestSessionIP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCRequestSessionIP.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCRequestSessionIP();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamid = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCRequestSessionIP message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCRequestSessionIP
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCRequestSessionIP} CMsgGCRequestSessionIP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCRequestSessionIP.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCRequestSessionIP message.
         * @function verify
         * @memberof CMsgGCRequestSessionIP
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCRequestSessionIP.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCRequestSessionIP message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCRequestSessionIP
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCRequestSessionIP} CMsgGCRequestSessionIP
         */
        CMsgGCRequestSessionIP.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCRequestSessionIP)
                return object;
            var message = new $root.CMsgGCRequestSessionIP();
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCRequestSessionIP message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCRequestSessionIP
         * @static
         * @param {CMsgGCRequestSessionIP} message CMsgGCRequestSessionIP
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCRequestSessionIP.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            return object;
        };
    
        /**
         * Converts this CMsgGCRequestSessionIP to JSON.
         * @function toJSON
         * @memberof CMsgGCRequestSessionIP
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCRequestSessionIP.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCRequestSessionIP
         * @function getTypeUrl
         * @memberof CMsgGCRequestSessionIP
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCRequestSessionIP.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCRequestSessionIP";
        };
    
        return CMsgGCRequestSessionIP;
    })();
    
    $root.CMsgGCRequestSessionIPResponse = (function() {
    
        /**
         * Properties of a CMsgGCRequestSessionIPResponse.
         * @exports ICMsgGCRequestSessionIPResponse
         * @interface ICMsgGCRequestSessionIPResponse
         * @property {number|null} [ip] CMsgGCRequestSessionIPResponse ip
         */
    
        /**
         * Constructs a new CMsgGCRequestSessionIPResponse.
         * @exports CMsgGCRequestSessionIPResponse
         * @classdesc Represents a CMsgGCRequestSessionIPResponse.
         * @implements ICMsgGCRequestSessionIPResponse
         * @constructor
         * @param {ICMsgGCRequestSessionIPResponse=} [properties] Properties to set
         */
        function CMsgGCRequestSessionIPResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCRequestSessionIPResponse ip.
         * @member {number} ip
         * @memberof CMsgGCRequestSessionIPResponse
         * @instance
         */
        CMsgGCRequestSessionIPResponse.prototype.ip = 0;
    
        /**
         * Creates a new CMsgGCRequestSessionIPResponse instance using the specified properties.
         * @function create
         * @memberof CMsgGCRequestSessionIPResponse
         * @static
         * @param {ICMsgGCRequestSessionIPResponse=} [properties] Properties to set
         * @returns {CMsgGCRequestSessionIPResponse} CMsgGCRequestSessionIPResponse instance
         */
        CMsgGCRequestSessionIPResponse.create = function create(properties) {
            return new CMsgGCRequestSessionIPResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgGCRequestSessionIPResponse message. Does not implicitly {@link CMsgGCRequestSessionIPResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCRequestSessionIPResponse
         * @static
         * @param {ICMsgGCRequestSessionIPResponse} message CMsgGCRequestSessionIPResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCRequestSessionIPResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.ip != null && Object.hasOwnProperty.call(message, "ip"))
                writer.uint32(/* id 1, wireType 5 =*/13).fixed32(message.ip);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCRequestSessionIPResponse message, length delimited. Does not implicitly {@link CMsgGCRequestSessionIPResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCRequestSessionIPResponse
         * @static
         * @param {ICMsgGCRequestSessionIPResponse} message CMsgGCRequestSessionIPResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCRequestSessionIPResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCRequestSessionIPResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCRequestSessionIPResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCRequestSessionIPResponse} CMsgGCRequestSessionIPResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCRequestSessionIPResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCRequestSessionIPResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.ip = reader.fixed32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCRequestSessionIPResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCRequestSessionIPResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCRequestSessionIPResponse} CMsgGCRequestSessionIPResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCRequestSessionIPResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCRequestSessionIPResponse message.
         * @function verify
         * @memberof CMsgGCRequestSessionIPResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCRequestSessionIPResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.ip != null && message.hasOwnProperty("ip"))
                if (!$util.isInteger(message.ip))
                    return "ip: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCRequestSessionIPResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCRequestSessionIPResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCRequestSessionIPResponse} CMsgGCRequestSessionIPResponse
         */
        CMsgGCRequestSessionIPResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCRequestSessionIPResponse)
                return object;
            var message = new $root.CMsgGCRequestSessionIPResponse();
            if (object.ip != null)
                message.ip = object.ip >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCRequestSessionIPResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCRequestSessionIPResponse
         * @static
         * @param {CMsgGCRequestSessionIPResponse} message CMsgGCRequestSessionIPResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCRequestSessionIPResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.ip = 0;
            if (message.ip != null && message.hasOwnProperty("ip"))
                object.ip = message.ip;
            return object;
        };
    
        /**
         * Converts this CMsgGCRequestSessionIPResponse to JSON.
         * @function toJSON
         * @memberof CMsgGCRequestSessionIPResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCRequestSessionIPResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCRequestSessionIPResponse
         * @function getTypeUrl
         * @memberof CMsgGCRequestSessionIPResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCRequestSessionIPResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCRequestSessionIPResponse";
        };
    
        return CMsgGCRequestSessionIPResponse;
    })();
    
    $root.CMsgSOCacheHaveVersion = (function() {
    
        /**
         * Properties of a CMsgSOCacheHaveVersion.
         * @exports ICMsgSOCacheHaveVersion
         * @interface ICMsgSOCacheHaveVersion
         * @property {ICMsgSOIDOwner|null} [soid] CMsgSOCacheHaveVersion soid
         * @property {number|Long|null} [version] CMsgSOCacheHaveVersion version
         */
    
        /**
         * Constructs a new CMsgSOCacheHaveVersion.
         * @exports CMsgSOCacheHaveVersion
         * @classdesc Represents a CMsgSOCacheHaveVersion.
         * @implements ICMsgSOCacheHaveVersion
         * @constructor
         * @param {ICMsgSOCacheHaveVersion=} [properties] Properties to set
         */
        function CMsgSOCacheHaveVersion(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgSOCacheHaveVersion soid.
         * @member {ICMsgSOIDOwner|null|undefined} soid
         * @memberof CMsgSOCacheHaveVersion
         * @instance
         */
        CMsgSOCacheHaveVersion.prototype.soid = null;
    
        /**
         * CMsgSOCacheHaveVersion version.
         * @member {number|Long} version
         * @memberof CMsgSOCacheHaveVersion
         * @instance
         */
        CMsgSOCacheHaveVersion.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgSOCacheHaveVersion instance using the specified properties.
         * @function create
         * @memberof CMsgSOCacheHaveVersion
         * @static
         * @param {ICMsgSOCacheHaveVersion=} [properties] Properties to set
         * @returns {CMsgSOCacheHaveVersion} CMsgSOCacheHaveVersion instance
         */
        CMsgSOCacheHaveVersion.create = function create(properties) {
            return new CMsgSOCacheHaveVersion(properties);
        };
    
        /**
         * Encodes the specified CMsgSOCacheHaveVersion message. Does not implicitly {@link CMsgSOCacheHaveVersion.verify|verify} messages.
         * @function encode
         * @memberof CMsgSOCacheHaveVersion
         * @static
         * @param {ICMsgSOCacheHaveVersion} message CMsgSOCacheHaveVersion message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOCacheHaveVersion.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.soid != null && Object.hasOwnProperty.call(message, "soid"))
                $root.CMsgSOIDOwner.encode(message.soid, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.version);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgSOCacheHaveVersion message, length delimited. Does not implicitly {@link CMsgSOCacheHaveVersion.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgSOCacheHaveVersion
         * @static
         * @param {ICMsgSOCacheHaveVersion} message CMsgSOCacheHaveVersion message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOCacheHaveVersion.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgSOCacheHaveVersion message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgSOCacheHaveVersion
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgSOCacheHaveVersion} CMsgSOCacheHaveVersion
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOCacheHaveVersion.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSOCacheHaveVersion();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.soid = $root.CMsgSOIDOwner.decode(reader, reader.uint32());
                        break;
                    }
                case 2: {
                        message.version = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgSOCacheHaveVersion message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgSOCacheHaveVersion
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgSOCacheHaveVersion} CMsgSOCacheHaveVersion
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOCacheHaveVersion.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgSOCacheHaveVersion message.
         * @function verify
         * @memberof CMsgSOCacheHaveVersion
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgSOCacheHaveVersion.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.soid != null && message.hasOwnProperty("soid")) {
                var error = $root.CMsgSOIDOwner.verify(message.soid);
                if (error)
                    return "soid." + error;
            }
            if (message.version != null && message.hasOwnProperty("version"))
                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))
                    return "version: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgSOCacheHaveVersion message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgSOCacheHaveVersion
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgSOCacheHaveVersion} CMsgSOCacheHaveVersion
         */
        CMsgSOCacheHaveVersion.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgSOCacheHaveVersion)
                return object;
            var message = new $root.CMsgSOCacheHaveVersion();
            if (object.soid != null) {
                if (typeof object.soid !== "object")
                    throw TypeError(".CMsgSOCacheHaveVersion.soid: object expected");
                message.soid = $root.CMsgSOIDOwner.fromObject(object.soid);
            }
            if (object.version != null)
                if ($util.Long)
                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;
                else if (typeof object.version === "string")
                    message.version = parseInt(object.version, 10);
                else if (typeof object.version === "number")
                    message.version = object.version;
                else if (typeof object.version === "object")
                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgSOCacheHaveVersion message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgSOCacheHaveVersion
         * @static
         * @param {CMsgSOCacheHaveVersion} message CMsgSOCacheHaveVersion
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgSOCacheHaveVersion.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.soid = null;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.version = options.longs === String ? "0" : 0;
            }
            if (message.soid != null && message.hasOwnProperty("soid"))
                object.soid = $root.CMsgSOIDOwner.toObject(message.soid, options);
            if (message.version != null && message.hasOwnProperty("version"))
                if (typeof message.version === "number")
                    object.version = options.longs === String ? String(message.version) : message.version;
                else
                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;
            return object;
        };
    
        /**
         * Converts this CMsgSOCacheHaveVersion to JSON.
         * @function toJSON
         * @memberof CMsgSOCacheHaveVersion
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgSOCacheHaveVersion.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgSOCacheHaveVersion
         * @function getTypeUrl
         * @memberof CMsgSOCacheHaveVersion
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgSOCacheHaveVersion.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgSOCacheHaveVersion";
        };
    
        return CMsgSOCacheHaveVersion;
    })();
    
    $root.CMsgClientHello = (function() {
    
        /**
         * Properties of a CMsgClientHello.
         * @exports ICMsgClientHello
         * @interface ICMsgClientHello
         * @property {number|null} [version] CMsgClientHello version
         * @property {Array.<ICMsgSOCacheHaveVersion>|null} [socacheHaveVersions] CMsgClientHello socacheHaveVersions
         * @property {number|null} [clientSessionNeed] CMsgClientHello clientSessionNeed
         * @property {number|null} [clientLauncher] CMsgClientHello clientLauncher
         * @property {number|null} [partnerSrcid] CMsgClientHello partnerSrcid
         * @property {number|null} [partnerAccountid] CMsgClientHello partnerAccountid
         * @property {number|null} [partnerAccountflags] CMsgClientHello partnerAccountflags
         * @property {number|null} [partnerAccountbalance] CMsgClientHello partnerAccountbalance
         * @property {number|null} [steamLauncher] CMsgClientHello steamLauncher
         */
    
        /**
         * Constructs a new CMsgClientHello.
         * @exports CMsgClientHello
         * @classdesc Represents a CMsgClientHello.
         * @implements ICMsgClientHello
         * @constructor
         * @param {ICMsgClientHello=} [properties] Properties to set
         */
        function CMsgClientHello(properties) {
            this.socacheHaveVersions = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientHello version.
         * @member {number} version
         * @memberof CMsgClientHello
         * @instance
         */
        CMsgClientHello.prototype.version = 0;
    
        /**
         * CMsgClientHello socacheHaveVersions.
         * @member {Array.<ICMsgSOCacheHaveVersion>} socacheHaveVersions
         * @memberof CMsgClientHello
         * @instance
         */
        CMsgClientHello.prototype.socacheHaveVersions = $util.emptyArray;
    
        /**
         * CMsgClientHello clientSessionNeed.
         * @member {number} clientSessionNeed
         * @memberof CMsgClientHello
         * @instance
         */
        CMsgClientHello.prototype.clientSessionNeed = 0;
    
        /**
         * CMsgClientHello clientLauncher.
         * @member {number} clientLauncher
         * @memberof CMsgClientHello
         * @instance
         */
        CMsgClientHello.prototype.clientLauncher = 0;
    
        /**
         * CMsgClientHello partnerSrcid.
         * @member {number} partnerSrcid
         * @memberof CMsgClientHello
         * @instance
         */
        CMsgClientHello.prototype.partnerSrcid = 0;
    
        /**
         * CMsgClientHello partnerAccountid.
         * @member {number} partnerAccountid
         * @memberof CMsgClientHello
         * @instance
         */
        CMsgClientHello.prototype.partnerAccountid = 0;
    
        /**
         * CMsgClientHello partnerAccountflags.
         * @member {number} partnerAccountflags
         * @memberof CMsgClientHello
         * @instance
         */
        CMsgClientHello.prototype.partnerAccountflags = 0;
    
        /**
         * CMsgClientHello partnerAccountbalance.
         * @member {number} partnerAccountbalance
         * @memberof CMsgClientHello
         * @instance
         */
        CMsgClientHello.prototype.partnerAccountbalance = 0;
    
        /**
         * CMsgClientHello steamLauncher.
         * @member {number} steamLauncher
         * @memberof CMsgClientHello
         * @instance
         */
        CMsgClientHello.prototype.steamLauncher = 0;
    
        /**
         * Creates a new CMsgClientHello instance using the specified properties.
         * @function create
         * @memberof CMsgClientHello
         * @static
         * @param {ICMsgClientHello=} [properties] Properties to set
         * @returns {CMsgClientHello} CMsgClientHello instance
         */
        CMsgClientHello.create = function create(properties) {
            return new CMsgClientHello(properties);
        };
    
        /**
         * Encodes the specified CMsgClientHello message. Does not implicitly {@link CMsgClientHello.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientHello
         * @static
         * @param {ICMsgClientHello} message CMsgClientHello message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientHello.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.version);
            if (message.socacheHaveVersions != null && message.socacheHaveVersions.length)
                for (var i = 0; i < message.socacheHaveVersions.length; ++i)
                    $root.CMsgSOCacheHaveVersion.encode(message.socacheHaveVersions[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            if (message.clientSessionNeed != null && Object.hasOwnProperty.call(message, "clientSessionNeed"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.clientSessionNeed);
            if (message.clientLauncher != null && Object.hasOwnProperty.call(message, "clientLauncher"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.clientLauncher);
            if (message.partnerSrcid != null && Object.hasOwnProperty.call(message, "partnerSrcid"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.partnerSrcid);
            if (message.partnerAccountid != null && Object.hasOwnProperty.call(message, "partnerAccountid"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.partnerAccountid);
            if (message.partnerAccountflags != null && Object.hasOwnProperty.call(message, "partnerAccountflags"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.partnerAccountflags);
            if (message.partnerAccountbalance != null && Object.hasOwnProperty.call(message, "partnerAccountbalance"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.partnerAccountbalance);
            if (message.steamLauncher != null && Object.hasOwnProperty.call(message, "steamLauncher"))
                writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.steamLauncher);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientHello message, length delimited. Does not implicitly {@link CMsgClientHello.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientHello
         * @static
         * @param {ICMsgClientHello} message CMsgClientHello message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientHello.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientHello message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientHello
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientHello} CMsgClientHello
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientHello.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientHello();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.version = reader.uint32();
                        break;
                    }
                case 2: {
                        if (!(message.socacheHaveVersions && message.socacheHaveVersions.length))
                            message.socacheHaveVersions = [];
                        message.socacheHaveVersions.push($root.CMsgSOCacheHaveVersion.decode(reader, reader.uint32()));
                        break;
                    }
                case 3: {
                        message.clientSessionNeed = reader.uint32();
                        break;
                    }
                case 4: {
                        message.clientLauncher = reader.uint32();
                        break;
                    }
                case 5: {
                        message.partnerSrcid = reader.uint32();
                        break;
                    }
                case 6: {
                        message.partnerAccountid = reader.uint32();
                        break;
                    }
                case 7: {
                        message.partnerAccountflags = reader.uint32();
                        break;
                    }
                case 8: {
                        message.partnerAccountbalance = reader.uint32();
                        break;
                    }
                case 9: {
                        message.steamLauncher = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientHello message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientHello
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientHello} CMsgClientHello
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientHello.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientHello message.
         * @function verify
         * @memberof CMsgClientHello
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientHello.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.version != null && message.hasOwnProperty("version"))
                if (!$util.isInteger(message.version))
                    return "version: integer expected";
            if (message.socacheHaveVersions != null && message.hasOwnProperty("socacheHaveVersions")) {
                if (!Array.isArray(message.socacheHaveVersions))
                    return "socacheHaveVersions: array expected";
                for (var i = 0; i < message.socacheHaveVersions.length; ++i) {
                    var error = $root.CMsgSOCacheHaveVersion.verify(message.socacheHaveVersions[i]);
                    if (error)
                        return "socacheHaveVersions." + error;
                }
            }
            if (message.clientSessionNeed != null && message.hasOwnProperty("clientSessionNeed"))
                if (!$util.isInteger(message.clientSessionNeed))
                    return "clientSessionNeed: integer expected";
            if (message.clientLauncher != null && message.hasOwnProperty("clientLauncher"))
                if (!$util.isInteger(message.clientLauncher))
                    return "clientLauncher: integer expected";
            if (message.partnerSrcid != null && message.hasOwnProperty("partnerSrcid"))
                if (!$util.isInteger(message.partnerSrcid))
                    return "partnerSrcid: integer expected";
            if (message.partnerAccountid != null && message.hasOwnProperty("partnerAccountid"))
                if (!$util.isInteger(message.partnerAccountid))
                    return "partnerAccountid: integer expected";
            if (message.partnerAccountflags != null && message.hasOwnProperty("partnerAccountflags"))
                if (!$util.isInteger(message.partnerAccountflags))
                    return "partnerAccountflags: integer expected";
            if (message.partnerAccountbalance != null && message.hasOwnProperty("partnerAccountbalance"))
                if (!$util.isInteger(message.partnerAccountbalance))
                    return "partnerAccountbalance: integer expected";
            if (message.steamLauncher != null && message.hasOwnProperty("steamLauncher"))
                if (!$util.isInteger(message.steamLauncher))
                    return "steamLauncher: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientHello message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientHello
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientHello} CMsgClientHello
         */
        CMsgClientHello.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientHello)
                return object;
            var message = new $root.CMsgClientHello();
            if (object.version != null)
                message.version = object.version >>> 0;
            if (object.socacheHaveVersions) {
                if (!Array.isArray(object.socacheHaveVersions))
                    throw TypeError(".CMsgClientHello.socacheHaveVersions: array expected");
                message.socacheHaveVersions = [];
                for (var i = 0; i < object.socacheHaveVersions.length; ++i) {
                    if (typeof object.socacheHaveVersions[i] !== "object")
                        throw TypeError(".CMsgClientHello.socacheHaveVersions: object expected");
                    message.socacheHaveVersions[i] = $root.CMsgSOCacheHaveVersion.fromObject(object.socacheHaveVersions[i]);
                }
            }
            if (object.clientSessionNeed != null)
                message.clientSessionNeed = object.clientSessionNeed >>> 0;
            if (object.clientLauncher != null)
                message.clientLauncher = object.clientLauncher >>> 0;
            if (object.partnerSrcid != null)
                message.partnerSrcid = object.partnerSrcid >>> 0;
            if (object.partnerAccountid != null)
                message.partnerAccountid = object.partnerAccountid >>> 0;
            if (object.partnerAccountflags != null)
                message.partnerAccountflags = object.partnerAccountflags >>> 0;
            if (object.partnerAccountbalance != null)
                message.partnerAccountbalance = object.partnerAccountbalance >>> 0;
            if (object.steamLauncher != null)
                message.steamLauncher = object.steamLauncher >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientHello message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientHello
         * @static
         * @param {CMsgClientHello} message CMsgClientHello
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientHello.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.socacheHaveVersions = [];
            if (options.defaults) {
                object.version = 0;
                object.clientSessionNeed = 0;
                object.clientLauncher = 0;
                object.partnerSrcid = 0;
                object.partnerAccountid = 0;
                object.partnerAccountflags = 0;
                object.partnerAccountbalance = 0;
                object.steamLauncher = 0;
            }
            if (message.version != null && message.hasOwnProperty("version"))
                object.version = message.version;
            if (message.socacheHaveVersions && message.socacheHaveVersions.length) {
                object.socacheHaveVersions = [];
                for (var j = 0; j < message.socacheHaveVersions.length; ++j)
                    object.socacheHaveVersions[j] = $root.CMsgSOCacheHaveVersion.toObject(message.socacheHaveVersions[j], options);
            }
            if (message.clientSessionNeed != null && message.hasOwnProperty("clientSessionNeed"))
                object.clientSessionNeed = message.clientSessionNeed;
            if (message.clientLauncher != null && message.hasOwnProperty("clientLauncher"))
                object.clientLauncher = message.clientLauncher;
            if (message.partnerSrcid != null && message.hasOwnProperty("partnerSrcid"))
                object.partnerSrcid = message.partnerSrcid;
            if (message.partnerAccountid != null && message.hasOwnProperty("partnerAccountid"))
                object.partnerAccountid = message.partnerAccountid;
            if (message.partnerAccountflags != null && message.hasOwnProperty("partnerAccountflags"))
                object.partnerAccountflags = message.partnerAccountflags;
            if (message.partnerAccountbalance != null && message.hasOwnProperty("partnerAccountbalance"))
                object.partnerAccountbalance = message.partnerAccountbalance;
            if (message.steamLauncher != null && message.hasOwnProperty("steamLauncher"))
                object.steamLauncher = message.steamLauncher;
            return object;
        };
    
        /**
         * Converts this CMsgClientHello to JSON.
         * @function toJSON
         * @memberof CMsgClientHello
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientHello.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgClientHello
         * @function getTypeUrl
         * @memberof CMsgClientHello
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgClientHello.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgClientHello";
        };
    
        return CMsgClientHello;
    })();
    
    $root.CMsgServerHello = (function() {
    
        /**
         * Properties of a CMsgServerHello.
         * @exports ICMsgServerHello
         * @interface ICMsgServerHello
         * @property {number|null} [version] CMsgServerHello version
         * @property {Array.<ICMsgSOCacheHaveVersion>|null} [socacheHaveVersions] CMsgServerHello socacheHaveVersions
         * @property {number|null} [legacyClientSessionNeed] CMsgServerHello legacyClientSessionNeed
         * @property {number|null} [clientLauncher] CMsgServerHello clientLauncher
         * @property {Uint8Array|null} [legacySteamdatagramRouting] CMsgServerHello legacySteamdatagramRouting
         * @property {number|null} [requiredInternalAddr] CMsgServerHello requiredInternalAddr
         * @property {Uint8Array|null} [steamdatagramLogin] CMsgServerHello steamdatagramLogin
         */
    
        /**
         * Constructs a new CMsgServerHello.
         * @exports CMsgServerHello
         * @classdesc Represents a CMsgServerHello.
         * @implements ICMsgServerHello
         * @constructor
         * @param {ICMsgServerHello=} [properties] Properties to set
         */
        function CMsgServerHello(properties) {
            this.socacheHaveVersions = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgServerHello version.
         * @member {number} version
         * @memberof CMsgServerHello
         * @instance
         */
        CMsgServerHello.prototype.version = 0;
    
        /**
         * CMsgServerHello socacheHaveVersions.
         * @member {Array.<ICMsgSOCacheHaveVersion>} socacheHaveVersions
         * @memberof CMsgServerHello
         * @instance
         */
        CMsgServerHello.prototype.socacheHaveVersions = $util.emptyArray;
    
        /**
         * CMsgServerHello legacyClientSessionNeed.
         * @member {number} legacyClientSessionNeed
         * @memberof CMsgServerHello
         * @instance
         */
        CMsgServerHello.prototype.legacyClientSessionNeed = 0;
    
        /**
         * CMsgServerHello clientLauncher.
         * @member {number} clientLauncher
         * @memberof CMsgServerHello
         * @instance
         */
        CMsgServerHello.prototype.clientLauncher = 0;
    
        /**
         * CMsgServerHello legacySteamdatagramRouting.
         * @member {Uint8Array} legacySteamdatagramRouting
         * @memberof CMsgServerHello
         * @instance
         */
        CMsgServerHello.prototype.legacySteamdatagramRouting = $util.newBuffer([]);
    
        /**
         * CMsgServerHello requiredInternalAddr.
         * @member {number} requiredInternalAddr
         * @memberof CMsgServerHello
         * @instance
         */
        CMsgServerHello.prototype.requiredInternalAddr = 0;
    
        /**
         * CMsgServerHello steamdatagramLogin.
         * @member {Uint8Array} steamdatagramLogin
         * @memberof CMsgServerHello
         * @instance
         */
        CMsgServerHello.prototype.steamdatagramLogin = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgServerHello instance using the specified properties.
         * @function create
         * @memberof CMsgServerHello
         * @static
         * @param {ICMsgServerHello=} [properties] Properties to set
         * @returns {CMsgServerHello} CMsgServerHello instance
         */
        CMsgServerHello.create = function create(properties) {
            return new CMsgServerHello(properties);
        };
    
        /**
         * Encodes the specified CMsgServerHello message. Does not implicitly {@link CMsgServerHello.verify|verify} messages.
         * @function encode
         * @memberof CMsgServerHello
         * @static
         * @param {ICMsgServerHello} message CMsgServerHello message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgServerHello.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.version);
            if (message.socacheHaveVersions != null && message.socacheHaveVersions.length)
                for (var i = 0; i < message.socacheHaveVersions.length; ++i)
                    $root.CMsgSOCacheHaveVersion.encode(message.socacheHaveVersions[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            if (message.legacyClientSessionNeed != null && Object.hasOwnProperty.call(message, "legacyClientSessionNeed"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.legacyClientSessionNeed);
            if (message.clientLauncher != null && Object.hasOwnProperty.call(message, "clientLauncher"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.clientLauncher);
            if (message.legacySteamdatagramRouting != null && Object.hasOwnProperty.call(message, "legacySteamdatagramRouting"))
                writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.legacySteamdatagramRouting);
            if (message.requiredInternalAddr != null && Object.hasOwnProperty.call(message, "requiredInternalAddr"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.requiredInternalAddr);
            if (message.steamdatagramLogin != null && Object.hasOwnProperty.call(message, "steamdatagramLogin"))
                writer.uint32(/* id 8, wireType 2 =*/66).bytes(message.steamdatagramLogin);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgServerHello message, length delimited. Does not implicitly {@link CMsgServerHello.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgServerHello
         * @static
         * @param {ICMsgServerHello} message CMsgServerHello message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgServerHello.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgServerHello message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgServerHello
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgServerHello} CMsgServerHello
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgServerHello.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgServerHello();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.version = reader.uint32();
                        break;
                    }
                case 2: {
                        if (!(message.socacheHaveVersions && message.socacheHaveVersions.length))
                            message.socacheHaveVersions = [];
                        message.socacheHaveVersions.push($root.CMsgSOCacheHaveVersion.decode(reader, reader.uint32()));
                        break;
                    }
                case 3: {
                        message.legacyClientSessionNeed = reader.uint32();
                        break;
                    }
                case 4: {
                        message.clientLauncher = reader.uint32();
                        break;
                    }
                case 6: {
                        message.legacySteamdatagramRouting = reader.bytes();
                        break;
                    }
                case 7: {
                        message.requiredInternalAddr = reader.uint32();
                        break;
                    }
                case 8: {
                        message.steamdatagramLogin = reader.bytes();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgServerHello message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgServerHello
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgServerHello} CMsgServerHello
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgServerHello.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgServerHello message.
         * @function verify
         * @memberof CMsgServerHello
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgServerHello.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.version != null && message.hasOwnProperty("version"))
                if (!$util.isInteger(message.version))
                    return "version: integer expected";
            if (message.socacheHaveVersions != null && message.hasOwnProperty("socacheHaveVersions")) {
                if (!Array.isArray(message.socacheHaveVersions))
                    return "socacheHaveVersions: array expected";
                for (var i = 0; i < message.socacheHaveVersions.length; ++i) {
                    var error = $root.CMsgSOCacheHaveVersion.verify(message.socacheHaveVersions[i]);
                    if (error)
                        return "socacheHaveVersions." + error;
                }
            }
            if (message.legacyClientSessionNeed != null && message.hasOwnProperty("legacyClientSessionNeed"))
                if (!$util.isInteger(message.legacyClientSessionNeed))
                    return "legacyClientSessionNeed: integer expected";
            if (message.clientLauncher != null && message.hasOwnProperty("clientLauncher"))
                if (!$util.isInteger(message.clientLauncher))
                    return "clientLauncher: integer expected";
            if (message.legacySteamdatagramRouting != null && message.hasOwnProperty("legacySteamdatagramRouting"))
                if (!(message.legacySteamdatagramRouting && typeof message.legacySteamdatagramRouting.length === "number" || $util.isString(message.legacySteamdatagramRouting)))
                    return "legacySteamdatagramRouting: buffer expected";
            if (message.requiredInternalAddr != null && message.hasOwnProperty("requiredInternalAddr"))
                if (!$util.isInteger(message.requiredInternalAddr))
                    return "requiredInternalAddr: integer expected";
            if (message.steamdatagramLogin != null && message.hasOwnProperty("steamdatagramLogin"))
                if (!(message.steamdatagramLogin && typeof message.steamdatagramLogin.length === "number" || $util.isString(message.steamdatagramLogin)))
                    return "steamdatagramLogin: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgServerHello message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgServerHello
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgServerHello} CMsgServerHello
         */
        CMsgServerHello.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgServerHello)
                return object;
            var message = new $root.CMsgServerHello();
            if (object.version != null)
                message.version = object.version >>> 0;
            if (object.socacheHaveVersions) {
                if (!Array.isArray(object.socacheHaveVersions))
                    throw TypeError(".CMsgServerHello.socacheHaveVersions: array expected");
                message.socacheHaveVersions = [];
                for (var i = 0; i < object.socacheHaveVersions.length; ++i) {
                    if (typeof object.socacheHaveVersions[i] !== "object")
                        throw TypeError(".CMsgServerHello.socacheHaveVersions: object expected");
                    message.socacheHaveVersions[i] = $root.CMsgSOCacheHaveVersion.fromObject(object.socacheHaveVersions[i]);
                }
            }
            if (object.legacyClientSessionNeed != null)
                message.legacyClientSessionNeed = object.legacyClientSessionNeed >>> 0;
            if (object.clientLauncher != null)
                message.clientLauncher = object.clientLauncher >>> 0;
            if (object.legacySteamdatagramRouting != null)
                if (typeof object.legacySteamdatagramRouting === "string")
                    $util.base64.decode(object.legacySteamdatagramRouting, message.legacySteamdatagramRouting = $util.newBuffer($util.base64.length(object.legacySteamdatagramRouting)), 0);
                else if (object.legacySteamdatagramRouting.length >= 0)
                    message.legacySteamdatagramRouting = object.legacySteamdatagramRouting;
            if (object.requiredInternalAddr != null)
                message.requiredInternalAddr = object.requiredInternalAddr >>> 0;
            if (object.steamdatagramLogin != null)
                if (typeof object.steamdatagramLogin === "string")
                    $util.base64.decode(object.steamdatagramLogin, message.steamdatagramLogin = $util.newBuffer($util.base64.length(object.steamdatagramLogin)), 0);
                else if (object.steamdatagramLogin.length >= 0)
                    message.steamdatagramLogin = object.steamdatagramLogin;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgServerHello message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgServerHello
         * @static
         * @param {CMsgServerHello} message CMsgServerHello
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgServerHello.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.socacheHaveVersions = [];
            if (options.defaults) {
                object.version = 0;
                object.legacyClientSessionNeed = 0;
                object.clientLauncher = 0;
                if (options.bytes === String)
                    object.legacySteamdatagramRouting = "";
                else {
                    object.legacySteamdatagramRouting = [];
                    if (options.bytes !== Array)
                        object.legacySteamdatagramRouting = $util.newBuffer(object.legacySteamdatagramRouting);
                }
                object.requiredInternalAddr = 0;
                if (options.bytes === String)
                    object.steamdatagramLogin = "";
                else {
                    object.steamdatagramLogin = [];
                    if (options.bytes !== Array)
                        object.steamdatagramLogin = $util.newBuffer(object.steamdatagramLogin);
                }
            }
            if (message.version != null && message.hasOwnProperty("version"))
                object.version = message.version;
            if (message.socacheHaveVersions && message.socacheHaveVersions.length) {
                object.socacheHaveVersions = [];
                for (var j = 0; j < message.socacheHaveVersions.length; ++j)
                    object.socacheHaveVersions[j] = $root.CMsgSOCacheHaveVersion.toObject(message.socacheHaveVersions[j], options);
            }
            if (message.legacyClientSessionNeed != null && message.hasOwnProperty("legacyClientSessionNeed"))
                object.legacyClientSessionNeed = message.legacyClientSessionNeed;
            if (message.clientLauncher != null && message.hasOwnProperty("clientLauncher"))
                object.clientLauncher = message.clientLauncher;
            if (message.legacySteamdatagramRouting != null && message.hasOwnProperty("legacySteamdatagramRouting"))
                object.legacySteamdatagramRouting = options.bytes === String ? $util.base64.encode(message.legacySteamdatagramRouting, 0, message.legacySteamdatagramRouting.length) : options.bytes === Array ? Array.prototype.slice.call(message.legacySteamdatagramRouting) : message.legacySteamdatagramRouting;
            if (message.requiredInternalAddr != null && message.hasOwnProperty("requiredInternalAddr"))
                object.requiredInternalAddr = message.requiredInternalAddr;
            if (message.steamdatagramLogin != null && message.hasOwnProperty("steamdatagramLogin"))
                object.steamdatagramLogin = options.bytes === String ? $util.base64.encode(message.steamdatagramLogin, 0, message.steamdatagramLogin.length) : options.bytes === Array ? Array.prototype.slice.call(message.steamdatagramLogin) : message.steamdatagramLogin;
            return object;
        };
    
        /**
         * Converts this CMsgServerHello to JSON.
         * @function toJSON
         * @memberof CMsgServerHello
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgServerHello.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgServerHello
         * @function getTypeUrl
         * @memberof CMsgServerHello
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgServerHello.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgServerHello";
        };
    
        return CMsgServerHello;
    })();
    
    $root.CMsgClientWelcome = (function() {
    
        /**
         * Properties of a CMsgClientWelcome.
         * @exports ICMsgClientWelcome
         * @interface ICMsgClientWelcome
         * @property {number|null} [version] CMsgClientWelcome version
         * @property {Uint8Array|null} [gameData] CMsgClientWelcome gameData
         * @property {Array.<ICMsgSOCacheSubscribed>|null} [outofdateSubscribedCaches] CMsgClientWelcome outofdateSubscribedCaches
         * @property {Array.<ICMsgSOCacheSubscriptionCheck>|null} [uptodateSubscribedCaches] CMsgClientWelcome uptodateSubscribedCaches
         * @property {CMsgClientWelcome.ILocation|null} [location] CMsgClientWelcome location
         * @property {Uint8Array|null} [gameData2] CMsgClientWelcome gameData2
         * @property {number|null} [rtime32GcWelcomeTimestamp] CMsgClientWelcome rtime32GcWelcomeTimestamp
         * @property {number|null} [currency] CMsgClientWelcome currency
         * @property {number|null} [balance] CMsgClientWelcome balance
         * @property {string|null} [balanceUrl] CMsgClientWelcome balanceUrl
         * @property {string|null} [txnCountryCode] CMsgClientWelcome txnCountryCode
         */
    
        /**
         * Constructs a new CMsgClientWelcome.
         * @exports CMsgClientWelcome
         * @classdesc Represents a CMsgClientWelcome.
         * @implements ICMsgClientWelcome
         * @constructor
         * @param {ICMsgClientWelcome=} [properties] Properties to set
         */
        function CMsgClientWelcome(properties) {
            this.outofdateSubscribedCaches = [];
            this.uptodateSubscribedCaches = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientWelcome version.
         * @member {number} version
         * @memberof CMsgClientWelcome
         * @instance
         */
        CMsgClientWelcome.prototype.version = 0;
    
        /**
         * CMsgClientWelcome gameData.
         * @member {Uint8Array} gameData
         * @memberof CMsgClientWelcome
         * @instance
         */
        CMsgClientWelcome.prototype.gameData = $util.newBuffer([]);
    
        /**
         * CMsgClientWelcome outofdateSubscribedCaches.
         * @member {Array.<ICMsgSOCacheSubscribed>} outofdateSubscribedCaches
         * @memberof CMsgClientWelcome
         * @instance
         */
        CMsgClientWelcome.prototype.outofdateSubscribedCaches = $util.emptyArray;
    
        /**
         * CMsgClientWelcome uptodateSubscribedCaches.
         * @member {Array.<ICMsgSOCacheSubscriptionCheck>} uptodateSubscribedCaches
         * @memberof CMsgClientWelcome
         * @instance
         */
        CMsgClientWelcome.prototype.uptodateSubscribedCaches = $util.emptyArray;
    
        /**
         * CMsgClientWelcome location.
         * @member {CMsgClientWelcome.ILocation|null|undefined} location
         * @memberof CMsgClientWelcome
         * @instance
         */
        CMsgClientWelcome.prototype.location = null;
    
        /**
         * CMsgClientWelcome gameData2.
         * @member {Uint8Array} gameData2
         * @memberof CMsgClientWelcome
         * @instance
         */
        CMsgClientWelcome.prototype.gameData2 = $util.newBuffer([]);
    
        /**
         * CMsgClientWelcome rtime32GcWelcomeTimestamp.
         * @member {number} rtime32GcWelcomeTimestamp
         * @memberof CMsgClientWelcome
         * @instance
         */
        CMsgClientWelcome.prototype.rtime32GcWelcomeTimestamp = 0;
    
        /**
         * CMsgClientWelcome currency.
         * @member {number} currency
         * @memberof CMsgClientWelcome
         * @instance
         */
        CMsgClientWelcome.prototype.currency = 0;
    
        /**
         * CMsgClientWelcome balance.
         * @member {number} balance
         * @memberof CMsgClientWelcome
         * @instance
         */
        CMsgClientWelcome.prototype.balance = 0;
    
        /**
         * CMsgClientWelcome balanceUrl.
         * @member {string} balanceUrl
         * @memberof CMsgClientWelcome
         * @instance
         */
        CMsgClientWelcome.prototype.balanceUrl = "";
    
        /**
         * CMsgClientWelcome txnCountryCode.
         * @member {string} txnCountryCode
         * @memberof CMsgClientWelcome
         * @instance
         */
        CMsgClientWelcome.prototype.txnCountryCode = "";
    
        /**
         * Creates a new CMsgClientWelcome instance using the specified properties.
         * @function create
         * @memberof CMsgClientWelcome
         * @static
         * @param {ICMsgClientWelcome=} [properties] Properties to set
         * @returns {CMsgClientWelcome} CMsgClientWelcome instance
         */
        CMsgClientWelcome.create = function create(properties) {
            return new CMsgClientWelcome(properties);
        };
    
        /**
         * Encodes the specified CMsgClientWelcome message. Does not implicitly {@link CMsgClientWelcome.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientWelcome
         * @static
         * @param {ICMsgClientWelcome} message CMsgClientWelcome message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientWelcome.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.version);
            if (message.gameData != null && Object.hasOwnProperty.call(message, "gameData"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.gameData);
            if (message.outofdateSubscribedCaches != null && message.outofdateSubscribedCaches.length)
                for (var i = 0; i < message.outofdateSubscribedCaches.length; ++i)
                    $root.CMsgSOCacheSubscribed.encode(message.outofdateSubscribedCaches[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            if (message.uptodateSubscribedCaches != null && message.uptodateSubscribedCaches.length)
                for (var i = 0; i < message.uptodateSubscribedCaches.length; ++i)
                    $root.CMsgSOCacheSubscriptionCheck.encode(message.uptodateSubscribedCaches[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                $root.CMsgClientWelcome.Location.encode(message.location, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
            if (message.gameData2 != null && Object.hasOwnProperty.call(message, "gameData2"))
                writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.gameData2);
            if (message.rtime32GcWelcomeTimestamp != null && Object.hasOwnProperty.call(message, "rtime32GcWelcomeTimestamp"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.rtime32GcWelcomeTimestamp);
            if (message.currency != null && Object.hasOwnProperty.call(message, "currency"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.currency);
            if (message.balance != null && Object.hasOwnProperty.call(message, "balance"))
                writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.balance);
            if (message.balanceUrl != null && Object.hasOwnProperty.call(message, "balanceUrl"))
                writer.uint32(/* id 10, wireType 2 =*/82).string(message.balanceUrl);
            if (message.txnCountryCode != null && Object.hasOwnProperty.call(message, "txnCountryCode"))
                writer.uint32(/* id 11, wireType 2 =*/90).string(message.txnCountryCode);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientWelcome message, length delimited. Does not implicitly {@link CMsgClientWelcome.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientWelcome
         * @static
         * @param {ICMsgClientWelcome} message CMsgClientWelcome message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientWelcome.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientWelcome message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientWelcome
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientWelcome} CMsgClientWelcome
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientWelcome.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientWelcome();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.version = reader.uint32();
                        break;
                    }
                case 2: {
                        message.gameData = reader.bytes();
                        break;
                    }
                case 3: {
                        if (!(message.outofdateSubscribedCaches && message.outofdateSubscribedCaches.length))
                            message.outofdateSubscribedCaches = [];
                        message.outofdateSubscribedCaches.push($root.CMsgSOCacheSubscribed.decode(reader, reader.uint32()));
                        break;
                    }
                case 4: {
                        if (!(message.uptodateSubscribedCaches && message.uptodateSubscribedCaches.length))
                            message.uptodateSubscribedCaches = [];
                        message.uptodateSubscribedCaches.push($root.CMsgSOCacheSubscriptionCheck.decode(reader, reader.uint32()));
                        break;
                    }
                case 5: {
                        message.location = $root.CMsgClientWelcome.Location.decode(reader, reader.uint32());
                        break;
                    }
                case 6: {
                        message.gameData2 = reader.bytes();
                        break;
                    }
                case 7: {
                        message.rtime32GcWelcomeTimestamp = reader.uint32();
                        break;
                    }
                case 8: {
                        message.currency = reader.uint32();
                        break;
                    }
                case 9: {
                        message.balance = reader.uint32();
                        break;
                    }
                case 10: {
                        message.balanceUrl = reader.string();
                        break;
                    }
                case 11: {
                        message.txnCountryCode = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientWelcome message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientWelcome
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientWelcome} CMsgClientWelcome
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientWelcome.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientWelcome message.
         * @function verify
         * @memberof CMsgClientWelcome
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientWelcome.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.version != null && message.hasOwnProperty("version"))
                if (!$util.isInteger(message.version))
                    return "version: integer expected";
            if (message.gameData != null && message.hasOwnProperty("gameData"))
                if (!(message.gameData && typeof message.gameData.length === "number" || $util.isString(message.gameData)))
                    return "gameData: buffer expected";
            if (message.outofdateSubscribedCaches != null && message.hasOwnProperty("outofdateSubscribedCaches")) {
                if (!Array.isArray(message.outofdateSubscribedCaches))
                    return "outofdateSubscribedCaches: array expected";
                for (var i = 0; i < message.outofdateSubscribedCaches.length; ++i) {
                    var error = $root.CMsgSOCacheSubscribed.verify(message.outofdateSubscribedCaches[i]);
                    if (error)
                        return "outofdateSubscribedCaches." + error;
                }
            }
            if (message.uptodateSubscribedCaches != null && message.hasOwnProperty("uptodateSubscribedCaches")) {
                if (!Array.isArray(message.uptodateSubscribedCaches))
                    return "uptodateSubscribedCaches: array expected";
                for (var i = 0; i < message.uptodateSubscribedCaches.length; ++i) {
                    var error = $root.CMsgSOCacheSubscriptionCheck.verify(message.uptodateSubscribedCaches[i]);
                    if (error)
                        return "uptodateSubscribedCaches." + error;
                }
            }
            if (message.location != null && message.hasOwnProperty("location")) {
                var error = $root.CMsgClientWelcome.Location.verify(message.location);
                if (error)
                    return "location." + error;
            }
            if (message.gameData2 != null && message.hasOwnProperty("gameData2"))
                if (!(message.gameData2 && typeof message.gameData2.length === "number" || $util.isString(message.gameData2)))
                    return "gameData2: buffer expected";
            if (message.rtime32GcWelcomeTimestamp != null && message.hasOwnProperty("rtime32GcWelcomeTimestamp"))
                if (!$util.isInteger(message.rtime32GcWelcomeTimestamp))
                    return "rtime32GcWelcomeTimestamp: integer expected";
            if (message.currency != null && message.hasOwnProperty("currency"))
                if (!$util.isInteger(message.currency))
                    return "currency: integer expected";
            if (message.balance != null && message.hasOwnProperty("balance"))
                if (!$util.isInteger(message.balance))
                    return "balance: integer expected";
            if (message.balanceUrl != null && message.hasOwnProperty("balanceUrl"))
                if (!$util.isString(message.balanceUrl))
                    return "balanceUrl: string expected";
            if (message.txnCountryCode != null && message.hasOwnProperty("txnCountryCode"))
                if (!$util.isString(message.txnCountryCode))
                    return "txnCountryCode: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientWelcome message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientWelcome
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientWelcome} CMsgClientWelcome
         */
        CMsgClientWelcome.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientWelcome)
                return object;
            var message = new $root.CMsgClientWelcome();
            if (object.version != null)
                message.version = object.version >>> 0;
            if (object.gameData != null)
                if (typeof object.gameData === "string")
                    $util.base64.decode(object.gameData, message.gameData = $util.newBuffer($util.base64.length(object.gameData)), 0);
                else if (object.gameData.length >= 0)
                    message.gameData = object.gameData;
            if (object.outofdateSubscribedCaches) {
                if (!Array.isArray(object.outofdateSubscribedCaches))
                    throw TypeError(".CMsgClientWelcome.outofdateSubscribedCaches: array expected");
                message.outofdateSubscribedCaches = [];
                for (var i = 0; i < object.outofdateSubscribedCaches.length; ++i) {
                    if (typeof object.outofdateSubscribedCaches[i] !== "object")
                        throw TypeError(".CMsgClientWelcome.outofdateSubscribedCaches: object expected");
                    message.outofdateSubscribedCaches[i] = $root.CMsgSOCacheSubscribed.fromObject(object.outofdateSubscribedCaches[i]);
                }
            }
            if (object.uptodateSubscribedCaches) {
                if (!Array.isArray(object.uptodateSubscribedCaches))
                    throw TypeError(".CMsgClientWelcome.uptodateSubscribedCaches: array expected");
                message.uptodateSubscribedCaches = [];
                for (var i = 0; i < object.uptodateSubscribedCaches.length; ++i) {
                    if (typeof object.uptodateSubscribedCaches[i] !== "object")
                        throw TypeError(".CMsgClientWelcome.uptodateSubscribedCaches: object expected");
                    message.uptodateSubscribedCaches[i] = $root.CMsgSOCacheSubscriptionCheck.fromObject(object.uptodateSubscribedCaches[i]);
                }
            }
            if (object.location != null) {
                if (typeof object.location !== "object")
                    throw TypeError(".CMsgClientWelcome.location: object expected");
                message.location = $root.CMsgClientWelcome.Location.fromObject(object.location);
            }
            if (object.gameData2 != null)
                if (typeof object.gameData2 === "string")
                    $util.base64.decode(object.gameData2, message.gameData2 = $util.newBuffer($util.base64.length(object.gameData2)), 0);
                else if (object.gameData2.length >= 0)
                    message.gameData2 = object.gameData2;
            if (object.rtime32GcWelcomeTimestamp != null)
                message.rtime32GcWelcomeTimestamp = object.rtime32GcWelcomeTimestamp >>> 0;
            if (object.currency != null)
                message.currency = object.currency >>> 0;
            if (object.balance != null)
                message.balance = object.balance >>> 0;
            if (object.balanceUrl != null)
                message.balanceUrl = String(object.balanceUrl);
            if (object.txnCountryCode != null)
                message.txnCountryCode = String(object.txnCountryCode);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientWelcome message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientWelcome
         * @static
         * @param {CMsgClientWelcome} message CMsgClientWelcome
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientWelcome.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.outofdateSubscribedCaches = [];
                object.uptodateSubscribedCaches = [];
            }
            if (options.defaults) {
                object.version = 0;
                if (options.bytes === String)
                    object.gameData = "";
                else {
                    object.gameData = [];
                    if (options.bytes !== Array)
                        object.gameData = $util.newBuffer(object.gameData);
                }
                object.location = null;
                if (options.bytes === String)
                    object.gameData2 = "";
                else {
                    object.gameData2 = [];
                    if (options.bytes !== Array)
                        object.gameData2 = $util.newBuffer(object.gameData2);
                }
                object.rtime32GcWelcomeTimestamp = 0;
                object.currency = 0;
                object.balance = 0;
                object.balanceUrl = "";
                object.txnCountryCode = "";
            }
            if (message.version != null && message.hasOwnProperty("version"))
                object.version = message.version;
            if (message.gameData != null && message.hasOwnProperty("gameData"))
                object.gameData = options.bytes === String ? $util.base64.encode(message.gameData, 0, message.gameData.length) : options.bytes === Array ? Array.prototype.slice.call(message.gameData) : message.gameData;
            if (message.outofdateSubscribedCaches && message.outofdateSubscribedCaches.length) {
                object.outofdateSubscribedCaches = [];
                for (var j = 0; j < message.outofdateSubscribedCaches.length; ++j)
                    object.outofdateSubscribedCaches[j] = $root.CMsgSOCacheSubscribed.toObject(message.outofdateSubscribedCaches[j], options);
            }
            if (message.uptodateSubscribedCaches && message.uptodateSubscribedCaches.length) {
                object.uptodateSubscribedCaches = [];
                for (var j = 0; j < message.uptodateSubscribedCaches.length; ++j)
                    object.uptodateSubscribedCaches[j] = $root.CMsgSOCacheSubscriptionCheck.toObject(message.uptodateSubscribedCaches[j], options);
            }
            if (message.location != null && message.hasOwnProperty("location"))
                object.location = $root.CMsgClientWelcome.Location.toObject(message.location, options);
            if (message.gameData2 != null && message.hasOwnProperty("gameData2"))
                object.gameData2 = options.bytes === String ? $util.base64.encode(message.gameData2, 0, message.gameData2.length) : options.bytes === Array ? Array.prototype.slice.call(message.gameData2) : message.gameData2;
            if (message.rtime32GcWelcomeTimestamp != null && message.hasOwnProperty("rtime32GcWelcomeTimestamp"))
                object.rtime32GcWelcomeTimestamp = message.rtime32GcWelcomeTimestamp;
            if (message.currency != null && message.hasOwnProperty("currency"))
                object.currency = message.currency;
            if (message.balance != null && message.hasOwnProperty("balance"))
                object.balance = message.balance;
            if (message.balanceUrl != null && message.hasOwnProperty("balanceUrl"))
                object.balanceUrl = message.balanceUrl;
            if (message.txnCountryCode != null && message.hasOwnProperty("txnCountryCode"))
                object.txnCountryCode = message.txnCountryCode;
            return object;
        };
    
        /**
         * Converts this CMsgClientWelcome to JSON.
         * @function toJSON
         * @memberof CMsgClientWelcome
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientWelcome.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgClientWelcome
         * @function getTypeUrl
         * @memberof CMsgClientWelcome
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgClientWelcome.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgClientWelcome";
        };
    
        CMsgClientWelcome.Location = (function() {
    
            /**
             * Properties of a Location.
             * @memberof CMsgClientWelcome
             * @interface ILocation
             * @property {number|null} [latitude] Location latitude
             * @property {number|null} [longitude] Location longitude
             * @property {string|null} [country] Location country
             */
    
            /**
             * Constructs a new Location.
             * @memberof CMsgClientWelcome
             * @classdesc Represents a Location.
             * @implements ILocation
             * @constructor
             * @param {CMsgClientWelcome.ILocation=} [properties] Properties to set
             */
            function Location(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Location latitude.
             * @member {number} latitude
             * @memberof CMsgClientWelcome.Location
             * @instance
             */
            Location.prototype.latitude = 0;
    
            /**
             * Location longitude.
             * @member {number} longitude
             * @memberof CMsgClientWelcome.Location
             * @instance
             */
            Location.prototype.longitude = 0;
    
            /**
             * Location country.
             * @member {string} country
             * @memberof CMsgClientWelcome.Location
             * @instance
             */
            Location.prototype.country = "";
    
            /**
             * Creates a new Location instance using the specified properties.
             * @function create
             * @memberof CMsgClientWelcome.Location
             * @static
             * @param {CMsgClientWelcome.ILocation=} [properties] Properties to set
             * @returns {CMsgClientWelcome.Location} Location instance
             */
            Location.create = function create(properties) {
                return new Location(properties);
            };
    
            /**
             * Encodes the specified Location message. Does not implicitly {@link CMsgClientWelcome.Location.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientWelcome.Location
             * @static
             * @param {CMsgClientWelcome.ILocation} message Location message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Location.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.latitude != null && Object.hasOwnProperty.call(message, "latitude"))
                    writer.uint32(/* id 1, wireType 5 =*/13).float(message.latitude);
                if (message.longitude != null && Object.hasOwnProperty.call(message, "longitude"))
                    writer.uint32(/* id 2, wireType 5 =*/21).float(message.longitude);
                if (message.country != null && Object.hasOwnProperty.call(message, "country"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.country);
                return writer;
            };
    
            /**
             * Encodes the specified Location message, length delimited. Does not implicitly {@link CMsgClientWelcome.Location.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientWelcome.Location
             * @static
             * @param {CMsgClientWelcome.ILocation} message Location message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Location.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Location message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientWelcome.Location
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientWelcome.Location} Location
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Location.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientWelcome.Location();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.latitude = reader.float();
                            break;
                        }
                    case 2: {
                            message.longitude = reader.float();
                            break;
                        }
                    case 3: {
                            message.country = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Location message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientWelcome.Location
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientWelcome.Location} Location
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Location.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Location message.
             * @function verify
             * @memberof CMsgClientWelcome.Location
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Location.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.latitude != null && message.hasOwnProperty("latitude"))
                    if (typeof message.latitude !== "number")
                        return "latitude: number expected";
                if (message.longitude != null && message.hasOwnProperty("longitude"))
                    if (typeof message.longitude !== "number")
                        return "longitude: number expected";
                if (message.country != null && message.hasOwnProperty("country"))
                    if (!$util.isString(message.country))
                        return "country: string expected";
                return null;
            };
    
            /**
             * Creates a Location message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientWelcome.Location
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientWelcome.Location} Location
             */
            Location.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientWelcome.Location)
                    return object;
                var message = new $root.CMsgClientWelcome.Location();
                if (object.latitude != null)
                    message.latitude = Number(object.latitude);
                if (object.longitude != null)
                    message.longitude = Number(object.longitude);
                if (object.country != null)
                    message.country = String(object.country);
                return message;
            };
    
            /**
             * Creates a plain object from a Location message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientWelcome.Location
             * @static
             * @param {CMsgClientWelcome.Location} message Location
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Location.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.latitude = 0;
                    object.longitude = 0;
                    object.country = "";
                }
                if (message.latitude != null && message.hasOwnProperty("latitude"))
                    object.latitude = options.json && !isFinite(message.latitude) ? String(message.latitude) : message.latitude;
                if (message.longitude != null && message.hasOwnProperty("longitude"))
                    object.longitude = options.json && !isFinite(message.longitude) ? String(message.longitude) : message.longitude;
                if (message.country != null && message.hasOwnProperty("country"))
                    object.country = message.country;
                return object;
            };
    
            /**
             * Converts this Location to JSON.
             * @function toJSON
             * @memberof CMsgClientWelcome.Location
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Location.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for Location
             * @function getTypeUrl
             * @memberof CMsgClientWelcome.Location
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgClientWelcome.Location";
            };
    
            return Location;
        })();
    
        return CMsgClientWelcome;
    })();
    
    $root.CMsgConnectionStatus = (function() {
    
        /**
         * Properties of a CMsgConnectionStatus.
         * @exports ICMsgConnectionStatus
         * @interface ICMsgConnectionStatus
         * @property {GCConnectionStatus|null} [status] CMsgConnectionStatus status
         * @property {number|null} [clientSessionNeed] CMsgConnectionStatus clientSessionNeed
         * @property {number|null} [queuePosition] CMsgConnectionStatus queuePosition
         * @property {number|null} [queueSize] CMsgConnectionStatus queueSize
         * @property {number|null} [waitSeconds] CMsgConnectionStatus waitSeconds
         * @property {number|null} [estimatedWaitSecondsRemaining] CMsgConnectionStatus estimatedWaitSecondsRemaining
         */
    
        /**
         * Constructs a new CMsgConnectionStatus.
         * @exports CMsgConnectionStatus
         * @classdesc Represents a CMsgConnectionStatus.
         * @implements ICMsgConnectionStatus
         * @constructor
         * @param {ICMsgConnectionStatus=} [properties] Properties to set
         */
        function CMsgConnectionStatus(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgConnectionStatus status.
         * @member {GCConnectionStatus} status
         * @memberof CMsgConnectionStatus
         * @instance
         */
        CMsgConnectionStatus.prototype.status = 0;
    
        /**
         * CMsgConnectionStatus clientSessionNeed.
         * @member {number} clientSessionNeed
         * @memberof CMsgConnectionStatus
         * @instance
         */
        CMsgConnectionStatus.prototype.clientSessionNeed = 0;
    
        /**
         * CMsgConnectionStatus queuePosition.
         * @member {number} queuePosition
         * @memberof CMsgConnectionStatus
         * @instance
         */
        CMsgConnectionStatus.prototype.queuePosition = 0;
    
        /**
         * CMsgConnectionStatus queueSize.
         * @member {number} queueSize
         * @memberof CMsgConnectionStatus
         * @instance
         */
        CMsgConnectionStatus.prototype.queueSize = 0;
    
        /**
         * CMsgConnectionStatus waitSeconds.
         * @member {number} waitSeconds
         * @memberof CMsgConnectionStatus
         * @instance
         */
        CMsgConnectionStatus.prototype.waitSeconds = 0;
    
        /**
         * CMsgConnectionStatus estimatedWaitSecondsRemaining.
         * @member {number} estimatedWaitSecondsRemaining
         * @memberof CMsgConnectionStatus
         * @instance
         */
        CMsgConnectionStatus.prototype.estimatedWaitSecondsRemaining = 0;
    
        /**
         * Creates a new CMsgConnectionStatus instance using the specified properties.
         * @function create
         * @memberof CMsgConnectionStatus
         * @static
         * @param {ICMsgConnectionStatus=} [properties] Properties to set
         * @returns {CMsgConnectionStatus} CMsgConnectionStatus instance
         */
        CMsgConnectionStatus.create = function create(properties) {
            return new CMsgConnectionStatus(properties);
        };
    
        /**
         * Encodes the specified CMsgConnectionStatus message. Does not implicitly {@link CMsgConnectionStatus.verify|verify} messages.
         * @function encode
         * @memberof CMsgConnectionStatus
         * @static
         * @param {ICMsgConnectionStatus} message CMsgConnectionStatus message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgConnectionStatus.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.status);
            if (message.clientSessionNeed != null && Object.hasOwnProperty.call(message, "clientSessionNeed"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.clientSessionNeed);
            if (message.queuePosition != null && Object.hasOwnProperty.call(message, "queuePosition"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.queuePosition);
            if (message.queueSize != null && Object.hasOwnProperty.call(message, "queueSize"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.queueSize);
            if (message.waitSeconds != null && Object.hasOwnProperty.call(message, "waitSeconds"))
                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.waitSeconds);
            if (message.estimatedWaitSecondsRemaining != null && Object.hasOwnProperty.call(message, "estimatedWaitSecondsRemaining"))
                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.estimatedWaitSecondsRemaining);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgConnectionStatus message, length delimited. Does not implicitly {@link CMsgConnectionStatus.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgConnectionStatus
         * @static
         * @param {ICMsgConnectionStatus} message CMsgConnectionStatus message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgConnectionStatus.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgConnectionStatus message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgConnectionStatus
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgConnectionStatus} CMsgConnectionStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgConnectionStatus.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgConnectionStatus();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.status = reader.int32();
                        break;
                    }
                case 2: {
                        message.clientSessionNeed = reader.uint32();
                        break;
                    }
                case 3: {
                        message.queuePosition = reader.int32();
                        break;
                    }
                case 4: {
                        message.queueSize = reader.int32();
                        break;
                    }
                case 5: {
                        message.waitSeconds = reader.int32();
                        break;
                    }
                case 6: {
                        message.estimatedWaitSecondsRemaining = reader.int32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgConnectionStatus message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgConnectionStatus
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgConnectionStatus} CMsgConnectionStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgConnectionStatus.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgConnectionStatus message.
         * @function verify
         * @memberof CMsgConnectionStatus
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgConnectionStatus.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.status != null && message.hasOwnProperty("status"))
                switch (message.status) {
                default:
                    return "status: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                    break;
                }
            if (message.clientSessionNeed != null && message.hasOwnProperty("clientSessionNeed"))
                if (!$util.isInteger(message.clientSessionNeed))
                    return "clientSessionNeed: integer expected";
            if (message.queuePosition != null && message.hasOwnProperty("queuePosition"))
                if (!$util.isInteger(message.queuePosition))
                    return "queuePosition: integer expected";
            if (message.queueSize != null && message.hasOwnProperty("queueSize"))
                if (!$util.isInteger(message.queueSize))
                    return "queueSize: integer expected";
            if (message.waitSeconds != null && message.hasOwnProperty("waitSeconds"))
                if (!$util.isInteger(message.waitSeconds))
                    return "waitSeconds: integer expected";
            if (message.estimatedWaitSecondsRemaining != null && message.hasOwnProperty("estimatedWaitSecondsRemaining"))
                if (!$util.isInteger(message.estimatedWaitSecondsRemaining))
                    return "estimatedWaitSecondsRemaining: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgConnectionStatus message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgConnectionStatus
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgConnectionStatus} CMsgConnectionStatus
         */
        CMsgConnectionStatus.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgConnectionStatus)
                return object;
            var message = new $root.CMsgConnectionStatus();
            switch (object.status) {
            default:
                if (typeof object.status === "number") {
                    message.status = object.status;
                    break;
                }
                break;
            case "GCConnectionStatus_HAVE_SESSION":
            case 0:
                message.status = 0;
                break;
            case "GCConnectionStatus_GC_GOING_DOWN":
            case 1:
                message.status = 1;
                break;
            case "GCConnectionStatus_NO_SESSION":
            case 2:
                message.status = 2;
                break;
            case "GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE":
            case 3:
                message.status = 3;
                break;
            case "GCConnectionStatus_NO_STEAM":
            case 4:
                message.status = 4;
                break;
            }
            if (object.clientSessionNeed != null)
                message.clientSessionNeed = object.clientSessionNeed >>> 0;
            if (object.queuePosition != null)
                message.queuePosition = object.queuePosition | 0;
            if (object.queueSize != null)
                message.queueSize = object.queueSize | 0;
            if (object.waitSeconds != null)
                message.waitSeconds = object.waitSeconds | 0;
            if (object.estimatedWaitSecondsRemaining != null)
                message.estimatedWaitSecondsRemaining = object.estimatedWaitSecondsRemaining | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgConnectionStatus message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgConnectionStatus
         * @static
         * @param {CMsgConnectionStatus} message CMsgConnectionStatus
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgConnectionStatus.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.status = options.enums === String ? "GCConnectionStatus_HAVE_SESSION" : 0;
                object.clientSessionNeed = 0;
                object.queuePosition = 0;
                object.queueSize = 0;
                object.waitSeconds = 0;
                object.estimatedWaitSecondsRemaining = 0;
            }
            if (message.status != null && message.hasOwnProperty("status"))
                object.status = options.enums === String ? $root.GCConnectionStatus[message.status] === undefined ? message.status : $root.GCConnectionStatus[message.status] : message.status;
            if (message.clientSessionNeed != null && message.hasOwnProperty("clientSessionNeed"))
                object.clientSessionNeed = message.clientSessionNeed;
            if (message.queuePosition != null && message.hasOwnProperty("queuePosition"))
                object.queuePosition = message.queuePosition;
            if (message.queueSize != null && message.hasOwnProperty("queueSize"))
                object.queueSize = message.queueSize;
            if (message.waitSeconds != null && message.hasOwnProperty("waitSeconds"))
                object.waitSeconds = message.waitSeconds;
            if (message.estimatedWaitSecondsRemaining != null && message.hasOwnProperty("estimatedWaitSecondsRemaining"))
                object.estimatedWaitSecondsRemaining = message.estimatedWaitSecondsRemaining;
            return object;
        };
    
        /**
         * Converts this CMsgConnectionStatus to JSON.
         * @function toJSON
         * @memberof CMsgConnectionStatus
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgConnectionStatus.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgConnectionStatus
         * @function getTypeUrl
         * @memberof CMsgConnectionStatus
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgConnectionStatus.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgConnectionStatus";
        };
    
        return CMsgConnectionStatus;
    })();
    
    $root.CWorkshop_PopulateItemDescriptions_Request = (function() {
    
        /**
         * Properties of a CWorkshop_PopulateItemDescriptions_Request.
         * @exports ICWorkshop_PopulateItemDescriptions_Request
         * @interface ICWorkshop_PopulateItemDescriptions_Request
         * @property {number|null} [appid] CWorkshop_PopulateItemDescriptions_Request appid
         * @property {Array.<CWorkshop_PopulateItemDescriptions_Request.IItemDescriptionsLanguageBlock>|null} [languages] CWorkshop_PopulateItemDescriptions_Request languages
         */
    
        /**
         * Constructs a new CWorkshop_PopulateItemDescriptions_Request.
         * @exports CWorkshop_PopulateItemDescriptions_Request
         * @classdesc Represents a CWorkshop_PopulateItemDescriptions_Request.
         * @implements ICWorkshop_PopulateItemDescriptions_Request
         * @constructor
         * @param {ICWorkshop_PopulateItemDescriptions_Request=} [properties] Properties to set
         */
        function CWorkshop_PopulateItemDescriptions_Request(properties) {
            this.languages = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CWorkshop_PopulateItemDescriptions_Request appid.
         * @member {number} appid
         * @memberof CWorkshop_PopulateItemDescriptions_Request
         * @instance
         */
        CWorkshop_PopulateItemDescriptions_Request.prototype.appid = 0;
    
        /**
         * CWorkshop_PopulateItemDescriptions_Request languages.
         * @member {Array.<CWorkshop_PopulateItemDescriptions_Request.IItemDescriptionsLanguageBlock>} languages
         * @memberof CWorkshop_PopulateItemDescriptions_Request
         * @instance
         */
        CWorkshop_PopulateItemDescriptions_Request.prototype.languages = $util.emptyArray;
    
        /**
         * Creates a new CWorkshop_PopulateItemDescriptions_Request instance using the specified properties.
         * @function create
         * @memberof CWorkshop_PopulateItemDescriptions_Request
         * @static
         * @param {ICWorkshop_PopulateItemDescriptions_Request=} [properties] Properties to set
         * @returns {CWorkshop_PopulateItemDescriptions_Request} CWorkshop_PopulateItemDescriptions_Request instance
         */
        CWorkshop_PopulateItemDescriptions_Request.create = function create(properties) {
            return new CWorkshop_PopulateItemDescriptions_Request(properties);
        };
    
        /**
         * Encodes the specified CWorkshop_PopulateItemDescriptions_Request message. Does not implicitly {@link CWorkshop_PopulateItemDescriptions_Request.verify|verify} messages.
         * @function encode
         * @memberof CWorkshop_PopulateItemDescriptions_Request
         * @static
         * @param {ICWorkshop_PopulateItemDescriptions_Request} message CWorkshop_PopulateItemDescriptions_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CWorkshop_PopulateItemDescriptions_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
            if (message.languages != null && message.languages.length)
                for (var i = 0; i < message.languages.length; ++i)
                    $root.CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.encode(message.languages[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CWorkshop_PopulateItemDescriptions_Request message, length delimited. Does not implicitly {@link CWorkshop_PopulateItemDescriptions_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CWorkshop_PopulateItemDescriptions_Request
         * @static
         * @param {ICWorkshop_PopulateItemDescriptions_Request} message CWorkshop_PopulateItemDescriptions_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CWorkshop_PopulateItemDescriptions_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CWorkshop_PopulateItemDescriptions_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CWorkshop_PopulateItemDescriptions_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CWorkshop_PopulateItemDescriptions_Request} CWorkshop_PopulateItemDescriptions_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CWorkshop_PopulateItemDescriptions_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CWorkshop_PopulateItemDescriptions_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.appid = reader.uint32();
                        break;
                    }
                case 2: {
                        if (!(message.languages && message.languages.length))
                            message.languages = [];
                        message.languages.push($root.CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CWorkshop_PopulateItemDescriptions_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CWorkshop_PopulateItemDescriptions_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CWorkshop_PopulateItemDescriptions_Request} CWorkshop_PopulateItemDescriptions_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CWorkshop_PopulateItemDescriptions_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CWorkshop_PopulateItemDescriptions_Request message.
         * @function verify
         * @memberof CWorkshop_PopulateItemDescriptions_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CWorkshop_PopulateItemDescriptions_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.languages != null && message.hasOwnProperty("languages")) {
                if (!Array.isArray(message.languages))
                    return "languages: array expected";
                for (var i = 0; i < message.languages.length; ++i) {
                    var error = $root.CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.verify(message.languages[i]);
                    if (error)
                        return "languages." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CWorkshop_PopulateItemDescriptions_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CWorkshop_PopulateItemDescriptions_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CWorkshop_PopulateItemDescriptions_Request} CWorkshop_PopulateItemDescriptions_Request
         */
        CWorkshop_PopulateItemDescriptions_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CWorkshop_PopulateItemDescriptions_Request)
                return object;
            var message = new $root.CWorkshop_PopulateItemDescriptions_Request();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.languages) {
                if (!Array.isArray(object.languages))
                    throw TypeError(".CWorkshop_PopulateItemDescriptions_Request.languages: array expected");
                message.languages = [];
                for (var i = 0; i < object.languages.length; ++i) {
                    if (typeof object.languages[i] !== "object")
                        throw TypeError(".CWorkshop_PopulateItemDescriptions_Request.languages: object expected");
                    message.languages[i] = $root.CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.fromObject(object.languages[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CWorkshop_PopulateItemDescriptions_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CWorkshop_PopulateItemDescriptions_Request
         * @static
         * @param {CWorkshop_PopulateItemDescriptions_Request} message CWorkshop_PopulateItemDescriptions_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CWorkshop_PopulateItemDescriptions_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.languages = [];
            if (options.defaults)
                object.appid = 0;
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.languages && message.languages.length) {
                object.languages = [];
                for (var j = 0; j < message.languages.length; ++j)
                    object.languages[j] = $root.CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.toObject(message.languages[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CWorkshop_PopulateItemDescriptions_Request to JSON.
         * @function toJSON
         * @memberof CWorkshop_PopulateItemDescriptions_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CWorkshop_PopulateItemDescriptions_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CWorkshop_PopulateItemDescriptions_Request
         * @function getTypeUrl
         * @memberof CWorkshop_PopulateItemDescriptions_Request
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CWorkshop_PopulateItemDescriptions_Request.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CWorkshop_PopulateItemDescriptions_Request";
        };
    
        CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription = (function() {
    
            /**
             * Properties of a SingleItemDescription.
             * @memberof CWorkshop_PopulateItemDescriptions_Request
             * @interface ISingleItemDescription
             * @property {number|null} [gameitemid] SingleItemDescription gameitemid
             * @property {string|null} [itemDescription] SingleItemDescription itemDescription
             * @property {boolean|null} [onePerAccount] SingleItemDescription onePerAccount
             */
    
            /**
             * Constructs a new SingleItemDescription.
             * @memberof CWorkshop_PopulateItemDescriptions_Request
             * @classdesc Represents a SingleItemDescription.
             * @implements ISingleItemDescription
             * @constructor
             * @param {CWorkshop_PopulateItemDescriptions_Request.ISingleItemDescription=} [properties] Properties to set
             */
            function SingleItemDescription(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * SingleItemDescription gameitemid.
             * @member {number} gameitemid
             * @memberof CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
             * @instance
             */
            SingleItemDescription.prototype.gameitemid = 0;
    
            /**
             * SingleItemDescription itemDescription.
             * @member {string} itemDescription
             * @memberof CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
             * @instance
             */
            SingleItemDescription.prototype.itemDescription = "";
    
            /**
             * SingleItemDescription onePerAccount.
             * @member {boolean} onePerAccount
             * @memberof CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
             * @instance
             */
            SingleItemDescription.prototype.onePerAccount = false;
    
            /**
             * Creates a new SingleItemDescription instance using the specified properties.
             * @function create
             * @memberof CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
             * @static
             * @param {CWorkshop_PopulateItemDescriptions_Request.ISingleItemDescription=} [properties] Properties to set
             * @returns {CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription} SingleItemDescription instance
             */
            SingleItemDescription.create = function create(properties) {
                return new SingleItemDescription(properties);
            };
    
            /**
             * Encodes the specified SingleItemDescription message. Does not implicitly {@link CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.verify|verify} messages.
             * @function encode
             * @memberof CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
             * @static
             * @param {CWorkshop_PopulateItemDescriptions_Request.ISingleItemDescription} message SingleItemDescription message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SingleItemDescription.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.gameitemid != null && Object.hasOwnProperty.call(message, "gameitemid"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.gameitemid);
                if (message.itemDescription != null && Object.hasOwnProperty.call(message, "itemDescription"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.itemDescription);
                if (message.onePerAccount != null && Object.hasOwnProperty.call(message, "onePerAccount"))
                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.onePerAccount);
                return writer;
            };
    
            /**
             * Encodes the specified SingleItemDescription message, length delimited. Does not implicitly {@link CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
             * @static
             * @param {CWorkshop_PopulateItemDescriptions_Request.ISingleItemDescription} message SingleItemDescription message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SingleItemDescription.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a SingleItemDescription message from the specified reader or buffer.
             * @function decode
             * @memberof CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription} SingleItemDescription
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SingleItemDescription.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.gameitemid = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.itemDescription = reader.string();
                            break;
                        }
                    case 3: {
                            message.onePerAccount = reader.bool();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a SingleItemDescription message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription} SingleItemDescription
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SingleItemDescription.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a SingleItemDescription message.
             * @function verify
             * @memberof CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SingleItemDescription.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.gameitemid != null && message.hasOwnProperty("gameitemid"))
                    if (!$util.isInteger(message.gameitemid))
                        return "gameitemid: integer expected";
                if (message.itemDescription != null && message.hasOwnProperty("itemDescription"))
                    if (!$util.isString(message.itemDescription))
                        return "itemDescription: string expected";
                if (message.onePerAccount != null && message.hasOwnProperty("onePerAccount"))
                    if (typeof message.onePerAccount !== "boolean")
                        return "onePerAccount: boolean expected";
                return null;
            };
    
            /**
             * Creates a SingleItemDescription message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription} SingleItemDescription
             */
            SingleItemDescription.fromObject = function fromObject(object) {
                if (object instanceof $root.CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
                    return object;
                var message = new $root.CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription();
                if (object.gameitemid != null)
                    message.gameitemid = object.gameitemid >>> 0;
                if (object.itemDescription != null)
                    message.itemDescription = String(object.itemDescription);
                if (object.onePerAccount != null)
                    message.onePerAccount = Boolean(object.onePerAccount);
                return message;
            };
    
            /**
             * Creates a plain object from a SingleItemDescription message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
             * @static
             * @param {CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription} message SingleItemDescription
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SingleItemDescription.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.gameitemid = 0;
                    object.itemDescription = "";
                    object.onePerAccount = false;
                }
                if (message.gameitemid != null && message.hasOwnProperty("gameitemid"))
                    object.gameitemid = message.gameitemid;
                if (message.itemDescription != null && message.hasOwnProperty("itemDescription"))
                    object.itemDescription = message.itemDescription;
                if (message.onePerAccount != null && message.hasOwnProperty("onePerAccount"))
                    object.onePerAccount = message.onePerAccount;
                return object;
            };
    
            /**
             * Converts this SingleItemDescription to JSON.
             * @function toJSON
             * @memberof CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SingleItemDescription.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for SingleItemDescription
             * @function getTypeUrl
             * @memberof CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SingleItemDescription.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription";
            };
    
            return SingleItemDescription;
        })();
    
        CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock = (function() {
    
            /**
             * Properties of an ItemDescriptionsLanguageBlock.
             * @memberof CWorkshop_PopulateItemDescriptions_Request
             * @interface IItemDescriptionsLanguageBlock
             * @property {string|null} [language] ItemDescriptionsLanguageBlock language
             * @property {Array.<CWorkshop_PopulateItemDescriptions_Request.ISingleItemDescription>|null} [descriptions] ItemDescriptionsLanguageBlock descriptions
             */
    
            /**
             * Constructs a new ItemDescriptionsLanguageBlock.
             * @memberof CWorkshop_PopulateItemDescriptions_Request
             * @classdesc Represents an ItemDescriptionsLanguageBlock.
             * @implements IItemDescriptionsLanguageBlock
             * @constructor
             * @param {CWorkshop_PopulateItemDescriptions_Request.IItemDescriptionsLanguageBlock=} [properties] Properties to set
             */
            function ItemDescriptionsLanguageBlock(properties) {
                this.descriptions = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * ItemDescriptionsLanguageBlock language.
             * @member {string} language
             * @memberof CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
             * @instance
             */
            ItemDescriptionsLanguageBlock.prototype.language = "";
    
            /**
             * ItemDescriptionsLanguageBlock descriptions.
             * @member {Array.<CWorkshop_PopulateItemDescriptions_Request.ISingleItemDescription>} descriptions
             * @memberof CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
             * @instance
             */
            ItemDescriptionsLanguageBlock.prototype.descriptions = $util.emptyArray;
    
            /**
             * Creates a new ItemDescriptionsLanguageBlock instance using the specified properties.
             * @function create
             * @memberof CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
             * @static
             * @param {CWorkshop_PopulateItemDescriptions_Request.IItemDescriptionsLanguageBlock=} [properties] Properties to set
             * @returns {CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock} ItemDescriptionsLanguageBlock instance
             */
            ItemDescriptionsLanguageBlock.create = function create(properties) {
                return new ItemDescriptionsLanguageBlock(properties);
            };
    
            /**
             * Encodes the specified ItemDescriptionsLanguageBlock message. Does not implicitly {@link CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.verify|verify} messages.
             * @function encode
             * @memberof CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
             * @static
             * @param {CWorkshop_PopulateItemDescriptions_Request.IItemDescriptionsLanguageBlock} message ItemDescriptionsLanguageBlock message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ItemDescriptionsLanguageBlock.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.language != null && Object.hasOwnProperty.call(message, "language"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.language);
                if (message.descriptions != null && message.descriptions.length)
                    for (var i = 0; i < message.descriptions.length; ++i)
                        $root.CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.encode(message.descriptions[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };
    
            /**
             * Encodes the specified ItemDescriptionsLanguageBlock message, length delimited. Does not implicitly {@link CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
             * @static
             * @param {CWorkshop_PopulateItemDescriptions_Request.IItemDescriptionsLanguageBlock} message ItemDescriptionsLanguageBlock message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ItemDescriptionsLanguageBlock.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an ItemDescriptionsLanguageBlock message from the specified reader or buffer.
             * @function decode
             * @memberof CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock} ItemDescriptionsLanguageBlock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ItemDescriptionsLanguageBlock.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.language = reader.string();
                            break;
                        }
                    case 2: {
                            if (!(message.descriptions && message.descriptions.length))
                                message.descriptions = [];
                            message.descriptions.push($root.CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an ItemDescriptionsLanguageBlock message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock} ItemDescriptionsLanguageBlock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ItemDescriptionsLanguageBlock.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an ItemDescriptionsLanguageBlock message.
             * @function verify
             * @memberof CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ItemDescriptionsLanguageBlock.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.language != null && message.hasOwnProperty("language"))
                    if (!$util.isString(message.language))
                        return "language: string expected";
                if (message.descriptions != null && message.hasOwnProperty("descriptions")) {
                    if (!Array.isArray(message.descriptions))
                        return "descriptions: array expected";
                    for (var i = 0; i < message.descriptions.length; ++i) {
                        var error = $root.CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.verify(message.descriptions[i]);
                        if (error)
                            return "descriptions." + error;
                    }
                }
                return null;
            };
    
            /**
             * Creates an ItemDescriptionsLanguageBlock message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock} ItemDescriptionsLanguageBlock
             */
            ItemDescriptionsLanguageBlock.fromObject = function fromObject(object) {
                if (object instanceof $root.CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
                    return object;
                var message = new $root.CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock();
                if (object.language != null)
                    message.language = String(object.language);
                if (object.descriptions) {
                    if (!Array.isArray(object.descriptions))
                        throw TypeError(".CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.descriptions: array expected");
                    message.descriptions = [];
                    for (var i = 0; i < object.descriptions.length; ++i) {
                        if (typeof object.descriptions[i] !== "object")
                            throw TypeError(".CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.descriptions: object expected");
                        message.descriptions[i] = $root.CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.fromObject(object.descriptions[i]);
                    }
                }
                return message;
            };
    
            /**
             * Creates a plain object from an ItemDescriptionsLanguageBlock message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
             * @static
             * @param {CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock} message ItemDescriptionsLanguageBlock
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ItemDescriptionsLanguageBlock.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.descriptions = [];
                if (options.defaults)
                    object.language = "";
                if (message.language != null && message.hasOwnProperty("language"))
                    object.language = message.language;
                if (message.descriptions && message.descriptions.length) {
                    object.descriptions = [];
                    for (var j = 0; j < message.descriptions.length; ++j)
                        object.descriptions[j] = $root.CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.toObject(message.descriptions[j], options);
                }
                return object;
            };
    
            /**
             * Converts this ItemDescriptionsLanguageBlock to JSON.
             * @function toJSON
             * @memberof CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ItemDescriptionsLanguageBlock.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for ItemDescriptionsLanguageBlock
             * @function getTypeUrl
             * @memberof CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ItemDescriptionsLanguageBlock.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock";
            };
    
            return ItemDescriptionsLanguageBlock;
        })();
    
        return CWorkshop_PopulateItemDescriptions_Request;
    })();
    
    $root.CWorkshop_GetContributors_Request = (function() {
    
        /**
         * Properties of a CWorkshop_GetContributors_Request.
         * @exports ICWorkshop_GetContributors_Request
         * @interface ICWorkshop_GetContributors_Request
         * @property {number|null} [appid] CWorkshop_GetContributors_Request appid
         * @property {number|null} [gameitemid] CWorkshop_GetContributors_Request gameitemid
         */
    
        /**
         * Constructs a new CWorkshop_GetContributors_Request.
         * @exports CWorkshop_GetContributors_Request
         * @classdesc Represents a CWorkshop_GetContributors_Request.
         * @implements ICWorkshop_GetContributors_Request
         * @constructor
         * @param {ICWorkshop_GetContributors_Request=} [properties] Properties to set
         */
        function CWorkshop_GetContributors_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CWorkshop_GetContributors_Request appid.
         * @member {number} appid
         * @memberof CWorkshop_GetContributors_Request
         * @instance
         */
        CWorkshop_GetContributors_Request.prototype.appid = 0;
    
        /**
         * CWorkshop_GetContributors_Request gameitemid.
         * @member {number} gameitemid
         * @memberof CWorkshop_GetContributors_Request
         * @instance
         */
        CWorkshop_GetContributors_Request.prototype.gameitemid = 0;
    
        /**
         * Creates a new CWorkshop_GetContributors_Request instance using the specified properties.
         * @function create
         * @memberof CWorkshop_GetContributors_Request
         * @static
         * @param {ICWorkshop_GetContributors_Request=} [properties] Properties to set
         * @returns {CWorkshop_GetContributors_Request} CWorkshop_GetContributors_Request instance
         */
        CWorkshop_GetContributors_Request.create = function create(properties) {
            return new CWorkshop_GetContributors_Request(properties);
        };
    
        /**
         * Encodes the specified CWorkshop_GetContributors_Request message. Does not implicitly {@link CWorkshop_GetContributors_Request.verify|verify} messages.
         * @function encode
         * @memberof CWorkshop_GetContributors_Request
         * @static
         * @param {ICWorkshop_GetContributors_Request} message CWorkshop_GetContributors_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CWorkshop_GetContributors_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
            if (message.gameitemid != null && Object.hasOwnProperty.call(message, "gameitemid"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.gameitemid);
            return writer;
        };
    
        /**
         * Encodes the specified CWorkshop_GetContributors_Request message, length delimited. Does not implicitly {@link CWorkshop_GetContributors_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CWorkshop_GetContributors_Request
         * @static
         * @param {ICWorkshop_GetContributors_Request} message CWorkshop_GetContributors_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CWorkshop_GetContributors_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CWorkshop_GetContributors_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CWorkshop_GetContributors_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CWorkshop_GetContributors_Request} CWorkshop_GetContributors_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CWorkshop_GetContributors_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CWorkshop_GetContributors_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.appid = reader.uint32();
                        break;
                    }
                case 2: {
                        message.gameitemid = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CWorkshop_GetContributors_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CWorkshop_GetContributors_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CWorkshop_GetContributors_Request} CWorkshop_GetContributors_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CWorkshop_GetContributors_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CWorkshop_GetContributors_Request message.
         * @function verify
         * @memberof CWorkshop_GetContributors_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CWorkshop_GetContributors_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.gameitemid != null && message.hasOwnProperty("gameitemid"))
                if (!$util.isInteger(message.gameitemid))
                    return "gameitemid: integer expected";
            return null;
        };
    
        /**
         * Creates a CWorkshop_GetContributors_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CWorkshop_GetContributors_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CWorkshop_GetContributors_Request} CWorkshop_GetContributors_Request
         */
        CWorkshop_GetContributors_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CWorkshop_GetContributors_Request)
                return object;
            var message = new $root.CWorkshop_GetContributors_Request();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.gameitemid != null)
                message.gameitemid = object.gameitemid >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CWorkshop_GetContributors_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CWorkshop_GetContributors_Request
         * @static
         * @param {CWorkshop_GetContributors_Request} message CWorkshop_GetContributors_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CWorkshop_GetContributors_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.appid = 0;
                object.gameitemid = 0;
            }
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.gameitemid != null && message.hasOwnProperty("gameitemid"))
                object.gameitemid = message.gameitemid;
            return object;
        };
    
        /**
         * Converts this CWorkshop_GetContributors_Request to JSON.
         * @function toJSON
         * @memberof CWorkshop_GetContributors_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CWorkshop_GetContributors_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CWorkshop_GetContributors_Request
         * @function getTypeUrl
         * @memberof CWorkshop_GetContributors_Request
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CWorkshop_GetContributors_Request.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CWorkshop_GetContributors_Request";
        };
    
        return CWorkshop_GetContributors_Request;
    })();
    
    $root.CWorkshop_GetContributors_Response = (function() {
    
        /**
         * Properties of a CWorkshop_GetContributors_Response.
         * @exports ICWorkshop_GetContributors_Response
         * @interface ICWorkshop_GetContributors_Response
         * @property {Array.<number|Long>|null} [contributors] CWorkshop_GetContributors_Response contributors
         */
    
        /**
         * Constructs a new CWorkshop_GetContributors_Response.
         * @exports CWorkshop_GetContributors_Response
         * @classdesc Represents a CWorkshop_GetContributors_Response.
         * @implements ICWorkshop_GetContributors_Response
         * @constructor
         * @param {ICWorkshop_GetContributors_Response=} [properties] Properties to set
         */
        function CWorkshop_GetContributors_Response(properties) {
            this.contributors = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CWorkshop_GetContributors_Response contributors.
         * @member {Array.<number|Long>} contributors
         * @memberof CWorkshop_GetContributors_Response
         * @instance
         */
        CWorkshop_GetContributors_Response.prototype.contributors = $util.emptyArray;
    
        /**
         * Creates a new CWorkshop_GetContributors_Response instance using the specified properties.
         * @function create
         * @memberof CWorkshop_GetContributors_Response
         * @static
         * @param {ICWorkshop_GetContributors_Response=} [properties] Properties to set
         * @returns {CWorkshop_GetContributors_Response} CWorkshop_GetContributors_Response instance
         */
        CWorkshop_GetContributors_Response.create = function create(properties) {
            return new CWorkshop_GetContributors_Response(properties);
        };
    
        /**
         * Encodes the specified CWorkshop_GetContributors_Response message. Does not implicitly {@link CWorkshop_GetContributors_Response.verify|verify} messages.
         * @function encode
         * @memberof CWorkshop_GetContributors_Response
         * @static
         * @param {ICWorkshop_GetContributors_Response} message CWorkshop_GetContributors_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CWorkshop_GetContributors_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.contributors != null && message.contributors.length)
                for (var i = 0; i < message.contributors.length; ++i)
                    writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.contributors[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CWorkshop_GetContributors_Response message, length delimited. Does not implicitly {@link CWorkshop_GetContributors_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CWorkshop_GetContributors_Response
         * @static
         * @param {ICWorkshop_GetContributors_Response} message CWorkshop_GetContributors_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CWorkshop_GetContributors_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CWorkshop_GetContributors_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CWorkshop_GetContributors_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CWorkshop_GetContributors_Response} CWorkshop_GetContributors_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CWorkshop_GetContributors_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CWorkshop_GetContributors_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.contributors && message.contributors.length))
                            message.contributors = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.contributors.push(reader.fixed64());
                        } else
                            message.contributors.push(reader.fixed64());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CWorkshop_GetContributors_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CWorkshop_GetContributors_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CWorkshop_GetContributors_Response} CWorkshop_GetContributors_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CWorkshop_GetContributors_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CWorkshop_GetContributors_Response message.
         * @function verify
         * @memberof CWorkshop_GetContributors_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CWorkshop_GetContributors_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.contributors != null && message.hasOwnProperty("contributors")) {
                if (!Array.isArray(message.contributors))
                    return "contributors: array expected";
                for (var i = 0; i < message.contributors.length; ++i)
                    if (!$util.isInteger(message.contributors[i]) && !(message.contributors[i] && $util.isInteger(message.contributors[i].low) && $util.isInteger(message.contributors[i].high)))
                        return "contributors: integer|Long[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CWorkshop_GetContributors_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CWorkshop_GetContributors_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CWorkshop_GetContributors_Response} CWorkshop_GetContributors_Response
         */
        CWorkshop_GetContributors_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CWorkshop_GetContributors_Response)
                return object;
            var message = new $root.CWorkshop_GetContributors_Response();
            if (object.contributors) {
                if (!Array.isArray(object.contributors))
                    throw TypeError(".CWorkshop_GetContributors_Response.contributors: array expected");
                message.contributors = [];
                for (var i = 0; i < object.contributors.length; ++i)
                    if ($util.Long)
                        (message.contributors[i] = $util.Long.fromValue(object.contributors[i])).unsigned = false;
                    else if (typeof object.contributors[i] === "string")
                        message.contributors[i] = parseInt(object.contributors[i], 10);
                    else if (typeof object.contributors[i] === "number")
                        message.contributors[i] = object.contributors[i];
                    else if (typeof object.contributors[i] === "object")
                        message.contributors[i] = new $util.LongBits(object.contributors[i].low >>> 0, object.contributors[i].high >>> 0).toNumber();
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CWorkshop_GetContributors_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CWorkshop_GetContributors_Response
         * @static
         * @param {CWorkshop_GetContributors_Response} message CWorkshop_GetContributors_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CWorkshop_GetContributors_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.contributors = [];
            if (message.contributors && message.contributors.length) {
                object.contributors = [];
                for (var j = 0; j < message.contributors.length; ++j)
                    if (typeof message.contributors[j] === "number")
                        object.contributors[j] = options.longs === String ? String(message.contributors[j]) : message.contributors[j];
                    else
                        object.contributors[j] = options.longs === String ? $util.Long.prototype.toString.call(message.contributors[j]) : options.longs === Number ? new $util.LongBits(message.contributors[j].low >>> 0, message.contributors[j].high >>> 0).toNumber() : message.contributors[j];
            }
            return object;
        };
    
        /**
         * Converts this CWorkshop_GetContributors_Response to JSON.
         * @function toJSON
         * @memberof CWorkshop_GetContributors_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CWorkshop_GetContributors_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CWorkshop_GetContributors_Response
         * @function getTypeUrl
         * @memberof CWorkshop_GetContributors_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CWorkshop_GetContributors_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CWorkshop_GetContributors_Response";
        };
    
        return CWorkshop_GetContributors_Response;
    })();
    
    $root.CWorkshop_SetItemPaymentRules_Request = (function() {
    
        /**
         * Properties of a CWorkshop_SetItemPaymentRules_Request.
         * @exports ICWorkshop_SetItemPaymentRules_Request
         * @interface ICWorkshop_SetItemPaymentRules_Request
         * @property {number|null} [appid] CWorkshop_SetItemPaymentRules_Request appid
         * @property {number|null} [gameitemid] CWorkshop_SetItemPaymentRules_Request gameitemid
         * @property {Array.<CWorkshop_SetItemPaymentRules_Request.IWorkshopItemPaymentRule>|null} [associatedWorkshopFiles] CWorkshop_SetItemPaymentRules_Request associatedWorkshopFiles
         * @property {Array.<CWorkshop_SetItemPaymentRules_Request.IPartnerItemPaymentRule>|null} [partnerAccounts] CWorkshop_SetItemPaymentRules_Request partnerAccounts
         * @property {boolean|null} [validateOnly] CWorkshop_SetItemPaymentRules_Request validateOnly
         * @property {boolean|null} [makeWorkshopFilesSubscribable] CWorkshop_SetItemPaymentRules_Request makeWorkshopFilesSubscribable
         * @property {CWorkshop_SetItemPaymentRules_Request.IWorkshopDirectPaymentRule|null} [associatedWorkshopFileForDirectPayments] CWorkshop_SetItemPaymentRules_Request associatedWorkshopFileForDirectPayments
         */
    
        /**
         * Constructs a new CWorkshop_SetItemPaymentRules_Request.
         * @exports CWorkshop_SetItemPaymentRules_Request
         * @classdesc Represents a CWorkshop_SetItemPaymentRules_Request.
         * @implements ICWorkshop_SetItemPaymentRules_Request
         * @constructor
         * @param {ICWorkshop_SetItemPaymentRules_Request=} [properties] Properties to set
         */
        function CWorkshop_SetItemPaymentRules_Request(properties) {
            this.associatedWorkshopFiles = [];
            this.partnerAccounts = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CWorkshop_SetItemPaymentRules_Request appid.
         * @member {number} appid
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @instance
         */
        CWorkshop_SetItemPaymentRules_Request.prototype.appid = 0;
    
        /**
         * CWorkshop_SetItemPaymentRules_Request gameitemid.
         * @member {number} gameitemid
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @instance
         */
        CWorkshop_SetItemPaymentRules_Request.prototype.gameitemid = 0;
    
        /**
         * CWorkshop_SetItemPaymentRules_Request associatedWorkshopFiles.
         * @member {Array.<CWorkshop_SetItemPaymentRules_Request.IWorkshopItemPaymentRule>} associatedWorkshopFiles
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @instance
         */
        CWorkshop_SetItemPaymentRules_Request.prototype.associatedWorkshopFiles = $util.emptyArray;
    
        /**
         * CWorkshop_SetItemPaymentRules_Request partnerAccounts.
         * @member {Array.<CWorkshop_SetItemPaymentRules_Request.IPartnerItemPaymentRule>} partnerAccounts
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @instance
         */
        CWorkshop_SetItemPaymentRules_Request.prototype.partnerAccounts = $util.emptyArray;
    
        /**
         * CWorkshop_SetItemPaymentRules_Request validateOnly.
         * @member {boolean} validateOnly
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @instance
         */
        CWorkshop_SetItemPaymentRules_Request.prototype.validateOnly = false;
    
        /**
         * CWorkshop_SetItemPaymentRules_Request makeWorkshopFilesSubscribable.
         * @member {boolean} makeWorkshopFilesSubscribable
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @instance
         */
        CWorkshop_SetItemPaymentRules_Request.prototype.makeWorkshopFilesSubscribable = false;
    
        /**
         * CWorkshop_SetItemPaymentRules_Request associatedWorkshopFileForDirectPayments.
         * @member {CWorkshop_SetItemPaymentRules_Request.IWorkshopDirectPaymentRule|null|undefined} associatedWorkshopFileForDirectPayments
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @instance
         */
        CWorkshop_SetItemPaymentRules_Request.prototype.associatedWorkshopFileForDirectPayments = null;
    
        /**
         * Creates a new CWorkshop_SetItemPaymentRules_Request instance using the specified properties.
         * @function create
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @static
         * @param {ICWorkshop_SetItemPaymentRules_Request=} [properties] Properties to set
         * @returns {CWorkshop_SetItemPaymentRules_Request} CWorkshop_SetItemPaymentRules_Request instance
         */
        CWorkshop_SetItemPaymentRules_Request.create = function create(properties) {
            return new CWorkshop_SetItemPaymentRules_Request(properties);
        };
    
        /**
         * Encodes the specified CWorkshop_SetItemPaymentRules_Request message. Does not implicitly {@link CWorkshop_SetItemPaymentRules_Request.verify|verify} messages.
         * @function encode
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @static
         * @param {ICWorkshop_SetItemPaymentRules_Request} message CWorkshop_SetItemPaymentRules_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CWorkshop_SetItemPaymentRules_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
            if (message.gameitemid != null && Object.hasOwnProperty.call(message, "gameitemid"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.gameitemid);
            if (message.associatedWorkshopFiles != null && message.associatedWorkshopFiles.length)
                for (var i = 0; i < message.associatedWorkshopFiles.length; ++i)
                    $root.CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.encode(message.associatedWorkshopFiles[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            if (message.partnerAccounts != null && message.partnerAccounts.length)
                for (var i = 0; i < message.partnerAccounts.length; ++i)
                    $root.CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.encode(message.partnerAccounts[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.validateOnly);
            if (message.makeWorkshopFilesSubscribable != null && Object.hasOwnProperty.call(message, "makeWorkshopFilesSubscribable"))
                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.makeWorkshopFilesSubscribable);
            if (message.associatedWorkshopFileForDirectPayments != null && Object.hasOwnProperty.call(message, "associatedWorkshopFileForDirectPayments"))
                $root.CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.encode(message.associatedWorkshopFileForDirectPayments, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CWorkshop_SetItemPaymentRules_Request message, length delimited. Does not implicitly {@link CWorkshop_SetItemPaymentRules_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @static
         * @param {ICWorkshop_SetItemPaymentRules_Request} message CWorkshop_SetItemPaymentRules_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CWorkshop_SetItemPaymentRules_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CWorkshop_SetItemPaymentRules_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CWorkshop_SetItemPaymentRules_Request} CWorkshop_SetItemPaymentRules_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CWorkshop_SetItemPaymentRules_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CWorkshop_SetItemPaymentRules_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.appid = reader.uint32();
                        break;
                    }
                case 2: {
                        message.gameitemid = reader.uint32();
                        break;
                    }
                case 3: {
                        if (!(message.associatedWorkshopFiles && message.associatedWorkshopFiles.length))
                            message.associatedWorkshopFiles = [];
                        message.associatedWorkshopFiles.push($root.CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.decode(reader, reader.uint32()));
                        break;
                    }
                case 4: {
                        if (!(message.partnerAccounts && message.partnerAccounts.length))
                            message.partnerAccounts = [];
                        message.partnerAccounts.push($root.CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.decode(reader, reader.uint32()));
                        break;
                    }
                case 5: {
                        message.validateOnly = reader.bool();
                        break;
                    }
                case 6: {
                        message.makeWorkshopFilesSubscribable = reader.bool();
                        break;
                    }
                case 7: {
                        message.associatedWorkshopFileForDirectPayments = $root.CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.decode(reader, reader.uint32());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CWorkshop_SetItemPaymentRules_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CWorkshop_SetItemPaymentRules_Request} CWorkshop_SetItemPaymentRules_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CWorkshop_SetItemPaymentRules_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CWorkshop_SetItemPaymentRules_Request message.
         * @function verify
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CWorkshop_SetItemPaymentRules_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.gameitemid != null && message.hasOwnProperty("gameitemid"))
                if (!$util.isInteger(message.gameitemid))
                    return "gameitemid: integer expected";
            if (message.associatedWorkshopFiles != null && message.hasOwnProperty("associatedWorkshopFiles")) {
                if (!Array.isArray(message.associatedWorkshopFiles))
                    return "associatedWorkshopFiles: array expected";
                for (var i = 0; i < message.associatedWorkshopFiles.length; ++i) {
                    var error = $root.CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.verify(message.associatedWorkshopFiles[i]);
                    if (error)
                        return "associatedWorkshopFiles." + error;
                }
            }
            if (message.partnerAccounts != null && message.hasOwnProperty("partnerAccounts")) {
                if (!Array.isArray(message.partnerAccounts))
                    return "partnerAccounts: array expected";
                for (var i = 0; i < message.partnerAccounts.length; ++i) {
                    var error = $root.CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.verify(message.partnerAccounts[i]);
                    if (error)
                        return "partnerAccounts." + error;
                }
            }
            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                if (typeof message.validateOnly !== "boolean")
                    return "validateOnly: boolean expected";
            if (message.makeWorkshopFilesSubscribable != null && message.hasOwnProperty("makeWorkshopFilesSubscribable"))
                if (typeof message.makeWorkshopFilesSubscribable !== "boolean")
                    return "makeWorkshopFilesSubscribable: boolean expected";
            if (message.associatedWorkshopFileForDirectPayments != null && message.hasOwnProperty("associatedWorkshopFileForDirectPayments")) {
                var error = $root.CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.verify(message.associatedWorkshopFileForDirectPayments);
                if (error)
                    return "associatedWorkshopFileForDirectPayments." + error;
            }
            return null;
        };
    
        /**
         * Creates a CWorkshop_SetItemPaymentRules_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CWorkshop_SetItemPaymentRules_Request} CWorkshop_SetItemPaymentRules_Request
         */
        CWorkshop_SetItemPaymentRules_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CWorkshop_SetItemPaymentRules_Request)
                return object;
            var message = new $root.CWorkshop_SetItemPaymentRules_Request();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.gameitemid != null)
                message.gameitemid = object.gameitemid >>> 0;
            if (object.associatedWorkshopFiles) {
                if (!Array.isArray(object.associatedWorkshopFiles))
                    throw TypeError(".CWorkshop_SetItemPaymentRules_Request.associatedWorkshopFiles: array expected");
                message.associatedWorkshopFiles = [];
                for (var i = 0; i < object.associatedWorkshopFiles.length; ++i) {
                    if (typeof object.associatedWorkshopFiles[i] !== "object")
                        throw TypeError(".CWorkshop_SetItemPaymentRules_Request.associatedWorkshopFiles: object expected");
                    message.associatedWorkshopFiles[i] = $root.CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.fromObject(object.associatedWorkshopFiles[i]);
                }
            }
            if (object.partnerAccounts) {
                if (!Array.isArray(object.partnerAccounts))
                    throw TypeError(".CWorkshop_SetItemPaymentRules_Request.partnerAccounts: array expected");
                message.partnerAccounts = [];
                for (var i = 0; i < object.partnerAccounts.length; ++i) {
                    if (typeof object.partnerAccounts[i] !== "object")
                        throw TypeError(".CWorkshop_SetItemPaymentRules_Request.partnerAccounts: object expected");
                    message.partnerAccounts[i] = $root.CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.fromObject(object.partnerAccounts[i]);
                }
            }
            if (object.validateOnly != null)
                message.validateOnly = Boolean(object.validateOnly);
            if (object.makeWorkshopFilesSubscribable != null)
                message.makeWorkshopFilesSubscribable = Boolean(object.makeWorkshopFilesSubscribable);
            if (object.associatedWorkshopFileForDirectPayments != null) {
                if (typeof object.associatedWorkshopFileForDirectPayments !== "object")
                    throw TypeError(".CWorkshop_SetItemPaymentRules_Request.associatedWorkshopFileForDirectPayments: object expected");
                message.associatedWorkshopFileForDirectPayments = $root.CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.fromObject(object.associatedWorkshopFileForDirectPayments);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CWorkshop_SetItemPaymentRules_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @static
         * @param {CWorkshop_SetItemPaymentRules_Request} message CWorkshop_SetItemPaymentRules_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CWorkshop_SetItemPaymentRules_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.associatedWorkshopFiles = [];
                object.partnerAccounts = [];
            }
            if (options.defaults) {
                object.appid = 0;
                object.gameitemid = 0;
                object.validateOnly = false;
                object.makeWorkshopFilesSubscribable = false;
                object.associatedWorkshopFileForDirectPayments = null;
            }
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.gameitemid != null && message.hasOwnProperty("gameitemid"))
                object.gameitemid = message.gameitemid;
            if (message.associatedWorkshopFiles && message.associatedWorkshopFiles.length) {
                object.associatedWorkshopFiles = [];
                for (var j = 0; j < message.associatedWorkshopFiles.length; ++j)
                    object.associatedWorkshopFiles[j] = $root.CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.toObject(message.associatedWorkshopFiles[j], options);
            }
            if (message.partnerAccounts && message.partnerAccounts.length) {
                object.partnerAccounts = [];
                for (var j = 0; j < message.partnerAccounts.length; ++j)
                    object.partnerAccounts[j] = $root.CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.toObject(message.partnerAccounts[j], options);
            }
            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                object.validateOnly = message.validateOnly;
            if (message.makeWorkshopFilesSubscribable != null && message.hasOwnProperty("makeWorkshopFilesSubscribable"))
                object.makeWorkshopFilesSubscribable = message.makeWorkshopFilesSubscribable;
            if (message.associatedWorkshopFileForDirectPayments != null && message.hasOwnProperty("associatedWorkshopFileForDirectPayments"))
                object.associatedWorkshopFileForDirectPayments = $root.CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.toObject(message.associatedWorkshopFileForDirectPayments, options);
            return object;
        };
    
        /**
         * Converts this CWorkshop_SetItemPaymentRules_Request to JSON.
         * @function toJSON
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CWorkshop_SetItemPaymentRules_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CWorkshop_SetItemPaymentRules_Request
         * @function getTypeUrl
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CWorkshop_SetItemPaymentRules_Request.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CWorkshop_SetItemPaymentRules_Request";
        };
    
        CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule = (function() {
    
            /**
             * Properties of a WorkshopItemPaymentRule.
             * @memberof CWorkshop_SetItemPaymentRules_Request
             * @interface IWorkshopItemPaymentRule
             * @property {number|Long|null} [workshopFileId] WorkshopItemPaymentRule workshopFileId
             * @property {number|null} [revenuePercentage] WorkshopItemPaymentRule revenuePercentage
             * @property {string|null} [ruleDescription] WorkshopItemPaymentRule ruleDescription
             * @property {number|null} [ruleType] WorkshopItemPaymentRule ruleType
             */
    
            /**
             * Constructs a new WorkshopItemPaymentRule.
             * @memberof CWorkshop_SetItemPaymentRules_Request
             * @classdesc Represents a WorkshopItemPaymentRule.
             * @implements IWorkshopItemPaymentRule
             * @constructor
             * @param {CWorkshop_SetItemPaymentRules_Request.IWorkshopItemPaymentRule=} [properties] Properties to set
             */
            function WorkshopItemPaymentRule(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * WorkshopItemPaymentRule workshopFileId.
             * @member {number|Long} workshopFileId
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
             * @instance
             */
            WorkshopItemPaymentRule.prototype.workshopFileId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * WorkshopItemPaymentRule revenuePercentage.
             * @member {number} revenuePercentage
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
             * @instance
             */
            WorkshopItemPaymentRule.prototype.revenuePercentage = 0;
    
            /**
             * WorkshopItemPaymentRule ruleDescription.
             * @member {string} ruleDescription
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
             * @instance
             */
            WorkshopItemPaymentRule.prototype.ruleDescription = "";
    
            /**
             * WorkshopItemPaymentRule ruleType.
             * @member {number} ruleType
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
             * @instance
             */
            WorkshopItemPaymentRule.prototype.ruleType = 1;
    
            /**
             * Creates a new WorkshopItemPaymentRule instance using the specified properties.
             * @function create
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
             * @static
             * @param {CWorkshop_SetItemPaymentRules_Request.IWorkshopItemPaymentRule=} [properties] Properties to set
             * @returns {CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule} WorkshopItemPaymentRule instance
             */
            WorkshopItemPaymentRule.create = function create(properties) {
                return new WorkshopItemPaymentRule(properties);
            };
    
            /**
             * Encodes the specified WorkshopItemPaymentRule message. Does not implicitly {@link CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.verify|verify} messages.
             * @function encode
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
             * @static
             * @param {CWorkshop_SetItemPaymentRules_Request.IWorkshopItemPaymentRule} message WorkshopItemPaymentRule message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            WorkshopItemPaymentRule.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.workshopFileId != null && Object.hasOwnProperty.call(message, "workshopFileId"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.workshopFileId);
                if (message.revenuePercentage != null && Object.hasOwnProperty.call(message, "revenuePercentage"))
                    writer.uint32(/* id 2, wireType 5 =*/21).float(message.revenuePercentage);
                if (message.ruleDescription != null && Object.hasOwnProperty.call(message, "ruleDescription"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.ruleDescription);
                if (message.ruleType != null && Object.hasOwnProperty.call(message, "ruleType"))
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.ruleType);
                return writer;
            };
    
            /**
             * Encodes the specified WorkshopItemPaymentRule message, length delimited. Does not implicitly {@link CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
             * @static
             * @param {CWorkshop_SetItemPaymentRules_Request.IWorkshopItemPaymentRule} message WorkshopItemPaymentRule message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            WorkshopItemPaymentRule.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a WorkshopItemPaymentRule message from the specified reader or buffer.
             * @function decode
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule} WorkshopItemPaymentRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            WorkshopItemPaymentRule.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.workshopFileId = reader.uint64();
                            break;
                        }
                    case 2: {
                            message.revenuePercentage = reader.float();
                            break;
                        }
                    case 3: {
                            message.ruleDescription = reader.string();
                            break;
                        }
                    case 4: {
                            message.ruleType = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a WorkshopItemPaymentRule message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule} WorkshopItemPaymentRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            WorkshopItemPaymentRule.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a WorkshopItemPaymentRule message.
             * @function verify
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            WorkshopItemPaymentRule.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.workshopFileId != null && message.hasOwnProperty("workshopFileId"))
                    if (!$util.isInteger(message.workshopFileId) && !(message.workshopFileId && $util.isInteger(message.workshopFileId.low) && $util.isInteger(message.workshopFileId.high)))
                        return "workshopFileId: integer|Long expected";
                if (message.revenuePercentage != null && message.hasOwnProperty("revenuePercentage"))
                    if (typeof message.revenuePercentage !== "number")
                        return "revenuePercentage: number expected";
                if (message.ruleDescription != null && message.hasOwnProperty("ruleDescription"))
                    if (!$util.isString(message.ruleDescription))
                        return "ruleDescription: string expected";
                if (message.ruleType != null && message.hasOwnProperty("ruleType"))
                    if (!$util.isInteger(message.ruleType))
                        return "ruleType: integer expected";
                return null;
            };
    
            /**
             * Creates a WorkshopItemPaymentRule message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule} WorkshopItemPaymentRule
             */
            WorkshopItemPaymentRule.fromObject = function fromObject(object) {
                if (object instanceof $root.CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
                    return object;
                var message = new $root.CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule();
                if (object.workshopFileId != null)
                    if ($util.Long)
                        (message.workshopFileId = $util.Long.fromValue(object.workshopFileId)).unsigned = true;
                    else if (typeof object.workshopFileId === "string")
                        message.workshopFileId = parseInt(object.workshopFileId, 10);
                    else if (typeof object.workshopFileId === "number")
                        message.workshopFileId = object.workshopFileId;
                    else if (typeof object.workshopFileId === "object")
                        message.workshopFileId = new $util.LongBits(object.workshopFileId.low >>> 0, object.workshopFileId.high >>> 0).toNumber(true);
                if (object.revenuePercentage != null)
                    message.revenuePercentage = Number(object.revenuePercentage);
                if (object.ruleDescription != null)
                    message.ruleDescription = String(object.ruleDescription);
                if (object.ruleType != null)
                    message.ruleType = object.ruleType >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a WorkshopItemPaymentRule message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
             * @static
             * @param {CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule} message WorkshopItemPaymentRule
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            WorkshopItemPaymentRule.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.workshopFileId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.workshopFileId = options.longs === String ? "0" : 0;
                    object.revenuePercentage = 0;
                    object.ruleDescription = "";
                    object.ruleType = 1;
                }
                if (message.workshopFileId != null && message.hasOwnProperty("workshopFileId"))
                    if (typeof message.workshopFileId === "number")
                        object.workshopFileId = options.longs === String ? String(message.workshopFileId) : message.workshopFileId;
                    else
                        object.workshopFileId = options.longs === String ? $util.Long.prototype.toString.call(message.workshopFileId) : options.longs === Number ? new $util.LongBits(message.workshopFileId.low >>> 0, message.workshopFileId.high >>> 0).toNumber(true) : message.workshopFileId;
                if (message.revenuePercentage != null && message.hasOwnProperty("revenuePercentage"))
                    object.revenuePercentage = options.json && !isFinite(message.revenuePercentage) ? String(message.revenuePercentage) : message.revenuePercentage;
                if (message.ruleDescription != null && message.hasOwnProperty("ruleDescription"))
                    object.ruleDescription = message.ruleDescription;
                if (message.ruleType != null && message.hasOwnProperty("ruleType"))
                    object.ruleType = message.ruleType;
                return object;
            };
    
            /**
             * Converts this WorkshopItemPaymentRule to JSON.
             * @function toJSON
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            WorkshopItemPaymentRule.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for WorkshopItemPaymentRule
             * @function getTypeUrl
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            WorkshopItemPaymentRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule";
            };
    
            return WorkshopItemPaymentRule;
        })();
    
        CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule = (function() {
    
            /**
             * Properties of a WorkshopDirectPaymentRule.
             * @memberof CWorkshop_SetItemPaymentRules_Request
             * @interface IWorkshopDirectPaymentRule
             * @property {number|Long|null} [workshopFileId] WorkshopDirectPaymentRule workshopFileId
             * @property {string|null} [ruleDescription] WorkshopDirectPaymentRule ruleDescription
             */
    
            /**
             * Constructs a new WorkshopDirectPaymentRule.
             * @memberof CWorkshop_SetItemPaymentRules_Request
             * @classdesc Represents a WorkshopDirectPaymentRule.
             * @implements IWorkshopDirectPaymentRule
             * @constructor
             * @param {CWorkshop_SetItemPaymentRules_Request.IWorkshopDirectPaymentRule=} [properties] Properties to set
             */
            function WorkshopDirectPaymentRule(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * WorkshopDirectPaymentRule workshopFileId.
             * @member {number|Long} workshopFileId
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule
             * @instance
             */
            WorkshopDirectPaymentRule.prototype.workshopFileId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * WorkshopDirectPaymentRule ruleDescription.
             * @member {string} ruleDescription
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule
             * @instance
             */
            WorkshopDirectPaymentRule.prototype.ruleDescription = "";
    
            /**
             * Creates a new WorkshopDirectPaymentRule instance using the specified properties.
             * @function create
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule
             * @static
             * @param {CWorkshop_SetItemPaymentRules_Request.IWorkshopDirectPaymentRule=} [properties] Properties to set
             * @returns {CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule} WorkshopDirectPaymentRule instance
             */
            WorkshopDirectPaymentRule.create = function create(properties) {
                return new WorkshopDirectPaymentRule(properties);
            };
    
            /**
             * Encodes the specified WorkshopDirectPaymentRule message. Does not implicitly {@link CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.verify|verify} messages.
             * @function encode
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule
             * @static
             * @param {CWorkshop_SetItemPaymentRules_Request.IWorkshopDirectPaymentRule} message WorkshopDirectPaymentRule message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            WorkshopDirectPaymentRule.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.workshopFileId != null && Object.hasOwnProperty.call(message, "workshopFileId"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.workshopFileId);
                if (message.ruleDescription != null && Object.hasOwnProperty.call(message, "ruleDescription"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.ruleDescription);
                return writer;
            };
    
            /**
             * Encodes the specified WorkshopDirectPaymentRule message, length delimited. Does not implicitly {@link CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule
             * @static
             * @param {CWorkshop_SetItemPaymentRules_Request.IWorkshopDirectPaymentRule} message WorkshopDirectPaymentRule message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            WorkshopDirectPaymentRule.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a WorkshopDirectPaymentRule message from the specified reader or buffer.
             * @function decode
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule} WorkshopDirectPaymentRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            WorkshopDirectPaymentRule.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.workshopFileId = reader.uint64();
                            break;
                        }
                    case 2: {
                            message.ruleDescription = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a WorkshopDirectPaymentRule message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule} WorkshopDirectPaymentRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            WorkshopDirectPaymentRule.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a WorkshopDirectPaymentRule message.
             * @function verify
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            WorkshopDirectPaymentRule.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.workshopFileId != null && message.hasOwnProperty("workshopFileId"))
                    if (!$util.isInteger(message.workshopFileId) && !(message.workshopFileId && $util.isInteger(message.workshopFileId.low) && $util.isInteger(message.workshopFileId.high)))
                        return "workshopFileId: integer|Long expected";
                if (message.ruleDescription != null && message.hasOwnProperty("ruleDescription"))
                    if (!$util.isString(message.ruleDescription))
                        return "ruleDescription: string expected";
                return null;
            };
    
            /**
             * Creates a WorkshopDirectPaymentRule message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule} WorkshopDirectPaymentRule
             */
            WorkshopDirectPaymentRule.fromObject = function fromObject(object) {
                if (object instanceof $root.CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule)
                    return object;
                var message = new $root.CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule();
                if (object.workshopFileId != null)
                    if ($util.Long)
                        (message.workshopFileId = $util.Long.fromValue(object.workshopFileId)).unsigned = true;
                    else if (typeof object.workshopFileId === "string")
                        message.workshopFileId = parseInt(object.workshopFileId, 10);
                    else if (typeof object.workshopFileId === "number")
                        message.workshopFileId = object.workshopFileId;
                    else if (typeof object.workshopFileId === "object")
                        message.workshopFileId = new $util.LongBits(object.workshopFileId.low >>> 0, object.workshopFileId.high >>> 0).toNumber(true);
                if (object.ruleDescription != null)
                    message.ruleDescription = String(object.ruleDescription);
                return message;
            };
    
            /**
             * Creates a plain object from a WorkshopDirectPaymentRule message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule
             * @static
             * @param {CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule} message WorkshopDirectPaymentRule
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            WorkshopDirectPaymentRule.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.workshopFileId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.workshopFileId = options.longs === String ? "0" : 0;
                    object.ruleDescription = "";
                }
                if (message.workshopFileId != null && message.hasOwnProperty("workshopFileId"))
                    if (typeof message.workshopFileId === "number")
                        object.workshopFileId = options.longs === String ? String(message.workshopFileId) : message.workshopFileId;
                    else
                        object.workshopFileId = options.longs === String ? $util.Long.prototype.toString.call(message.workshopFileId) : options.longs === Number ? new $util.LongBits(message.workshopFileId.low >>> 0, message.workshopFileId.high >>> 0).toNumber(true) : message.workshopFileId;
                if (message.ruleDescription != null && message.hasOwnProperty("ruleDescription"))
                    object.ruleDescription = message.ruleDescription;
                return object;
            };
    
            /**
             * Converts this WorkshopDirectPaymentRule to JSON.
             * @function toJSON
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            WorkshopDirectPaymentRule.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for WorkshopDirectPaymentRule
             * @function getTypeUrl
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            WorkshopDirectPaymentRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule";
            };
    
            return WorkshopDirectPaymentRule;
        })();
    
        CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule = (function() {
    
            /**
             * Properties of a PartnerItemPaymentRule.
             * @memberof CWorkshop_SetItemPaymentRules_Request
             * @interface IPartnerItemPaymentRule
             * @property {number|null} [accountId] PartnerItemPaymentRule accountId
             * @property {number|null} [revenuePercentage] PartnerItemPaymentRule revenuePercentage
             * @property {string|null} [ruleDescription] PartnerItemPaymentRule ruleDescription
             */
    
            /**
             * Constructs a new PartnerItemPaymentRule.
             * @memberof CWorkshop_SetItemPaymentRules_Request
             * @classdesc Represents a PartnerItemPaymentRule.
             * @implements IPartnerItemPaymentRule
             * @constructor
             * @param {CWorkshop_SetItemPaymentRules_Request.IPartnerItemPaymentRule=} [properties] Properties to set
             */
            function PartnerItemPaymentRule(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * PartnerItemPaymentRule accountId.
             * @member {number} accountId
             * @memberof CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
             * @instance
             */
            PartnerItemPaymentRule.prototype.accountId = 0;
    
            /**
             * PartnerItemPaymentRule revenuePercentage.
             * @member {number} revenuePercentage
             * @memberof CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
             * @instance
             */
            PartnerItemPaymentRule.prototype.revenuePercentage = 0;
    
            /**
             * PartnerItemPaymentRule ruleDescription.
             * @member {string} ruleDescription
             * @memberof CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
             * @instance
             */
            PartnerItemPaymentRule.prototype.ruleDescription = "";
    
            /**
             * Creates a new PartnerItemPaymentRule instance using the specified properties.
             * @function create
             * @memberof CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
             * @static
             * @param {CWorkshop_SetItemPaymentRules_Request.IPartnerItemPaymentRule=} [properties] Properties to set
             * @returns {CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule} PartnerItemPaymentRule instance
             */
            PartnerItemPaymentRule.create = function create(properties) {
                return new PartnerItemPaymentRule(properties);
            };
    
            /**
             * Encodes the specified PartnerItemPaymentRule message. Does not implicitly {@link CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.verify|verify} messages.
             * @function encode
             * @memberof CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
             * @static
             * @param {CWorkshop_SetItemPaymentRules_Request.IPartnerItemPaymentRule} message PartnerItemPaymentRule message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PartnerItemPaymentRule.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.accountId != null && Object.hasOwnProperty.call(message, "accountId"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.accountId);
                if (message.revenuePercentage != null && Object.hasOwnProperty.call(message, "revenuePercentage"))
                    writer.uint32(/* id 2, wireType 5 =*/21).float(message.revenuePercentage);
                if (message.ruleDescription != null && Object.hasOwnProperty.call(message, "ruleDescription"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.ruleDescription);
                return writer;
            };
    
            /**
             * Encodes the specified PartnerItemPaymentRule message, length delimited. Does not implicitly {@link CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
             * @static
             * @param {CWorkshop_SetItemPaymentRules_Request.IPartnerItemPaymentRule} message PartnerItemPaymentRule message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PartnerItemPaymentRule.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a PartnerItemPaymentRule message from the specified reader or buffer.
             * @function decode
             * @memberof CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule} PartnerItemPaymentRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PartnerItemPaymentRule.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.accountId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.revenuePercentage = reader.float();
                            break;
                        }
                    case 3: {
                            message.ruleDescription = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a PartnerItemPaymentRule message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule} PartnerItemPaymentRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PartnerItemPaymentRule.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a PartnerItemPaymentRule message.
             * @function verify
             * @memberof CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            PartnerItemPaymentRule.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.accountId != null && message.hasOwnProperty("accountId"))
                    if (!$util.isInteger(message.accountId))
                        return "accountId: integer expected";
                if (message.revenuePercentage != null && message.hasOwnProperty("revenuePercentage"))
                    if (typeof message.revenuePercentage !== "number")
                        return "revenuePercentage: number expected";
                if (message.ruleDescription != null && message.hasOwnProperty("ruleDescription"))
                    if (!$util.isString(message.ruleDescription))
                        return "ruleDescription: string expected";
                return null;
            };
    
            /**
             * Creates a PartnerItemPaymentRule message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule} PartnerItemPaymentRule
             */
            PartnerItemPaymentRule.fromObject = function fromObject(object) {
                if (object instanceof $root.CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
                    return object;
                var message = new $root.CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule();
                if (object.accountId != null)
                    message.accountId = object.accountId >>> 0;
                if (object.revenuePercentage != null)
                    message.revenuePercentage = Number(object.revenuePercentage);
                if (object.ruleDescription != null)
                    message.ruleDescription = String(object.ruleDescription);
                return message;
            };
    
            /**
             * Creates a plain object from a PartnerItemPaymentRule message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
             * @static
             * @param {CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule} message PartnerItemPaymentRule
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            PartnerItemPaymentRule.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.accountId = 0;
                    object.revenuePercentage = 0;
                    object.ruleDescription = "";
                }
                if (message.accountId != null && message.hasOwnProperty("accountId"))
                    object.accountId = message.accountId;
                if (message.revenuePercentage != null && message.hasOwnProperty("revenuePercentage"))
                    object.revenuePercentage = options.json && !isFinite(message.revenuePercentage) ? String(message.revenuePercentage) : message.revenuePercentage;
                if (message.ruleDescription != null && message.hasOwnProperty("ruleDescription"))
                    object.ruleDescription = message.ruleDescription;
                return object;
            };
    
            /**
             * Converts this PartnerItemPaymentRule to JSON.
             * @function toJSON
             * @memberof CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            PartnerItemPaymentRule.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for PartnerItemPaymentRule
             * @function getTypeUrl
             * @memberof CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            PartnerItemPaymentRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule";
            };
    
            return PartnerItemPaymentRule;
        })();
    
        return CWorkshop_SetItemPaymentRules_Request;
    })();
    
    $root.CWorkshop_SetItemPaymentRules_Response = (function() {
    
        /**
         * Properties of a CWorkshop_SetItemPaymentRules_Response.
         * @exports ICWorkshop_SetItemPaymentRules_Response
         * @interface ICWorkshop_SetItemPaymentRules_Response
         */
    
        /**
         * Constructs a new CWorkshop_SetItemPaymentRules_Response.
         * @exports CWorkshop_SetItemPaymentRules_Response
         * @classdesc Represents a CWorkshop_SetItemPaymentRules_Response.
         * @implements ICWorkshop_SetItemPaymentRules_Response
         * @constructor
         * @param {ICWorkshop_SetItemPaymentRules_Response=} [properties] Properties to set
         */
        function CWorkshop_SetItemPaymentRules_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CWorkshop_SetItemPaymentRules_Response instance using the specified properties.
         * @function create
         * @memberof CWorkshop_SetItemPaymentRules_Response
         * @static
         * @param {ICWorkshop_SetItemPaymentRules_Response=} [properties] Properties to set
         * @returns {CWorkshop_SetItemPaymentRules_Response} CWorkshop_SetItemPaymentRules_Response instance
         */
        CWorkshop_SetItemPaymentRules_Response.create = function create(properties) {
            return new CWorkshop_SetItemPaymentRules_Response(properties);
        };
    
        /**
         * Encodes the specified CWorkshop_SetItemPaymentRules_Response message. Does not implicitly {@link CWorkshop_SetItemPaymentRules_Response.verify|verify} messages.
         * @function encode
         * @memberof CWorkshop_SetItemPaymentRules_Response
         * @static
         * @param {ICWorkshop_SetItemPaymentRules_Response} message CWorkshop_SetItemPaymentRules_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CWorkshop_SetItemPaymentRules_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CWorkshop_SetItemPaymentRules_Response message, length delimited. Does not implicitly {@link CWorkshop_SetItemPaymentRules_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CWorkshop_SetItemPaymentRules_Response
         * @static
         * @param {ICWorkshop_SetItemPaymentRules_Response} message CWorkshop_SetItemPaymentRules_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CWorkshop_SetItemPaymentRules_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CWorkshop_SetItemPaymentRules_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CWorkshop_SetItemPaymentRules_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CWorkshop_SetItemPaymentRules_Response} CWorkshop_SetItemPaymentRules_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CWorkshop_SetItemPaymentRules_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CWorkshop_SetItemPaymentRules_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CWorkshop_SetItemPaymentRules_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CWorkshop_SetItemPaymentRules_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CWorkshop_SetItemPaymentRules_Response} CWorkshop_SetItemPaymentRules_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CWorkshop_SetItemPaymentRules_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CWorkshop_SetItemPaymentRules_Response message.
         * @function verify
         * @memberof CWorkshop_SetItemPaymentRules_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CWorkshop_SetItemPaymentRules_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CWorkshop_SetItemPaymentRules_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CWorkshop_SetItemPaymentRules_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CWorkshop_SetItemPaymentRules_Response} CWorkshop_SetItemPaymentRules_Response
         */
        CWorkshop_SetItemPaymentRules_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CWorkshop_SetItemPaymentRules_Response)
                return object;
            return new $root.CWorkshop_SetItemPaymentRules_Response();
        };
    
        /**
         * Creates a plain object from a CWorkshop_SetItemPaymentRules_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CWorkshop_SetItemPaymentRules_Response
         * @static
         * @param {CWorkshop_SetItemPaymentRules_Response} message CWorkshop_SetItemPaymentRules_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CWorkshop_SetItemPaymentRules_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CWorkshop_SetItemPaymentRules_Response to JSON.
         * @function toJSON
         * @memberof CWorkshop_SetItemPaymentRules_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CWorkshop_SetItemPaymentRules_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CWorkshop_SetItemPaymentRules_Response
         * @function getTypeUrl
         * @memberof CWorkshop_SetItemPaymentRules_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CWorkshop_SetItemPaymentRules_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CWorkshop_SetItemPaymentRules_Response";
        };
    
        return CWorkshop_SetItemPaymentRules_Response;
    })();
    
    $root.CGameServers_AggregationQuery_Request = (function() {
    
        /**
         * Properties of a CGameServers_AggregationQuery_Request.
         * @exports ICGameServers_AggregationQuery_Request
         * @interface ICGameServers_AggregationQuery_Request
         * @property {string|null} [filter] CGameServers_AggregationQuery_Request filter
         * @property {Array.<string>|null} [groupFields] CGameServers_AggregationQuery_Request groupFields
         */
    
        /**
         * Constructs a new CGameServers_AggregationQuery_Request.
         * @exports CGameServers_AggregationQuery_Request
         * @classdesc Represents a CGameServers_AggregationQuery_Request.
         * @implements ICGameServers_AggregationQuery_Request
         * @constructor
         * @param {ICGameServers_AggregationQuery_Request=} [properties] Properties to set
         */
        function CGameServers_AggregationQuery_Request(properties) {
            this.groupFields = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGameServers_AggregationQuery_Request filter.
         * @member {string} filter
         * @memberof CGameServers_AggregationQuery_Request
         * @instance
         */
        CGameServers_AggregationQuery_Request.prototype.filter = "";
    
        /**
         * CGameServers_AggregationQuery_Request groupFields.
         * @member {Array.<string>} groupFields
         * @memberof CGameServers_AggregationQuery_Request
         * @instance
         */
        CGameServers_AggregationQuery_Request.prototype.groupFields = $util.emptyArray;
    
        /**
         * Creates a new CGameServers_AggregationQuery_Request instance using the specified properties.
         * @function create
         * @memberof CGameServers_AggregationQuery_Request
         * @static
         * @param {ICGameServers_AggregationQuery_Request=} [properties] Properties to set
         * @returns {CGameServers_AggregationQuery_Request} CGameServers_AggregationQuery_Request instance
         */
        CGameServers_AggregationQuery_Request.create = function create(properties) {
            return new CGameServers_AggregationQuery_Request(properties);
        };
    
        /**
         * Encodes the specified CGameServers_AggregationQuery_Request message. Does not implicitly {@link CGameServers_AggregationQuery_Request.verify|verify} messages.
         * @function encode
         * @memberof CGameServers_AggregationQuery_Request
         * @static
         * @param {ICGameServers_AggregationQuery_Request} message CGameServers_AggregationQuery_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGameServers_AggregationQuery_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.filter);
            if (message.groupFields != null && message.groupFields.length)
                for (var i = 0; i < message.groupFields.length; ++i)
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.groupFields[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CGameServers_AggregationQuery_Request message, length delimited. Does not implicitly {@link CGameServers_AggregationQuery_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGameServers_AggregationQuery_Request
         * @static
         * @param {ICGameServers_AggregationQuery_Request} message CGameServers_AggregationQuery_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGameServers_AggregationQuery_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGameServers_AggregationQuery_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CGameServers_AggregationQuery_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGameServers_AggregationQuery_Request} CGameServers_AggregationQuery_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGameServers_AggregationQuery_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGameServers_AggregationQuery_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.filter = reader.string();
                        break;
                    }
                case 3: {
                        if (!(message.groupFields && message.groupFields.length))
                            message.groupFields = [];
                        message.groupFields.push(reader.string());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGameServers_AggregationQuery_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGameServers_AggregationQuery_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGameServers_AggregationQuery_Request} CGameServers_AggregationQuery_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGameServers_AggregationQuery_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGameServers_AggregationQuery_Request message.
         * @function verify
         * @memberof CGameServers_AggregationQuery_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGameServers_AggregationQuery_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.filter != null && message.hasOwnProperty("filter"))
                if (!$util.isString(message.filter))
                    return "filter: string expected";
            if (message.groupFields != null && message.hasOwnProperty("groupFields")) {
                if (!Array.isArray(message.groupFields))
                    return "groupFields: array expected";
                for (var i = 0; i < message.groupFields.length; ++i)
                    if (!$util.isString(message.groupFields[i]))
                        return "groupFields: string[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CGameServers_AggregationQuery_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGameServers_AggregationQuery_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGameServers_AggregationQuery_Request} CGameServers_AggregationQuery_Request
         */
        CGameServers_AggregationQuery_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CGameServers_AggregationQuery_Request)
                return object;
            var message = new $root.CGameServers_AggregationQuery_Request();
            if (object.filter != null)
                message.filter = String(object.filter);
            if (object.groupFields) {
                if (!Array.isArray(object.groupFields))
                    throw TypeError(".CGameServers_AggregationQuery_Request.groupFields: array expected");
                message.groupFields = [];
                for (var i = 0; i < object.groupFields.length; ++i)
                    message.groupFields[i] = String(object.groupFields[i]);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CGameServers_AggregationQuery_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGameServers_AggregationQuery_Request
         * @static
         * @param {CGameServers_AggregationQuery_Request} message CGameServers_AggregationQuery_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGameServers_AggregationQuery_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.groupFields = [];
            if (options.defaults)
                object.filter = "";
            if (message.filter != null && message.hasOwnProperty("filter"))
                object.filter = message.filter;
            if (message.groupFields && message.groupFields.length) {
                object.groupFields = [];
                for (var j = 0; j < message.groupFields.length; ++j)
                    object.groupFields[j] = message.groupFields[j];
            }
            return object;
        };
    
        /**
         * Converts this CGameServers_AggregationQuery_Request to JSON.
         * @function toJSON
         * @memberof CGameServers_AggregationQuery_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGameServers_AggregationQuery_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGameServers_AggregationQuery_Request
         * @function getTypeUrl
         * @memberof CGameServers_AggregationQuery_Request
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGameServers_AggregationQuery_Request.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGameServers_AggregationQuery_Request";
        };
    
        return CGameServers_AggregationQuery_Request;
    })();
    
    $root.CGameServers_AggregationQuery_Response = (function() {
    
        /**
         * Properties of a CGameServers_AggregationQuery_Response.
         * @exports ICGameServers_AggregationQuery_Response
         * @interface ICGameServers_AggregationQuery_Response
         * @property {Array.<CGameServers_AggregationQuery_Response.IGroup>|null} [groups] CGameServers_AggregationQuery_Response groups
         */
    
        /**
         * Constructs a new CGameServers_AggregationQuery_Response.
         * @exports CGameServers_AggregationQuery_Response
         * @classdesc Represents a CGameServers_AggregationQuery_Response.
         * @implements ICGameServers_AggregationQuery_Response
         * @constructor
         * @param {ICGameServers_AggregationQuery_Response=} [properties] Properties to set
         */
        function CGameServers_AggregationQuery_Response(properties) {
            this.groups = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGameServers_AggregationQuery_Response groups.
         * @member {Array.<CGameServers_AggregationQuery_Response.IGroup>} groups
         * @memberof CGameServers_AggregationQuery_Response
         * @instance
         */
        CGameServers_AggregationQuery_Response.prototype.groups = $util.emptyArray;
    
        /**
         * Creates a new CGameServers_AggregationQuery_Response instance using the specified properties.
         * @function create
         * @memberof CGameServers_AggregationQuery_Response
         * @static
         * @param {ICGameServers_AggregationQuery_Response=} [properties] Properties to set
         * @returns {CGameServers_AggregationQuery_Response} CGameServers_AggregationQuery_Response instance
         */
        CGameServers_AggregationQuery_Response.create = function create(properties) {
            return new CGameServers_AggregationQuery_Response(properties);
        };
    
        /**
         * Encodes the specified CGameServers_AggregationQuery_Response message. Does not implicitly {@link CGameServers_AggregationQuery_Response.verify|verify} messages.
         * @function encode
         * @memberof CGameServers_AggregationQuery_Response
         * @static
         * @param {ICGameServers_AggregationQuery_Response} message CGameServers_AggregationQuery_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGameServers_AggregationQuery_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.groups != null && message.groups.length)
                for (var i = 0; i < message.groups.length; ++i)
                    $root.CGameServers_AggregationQuery_Response.Group.encode(message.groups[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CGameServers_AggregationQuery_Response message, length delimited. Does not implicitly {@link CGameServers_AggregationQuery_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGameServers_AggregationQuery_Response
         * @static
         * @param {ICGameServers_AggregationQuery_Response} message CGameServers_AggregationQuery_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGameServers_AggregationQuery_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGameServers_AggregationQuery_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CGameServers_AggregationQuery_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGameServers_AggregationQuery_Response} CGameServers_AggregationQuery_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGameServers_AggregationQuery_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGameServers_AggregationQuery_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.groups && message.groups.length))
                            message.groups = [];
                        message.groups.push($root.CGameServers_AggregationQuery_Response.Group.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGameServers_AggregationQuery_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGameServers_AggregationQuery_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGameServers_AggregationQuery_Response} CGameServers_AggregationQuery_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGameServers_AggregationQuery_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGameServers_AggregationQuery_Response message.
         * @function verify
         * @memberof CGameServers_AggregationQuery_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGameServers_AggregationQuery_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.groups != null && message.hasOwnProperty("groups")) {
                if (!Array.isArray(message.groups))
                    return "groups: array expected";
                for (var i = 0; i < message.groups.length; ++i) {
                    var error = $root.CGameServers_AggregationQuery_Response.Group.verify(message.groups[i]);
                    if (error)
                        return "groups." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CGameServers_AggregationQuery_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGameServers_AggregationQuery_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGameServers_AggregationQuery_Response} CGameServers_AggregationQuery_Response
         */
        CGameServers_AggregationQuery_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CGameServers_AggregationQuery_Response)
                return object;
            var message = new $root.CGameServers_AggregationQuery_Response();
            if (object.groups) {
                if (!Array.isArray(object.groups))
                    throw TypeError(".CGameServers_AggregationQuery_Response.groups: array expected");
                message.groups = [];
                for (var i = 0; i < object.groups.length; ++i) {
                    if (typeof object.groups[i] !== "object")
                        throw TypeError(".CGameServers_AggregationQuery_Response.groups: object expected");
                    message.groups[i] = $root.CGameServers_AggregationQuery_Response.Group.fromObject(object.groups[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CGameServers_AggregationQuery_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGameServers_AggregationQuery_Response
         * @static
         * @param {CGameServers_AggregationQuery_Response} message CGameServers_AggregationQuery_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGameServers_AggregationQuery_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.groups = [];
            if (message.groups && message.groups.length) {
                object.groups = [];
                for (var j = 0; j < message.groups.length; ++j)
                    object.groups[j] = $root.CGameServers_AggregationQuery_Response.Group.toObject(message.groups[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CGameServers_AggregationQuery_Response to JSON.
         * @function toJSON
         * @memberof CGameServers_AggregationQuery_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGameServers_AggregationQuery_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGameServers_AggregationQuery_Response
         * @function getTypeUrl
         * @memberof CGameServers_AggregationQuery_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGameServers_AggregationQuery_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGameServers_AggregationQuery_Response";
        };
    
        CGameServers_AggregationQuery_Response.Group = (function() {
    
            /**
             * Properties of a Group.
             * @memberof CGameServers_AggregationQuery_Response
             * @interface IGroup
             * @property {Array.<string>|null} [groupValues] Group groupValues
             * @property {number|null} [serversEmpty] Group serversEmpty
             * @property {number|null} [serversFull] Group serversFull
             * @property {number|null} [serversTotal] Group serversTotal
             * @property {number|null} [playersHumans] Group playersHumans
             * @property {number|null} [playersBots] Group playersBots
             * @property {number|null} [playerCapacity] Group playerCapacity
             */
    
            /**
             * Constructs a new Group.
             * @memberof CGameServers_AggregationQuery_Response
             * @classdesc Represents a Group.
             * @implements IGroup
             * @constructor
             * @param {CGameServers_AggregationQuery_Response.IGroup=} [properties] Properties to set
             */
            function Group(properties) {
                this.groupValues = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Group groupValues.
             * @member {Array.<string>} groupValues
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @instance
             */
            Group.prototype.groupValues = $util.emptyArray;
    
            /**
             * Group serversEmpty.
             * @member {number} serversEmpty
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @instance
             */
            Group.prototype.serversEmpty = 0;
    
            /**
             * Group serversFull.
             * @member {number} serversFull
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @instance
             */
            Group.prototype.serversFull = 0;
    
            /**
             * Group serversTotal.
             * @member {number} serversTotal
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @instance
             */
            Group.prototype.serversTotal = 0;
    
            /**
             * Group playersHumans.
             * @member {number} playersHumans
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @instance
             */
            Group.prototype.playersHumans = 0;
    
            /**
             * Group playersBots.
             * @member {number} playersBots
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @instance
             */
            Group.prototype.playersBots = 0;
    
            /**
             * Group playerCapacity.
             * @member {number} playerCapacity
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @instance
             */
            Group.prototype.playerCapacity = 0;
    
            /**
             * Creates a new Group instance using the specified properties.
             * @function create
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @static
             * @param {CGameServers_AggregationQuery_Response.IGroup=} [properties] Properties to set
             * @returns {CGameServers_AggregationQuery_Response.Group} Group instance
             */
            Group.create = function create(properties) {
                return new Group(properties);
            };
    
            /**
             * Encodes the specified Group message. Does not implicitly {@link CGameServers_AggregationQuery_Response.Group.verify|verify} messages.
             * @function encode
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @static
             * @param {CGameServers_AggregationQuery_Response.IGroup} message Group message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Group.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.groupValues != null && message.groupValues.length)
                    for (var i = 0; i < message.groupValues.length; ++i)
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.groupValues[i]);
                if (message.serversEmpty != null && Object.hasOwnProperty.call(message, "serversEmpty"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.serversEmpty);
                if (message.serversFull != null && Object.hasOwnProperty.call(message, "serversFull"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.serversFull);
                if (message.serversTotal != null && Object.hasOwnProperty.call(message, "serversTotal"))
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.serversTotal);
                if (message.playersHumans != null && Object.hasOwnProperty.call(message, "playersHumans"))
                    writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.playersHumans);
                if (message.playersBots != null && Object.hasOwnProperty.call(message, "playersBots"))
                    writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.playersBots);
                if (message.playerCapacity != null && Object.hasOwnProperty.call(message, "playerCapacity"))
                    writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.playerCapacity);
                return writer;
            };
    
            /**
             * Encodes the specified Group message, length delimited. Does not implicitly {@link CGameServers_AggregationQuery_Response.Group.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @static
             * @param {CGameServers_AggregationQuery_Response.IGroup} message Group message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Group.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Group message from the specified reader or buffer.
             * @function decode
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CGameServers_AggregationQuery_Response.Group} Group
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Group.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGameServers_AggregationQuery_Response.Group();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            if (!(message.groupValues && message.groupValues.length))
                                message.groupValues = [];
                            message.groupValues.push(reader.string());
                            break;
                        }
                    case 2: {
                            message.serversEmpty = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.serversFull = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.serversTotal = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.playersHumans = reader.uint32();
                            break;
                        }
                    case 6: {
                            message.playersBots = reader.uint32();
                            break;
                        }
                    case 7: {
                            message.playerCapacity = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Group message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CGameServers_AggregationQuery_Response.Group} Group
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Group.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Group message.
             * @function verify
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Group.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.groupValues != null && message.hasOwnProperty("groupValues")) {
                    if (!Array.isArray(message.groupValues))
                        return "groupValues: array expected";
                    for (var i = 0; i < message.groupValues.length; ++i)
                        if (!$util.isString(message.groupValues[i]))
                            return "groupValues: string[] expected";
                }
                if (message.serversEmpty != null && message.hasOwnProperty("serversEmpty"))
                    if (!$util.isInteger(message.serversEmpty))
                        return "serversEmpty: integer expected";
                if (message.serversFull != null && message.hasOwnProperty("serversFull"))
                    if (!$util.isInteger(message.serversFull))
                        return "serversFull: integer expected";
                if (message.serversTotal != null && message.hasOwnProperty("serversTotal"))
                    if (!$util.isInteger(message.serversTotal))
                        return "serversTotal: integer expected";
                if (message.playersHumans != null && message.hasOwnProperty("playersHumans"))
                    if (!$util.isInteger(message.playersHumans))
                        return "playersHumans: integer expected";
                if (message.playersBots != null && message.hasOwnProperty("playersBots"))
                    if (!$util.isInteger(message.playersBots))
                        return "playersBots: integer expected";
                if (message.playerCapacity != null && message.hasOwnProperty("playerCapacity"))
                    if (!$util.isInteger(message.playerCapacity))
                        return "playerCapacity: integer expected";
                return null;
            };
    
            /**
             * Creates a Group message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CGameServers_AggregationQuery_Response.Group} Group
             */
            Group.fromObject = function fromObject(object) {
                if (object instanceof $root.CGameServers_AggregationQuery_Response.Group)
                    return object;
                var message = new $root.CGameServers_AggregationQuery_Response.Group();
                if (object.groupValues) {
                    if (!Array.isArray(object.groupValues))
                        throw TypeError(".CGameServers_AggregationQuery_Response.Group.groupValues: array expected");
                    message.groupValues = [];
                    for (var i = 0; i < object.groupValues.length; ++i)
                        message.groupValues[i] = String(object.groupValues[i]);
                }
                if (object.serversEmpty != null)
                    message.serversEmpty = object.serversEmpty >>> 0;
                if (object.serversFull != null)
                    message.serversFull = object.serversFull >>> 0;
                if (object.serversTotal != null)
                    message.serversTotal = object.serversTotal >>> 0;
                if (object.playersHumans != null)
                    message.playersHumans = object.playersHumans >>> 0;
                if (object.playersBots != null)
                    message.playersBots = object.playersBots >>> 0;
                if (object.playerCapacity != null)
                    message.playerCapacity = object.playerCapacity >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a Group message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @static
             * @param {CGameServers_AggregationQuery_Response.Group} message Group
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Group.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.groupValues = [];
                if (options.defaults) {
                    object.serversEmpty = 0;
                    object.serversFull = 0;
                    object.serversTotal = 0;
                    object.playersHumans = 0;
                    object.playersBots = 0;
                    object.playerCapacity = 0;
                }
                if (message.groupValues && message.groupValues.length) {
                    object.groupValues = [];
                    for (var j = 0; j < message.groupValues.length; ++j)
                        object.groupValues[j] = message.groupValues[j];
                }
                if (message.serversEmpty != null && message.hasOwnProperty("serversEmpty"))
                    object.serversEmpty = message.serversEmpty;
                if (message.serversFull != null && message.hasOwnProperty("serversFull"))
                    object.serversFull = message.serversFull;
                if (message.serversTotal != null && message.hasOwnProperty("serversTotal"))
                    object.serversTotal = message.serversTotal;
                if (message.playersHumans != null && message.hasOwnProperty("playersHumans"))
                    object.playersHumans = message.playersHumans;
                if (message.playersBots != null && message.hasOwnProperty("playersBots"))
                    object.playersBots = message.playersBots;
                if (message.playerCapacity != null && message.hasOwnProperty("playerCapacity"))
                    object.playerCapacity = message.playerCapacity;
                return object;
            };
    
            /**
             * Converts this Group to JSON.
             * @function toJSON
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Group.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for Group
             * @function getTypeUrl
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Group.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CGameServers_AggregationQuery_Response.Group";
            };
    
            return Group;
        })();
    
        return CGameServers_AggregationQuery_Response;
    })();
    
    $root.CWorkshop_AddSpecialPayment_Request = (function() {
    
        /**
         * Properties of a CWorkshop_AddSpecialPayment_Request.
         * @exports ICWorkshop_AddSpecialPayment_Request
         * @interface ICWorkshop_AddSpecialPayment_Request
         * @property {number|null} [appid] CWorkshop_AddSpecialPayment_Request appid
         * @property {number|null} [gameitemid] CWorkshop_AddSpecialPayment_Request gameitemid
         * @property {string|null} [date] CWorkshop_AddSpecialPayment_Request date
         * @property {number|Long|null} [paymentUsUsd] CWorkshop_AddSpecialPayment_Request paymentUsUsd
         * @property {number|Long|null} [paymentRowUsd] CWorkshop_AddSpecialPayment_Request paymentRowUsd
         */
    
        /**
         * Constructs a new CWorkshop_AddSpecialPayment_Request.
         * @exports CWorkshop_AddSpecialPayment_Request
         * @classdesc Represents a CWorkshop_AddSpecialPayment_Request.
         * @implements ICWorkshop_AddSpecialPayment_Request
         * @constructor
         * @param {ICWorkshop_AddSpecialPayment_Request=} [properties] Properties to set
         */
        function CWorkshop_AddSpecialPayment_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CWorkshop_AddSpecialPayment_Request appid.
         * @member {number} appid
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @instance
         */
        CWorkshop_AddSpecialPayment_Request.prototype.appid = 0;
    
        /**
         * CWorkshop_AddSpecialPayment_Request gameitemid.
         * @member {number} gameitemid
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @instance
         */
        CWorkshop_AddSpecialPayment_Request.prototype.gameitemid = 0;
    
        /**
         * CWorkshop_AddSpecialPayment_Request date.
         * @member {string} date
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @instance
         */
        CWorkshop_AddSpecialPayment_Request.prototype.date = "";
    
        /**
         * CWorkshop_AddSpecialPayment_Request paymentUsUsd.
         * @member {number|Long} paymentUsUsd
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @instance
         */
        CWorkshop_AddSpecialPayment_Request.prototype.paymentUsUsd = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CWorkshop_AddSpecialPayment_Request paymentRowUsd.
         * @member {number|Long} paymentRowUsd
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @instance
         */
        CWorkshop_AddSpecialPayment_Request.prototype.paymentRowUsd = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CWorkshop_AddSpecialPayment_Request instance using the specified properties.
         * @function create
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @static
         * @param {ICWorkshop_AddSpecialPayment_Request=} [properties] Properties to set
         * @returns {CWorkshop_AddSpecialPayment_Request} CWorkshop_AddSpecialPayment_Request instance
         */
        CWorkshop_AddSpecialPayment_Request.create = function create(properties) {
            return new CWorkshop_AddSpecialPayment_Request(properties);
        };
    
        /**
         * Encodes the specified CWorkshop_AddSpecialPayment_Request message. Does not implicitly {@link CWorkshop_AddSpecialPayment_Request.verify|verify} messages.
         * @function encode
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @static
         * @param {ICWorkshop_AddSpecialPayment_Request} message CWorkshop_AddSpecialPayment_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CWorkshop_AddSpecialPayment_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
            if (message.gameitemid != null && Object.hasOwnProperty.call(message, "gameitemid"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.gameitemid);
            if (message.date != null && Object.hasOwnProperty.call(message, "date"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.date);
            if (message.paymentUsUsd != null && Object.hasOwnProperty.call(message, "paymentUsUsd"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.paymentUsUsd);
            if (message.paymentRowUsd != null && Object.hasOwnProperty.call(message, "paymentRowUsd"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint64(message.paymentRowUsd);
            return writer;
        };
    
        /**
         * Encodes the specified CWorkshop_AddSpecialPayment_Request message, length delimited. Does not implicitly {@link CWorkshop_AddSpecialPayment_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @static
         * @param {ICWorkshop_AddSpecialPayment_Request} message CWorkshop_AddSpecialPayment_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CWorkshop_AddSpecialPayment_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CWorkshop_AddSpecialPayment_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CWorkshop_AddSpecialPayment_Request} CWorkshop_AddSpecialPayment_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CWorkshop_AddSpecialPayment_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CWorkshop_AddSpecialPayment_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.appid = reader.uint32();
                        break;
                    }
                case 2: {
                        message.gameitemid = reader.uint32();
                        break;
                    }
                case 3: {
                        message.date = reader.string();
                        break;
                    }
                case 4: {
                        message.paymentUsUsd = reader.uint64();
                        break;
                    }
                case 5: {
                        message.paymentRowUsd = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CWorkshop_AddSpecialPayment_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CWorkshop_AddSpecialPayment_Request} CWorkshop_AddSpecialPayment_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CWorkshop_AddSpecialPayment_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CWorkshop_AddSpecialPayment_Request message.
         * @function verify
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CWorkshop_AddSpecialPayment_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.gameitemid != null && message.hasOwnProperty("gameitemid"))
                if (!$util.isInteger(message.gameitemid))
                    return "gameitemid: integer expected";
            if (message.date != null && message.hasOwnProperty("date"))
                if (!$util.isString(message.date))
                    return "date: string expected";
            if (message.paymentUsUsd != null && message.hasOwnProperty("paymentUsUsd"))
                if (!$util.isInteger(message.paymentUsUsd) && !(message.paymentUsUsd && $util.isInteger(message.paymentUsUsd.low) && $util.isInteger(message.paymentUsUsd.high)))
                    return "paymentUsUsd: integer|Long expected";
            if (message.paymentRowUsd != null && message.hasOwnProperty("paymentRowUsd"))
                if (!$util.isInteger(message.paymentRowUsd) && !(message.paymentRowUsd && $util.isInteger(message.paymentRowUsd.low) && $util.isInteger(message.paymentRowUsd.high)))
                    return "paymentRowUsd: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CWorkshop_AddSpecialPayment_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CWorkshop_AddSpecialPayment_Request} CWorkshop_AddSpecialPayment_Request
         */
        CWorkshop_AddSpecialPayment_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CWorkshop_AddSpecialPayment_Request)
                return object;
            var message = new $root.CWorkshop_AddSpecialPayment_Request();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.gameitemid != null)
                message.gameitemid = object.gameitemid >>> 0;
            if (object.date != null)
                message.date = String(object.date);
            if (object.paymentUsUsd != null)
                if ($util.Long)
                    (message.paymentUsUsd = $util.Long.fromValue(object.paymentUsUsd)).unsigned = true;
                else if (typeof object.paymentUsUsd === "string")
                    message.paymentUsUsd = parseInt(object.paymentUsUsd, 10);
                else if (typeof object.paymentUsUsd === "number")
                    message.paymentUsUsd = object.paymentUsUsd;
                else if (typeof object.paymentUsUsd === "object")
                    message.paymentUsUsd = new $util.LongBits(object.paymentUsUsd.low >>> 0, object.paymentUsUsd.high >>> 0).toNumber(true);
            if (object.paymentRowUsd != null)
                if ($util.Long)
                    (message.paymentRowUsd = $util.Long.fromValue(object.paymentRowUsd)).unsigned = true;
                else if (typeof object.paymentRowUsd === "string")
                    message.paymentRowUsd = parseInt(object.paymentRowUsd, 10);
                else if (typeof object.paymentRowUsd === "number")
                    message.paymentRowUsd = object.paymentRowUsd;
                else if (typeof object.paymentRowUsd === "object")
                    message.paymentRowUsd = new $util.LongBits(object.paymentRowUsd.low >>> 0, object.paymentRowUsd.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CWorkshop_AddSpecialPayment_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @static
         * @param {CWorkshop_AddSpecialPayment_Request} message CWorkshop_AddSpecialPayment_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CWorkshop_AddSpecialPayment_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.appid = 0;
                object.gameitemid = 0;
                object.date = "";
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.paymentUsUsd = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.paymentUsUsd = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.paymentRowUsd = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.paymentRowUsd = options.longs === String ? "0" : 0;
            }
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.gameitemid != null && message.hasOwnProperty("gameitemid"))
                object.gameitemid = message.gameitemid;
            if (message.date != null && message.hasOwnProperty("date"))
                object.date = message.date;
            if (message.paymentUsUsd != null && message.hasOwnProperty("paymentUsUsd"))
                if (typeof message.paymentUsUsd === "number")
                    object.paymentUsUsd = options.longs === String ? String(message.paymentUsUsd) : message.paymentUsUsd;
                else
                    object.paymentUsUsd = options.longs === String ? $util.Long.prototype.toString.call(message.paymentUsUsd) : options.longs === Number ? new $util.LongBits(message.paymentUsUsd.low >>> 0, message.paymentUsUsd.high >>> 0).toNumber(true) : message.paymentUsUsd;
            if (message.paymentRowUsd != null && message.hasOwnProperty("paymentRowUsd"))
                if (typeof message.paymentRowUsd === "number")
                    object.paymentRowUsd = options.longs === String ? String(message.paymentRowUsd) : message.paymentRowUsd;
                else
                    object.paymentRowUsd = options.longs === String ? $util.Long.prototype.toString.call(message.paymentRowUsd) : options.longs === Number ? new $util.LongBits(message.paymentRowUsd.low >>> 0, message.paymentRowUsd.high >>> 0).toNumber(true) : message.paymentRowUsd;
            return object;
        };
    
        /**
         * Converts this CWorkshop_AddSpecialPayment_Request to JSON.
         * @function toJSON
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CWorkshop_AddSpecialPayment_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CWorkshop_AddSpecialPayment_Request
         * @function getTypeUrl
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CWorkshop_AddSpecialPayment_Request.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CWorkshop_AddSpecialPayment_Request";
        };
    
        return CWorkshop_AddSpecialPayment_Request;
    })();
    
    $root.CWorkshop_AddSpecialPayment_Response = (function() {
    
        /**
         * Properties of a CWorkshop_AddSpecialPayment_Response.
         * @exports ICWorkshop_AddSpecialPayment_Response
         * @interface ICWorkshop_AddSpecialPayment_Response
         */
    
        /**
         * Constructs a new CWorkshop_AddSpecialPayment_Response.
         * @exports CWorkshop_AddSpecialPayment_Response
         * @classdesc Represents a CWorkshop_AddSpecialPayment_Response.
         * @implements ICWorkshop_AddSpecialPayment_Response
         * @constructor
         * @param {ICWorkshop_AddSpecialPayment_Response=} [properties] Properties to set
         */
        function CWorkshop_AddSpecialPayment_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CWorkshop_AddSpecialPayment_Response instance using the specified properties.
         * @function create
         * @memberof CWorkshop_AddSpecialPayment_Response
         * @static
         * @param {ICWorkshop_AddSpecialPayment_Response=} [properties] Properties to set
         * @returns {CWorkshop_AddSpecialPayment_Response} CWorkshop_AddSpecialPayment_Response instance
         */
        CWorkshop_AddSpecialPayment_Response.create = function create(properties) {
            return new CWorkshop_AddSpecialPayment_Response(properties);
        };
    
        /**
         * Encodes the specified CWorkshop_AddSpecialPayment_Response message. Does not implicitly {@link CWorkshop_AddSpecialPayment_Response.verify|verify} messages.
         * @function encode
         * @memberof CWorkshop_AddSpecialPayment_Response
         * @static
         * @param {ICWorkshop_AddSpecialPayment_Response} message CWorkshop_AddSpecialPayment_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CWorkshop_AddSpecialPayment_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CWorkshop_AddSpecialPayment_Response message, length delimited. Does not implicitly {@link CWorkshop_AddSpecialPayment_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CWorkshop_AddSpecialPayment_Response
         * @static
         * @param {ICWorkshop_AddSpecialPayment_Response} message CWorkshop_AddSpecialPayment_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CWorkshop_AddSpecialPayment_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CWorkshop_AddSpecialPayment_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CWorkshop_AddSpecialPayment_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CWorkshop_AddSpecialPayment_Response} CWorkshop_AddSpecialPayment_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CWorkshop_AddSpecialPayment_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CWorkshop_AddSpecialPayment_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CWorkshop_AddSpecialPayment_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CWorkshop_AddSpecialPayment_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CWorkshop_AddSpecialPayment_Response} CWorkshop_AddSpecialPayment_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CWorkshop_AddSpecialPayment_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CWorkshop_AddSpecialPayment_Response message.
         * @function verify
         * @memberof CWorkshop_AddSpecialPayment_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CWorkshop_AddSpecialPayment_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CWorkshop_AddSpecialPayment_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CWorkshop_AddSpecialPayment_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CWorkshop_AddSpecialPayment_Response} CWorkshop_AddSpecialPayment_Response
         */
        CWorkshop_AddSpecialPayment_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CWorkshop_AddSpecialPayment_Response)
                return object;
            return new $root.CWorkshop_AddSpecialPayment_Response();
        };
    
        /**
         * Creates a plain object from a CWorkshop_AddSpecialPayment_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CWorkshop_AddSpecialPayment_Response
         * @static
         * @param {CWorkshop_AddSpecialPayment_Response} message CWorkshop_AddSpecialPayment_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CWorkshop_AddSpecialPayment_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CWorkshop_AddSpecialPayment_Response to JSON.
         * @function toJSON
         * @memberof CWorkshop_AddSpecialPayment_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CWorkshop_AddSpecialPayment_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CWorkshop_AddSpecialPayment_Response
         * @function getTypeUrl
         * @memberof CWorkshop_AddSpecialPayment_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CWorkshop_AddSpecialPayment_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CWorkshop_AddSpecialPayment_Response";
        };
    
        return CWorkshop_AddSpecialPayment_Response;
    })();
    
    $root.CProductInfo_SetRichPresenceLocalization_Request = (function() {
    
        /**
         * Properties of a CProductInfo_SetRichPresenceLocalization_Request.
         * @exports ICProductInfo_SetRichPresenceLocalization_Request
         * @interface ICProductInfo_SetRichPresenceLocalization_Request
         * @property {number|null} [appid] CProductInfo_SetRichPresenceLocalization_Request appid
         * @property {Array.<CProductInfo_SetRichPresenceLocalization_Request.ILanguageSection>|null} [languages] CProductInfo_SetRichPresenceLocalization_Request languages
         * @property {number|Long|null} [steamid] CProductInfo_SetRichPresenceLocalization_Request steamid
         */
    
        /**
         * Constructs a new CProductInfo_SetRichPresenceLocalization_Request.
         * @exports CProductInfo_SetRichPresenceLocalization_Request
         * @classdesc Represents a CProductInfo_SetRichPresenceLocalization_Request.
         * @implements ICProductInfo_SetRichPresenceLocalization_Request
         * @constructor
         * @param {ICProductInfo_SetRichPresenceLocalization_Request=} [properties] Properties to set
         */
        function CProductInfo_SetRichPresenceLocalization_Request(properties) {
            this.languages = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CProductInfo_SetRichPresenceLocalization_Request appid.
         * @member {number} appid
         * @memberof CProductInfo_SetRichPresenceLocalization_Request
         * @instance
         */
        CProductInfo_SetRichPresenceLocalization_Request.prototype.appid = 0;
    
        /**
         * CProductInfo_SetRichPresenceLocalization_Request languages.
         * @member {Array.<CProductInfo_SetRichPresenceLocalization_Request.ILanguageSection>} languages
         * @memberof CProductInfo_SetRichPresenceLocalization_Request
         * @instance
         */
        CProductInfo_SetRichPresenceLocalization_Request.prototype.languages = $util.emptyArray;
    
        /**
         * CProductInfo_SetRichPresenceLocalization_Request steamid.
         * @member {number|Long} steamid
         * @memberof CProductInfo_SetRichPresenceLocalization_Request
         * @instance
         */
        CProductInfo_SetRichPresenceLocalization_Request.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CProductInfo_SetRichPresenceLocalization_Request instance using the specified properties.
         * @function create
         * @memberof CProductInfo_SetRichPresenceLocalization_Request
         * @static
         * @param {ICProductInfo_SetRichPresenceLocalization_Request=} [properties] Properties to set
         * @returns {CProductInfo_SetRichPresenceLocalization_Request} CProductInfo_SetRichPresenceLocalization_Request instance
         */
        CProductInfo_SetRichPresenceLocalization_Request.create = function create(properties) {
            return new CProductInfo_SetRichPresenceLocalization_Request(properties);
        };
    
        /**
         * Encodes the specified CProductInfo_SetRichPresenceLocalization_Request message. Does not implicitly {@link CProductInfo_SetRichPresenceLocalization_Request.verify|verify} messages.
         * @function encode
         * @memberof CProductInfo_SetRichPresenceLocalization_Request
         * @static
         * @param {ICProductInfo_SetRichPresenceLocalization_Request} message CProductInfo_SetRichPresenceLocalization_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CProductInfo_SetRichPresenceLocalization_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
            if (message.languages != null && message.languages.length)
                for (var i = 0; i < message.languages.length; ++i)
                    $root.CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.encode(message.languages[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.steamid);
            return writer;
        };
    
        /**
         * Encodes the specified CProductInfo_SetRichPresenceLocalization_Request message, length delimited. Does not implicitly {@link CProductInfo_SetRichPresenceLocalization_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CProductInfo_SetRichPresenceLocalization_Request
         * @static
         * @param {ICProductInfo_SetRichPresenceLocalization_Request} message CProductInfo_SetRichPresenceLocalization_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CProductInfo_SetRichPresenceLocalization_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CProductInfo_SetRichPresenceLocalization_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CProductInfo_SetRichPresenceLocalization_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CProductInfo_SetRichPresenceLocalization_Request} CProductInfo_SetRichPresenceLocalization_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CProductInfo_SetRichPresenceLocalization_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CProductInfo_SetRichPresenceLocalization_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.appid = reader.uint32();
                        break;
                    }
                case 2: {
                        if (!(message.languages && message.languages.length))
                            message.languages = [];
                        message.languages.push($root.CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.decode(reader, reader.uint32()));
                        break;
                    }
                case 3: {
                        message.steamid = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CProductInfo_SetRichPresenceLocalization_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CProductInfo_SetRichPresenceLocalization_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CProductInfo_SetRichPresenceLocalization_Request} CProductInfo_SetRichPresenceLocalization_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CProductInfo_SetRichPresenceLocalization_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CProductInfo_SetRichPresenceLocalization_Request message.
         * @function verify
         * @memberof CProductInfo_SetRichPresenceLocalization_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CProductInfo_SetRichPresenceLocalization_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.languages != null && message.hasOwnProperty("languages")) {
                if (!Array.isArray(message.languages))
                    return "languages: array expected";
                for (var i = 0; i < message.languages.length; ++i) {
                    var error = $root.CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.verify(message.languages[i]);
                    if (error)
                        return "languages." + error;
                }
            }
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CProductInfo_SetRichPresenceLocalization_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CProductInfo_SetRichPresenceLocalization_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CProductInfo_SetRichPresenceLocalization_Request} CProductInfo_SetRichPresenceLocalization_Request
         */
        CProductInfo_SetRichPresenceLocalization_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CProductInfo_SetRichPresenceLocalization_Request)
                return object;
            var message = new $root.CProductInfo_SetRichPresenceLocalization_Request();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.languages) {
                if (!Array.isArray(object.languages))
                    throw TypeError(".CProductInfo_SetRichPresenceLocalization_Request.languages: array expected");
                message.languages = [];
                for (var i = 0; i < object.languages.length; ++i) {
                    if (typeof object.languages[i] !== "object")
                        throw TypeError(".CProductInfo_SetRichPresenceLocalization_Request.languages: object expected");
                    message.languages[i] = $root.CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.fromObject(object.languages[i]);
                }
            }
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = true;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CProductInfo_SetRichPresenceLocalization_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CProductInfo_SetRichPresenceLocalization_Request
         * @static
         * @param {CProductInfo_SetRichPresenceLocalization_Request} message CProductInfo_SetRichPresenceLocalization_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CProductInfo_SetRichPresenceLocalization_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.languages = [];
            if (options.defaults) {
                object.appid = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
            }
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.languages && message.languages.length) {
                object.languages = [];
                for (var j = 0; j < message.languages.length; ++j)
                    object.languages[j] = $root.CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.toObject(message.languages[j], options);
            }
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber(true) : message.steamid;
            return object;
        };
    
        /**
         * Converts this CProductInfo_SetRichPresenceLocalization_Request to JSON.
         * @function toJSON
         * @memberof CProductInfo_SetRichPresenceLocalization_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CProductInfo_SetRichPresenceLocalization_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CProductInfo_SetRichPresenceLocalization_Request
         * @function getTypeUrl
         * @memberof CProductInfo_SetRichPresenceLocalization_Request
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CProductInfo_SetRichPresenceLocalization_Request.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CProductInfo_SetRichPresenceLocalization_Request";
        };
    
        CProductInfo_SetRichPresenceLocalization_Request.Token = (function() {
    
            /**
             * Properties of a Token.
             * @memberof CProductInfo_SetRichPresenceLocalization_Request
             * @interface IToken
             * @property {string|null} [token] Token token
             * @property {string|null} [value] Token value
             */
    
            /**
             * Constructs a new Token.
             * @memberof CProductInfo_SetRichPresenceLocalization_Request
             * @classdesc Represents a Token.
             * @implements IToken
             * @constructor
             * @param {CProductInfo_SetRichPresenceLocalization_Request.IToken=} [properties] Properties to set
             */
            function Token(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Token token.
             * @member {string} token
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.Token
             * @instance
             */
            Token.prototype.token = "";
    
            /**
             * Token value.
             * @member {string} value
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.Token
             * @instance
             */
            Token.prototype.value = "";
    
            /**
             * Creates a new Token instance using the specified properties.
             * @function create
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.Token
             * @static
             * @param {CProductInfo_SetRichPresenceLocalization_Request.IToken=} [properties] Properties to set
             * @returns {CProductInfo_SetRichPresenceLocalization_Request.Token} Token instance
             */
            Token.create = function create(properties) {
                return new Token(properties);
            };
    
            /**
             * Encodes the specified Token message. Does not implicitly {@link CProductInfo_SetRichPresenceLocalization_Request.Token.verify|verify} messages.
             * @function encode
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.Token
             * @static
             * @param {CProductInfo_SetRichPresenceLocalization_Request.IToken} message Token message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Token.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.token != null && Object.hasOwnProperty.call(message, "token"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.token);
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
                return writer;
            };
    
            /**
             * Encodes the specified Token message, length delimited. Does not implicitly {@link CProductInfo_SetRichPresenceLocalization_Request.Token.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.Token
             * @static
             * @param {CProductInfo_SetRichPresenceLocalization_Request.IToken} message Token message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Token.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Token message from the specified reader or buffer.
             * @function decode
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.Token
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CProductInfo_SetRichPresenceLocalization_Request.Token} Token
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Token.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CProductInfo_SetRichPresenceLocalization_Request.Token();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.token = reader.string();
                            break;
                        }
                    case 2: {
                            message.value = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Token message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.Token
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CProductInfo_SetRichPresenceLocalization_Request.Token} Token
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Token.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Token message.
             * @function verify
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.Token
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Token.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.token != null && message.hasOwnProperty("token"))
                    if (!$util.isString(message.token))
                        return "token: string expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (!$util.isString(message.value))
                        return "value: string expected";
                return null;
            };
    
            /**
             * Creates a Token message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.Token
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CProductInfo_SetRichPresenceLocalization_Request.Token} Token
             */
            Token.fromObject = function fromObject(object) {
                if (object instanceof $root.CProductInfo_SetRichPresenceLocalization_Request.Token)
                    return object;
                var message = new $root.CProductInfo_SetRichPresenceLocalization_Request.Token();
                if (object.token != null)
                    message.token = String(object.token);
                if (object.value != null)
                    message.value = String(object.value);
                return message;
            };
    
            /**
             * Creates a plain object from a Token message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.Token
             * @static
             * @param {CProductInfo_SetRichPresenceLocalization_Request.Token} message Token
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Token.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.token = "";
                    object.value = "";
                }
                if (message.token != null && message.hasOwnProperty("token"))
                    object.token = message.token;
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = message.value;
                return object;
            };
    
            /**
             * Converts this Token to JSON.
             * @function toJSON
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.Token
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Token.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for Token
             * @function getTypeUrl
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.Token
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Token.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CProductInfo_SetRichPresenceLocalization_Request.Token";
            };
    
            return Token;
        })();
    
        CProductInfo_SetRichPresenceLocalization_Request.LanguageSection = (function() {
    
            /**
             * Properties of a LanguageSection.
             * @memberof CProductInfo_SetRichPresenceLocalization_Request
             * @interface ILanguageSection
             * @property {string|null} [language] LanguageSection language
             * @property {Array.<CProductInfo_SetRichPresenceLocalization_Request.IToken>|null} [tokens] LanguageSection tokens
             */
    
            /**
             * Constructs a new LanguageSection.
             * @memberof CProductInfo_SetRichPresenceLocalization_Request
             * @classdesc Represents a LanguageSection.
             * @implements ILanguageSection
             * @constructor
             * @param {CProductInfo_SetRichPresenceLocalization_Request.ILanguageSection=} [properties] Properties to set
             */
            function LanguageSection(properties) {
                this.tokens = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * LanguageSection language.
             * @member {string} language
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.LanguageSection
             * @instance
             */
            LanguageSection.prototype.language = "";
    
            /**
             * LanguageSection tokens.
             * @member {Array.<CProductInfo_SetRichPresenceLocalization_Request.IToken>} tokens
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.LanguageSection
             * @instance
             */
            LanguageSection.prototype.tokens = $util.emptyArray;
    
            /**
             * Creates a new LanguageSection instance using the specified properties.
             * @function create
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.LanguageSection
             * @static
             * @param {CProductInfo_SetRichPresenceLocalization_Request.ILanguageSection=} [properties] Properties to set
             * @returns {CProductInfo_SetRichPresenceLocalization_Request.LanguageSection} LanguageSection instance
             */
            LanguageSection.create = function create(properties) {
                return new LanguageSection(properties);
            };
    
            /**
             * Encodes the specified LanguageSection message. Does not implicitly {@link CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.verify|verify} messages.
             * @function encode
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.LanguageSection
             * @static
             * @param {CProductInfo_SetRichPresenceLocalization_Request.ILanguageSection} message LanguageSection message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LanguageSection.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.language != null && Object.hasOwnProperty.call(message, "language"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.language);
                if (message.tokens != null && message.tokens.length)
                    for (var i = 0; i < message.tokens.length; ++i)
                        $root.CProductInfo_SetRichPresenceLocalization_Request.Token.encode(message.tokens[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };
    
            /**
             * Encodes the specified LanguageSection message, length delimited. Does not implicitly {@link CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.LanguageSection
             * @static
             * @param {CProductInfo_SetRichPresenceLocalization_Request.ILanguageSection} message LanguageSection message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LanguageSection.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a LanguageSection message from the specified reader or buffer.
             * @function decode
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.LanguageSection
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CProductInfo_SetRichPresenceLocalization_Request.LanguageSection} LanguageSection
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LanguageSection.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CProductInfo_SetRichPresenceLocalization_Request.LanguageSection();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.language = reader.string();
                            break;
                        }
                    case 2: {
                            if (!(message.tokens && message.tokens.length))
                                message.tokens = [];
                            message.tokens.push($root.CProductInfo_SetRichPresenceLocalization_Request.Token.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a LanguageSection message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.LanguageSection
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CProductInfo_SetRichPresenceLocalization_Request.LanguageSection} LanguageSection
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LanguageSection.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a LanguageSection message.
             * @function verify
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.LanguageSection
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LanguageSection.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.language != null && message.hasOwnProperty("language"))
                    if (!$util.isString(message.language))
                        return "language: string expected";
                if (message.tokens != null && message.hasOwnProperty("tokens")) {
                    if (!Array.isArray(message.tokens))
                        return "tokens: array expected";
                    for (var i = 0; i < message.tokens.length; ++i) {
                        var error = $root.CProductInfo_SetRichPresenceLocalization_Request.Token.verify(message.tokens[i]);
                        if (error)
                            return "tokens." + error;
                    }
                }
                return null;
            };
    
            /**
             * Creates a LanguageSection message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.LanguageSection
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CProductInfo_SetRichPresenceLocalization_Request.LanguageSection} LanguageSection
             */
            LanguageSection.fromObject = function fromObject(object) {
                if (object instanceof $root.CProductInfo_SetRichPresenceLocalization_Request.LanguageSection)
                    return object;
                var message = new $root.CProductInfo_SetRichPresenceLocalization_Request.LanguageSection();
                if (object.language != null)
                    message.language = String(object.language);
                if (object.tokens) {
                    if (!Array.isArray(object.tokens))
                        throw TypeError(".CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.tokens: array expected");
                    message.tokens = [];
                    for (var i = 0; i < object.tokens.length; ++i) {
                        if (typeof object.tokens[i] !== "object")
                            throw TypeError(".CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.tokens: object expected");
                        message.tokens[i] = $root.CProductInfo_SetRichPresenceLocalization_Request.Token.fromObject(object.tokens[i]);
                    }
                }
                return message;
            };
    
            /**
             * Creates a plain object from a LanguageSection message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.LanguageSection
             * @static
             * @param {CProductInfo_SetRichPresenceLocalization_Request.LanguageSection} message LanguageSection
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LanguageSection.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.tokens = [];
                if (options.defaults)
                    object.language = "";
                if (message.language != null && message.hasOwnProperty("language"))
                    object.language = message.language;
                if (message.tokens && message.tokens.length) {
                    object.tokens = [];
                    for (var j = 0; j < message.tokens.length; ++j)
                        object.tokens[j] = $root.CProductInfo_SetRichPresenceLocalization_Request.Token.toObject(message.tokens[j], options);
                }
                return object;
            };
    
            /**
             * Converts this LanguageSection to JSON.
             * @function toJSON
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.LanguageSection
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LanguageSection.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for LanguageSection
             * @function getTypeUrl
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.LanguageSection
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LanguageSection.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CProductInfo_SetRichPresenceLocalization_Request.LanguageSection";
            };
    
            return LanguageSection;
        })();
    
        return CProductInfo_SetRichPresenceLocalization_Request;
    })();
    
    $root.CProductInfo_SetRichPresenceLocalization_Response = (function() {
    
        /**
         * Properties of a CProductInfo_SetRichPresenceLocalization_Response.
         * @exports ICProductInfo_SetRichPresenceLocalization_Response
         * @interface ICProductInfo_SetRichPresenceLocalization_Response
         */
    
        /**
         * Constructs a new CProductInfo_SetRichPresenceLocalization_Response.
         * @exports CProductInfo_SetRichPresenceLocalization_Response
         * @classdesc Represents a CProductInfo_SetRichPresenceLocalization_Response.
         * @implements ICProductInfo_SetRichPresenceLocalization_Response
         * @constructor
         * @param {ICProductInfo_SetRichPresenceLocalization_Response=} [properties] Properties to set
         */
        function CProductInfo_SetRichPresenceLocalization_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CProductInfo_SetRichPresenceLocalization_Response instance using the specified properties.
         * @function create
         * @memberof CProductInfo_SetRichPresenceLocalization_Response
         * @static
         * @param {ICProductInfo_SetRichPresenceLocalization_Response=} [properties] Properties to set
         * @returns {CProductInfo_SetRichPresenceLocalization_Response} CProductInfo_SetRichPresenceLocalization_Response instance
         */
        CProductInfo_SetRichPresenceLocalization_Response.create = function create(properties) {
            return new CProductInfo_SetRichPresenceLocalization_Response(properties);
        };
    
        /**
         * Encodes the specified CProductInfo_SetRichPresenceLocalization_Response message. Does not implicitly {@link CProductInfo_SetRichPresenceLocalization_Response.verify|verify} messages.
         * @function encode
         * @memberof CProductInfo_SetRichPresenceLocalization_Response
         * @static
         * @param {ICProductInfo_SetRichPresenceLocalization_Response} message CProductInfo_SetRichPresenceLocalization_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CProductInfo_SetRichPresenceLocalization_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CProductInfo_SetRichPresenceLocalization_Response message, length delimited. Does not implicitly {@link CProductInfo_SetRichPresenceLocalization_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CProductInfo_SetRichPresenceLocalization_Response
         * @static
         * @param {ICProductInfo_SetRichPresenceLocalization_Response} message CProductInfo_SetRichPresenceLocalization_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CProductInfo_SetRichPresenceLocalization_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CProductInfo_SetRichPresenceLocalization_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CProductInfo_SetRichPresenceLocalization_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CProductInfo_SetRichPresenceLocalization_Response} CProductInfo_SetRichPresenceLocalization_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CProductInfo_SetRichPresenceLocalization_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CProductInfo_SetRichPresenceLocalization_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CProductInfo_SetRichPresenceLocalization_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CProductInfo_SetRichPresenceLocalization_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CProductInfo_SetRichPresenceLocalization_Response} CProductInfo_SetRichPresenceLocalization_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CProductInfo_SetRichPresenceLocalization_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CProductInfo_SetRichPresenceLocalization_Response message.
         * @function verify
         * @memberof CProductInfo_SetRichPresenceLocalization_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CProductInfo_SetRichPresenceLocalization_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CProductInfo_SetRichPresenceLocalization_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CProductInfo_SetRichPresenceLocalization_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CProductInfo_SetRichPresenceLocalization_Response} CProductInfo_SetRichPresenceLocalization_Response
         */
        CProductInfo_SetRichPresenceLocalization_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CProductInfo_SetRichPresenceLocalization_Response)
                return object;
            return new $root.CProductInfo_SetRichPresenceLocalization_Response();
        };
    
        /**
         * Creates a plain object from a CProductInfo_SetRichPresenceLocalization_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CProductInfo_SetRichPresenceLocalization_Response
         * @static
         * @param {CProductInfo_SetRichPresenceLocalization_Response} message CProductInfo_SetRichPresenceLocalization_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CProductInfo_SetRichPresenceLocalization_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CProductInfo_SetRichPresenceLocalization_Response to JSON.
         * @function toJSON
         * @memberof CProductInfo_SetRichPresenceLocalization_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CProductInfo_SetRichPresenceLocalization_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CProductInfo_SetRichPresenceLocalization_Response
         * @function getTypeUrl
         * @memberof CProductInfo_SetRichPresenceLocalization_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CProductInfo_SetRichPresenceLocalization_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CProductInfo_SetRichPresenceLocalization_Response";
        };
    
        return CProductInfo_SetRichPresenceLocalization_Response;
    })();
    
    $root.CMsgSerializedSOCache = (function() {
    
        /**
         * Properties of a CMsgSerializedSOCache.
         * @exports ICMsgSerializedSOCache
         * @interface ICMsgSerializedSOCache
         * @property {number|null} [fileVersion] CMsgSerializedSOCache fileVersion
         * @property {Array.<CMsgSerializedSOCache.ICache>|null} [caches] CMsgSerializedSOCache caches
         * @property {number|null} [gcSocacheFileVersion] CMsgSerializedSOCache gcSocacheFileVersion
         */
    
        /**
         * Constructs a new CMsgSerializedSOCache.
         * @exports CMsgSerializedSOCache
         * @classdesc Represents a CMsgSerializedSOCache.
         * @implements ICMsgSerializedSOCache
         * @constructor
         * @param {ICMsgSerializedSOCache=} [properties] Properties to set
         */
        function CMsgSerializedSOCache(properties) {
            this.caches = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgSerializedSOCache fileVersion.
         * @member {number} fileVersion
         * @memberof CMsgSerializedSOCache
         * @instance
         */
        CMsgSerializedSOCache.prototype.fileVersion = 0;
    
        /**
         * CMsgSerializedSOCache caches.
         * @member {Array.<CMsgSerializedSOCache.ICache>} caches
         * @memberof CMsgSerializedSOCache
         * @instance
         */
        CMsgSerializedSOCache.prototype.caches = $util.emptyArray;
    
        /**
         * CMsgSerializedSOCache gcSocacheFileVersion.
         * @member {number} gcSocacheFileVersion
         * @memberof CMsgSerializedSOCache
         * @instance
         */
        CMsgSerializedSOCache.prototype.gcSocacheFileVersion = 0;
    
        /**
         * Creates a new CMsgSerializedSOCache instance using the specified properties.
         * @function create
         * @memberof CMsgSerializedSOCache
         * @static
         * @param {ICMsgSerializedSOCache=} [properties] Properties to set
         * @returns {CMsgSerializedSOCache} CMsgSerializedSOCache instance
         */
        CMsgSerializedSOCache.create = function create(properties) {
            return new CMsgSerializedSOCache(properties);
        };
    
        /**
         * Encodes the specified CMsgSerializedSOCache message. Does not implicitly {@link CMsgSerializedSOCache.verify|verify} messages.
         * @function encode
         * @memberof CMsgSerializedSOCache
         * @static
         * @param {ICMsgSerializedSOCache} message CMsgSerializedSOCache message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSerializedSOCache.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.fileVersion != null && Object.hasOwnProperty.call(message, "fileVersion"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.fileVersion);
            if (message.caches != null && message.caches.length)
                for (var i = 0; i < message.caches.length; ++i)
                    $root.CMsgSerializedSOCache.Cache.encode(message.caches[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            if (message.gcSocacheFileVersion != null && Object.hasOwnProperty.call(message, "gcSocacheFileVersion"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.gcSocacheFileVersion);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgSerializedSOCache message, length delimited. Does not implicitly {@link CMsgSerializedSOCache.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgSerializedSOCache
         * @static
         * @param {ICMsgSerializedSOCache} message CMsgSerializedSOCache message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSerializedSOCache.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgSerializedSOCache message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgSerializedSOCache
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgSerializedSOCache} CMsgSerializedSOCache
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSerializedSOCache.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSerializedSOCache();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.fileVersion = reader.uint32();
                        break;
                    }
                case 2: {
                        if (!(message.caches && message.caches.length))
                            message.caches = [];
                        message.caches.push($root.CMsgSerializedSOCache.Cache.decode(reader, reader.uint32()));
                        break;
                    }
                case 3: {
                        message.gcSocacheFileVersion = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgSerializedSOCache message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgSerializedSOCache
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgSerializedSOCache} CMsgSerializedSOCache
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSerializedSOCache.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgSerializedSOCache message.
         * @function verify
         * @memberof CMsgSerializedSOCache
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgSerializedSOCache.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.fileVersion != null && message.hasOwnProperty("fileVersion"))
                if (!$util.isInteger(message.fileVersion))
                    return "fileVersion: integer expected";
            if (message.caches != null && message.hasOwnProperty("caches")) {
                if (!Array.isArray(message.caches))
                    return "caches: array expected";
                for (var i = 0; i < message.caches.length; ++i) {
                    var error = $root.CMsgSerializedSOCache.Cache.verify(message.caches[i]);
                    if (error)
                        return "caches." + error;
                }
            }
            if (message.gcSocacheFileVersion != null && message.hasOwnProperty("gcSocacheFileVersion"))
                if (!$util.isInteger(message.gcSocacheFileVersion))
                    return "gcSocacheFileVersion: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgSerializedSOCache message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgSerializedSOCache
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgSerializedSOCache} CMsgSerializedSOCache
         */
        CMsgSerializedSOCache.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgSerializedSOCache)
                return object;
            var message = new $root.CMsgSerializedSOCache();
            if (object.fileVersion != null)
                message.fileVersion = object.fileVersion >>> 0;
            if (object.caches) {
                if (!Array.isArray(object.caches))
                    throw TypeError(".CMsgSerializedSOCache.caches: array expected");
                message.caches = [];
                for (var i = 0; i < object.caches.length; ++i) {
                    if (typeof object.caches[i] !== "object")
                        throw TypeError(".CMsgSerializedSOCache.caches: object expected");
                    message.caches[i] = $root.CMsgSerializedSOCache.Cache.fromObject(object.caches[i]);
                }
            }
            if (object.gcSocacheFileVersion != null)
                message.gcSocacheFileVersion = object.gcSocacheFileVersion >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgSerializedSOCache message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgSerializedSOCache
         * @static
         * @param {CMsgSerializedSOCache} message CMsgSerializedSOCache
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgSerializedSOCache.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.caches = [];
            if (options.defaults) {
                object.fileVersion = 0;
                object.gcSocacheFileVersion = 0;
            }
            if (message.fileVersion != null && message.hasOwnProperty("fileVersion"))
                object.fileVersion = message.fileVersion;
            if (message.caches && message.caches.length) {
                object.caches = [];
                for (var j = 0; j < message.caches.length; ++j)
                    object.caches[j] = $root.CMsgSerializedSOCache.Cache.toObject(message.caches[j], options);
            }
            if (message.gcSocacheFileVersion != null && message.hasOwnProperty("gcSocacheFileVersion"))
                object.gcSocacheFileVersion = message.gcSocacheFileVersion;
            return object;
        };
    
        /**
         * Converts this CMsgSerializedSOCache to JSON.
         * @function toJSON
         * @memberof CMsgSerializedSOCache
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgSerializedSOCache.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgSerializedSOCache
         * @function getTypeUrl
         * @memberof CMsgSerializedSOCache
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgSerializedSOCache.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgSerializedSOCache";
        };
    
        CMsgSerializedSOCache.TypeCache = (function() {
    
            /**
             * Properties of a TypeCache.
             * @memberof CMsgSerializedSOCache
             * @interface ITypeCache
             * @property {number|null} [type] TypeCache type
             * @property {Array.<Uint8Array>|null} [objects] TypeCache objects
             * @property {number|null} [serviceId] TypeCache serviceId
             */
    
            /**
             * Constructs a new TypeCache.
             * @memberof CMsgSerializedSOCache
             * @classdesc Represents a TypeCache.
             * @implements ITypeCache
             * @constructor
             * @param {CMsgSerializedSOCache.ITypeCache=} [properties] Properties to set
             */
            function TypeCache(properties) {
                this.objects = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * TypeCache type.
             * @member {number} type
             * @memberof CMsgSerializedSOCache.TypeCache
             * @instance
             */
            TypeCache.prototype.type = 0;
    
            /**
             * TypeCache objects.
             * @member {Array.<Uint8Array>} objects
             * @memberof CMsgSerializedSOCache.TypeCache
             * @instance
             */
            TypeCache.prototype.objects = $util.emptyArray;
    
            /**
             * TypeCache serviceId.
             * @member {number} serviceId
             * @memberof CMsgSerializedSOCache.TypeCache
             * @instance
             */
            TypeCache.prototype.serviceId = 0;
    
            /**
             * Creates a new TypeCache instance using the specified properties.
             * @function create
             * @memberof CMsgSerializedSOCache.TypeCache
             * @static
             * @param {CMsgSerializedSOCache.ITypeCache=} [properties] Properties to set
             * @returns {CMsgSerializedSOCache.TypeCache} TypeCache instance
             */
            TypeCache.create = function create(properties) {
                return new TypeCache(properties);
            };
    
            /**
             * Encodes the specified TypeCache message. Does not implicitly {@link CMsgSerializedSOCache.TypeCache.verify|verify} messages.
             * @function encode
             * @memberof CMsgSerializedSOCache.TypeCache
             * @static
             * @param {CMsgSerializedSOCache.ITypeCache} message TypeCache message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TypeCache.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.type);
                if (message.objects != null && message.objects.length)
                    for (var i = 0; i < message.objects.length; ++i)
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.objects[i]);
                if (message.serviceId != null && Object.hasOwnProperty.call(message, "serviceId"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.serviceId);
                return writer;
            };
    
            /**
             * Encodes the specified TypeCache message, length delimited. Does not implicitly {@link CMsgSerializedSOCache.TypeCache.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgSerializedSOCache.TypeCache
             * @static
             * @param {CMsgSerializedSOCache.ITypeCache} message TypeCache message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TypeCache.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a TypeCache message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgSerializedSOCache.TypeCache
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgSerializedSOCache.TypeCache} TypeCache
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TypeCache.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSerializedSOCache.TypeCache();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.type = reader.uint32();
                            break;
                        }
                    case 2: {
                            if (!(message.objects && message.objects.length))
                                message.objects = [];
                            message.objects.push(reader.bytes());
                            break;
                        }
                    case 3: {
                            message.serviceId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a TypeCache message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgSerializedSOCache.TypeCache
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgSerializedSOCache.TypeCache} TypeCache
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TypeCache.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a TypeCache message.
             * @function verify
             * @memberof CMsgSerializedSOCache.TypeCache
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            TypeCache.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.type != null && message.hasOwnProperty("type"))
                    if (!$util.isInteger(message.type))
                        return "type: integer expected";
                if (message.objects != null && message.hasOwnProperty("objects")) {
                    if (!Array.isArray(message.objects))
                        return "objects: array expected";
                    for (var i = 0; i < message.objects.length; ++i)
                        if (!(message.objects[i] && typeof message.objects[i].length === "number" || $util.isString(message.objects[i])))
                            return "objects: buffer[] expected";
                }
                if (message.serviceId != null && message.hasOwnProperty("serviceId"))
                    if (!$util.isInteger(message.serviceId))
                        return "serviceId: integer expected";
                return null;
            };
    
            /**
             * Creates a TypeCache message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgSerializedSOCache.TypeCache
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgSerializedSOCache.TypeCache} TypeCache
             */
            TypeCache.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgSerializedSOCache.TypeCache)
                    return object;
                var message = new $root.CMsgSerializedSOCache.TypeCache();
                if (object.type != null)
                    message.type = object.type >>> 0;
                if (object.objects) {
                    if (!Array.isArray(object.objects))
                        throw TypeError(".CMsgSerializedSOCache.TypeCache.objects: array expected");
                    message.objects = [];
                    for (var i = 0; i < object.objects.length; ++i)
                        if (typeof object.objects[i] === "string")
                            $util.base64.decode(object.objects[i], message.objects[i] = $util.newBuffer($util.base64.length(object.objects[i])), 0);
                        else if (object.objects[i].length >= 0)
                            message.objects[i] = object.objects[i];
                }
                if (object.serviceId != null)
                    message.serviceId = object.serviceId >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a TypeCache message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgSerializedSOCache.TypeCache
             * @static
             * @param {CMsgSerializedSOCache.TypeCache} message TypeCache
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            TypeCache.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.objects = [];
                if (options.defaults) {
                    object.type = 0;
                    object.serviceId = 0;
                }
                if (message.type != null && message.hasOwnProperty("type"))
                    object.type = message.type;
                if (message.objects && message.objects.length) {
                    object.objects = [];
                    for (var j = 0; j < message.objects.length; ++j)
                        object.objects[j] = options.bytes === String ? $util.base64.encode(message.objects[j], 0, message.objects[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.objects[j]) : message.objects[j];
                }
                if (message.serviceId != null && message.hasOwnProperty("serviceId"))
                    object.serviceId = message.serviceId;
                return object;
            };
    
            /**
             * Converts this TypeCache to JSON.
             * @function toJSON
             * @memberof CMsgSerializedSOCache.TypeCache
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            TypeCache.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for TypeCache
             * @function getTypeUrl
             * @memberof CMsgSerializedSOCache.TypeCache
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            TypeCache.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgSerializedSOCache.TypeCache";
            };
    
            return TypeCache;
        })();
    
        CMsgSerializedSOCache.Cache = (function() {
    
            /**
             * Properties of a Cache.
             * @memberof CMsgSerializedSOCache
             * @interface ICache
             * @property {number|null} [type] Cache type
             * @property {number|Long|null} [id] Cache id
             * @property {Array.<CMsgSerializedSOCache.Cache.IVersion>|null} [versions] Cache versions
             * @property {Array.<CMsgSerializedSOCache.ITypeCache>|null} [typeCaches] Cache typeCaches
             */
    
            /**
             * Constructs a new Cache.
             * @memberof CMsgSerializedSOCache
             * @classdesc Represents a Cache.
             * @implements ICache
             * @constructor
             * @param {CMsgSerializedSOCache.ICache=} [properties] Properties to set
             */
            function Cache(properties) {
                this.versions = [];
                this.typeCaches = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Cache type.
             * @member {number} type
             * @memberof CMsgSerializedSOCache.Cache
             * @instance
             */
            Cache.prototype.type = 0;
    
            /**
             * Cache id.
             * @member {number|Long} id
             * @memberof CMsgSerializedSOCache.Cache
             * @instance
             */
            Cache.prototype.id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Cache versions.
             * @member {Array.<CMsgSerializedSOCache.Cache.IVersion>} versions
             * @memberof CMsgSerializedSOCache.Cache
             * @instance
             */
            Cache.prototype.versions = $util.emptyArray;
    
            /**
             * Cache typeCaches.
             * @member {Array.<CMsgSerializedSOCache.ITypeCache>} typeCaches
             * @memberof CMsgSerializedSOCache.Cache
             * @instance
             */
            Cache.prototype.typeCaches = $util.emptyArray;
    
            /**
             * Creates a new Cache instance using the specified properties.
             * @function create
             * @memberof CMsgSerializedSOCache.Cache
             * @static
             * @param {CMsgSerializedSOCache.ICache=} [properties] Properties to set
             * @returns {CMsgSerializedSOCache.Cache} Cache instance
             */
            Cache.create = function create(properties) {
                return new Cache(properties);
            };
    
            /**
             * Encodes the specified Cache message. Does not implicitly {@link CMsgSerializedSOCache.Cache.verify|verify} messages.
             * @function encode
             * @memberof CMsgSerializedSOCache.Cache
             * @static
             * @param {CMsgSerializedSOCache.ICache} message Cache message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Cache.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.type);
                if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.id);
                if (message.versions != null && message.versions.length)
                    for (var i = 0; i < message.versions.length; ++i)
                        $root.CMsgSerializedSOCache.Cache.Version.encode(message.versions[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                if (message.typeCaches != null && message.typeCaches.length)
                    for (var i = 0; i < message.typeCaches.length; ++i)
                        $root.CMsgSerializedSOCache.TypeCache.encode(message.typeCaches[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                return writer;
            };
    
            /**
             * Encodes the specified Cache message, length delimited. Does not implicitly {@link CMsgSerializedSOCache.Cache.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgSerializedSOCache.Cache
             * @static
             * @param {CMsgSerializedSOCache.ICache} message Cache message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Cache.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Cache message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgSerializedSOCache.Cache
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgSerializedSOCache.Cache} Cache
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Cache.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSerializedSOCache.Cache();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.type = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.id = reader.uint64();
                            break;
                        }
                    case 3: {
                            if (!(message.versions && message.versions.length))
                                message.versions = [];
                            message.versions.push($root.CMsgSerializedSOCache.Cache.Version.decode(reader, reader.uint32()));
                            break;
                        }
                    case 4: {
                            if (!(message.typeCaches && message.typeCaches.length))
                                message.typeCaches = [];
                            message.typeCaches.push($root.CMsgSerializedSOCache.TypeCache.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Cache message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgSerializedSOCache.Cache
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgSerializedSOCache.Cache} Cache
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Cache.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Cache message.
             * @function verify
             * @memberof CMsgSerializedSOCache.Cache
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Cache.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.type != null && message.hasOwnProperty("type"))
                    if (!$util.isInteger(message.type))
                        return "type: integer expected";
                if (message.id != null && message.hasOwnProperty("id"))
                    if (!$util.isInteger(message.id) && !(message.id && $util.isInteger(message.id.low) && $util.isInteger(message.id.high)))
                        return "id: integer|Long expected";
                if (message.versions != null && message.hasOwnProperty("versions")) {
                    if (!Array.isArray(message.versions))
                        return "versions: array expected";
                    for (var i = 0; i < message.versions.length; ++i) {
                        var error = $root.CMsgSerializedSOCache.Cache.Version.verify(message.versions[i]);
                        if (error)
                            return "versions." + error;
                    }
                }
                if (message.typeCaches != null && message.hasOwnProperty("typeCaches")) {
                    if (!Array.isArray(message.typeCaches))
                        return "typeCaches: array expected";
                    for (var i = 0; i < message.typeCaches.length; ++i) {
                        var error = $root.CMsgSerializedSOCache.TypeCache.verify(message.typeCaches[i]);
                        if (error)
                            return "typeCaches." + error;
                    }
                }
                return null;
            };
    
            /**
             * Creates a Cache message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgSerializedSOCache.Cache
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgSerializedSOCache.Cache} Cache
             */
            Cache.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgSerializedSOCache.Cache)
                    return object;
                var message = new $root.CMsgSerializedSOCache.Cache();
                if (object.type != null)
                    message.type = object.type >>> 0;
                if (object.id != null)
                    if ($util.Long)
                        (message.id = $util.Long.fromValue(object.id)).unsigned = true;
                    else if (typeof object.id === "string")
                        message.id = parseInt(object.id, 10);
                    else if (typeof object.id === "number")
                        message.id = object.id;
                    else if (typeof object.id === "object")
                        message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber(true);
                if (object.versions) {
                    if (!Array.isArray(object.versions))
                        throw TypeError(".CMsgSerializedSOCache.Cache.versions: array expected");
                    message.versions = [];
                    for (var i = 0; i < object.versions.length; ++i) {
                        if (typeof object.versions[i] !== "object")
                            throw TypeError(".CMsgSerializedSOCache.Cache.versions: object expected");
                        message.versions[i] = $root.CMsgSerializedSOCache.Cache.Version.fromObject(object.versions[i]);
                    }
                }
                if (object.typeCaches) {
                    if (!Array.isArray(object.typeCaches))
                        throw TypeError(".CMsgSerializedSOCache.Cache.typeCaches: array expected");
                    message.typeCaches = [];
                    for (var i = 0; i < object.typeCaches.length; ++i) {
                        if (typeof object.typeCaches[i] !== "object")
                            throw TypeError(".CMsgSerializedSOCache.Cache.typeCaches: object expected");
                        message.typeCaches[i] = $root.CMsgSerializedSOCache.TypeCache.fromObject(object.typeCaches[i]);
                    }
                }
                return message;
            };
    
            /**
             * Creates a plain object from a Cache message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgSerializedSOCache.Cache
             * @static
             * @param {CMsgSerializedSOCache.Cache} message Cache
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Cache.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults) {
                    object.versions = [];
                    object.typeCaches = [];
                }
                if (options.defaults) {
                    object.type = 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.id = options.longs === String ? "0" : 0;
                }
                if (message.type != null && message.hasOwnProperty("type"))
                    object.type = message.type;
                if (message.id != null && message.hasOwnProperty("id"))
                    if (typeof message.id === "number")
                        object.id = options.longs === String ? String(message.id) : message.id;
                    else
                        object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber(true) : message.id;
                if (message.versions && message.versions.length) {
                    object.versions = [];
                    for (var j = 0; j < message.versions.length; ++j)
                        object.versions[j] = $root.CMsgSerializedSOCache.Cache.Version.toObject(message.versions[j], options);
                }
                if (message.typeCaches && message.typeCaches.length) {
                    object.typeCaches = [];
                    for (var j = 0; j < message.typeCaches.length; ++j)
                        object.typeCaches[j] = $root.CMsgSerializedSOCache.TypeCache.toObject(message.typeCaches[j], options);
                }
                return object;
            };
    
            /**
             * Converts this Cache to JSON.
             * @function toJSON
             * @memberof CMsgSerializedSOCache.Cache
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Cache.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for Cache
             * @function getTypeUrl
             * @memberof CMsgSerializedSOCache.Cache
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Cache.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgSerializedSOCache.Cache";
            };
    
            Cache.Version = (function() {
    
                /**
                 * Properties of a Version.
                 * @memberof CMsgSerializedSOCache.Cache
                 * @interface IVersion
                 * @property {number|null} [service] Version service
                 * @property {number|Long|null} [version] Version version
                 */
    
                /**
                 * Constructs a new Version.
                 * @memberof CMsgSerializedSOCache.Cache
                 * @classdesc Represents a Version.
                 * @implements IVersion
                 * @constructor
                 * @param {CMsgSerializedSOCache.Cache.IVersion=} [properties] Properties to set
                 */
                function Version(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Version service.
                 * @member {number} service
                 * @memberof CMsgSerializedSOCache.Cache.Version
                 * @instance
                 */
                Version.prototype.service = 0;
    
                /**
                 * Version version.
                 * @member {number|Long} version
                 * @memberof CMsgSerializedSOCache.Cache.Version
                 * @instance
                 */
                Version.prototype.version = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * Creates a new Version instance using the specified properties.
                 * @function create
                 * @memberof CMsgSerializedSOCache.Cache.Version
                 * @static
                 * @param {CMsgSerializedSOCache.Cache.IVersion=} [properties] Properties to set
                 * @returns {CMsgSerializedSOCache.Cache.Version} Version instance
                 */
                Version.create = function create(properties) {
                    return new Version(properties);
                };
    
                /**
                 * Encodes the specified Version message. Does not implicitly {@link CMsgSerializedSOCache.Cache.Version.verify|verify} messages.
                 * @function encode
                 * @memberof CMsgSerializedSOCache.Cache.Version
                 * @static
                 * @param {CMsgSerializedSOCache.Cache.IVersion} message Version message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Version.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                        writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.service);
                    if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                        writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.version);
                    return writer;
                };
    
                /**
                 * Encodes the specified Version message, length delimited. Does not implicitly {@link CMsgSerializedSOCache.Cache.Version.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof CMsgSerializedSOCache.Cache.Version
                 * @static
                 * @param {CMsgSerializedSOCache.Cache.IVersion} message Version message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Version.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Version message from the specified reader or buffer.
                 * @function decode
                 * @memberof CMsgSerializedSOCache.Cache.Version
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {CMsgSerializedSOCache.Cache.Version} Version
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Version.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSerializedSOCache.Cache.Version();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.service = reader.uint32();
                                break;
                            }
                        case 2: {
                                message.version = reader.uint64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Version message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof CMsgSerializedSOCache.Cache.Version
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {CMsgSerializedSOCache.Cache.Version} Version
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Version.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Version message.
                 * @function verify
                 * @memberof CMsgSerializedSOCache.Cache.Version
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Version.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.service != null && message.hasOwnProperty("service"))
                        if (!$util.isInteger(message.service))
                            return "service: integer expected";
                    if (message.version != null && message.hasOwnProperty("version"))
                        if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))
                            return "version: integer|Long expected";
                    return null;
                };
    
                /**
                 * Creates a Version message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof CMsgSerializedSOCache.Cache.Version
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {CMsgSerializedSOCache.Cache.Version} Version
                 */
                Version.fromObject = function fromObject(object) {
                    if (object instanceof $root.CMsgSerializedSOCache.Cache.Version)
                        return object;
                    var message = new $root.CMsgSerializedSOCache.Cache.Version();
                    if (object.service != null)
                        message.service = object.service >>> 0;
                    if (object.version != null)
                        if ($util.Long)
                            (message.version = $util.Long.fromValue(object.version)).unsigned = true;
                        else if (typeof object.version === "string")
                            message.version = parseInt(object.version, 10);
                        else if (typeof object.version === "number")
                            message.version = object.version;
                        else if (typeof object.version === "object")
                            message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber(true);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Version message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof CMsgSerializedSOCache.Cache.Version
                 * @static
                 * @param {CMsgSerializedSOCache.Cache.Version} message Version
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Version.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.service = 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.version = options.longs === String ? "0" : 0;
                    }
                    if (message.service != null && message.hasOwnProperty("service"))
                        object.service = message.service;
                    if (message.version != null && message.hasOwnProperty("version"))
                        if (typeof message.version === "number")
                            object.version = options.longs === String ? String(message.version) : message.version;
                        else
                            object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber(true) : message.version;
                    return object;
                };
    
                /**
                 * Converts this Version to JSON.
                 * @function toJSON
                 * @memberof CMsgSerializedSOCache.Cache.Version
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Version.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Version
                 * @function getTypeUrl
                 * @memberof CMsgSerializedSOCache.Cache.Version
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Version.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/CMsgSerializedSOCache.Cache.Version";
                };
    
                return Version;
            })();
    
            return Cache;
        })();
    
        return CMsgSerializedSOCache;
    })();
    
    /**
     * GCProtoBufMsgSrc enum.
     * @exports GCProtoBufMsgSrc
     * @enum {number}
     * @property {number} GCProtoBufMsgSrc_Unspecified=0 GCProtoBufMsgSrc_Unspecified value
     * @property {number} GCProtoBufMsgSrc_FromSystem=1 GCProtoBufMsgSrc_FromSystem value
     * @property {number} GCProtoBufMsgSrc_FromSteamID=2 GCProtoBufMsgSrc_FromSteamID value
     * @property {number} GCProtoBufMsgSrc_FromGC=3 GCProtoBufMsgSrc_FromGC value
     * @property {number} GCProtoBufMsgSrc_ReplySystem=4 GCProtoBufMsgSrc_ReplySystem value
     */
    $root.GCProtoBufMsgSrc = (function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[0] = "GCProtoBufMsgSrc_Unspecified"] = 0;
        values[valuesById[1] = "GCProtoBufMsgSrc_FromSystem"] = 1;
        values[valuesById[2] = "GCProtoBufMsgSrc_FromSteamID"] = 2;
        values[valuesById[3] = "GCProtoBufMsgSrc_FromGC"] = 3;
        values[valuesById[4] = "GCProtoBufMsgSrc_ReplySystem"] = 4;
        return values;
    })();
    
    $root.CMsgProtoBufHeader = (function() {
    
        /**
         * Properties of a CMsgProtoBufHeader.
         * @exports ICMsgProtoBufHeader
         * @interface ICMsgProtoBufHeader
         * @property {number|Long|null} [clientSteamId] CMsgProtoBufHeader clientSteamId
         * @property {number|null} [clientSessionId] CMsgProtoBufHeader clientSessionId
         * @property {number|null} [sourceAppId] CMsgProtoBufHeader sourceAppId
         * @property {number|Long|null} [jobIdSource] CMsgProtoBufHeader jobIdSource
         * @property {number|Long|null} [jobIdTarget] CMsgProtoBufHeader jobIdTarget
         * @property {string|null} [targetJobName] CMsgProtoBufHeader targetJobName
         * @property {number|null} [eresult] CMsgProtoBufHeader eresult
         * @property {string|null} [errorMessage] CMsgProtoBufHeader errorMessage
         * @property {number|null} [ip] CMsgProtoBufHeader ip
         * @property {GCProtoBufMsgSrc|null} [gcMsgSrc] CMsgProtoBufHeader gcMsgSrc
         * @property {number|null} [gcDirIndexSource] CMsgProtoBufHeader gcDirIndexSource
         */
    
        /**
         * Constructs a new CMsgProtoBufHeader.
         * @exports CMsgProtoBufHeader
         * @classdesc Represents a CMsgProtoBufHeader.
         * @implements ICMsgProtoBufHeader
         * @constructor
         * @param {ICMsgProtoBufHeader=} [properties] Properties to set
         */
        function CMsgProtoBufHeader(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgProtoBufHeader clientSteamId.
         * @member {number|Long} clientSteamId
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.clientSteamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgProtoBufHeader clientSessionId.
         * @member {number} clientSessionId
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.clientSessionId = 0;
    
        /**
         * CMsgProtoBufHeader sourceAppId.
         * @member {number} sourceAppId
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.sourceAppId = 0;
    
        /**
         * CMsgProtoBufHeader jobIdSource.
         * @member {number|Long} jobIdSource
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.jobIdSource = $util.Long ? $util.Long.fromBits(-1,2147483647,false) : 9223372036854776000;
    
        /**
         * CMsgProtoBufHeader jobIdTarget.
         * @member {number|Long} jobIdTarget
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.jobIdTarget = $util.Long ? $util.Long.fromBits(-1,2147483647,false) : 9223372036854776000;
    
        /**
         * CMsgProtoBufHeader targetJobName.
         * @member {string} targetJobName
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.targetJobName = "";
    
        /**
         * CMsgProtoBufHeader eresult.
         * @member {number} eresult
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.eresult = 2;
    
        /**
         * CMsgProtoBufHeader errorMessage.
         * @member {string} errorMessage
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.errorMessage = "";
    
        /**
         * CMsgProtoBufHeader ip.
         * @member {number} ip
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.ip = 0;
    
        /**
         * CMsgProtoBufHeader gcMsgSrc.
         * @member {GCProtoBufMsgSrc} gcMsgSrc
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.gcMsgSrc = 0;
    
        /**
         * CMsgProtoBufHeader gcDirIndexSource.
         * @member {number} gcDirIndexSource
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.gcDirIndexSource = 0;
    
        /**
         * Creates a new CMsgProtoBufHeader instance using the specified properties.
         * @function create
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {ICMsgProtoBufHeader=} [properties] Properties to set
         * @returns {CMsgProtoBufHeader} CMsgProtoBufHeader instance
         */
        CMsgProtoBufHeader.create = function create(properties) {
            return new CMsgProtoBufHeader(properties);
        };
    
        /**
         * Encodes the specified CMsgProtoBufHeader message. Does not implicitly {@link CMsgProtoBufHeader.verify|verify} messages.
         * @function encode
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {ICMsgProtoBufHeader} message CMsgProtoBufHeader message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgProtoBufHeader.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.clientSteamId != null && Object.hasOwnProperty.call(message, "clientSteamId"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.clientSteamId);
            if (message.clientSessionId != null && Object.hasOwnProperty.call(message, "clientSessionId"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.clientSessionId);
            if (message.sourceAppId != null && Object.hasOwnProperty.call(message, "sourceAppId"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.sourceAppId);
            if (message.jobIdSource != null && Object.hasOwnProperty.call(message, "jobIdSource"))
                writer.uint32(/* id 10, wireType 1 =*/81).fixed64(message.jobIdSource);
            if (message.jobIdTarget != null && Object.hasOwnProperty.call(message, "jobIdTarget"))
                writer.uint32(/* id 11, wireType 1 =*/89).fixed64(message.jobIdTarget);
            if (message.targetJobName != null && Object.hasOwnProperty.call(message, "targetJobName"))
                writer.uint32(/* id 12, wireType 2 =*/98).string(message.targetJobName);
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 13, wireType 0 =*/104).int32(message.eresult);
            if (message.errorMessage != null && Object.hasOwnProperty.call(message, "errorMessage"))
                writer.uint32(/* id 14, wireType 2 =*/114).string(message.errorMessage);
            if (message.ip != null && Object.hasOwnProperty.call(message, "ip"))
                writer.uint32(/* id 15, wireType 0 =*/120).uint32(message.ip);
            if (message.gcMsgSrc != null && Object.hasOwnProperty.call(message, "gcMsgSrc"))
                writer.uint32(/* id 200, wireType 0 =*/1600).int32(message.gcMsgSrc);
            if (message.gcDirIndexSource != null && Object.hasOwnProperty.call(message, "gcDirIndexSource"))
                writer.uint32(/* id 201, wireType 0 =*/1608).uint32(message.gcDirIndexSource);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgProtoBufHeader message, length delimited. Does not implicitly {@link CMsgProtoBufHeader.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {ICMsgProtoBufHeader} message CMsgProtoBufHeader message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgProtoBufHeader.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgProtoBufHeader message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgProtoBufHeader} CMsgProtoBufHeader
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgProtoBufHeader.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgProtoBufHeader();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.clientSteamId = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.clientSessionId = reader.int32();
                        break;
                    }
                case 3: {
                        message.sourceAppId = reader.uint32();
                        break;
                    }
                case 10: {
                        message.jobIdSource = reader.fixed64();
                        break;
                    }
                case 11: {
                        message.jobIdTarget = reader.fixed64();
                        break;
                    }
                case 12: {
                        message.targetJobName = reader.string();
                        break;
                    }
                case 13: {
                        message.eresult = reader.int32();
                        break;
                    }
                case 14: {
                        message.errorMessage = reader.string();
                        break;
                    }
                case 15: {
                        message.ip = reader.uint32();
                        break;
                    }
                case 200: {
                        message.gcMsgSrc = reader.int32();
                        break;
                    }
                case 201: {
                        message.gcDirIndexSource = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgProtoBufHeader message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgProtoBufHeader} CMsgProtoBufHeader
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgProtoBufHeader.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgProtoBufHeader message.
         * @function verify
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgProtoBufHeader.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.clientSteamId != null && message.hasOwnProperty("clientSteamId"))
                if (!$util.isInteger(message.clientSteamId) && !(message.clientSteamId && $util.isInteger(message.clientSteamId.low) && $util.isInteger(message.clientSteamId.high)))
                    return "clientSteamId: integer|Long expected";
            if (message.clientSessionId != null && message.hasOwnProperty("clientSessionId"))
                if (!$util.isInteger(message.clientSessionId))
                    return "clientSessionId: integer expected";
            if (message.sourceAppId != null && message.hasOwnProperty("sourceAppId"))
                if (!$util.isInteger(message.sourceAppId))
                    return "sourceAppId: integer expected";
            if (message.jobIdSource != null && message.hasOwnProperty("jobIdSource"))
                if (!$util.isInteger(message.jobIdSource) && !(message.jobIdSource && $util.isInteger(message.jobIdSource.low) && $util.isInteger(message.jobIdSource.high)))
                    return "jobIdSource: integer|Long expected";
            if (message.jobIdTarget != null && message.hasOwnProperty("jobIdTarget"))
                if (!$util.isInteger(message.jobIdTarget) && !(message.jobIdTarget && $util.isInteger(message.jobIdTarget.low) && $util.isInteger(message.jobIdTarget.high)))
                    return "jobIdTarget: integer|Long expected";
            if (message.targetJobName != null && message.hasOwnProperty("targetJobName"))
                if (!$util.isString(message.targetJobName))
                    return "targetJobName: string expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.errorMessage != null && message.hasOwnProperty("errorMessage"))
                if (!$util.isString(message.errorMessage))
                    return "errorMessage: string expected";
            if (message.ip != null && message.hasOwnProperty("ip"))
                if (!$util.isInteger(message.ip))
                    return "ip: integer expected";
            if (message.gcMsgSrc != null && message.hasOwnProperty("gcMsgSrc"))
                switch (message.gcMsgSrc) {
                default:
                    return "gcMsgSrc: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                    break;
                }
            if (message.gcDirIndexSource != null && message.hasOwnProperty("gcDirIndexSource"))
                if (!$util.isInteger(message.gcDirIndexSource))
                    return "gcDirIndexSource: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgProtoBufHeader message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgProtoBufHeader} CMsgProtoBufHeader
         */
        CMsgProtoBufHeader.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgProtoBufHeader)
                return object;
            var message = new $root.CMsgProtoBufHeader();
            if (object.clientSteamId != null)
                if ($util.Long)
                    (message.clientSteamId = $util.Long.fromValue(object.clientSteamId)).unsigned = false;
                else if (typeof object.clientSteamId === "string")
                    message.clientSteamId = parseInt(object.clientSteamId, 10);
                else if (typeof object.clientSteamId === "number")
                    message.clientSteamId = object.clientSteamId;
                else if (typeof object.clientSteamId === "object")
                    message.clientSteamId = new $util.LongBits(object.clientSteamId.low >>> 0, object.clientSteamId.high >>> 0).toNumber();
            if (object.clientSessionId != null)
                message.clientSessionId = object.clientSessionId | 0;
            if (object.sourceAppId != null)
                message.sourceAppId = object.sourceAppId >>> 0;
            if (object.jobIdSource != null)
                if ($util.Long)
                    (message.jobIdSource = $util.Long.fromValue(object.jobIdSource)).unsigned = false;
                else if (typeof object.jobIdSource === "string")
                    message.jobIdSource = parseInt(object.jobIdSource, 10);
                else if (typeof object.jobIdSource === "number")
                    message.jobIdSource = object.jobIdSource;
                else if (typeof object.jobIdSource === "object")
                    message.jobIdSource = new $util.LongBits(object.jobIdSource.low >>> 0, object.jobIdSource.high >>> 0).toNumber();
            if (object.jobIdTarget != null)
                if ($util.Long)
                    (message.jobIdTarget = $util.Long.fromValue(object.jobIdTarget)).unsigned = false;
                else if (typeof object.jobIdTarget === "string")
                    message.jobIdTarget = parseInt(object.jobIdTarget, 10);
                else if (typeof object.jobIdTarget === "number")
                    message.jobIdTarget = object.jobIdTarget;
                else if (typeof object.jobIdTarget === "object")
                    message.jobIdTarget = new $util.LongBits(object.jobIdTarget.low >>> 0, object.jobIdTarget.high >>> 0).toNumber();
            if (object.targetJobName != null)
                message.targetJobName = String(object.targetJobName);
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.errorMessage != null)
                message.errorMessage = String(object.errorMessage);
            if (object.ip != null)
                message.ip = object.ip >>> 0;
            switch (object.gcMsgSrc) {
            default:
                if (typeof object.gcMsgSrc === "number") {
                    message.gcMsgSrc = object.gcMsgSrc;
                    break;
                }
                break;
            case "GCProtoBufMsgSrc_Unspecified":
            case 0:
                message.gcMsgSrc = 0;
                break;
            case "GCProtoBufMsgSrc_FromSystem":
            case 1:
                message.gcMsgSrc = 1;
                break;
            case "GCProtoBufMsgSrc_FromSteamID":
            case 2:
                message.gcMsgSrc = 2;
                break;
            case "GCProtoBufMsgSrc_FromGC":
            case 3:
                message.gcMsgSrc = 3;
                break;
            case "GCProtoBufMsgSrc_ReplySystem":
            case 4:
                message.gcMsgSrc = 4;
                break;
            }
            if (object.gcDirIndexSource != null)
                message.gcDirIndexSource = object.gcDirIndexSource >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgProtoBufHeader message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {CMsgProtoBufHeader} message CMsgProtoBufHeader
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgProtoBufHeader.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.clientSteamId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.clientSteamId = options.longs === String ? "0" : 0;
                object.clientSessionId = 0;
                object.sourceAppId = 0;
                if ($util.Long) {
                    var long = new $util.Long(-1, 2147483647, false);
                    object.jobIdSource = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.jobIdSource = options.longs === String ? "9223372036854775807" : 9223372036854776000;
                if ($util.Long) {
                    var long = new $util.Long(-1, 2147483647, false);
                    object.jobIdTarget = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.jobIdTarget = options.longs === String ? "9223372036854775807" : 9223372036854776000;
                object.targetJobName = "";
                object.eresult = 2;
                object.errorMessage = "";
                object.ip = 0;
                object.gcMsgSrc = options.enums === String ? "GCProtoBufMsgSrc_Unspecified" : 0;
                object.gcDirIndexSource = 0;
            }
            if (message.clientSteamId != null && message.hasOwnProperty("clientSteamId"))
                if (typeof message.clientSteamId === "number")
                    object.clientSteamId = options.longs === String ? String(message.clientSteamId) : message.clientSteamId;
                else
                    object.clientSteamId = options.longs === String ? $util.Long.prototype.toString.call(message.clientSteamId) : options.longs === Number ? new $util.LongBits(message.clientSteamId.low >>> 0, message.clientSteamId.high >>> 0).toNumber() : message.clientSteamId;
            if (message.clientSessionId != null && message.hasOwnProperty("clientSessionId"))
                object.clientSessionId = message.clientSessionId;
            if (message.sourceAppId != null && message.hasOwnProperty("sourceAppId"))
                object.sourceAppId = message.sourceAppId;
            if (message.jobIdSource != null && message.hasOwnProperty("jobIdSource"))
                if (typeof message.jobIdSource === "number")
                    object.jobIdSource = options.longs === String ? String(message.jobIdSource) : message.jobIdSource;
                else
                    object.jobIdSource = options.longs === String ? $util.Long.prototype.toString.call(message.jobIdSource) : options.longs === Number ? new $util.LongBits(message.jobIdSource.low >>> 0, message.jobIdSource.high >>> 0).toNumber() : message.jobIdSource;
            if (message.jobIdTarget != null && message.hasOwnProperty("jobIdTarget"))
                if (typeof message.jobIdTarget === "number")
                    object.jobIdTarget = options.longs === String ? String(message.jobIdTarget) : message.jobIdTarget;
                else
                    object.jobIdTarget = options.longs === String ? $util.Long.prototype.toString.call(message.jobIdTarget) : options.longs === Number ? new $util.LongBits(message.jobIdTarget.low >>> 0, message.jobIdTarget.high >>> 0).toNumber() : message.jobIdTarget;
            if (message.targetJobName != null && message.hasOwnProperty("targetJobName"))
                object.targetJobName = message.targetJobName;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.errorMessage != null && message.hasOwnProperty("errorMessage"))
                object.errorMessage = message.errorMessage;
            if (message.ip != null && message.hasOwnProperty("ip"))
                object.ip = message.ip;
            if (message.gcMsgSrc != null && message.hasOwnProperty("gcMsgSrc"))
                object.gcMsgSrc = options.enums === String ? $root.GCProtoBufMsgSrc[message.gcMsgSrc] === undefined ? message.gcMsgSrc : $root.GCProtoBufMsgSrc[message.gcMsgSrc] : message.gcMsgSrc;
            if (message.gcDirIndexSource != null && message.hasOwnProperty("gcDirIndexSource"))
                object.gcDirIndexSource = message.gcDirIndexSource;
            return object;
        };
    
        /**
         * Converts this CMsgProtoBufHeader to JSON.
         * @function toJSON
         * @memberof CMsgProtoBufHeader
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgProtoBufHeader.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgProtoBufHeader
         * @function getTypeUrl
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgProtoBufHeader.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgProtoBufHeader";
        };
    
        return CMsgProtoBufHeader;
    })();
    
    $root.CMsgWebAPIKey = (function() {
    
        /**
         * Properties of a CMsgWebAPIKey.
         * @exports ICMsgWebAPIKey
         * @interface ICMsgWebAPIKey
         * @property {number|null} [status] CMsgWebAPIKey status
         * @property {number|null} [accountId] CMsgWebAPIKey accountId
         * @property {number|null} [publisherGroupId] CMsgWebAPIKey publisherGroupId
         * @property {number|null} [keyId] CMsgWebAPIKey keyId
         * @property {string|null} [domain] CMsgWebAPIKey domain
         */
    
        /**
         * Constructs a new CMsgWebAPIKey.
         * @exports CMsgWebAPIKey
         * @classdesc Represents a CMsgWebAPIKey.
         * @implements ICMsgWebAPIKey
         * @constructor
         * @param {ICMsgWebAPIKey=} [properties] Properties to set
         */
        function CMsgWebAPIKey(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgWebAPIKey status.
         * @member {number} status
         * @memberof CMsgWebAPIKey
         * @instance
         */
        CMsgWebAPIKey.prototype.status = 255;
    
        /**
         * CMsgWebAPIKey accountId.
         * @member {number} accountId
         * @memberof CMsgWebAPIKey
         * @instance
         */
        CMsgWebAPIKey.prototype.accountId = 0;
    
        /**
         * CMsgWebAPIKey publisherGroupId.
         * @member {number} publisherGroupId
         * @memberof CMsgWebAPIKey
         * @instance
         */
        CMsgWebAPIKey.prototype.publisherGroupId = 0;
    
        /**
         * CMsgWebAPIKey keyId.
         * @member {number} keyId
         * @memberof CMsgWebAPIKey
         * @instance
         */
        CMsgWebAPIKey.prototype.keyId = 0;
    
        /**
         * CMsgWebAPIKey domain.
         * @member {string} domain
         * @memberof CMsgWebAPIKey
         * @instance
         */
        CMsgWebAPIKey.prototype.domain = "";
    
        /**
         * Creates a new CMsgWebAPIKey instance using the specified properties.
         * @function create
         * @memberof CMsgWebAPIKey
         * @static
         * @param {ICMsgWebAPIKey=} [properties] Properties to set
         * @returns {CMsgWebAPIKey} CMsgWebAPIKey instance
         */
        CMsgWebAPIKey.create = function create(properties) {
            return new CMsgWebAPIKey(properties);
        };
    
        /**
         * Encodes the specified CMsgWebAPIKey message. Does not implicitly {@link CMsgWebAPIKey.verify|verify} messages.
         * @function encode
         * @memberof CMsgWebAPIKey
         * @static
         * @param {ICMsgWebAPIKey} message CMsgWebAPIKey message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgWebAPIKey.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.status);
            if (message.accountId != null && Object.hasOwnProperty.call(message, "accountId"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.accountId);
            if (message.publisherGroupId != null && Object.hasOwnProperty.call(message, "publisherGroupId"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.publisherGroupId);
            if (message.keyId != null && Object.hasOwnProperty.call(message, "keyId"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.keyId);
            if (message.domain != null && Object.hasOwnProperty.call(message, "domain"))
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.domain);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgWebAPIKey message, length delimited. Does not implicitly {@link CMsgWebAPIKey.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgWebAPIKey
         * @static
         * @param {ICMsgWebAPIKey} message CMsgWebAPIKey message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgWebAPIKey.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgWebAPIKey message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgWebAPIKey
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgWebAPIKey} CMsgWebAPIKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgWebAPIKey.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgWebAPIKey();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.status = reader.uint32();
                        break;
                    }
                case 2: {
                        message.accountId = reader.uint32();
                        break;
                    }
                case 3: {
                        message.publisherGroupId = reader.uint32();
                        break;
                    }
                case 4: {
                        message.keyId = reader.uint32();
                        break;
                    }
                case 5: {
                        message.domain = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgWebAPIKey message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgWebAPIKey
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgWebAPIKey} CMsgWebAPIKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgWebAPIKey.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgWebAPIKey message.
         * @function verify
         * @memberof CMsgWebAPIKey
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgWebAPIKey.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.status != null && message.hasOwnProperty("status"))
                if (!$util.isInteger(message.status))
                    return "status: integer expected";
            if (message.accountId != null && message.hasOwnProperty("accountId"))
                if (!$util.isInteger(message.accountId))
                    return "accountId: integer expected";
            if (message.publisherGroupId != null && message.hasOwnProperty("publisherGroupId"))
                if (!$util.isInteger(message.publisherGroupId))
                    return "publisherGroupId: integer expected";
            if (message.keyId != null && message.hasOwnProperty("keyId"))
                if (!$util.isInteger(message.keyId))
                    return "keyId: integer expected";
            if (message.domain != null && message.hasOwnProperty("domain"))
                if (!$util.isString(message.domain))
                    return "domain: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgWebAPIKey message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgWebAPIKey
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgWebAPIKey} CMsgWebAPIKey
         */
        CMsgWebAPIKey.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgWebAPIKey)
                return object;
            var message = new $root.CMsgWebAPIKey();
            if (object.status != null)
                message.status = object.status >>> 0;
            if (object.accountId != null)
                message.accountId = object.accountId >>> 0;
            if (object.publisherGroupId != null)
                message.publisherGroupId = object.publisherGroupId >>> 0;
            if (object.keyId != null)
                message.keyId = object.keyId >>> 0;
            if (object.domain != null)
                message.domain = String(object.domain);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgWebAPIKey message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgWebAPIKey
         * @static
         * @param {CMsgWebAPIKey} message CMsgWebAPIKey
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgWebAPIKey.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.status = 255;
                object.accountId = 0;
                object.publisherGroupId = 0;
                object.keyId = 0;
                object.domain = "";
            }
            if (message.status != null && message.hasOwnProperty("status"))
                object.status = message.status;
            if (message.accountId != null && message.hasOwnProperty("accountId"))
                object.accountId = message.accountId;
            if (message.publisherGroupId != null && message.hasOwnProperty("publisherGroupId"))
                object.publisherGroupId = message.publisherGroupId;
            if (message.keyId != null && message.hasOwnProperty("keyId"))
                object.keyId = message.keyId;
            if (message.domain != null && message.hasOwnProperty("domain"))
                object.domain = message.domain;
            return object;
        };
    
        /**
         * Converts this CMsgWebAPIKey to JSON.
         * @function toJSON
         * @memberof CMsgWebAPIKey
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgWebAPIKey.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgWebAPIKey
         * @function getTypeUrl
         * @memberof CMsgWebAPIKey
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgWebAPIKey.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgWebAPIKey";
        };
    
        return CMsgWebAPIKey;
    })();
    
    $root.CMsgHttpRequest = (function() {
    
        /**
         * Properties of a CMsgHttpRequest.
         * @exports ICMsgHttpRequest
         * @interface ICMsgHttpRequest
         * @property {number|null} [requestMethod] CMsgHttpRequest requestMethod
         * @property {string|null} [hostname] CMsgHttpRequest hostname
         * @property {string|null} [url] CMsgHttpRequest url
         * @property {Array.<CMsgHttpRequest.IRequestHeader>|null} [headers] CMsgHttpRequest headers
         * @property {Array.<CMsgHttpRequest.IQueryParam>|null} [getParams] CMsgHttpRequest getParams
         * @property {Array.<CMsgHttpRequest.IQueryParam>|null} [postParams] CMsgHttpRequest postParams
         * @property {Uint8Array|null} [body] CMsgHttpRequest body
         * @property {number|null} [absoluteTimeout] CMsgHttpRequest absoluteTimeout
         */
    
        /**
         * Constructs a new CMsgHttpRequest.
         * @exports CMsgHttpRequest
         * @classdesc Represents a CMsgHttpRequest.
         * @implements ICMsgHttpRequest
         * @constructor
         * @param {ICMsgHttpRequest=} [properties] Properties to set
         */
        function CMsgHttpRequest(properties) {
            this.headers = [];
            this.getParams = [];
            this.postParams = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgHttpRequest requestMethod.
         * @member {number} requestMethod
         * @memberof CMsgHttpRequest
         * @instance
         */
        CMsgHttpRequest.prototype.requestMethod = 0;
    
        /**
         * CMsgHttpRequest hostname.
         * @member {string} hostname
         * @memberof CMsgHttpRequest
         * @instance
         */
        CMsgHttpRequest.prototype.hostname = "";
    
        /**
         * CMsgHttpRequest url.
         * @member {string} url
         * @memberof CMsgHttpRequest
         * @instance
         */
        CMsgHttpRequest.prototype.url = "";
    
        /**
         * CMsgHttpRequest headers.
         * @member {Array.<CMsgHttpRequest.IRequestHeader>} headers
         * @memberof CMsgHttpRequest
         * @instance
         */
        CMsgHttpRequest.prototype.headers = $util.emptyArray;
    
        /**
         * CMsgHttpRequest getParams.
         * @member {Array.<CMsgHttpRequest.IQueryParam>} getParams
         * @memberof CMsgHttpRequest
         * @instance
         */
        CMsgHttpRequest.prototype.getParams = $util.emptyArray;
    
        /**
         * CMsgHttpRequest postParams.
         * @member {Array.<CMsgHttpRequest.IQueryParam>} postParams
         * @memberof CMsgHttpRequest
         * @instance
         */
        CMsgHttpRequest.prototype.postParams = $util.emptyArray;
    
        /**
         * CMsgHttpRequest body.
         * @member {Uint8Array} body
         * @memberof CMsgHttpRequest
         * @instance
         */
        CMsgHttpRequest.prototype.body = $util.newBuffer([]);
    
        /**
         * CMsgHttpRequest absoluteTimeout.
         * @member {number} absoluteTimeout
         * @memberof CMsgHttpRequest
         * @instance
         */
        CMsgHttpRequest.prototype.absoluteTimeout = 0;
    
        /**
         * Creates a new CMsgHttpRequest instance using the specified properties.
         * @function create
         * @memberof CMsgHttpRequest
         * @static
         * @param {ICMsgHttpRequest=} [properties] Properties to set
         * @returns {CMsgHttpRequest} CMsgHttpRequest instance
         */
        CMsgHttpRequest.create = function create(properties) {
            return new CMsgHttpRequest(properties);
        };
    
        /**
         * Encodes the specified CMsgHttpRequest message. Does not implicitly {@link CMsgHttpRequest.verify|verify} messages.
         * @function encode
         * @memberof CMsgHttpRequest
         * @static
         * @param {ICMsgHttpRequest} message CMsgHttpRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgHttpRequest.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.requestMethod != null && Object.hasOwnProperty.call(message, "requestMethod"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.requestMethod);
            if (message.hostname != null && Object.hasOwnProperty.call(message, "hostname"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.hostname);
            if (message.url != null && Object.hasOwnProperty.call(message, "url"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.url);
            if (message.headers != null && message.headers.length)
                for (var i = 0; i < message.headers.length; ++i)
                    $root.CMsgHttpRequest.RequestHeader.encode(message.headers[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            if (message.getParams != null && message.getParams.length)
                for (var i = 0; i < message.getParams.length; ++i)
                    $root.CMsgHttpRequest.QueryParam.encode(message.getParams[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
            if (message.postParams != null && message.postParams.length)
                for (var i = 0; i < message.postParams.length; ++i)
                    $root.CMsgHttpRequest.QueryParam.encode(message.postParams[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.body);
            if (message.absoluteTimeout != null && Object.hasOwnProperty.call(message, "absoluteTimeout"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.absoluteTimeout);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgHttpRequest message, length delimited. Does not implicitly {@link CMsgHttpRequest.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgHttpRequest
         * @static
         * @param {ICMsgHttpRequest} message CMsgHttpRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgHttpRequest.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgHttpRequest message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgHttpRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgHttpRequest} CMsgHttpRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgHttpRequest.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgHttpRequest();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.requestMethod = reader.uint32();
                        break;
                    }
                case 2: {
                        message.hostname = reader.string();
                        break;
                    }
                case 3: {
                        message.url = reader.string();
                        break;
                    }
                case 4: {
                        if (!(message.headers && message.headers.length))
                            message.headers = [];
                        message.headers.push($root.CMsgHttpRequest.RequestHeader.decode(reader, reader.uint32()));
                        break;
                    }
                case 5: {
                        if (!(message.getParams && message.getParams.length))
                            message.getParams = [];
                        message.getParams.push($root.CMsgHttpRequest.QueryParam.decode(reader, reader.uint32()));
                        break;
                    }
                case 6: {
                        if (!(message.postParams && message.postParams.length))
                            message.postParams = [];
                        message.postParams.push($root.CMsgHttpRequest.QueryParam.decode(reader, reader.uint32()));
                        break;
                    }
                case 7: {
                        message.body = reader.bytes();
                        break;
                    }
                case 8: {
                        message.absoluteTimeout = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgHttpRequest message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgHttpRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgHttpRequest} CMsgHttpRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgHttpRequest.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgHttpRequest message.
         * @function verify
         * @memberof CMsgHttpRequest
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgHttpRequest.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.requestMethod != null && message.hasOwnProperty("requestMethod"))
                if (!$util.isInteger(message.requestMethod))
                    return "requestMethod: integer expected";
            if (message.hostname != null && message.hasOwnProperty("hostname"))
                if (!$util.isString(message.hostname))
                    return "hostname: string expected";
            if (message.url != null && message.hasOwnProperty("url"))
                if (!$util.isString(message.url))
                    return "url: string expected";
            if (message.headers != null && message.hasOwnProperty("headers")) {
                if (!Array.isArray(message.headers))
                    return "headers: array expected";
                for (var i = 0; i < message.headers.length; ++i) {
                    var error = $root.CMsgHttpRequest.RequestHeader.verify(message.headers[i]);
                    if (error)
                        return "headers." + error;
                }
            }
            if (message.getParams != null && message.hasOwnProperty("getParams")) {
                if (!Array.isArray(message.getParams))
                    return "getParams: array expected";
                for (var i = 0; i < message.getParams.length; ++i) {
                    var error = $root.CMsgHttpRequest.QueryParam.verify(message.getParams[i]);
                    if (error)
                        return "getParams." + error;
                }
            }
            if (message.postParams != null && message.hasOwnProperty("postParams")) {
                if (!Array.isArray(message.postParams))
                    return "postParams: array expected";
                for (var i = 0; i < message.postParams.length; ++i) {
                    var error = $root.CMsgHttpRequest.QueryParam.verify(message.postParams[i]);
                    if (error)
                        return "postParams." + error;
                }
            }
            if (message.body != null && message.hasOwnProperty("body"))
                if (!(message.body && typeof message.body.length === "number" || $util.isString(message.body)))
                    return "body: buffer expected";
            if (message.absoluteTimeout != null && message.hasOwnProperty("absoluteTimeout"))
                if (!$util.isInteger(message.absoluteTimeout))
                    return "absoluteTimeout: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgHttpRequest message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgHttpRequest
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgHttpRequest} CMsgHttpRequest
         */
        CMsgHttpRequest.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgHttpRequest)
                return object;
            var message = new $root.CMsgHttpRequest();
            if (object.requestMethod != null)
                message.requestMethod = object.requestMethod >>> 0;
            if (object.hostname != null)
                message.hostname = String(object.hostname);
            if (object.url != null)
                message.url = String(object.url);
            if (object.headers) {
                if (!Array.isArray(object.headers))
                    throw TypeError(".CMsgHttpRequest.headers: array expected");
                message.headers = [];
                for (var i = 0; i < object.headers.length; ++i) {
                    if (typeof object.headers[i] !== "object")
                        throw TypeError(".CMsgHttpRequest.headers: object expected");
                    message.headers[i] = $root.CMsgHttpRequest.RequestHeader.fromObject(object.headers[i]);
                }
            }
            if (object.getParams) {
                if (!Array.isArray(object.getParams))
                    throw TypeError(".CMsgHttpRequest.getParams: array expected");
                message.getParams = [];
                for (var i = 0; i < object.getParams.length; ++i) {
                    if (typeof object.getParams[i] !== "object")
                        throw TypeError(".CMsgHttpRequest.getParams: object expected");
                    message.getParams[i] = $root.CMsgHttpRequest.QueryParam.fromObject(object.getParams[i]);
                }
            }
            if (object.postParams) {
                if (!Array.isArray(object.postParams))
                    throw TypeError(".CMsgHttpRequest.postParams: array expected");
                message.postParams = [];
                for (var i = 0; i < object.postParams.length; ++i) {
                    if (typeof object.postParams[i] !== "object")
                        throw TypeError(".CMsgHttpRequest.postParams: object expected");
                    message.postParams[i] = $root.CMsgHttpRequest.QueryParam.fromObject(object.postParams[i]);
                }
            }
            if (object.body != null)
                if (typeof object.body === "string")
                    $util.base64.decode(object.body, message.body = $util.newBuffer($util.base64.length(object.body)), 0);
                else if (object.body.length >= 0)
                    message.body = object.body;
            if (object.absoluteTimeout != null)
                message.absoluteTimeout = object.absoluteTimeout >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgHttpRequest message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgHttpRequest
         * @static
         * @param {CMsgHttpRequest} message CMsgHttpRequest
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgHttpRequest.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.headers = [];
                object.getParams = [];
                object.postParams = [];
            }
            if (options.defaults) {
                object.requestMethod = 0;
                object.hostname = "";
                object.url = "";
                if (options.bytes === String)
                    object.body = "";
                else {
                    object.body = [];
                    if (options.bytes !== Array)
                        object.body = $util.newBuffer(object.body);
                }
                object.absoluteTimeout = 0;
            }
            if (message.requestMethod != null && message.hasOwnProperty("requestMethod"))
                object.requestMethod = message.requestMethod;
            if (message.hostname != null && message.hasOwnProperty("hostname"))
                object.hostname = message.hostname;
            if (message.url != null && message.hasOwnProperty("url"))
                object.url = message.url;
            if (message.headers && message.headers.length) {
                object.headers = [];
                for (var j = 0; j < message.headers.length; ++j)
                    object.headers[j] = $root.CMsgHttpRequest.RequestHeader.toObject(message.headers[j], options);
            }
            if (message.getParams && message.getParams.length) {
                object.getParams = [];
                for (var j = 0; j < message.getParams.length; ++j)
                    object.getParams[j] = $root.CMsgHttpRequest.QueryParam.toObject(message.getParams[j], options);
            }
            if (message.postParams && message.postParams.length) {
                object.postParams = [];
                for (var j = 0; j < message.postParams.length; ++j)
                    object.postParams[j] = $root.CMsgHttpRequest.QueryParam.toObject(message.postParams[j], options);
            }
            if (message.body != null && message.hasOwnProperty("body"))
                object.body = options.bytes === String ? $util.base64.encode(message.body, 0, message.body.length) : options.bytes === Array ? Array.prototype.slice.call(message.body) : message.body;
            if (message.absoluteTimeout != null && message.hasOwnProperty("absoluteTimeout"))
                object.absoluteTimeout = message.absoluteTimeout;
            return object;
        };
    
        /**
         * Converts this CMsgHttpRequest to JSON.
         * @function toJSON
         * @memberof CMsgHttpRequest
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgHttpRequest.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgHttpRequest
         * @function getTypeUrl
         * @memberof CMsgHttpRequest
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgHttpRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgHttpRequest";
        };
    
        CMsgHttpRequest.RequestHeader = (function() {
    
            /**
             * Properties of a RequestHeader.
             * @memberof CMsgHttpRequest
             * @interface IRequestHeader
             * @property {string|null} [name] RequestHeader name
             * @property {string|null} [value] RequestHeader value
             */
    
            /**
             * Constructs a new RequestHeader.
             * @memberof CMsgHttpRequest
             * @classdesc Represents a RequestHeader.
             * @implements IRequestHeader
             * @constructor
             * @param {CMsgHttpRequest.IRequestHeader=} [properties] Properties to set
             */
            function RequestHeader(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * RequestHeader name.
             * @member {string} name
             * @memberof CMsgHttpRequest.RequestHeader
             * @instance
             */
            RequestHeader.prototype.name = "";
    
            /**
             * RequestHeader value.
             * @member {string} value
             * @memberof CMsgHttpRequest.RequestHeader
             * @instance
             */
            RequestHeader.prototype.value = "";
    
            /**
             * Creates a new RequestHeader instance using the specified properties.
             * @function create
             * @memberof CMsgHttpRequest.RequestHeader
             * @static
             * @param {CMsgHttpRequest.IRequestHeader=} [properties] Properties to set
             * @returns {CMsgHttpRequest.RequestHeader} RequestHeader instance
             */
            RequestHeader.create = function create(properties) {
                return new RequestHeader(properties);
            };
    
            /**
             * Encodes the specified RequestHeader message. Does not implicitly {@link CMsgHttpRequest.RequestHeader.verify|verify} messages.
             * @function encode
             * @memberof CMsgHttpRequest.RequestHeader
             * @static
             * @param {CMsgHttpRequest.IRequestHeader} message RequestHeader message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RequestHeader.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
                return writer;
            };
    
            /**
             * Encodes the specified RequestHeader message, length delimited. Does not implicitly {@link CMsgHttpRequest.RequestHeader.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgHttpRequest.RequestHeader
             * @static
             * @param {CMsgHttpRequest.IRequestHeader} message RequestHeader message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RequestHeader.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a RequestHeader message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgHttpRequest.RequestHeader
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgHttpRequest.RequestHeader} RequestHeader
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RequestHeader.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgHttpRequest.RequestHeader();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.name = reader.string();
                            break;
                        }
                    case 2: {
                            message.value = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a RequestHeader message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgHttpRequest.RequestHeader
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgHttpRequest.RequestHeader} RequestHeader
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RequestHeader.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a RequestHeader message.
             * @function verify
             * @memberof CMsgHttpRequest.RequestHeader
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            RequestHeader.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.name != null && message.hasOwnProperty("name"))
                    if (!$util.isString(message.name))
                        return "name: string expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (!$util.isString(message.value))
                        return "value: string expected";
                return null;
            };
    
            /**
             * Creates a RequestHeader message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgHttpRequest.RequestHeader
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgHttpRequest.RequestHeader} RequestHeader
             */
            RequestHeader.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgHttpRequest.RequestHeader)
                    return object;
                var message = new $root.CMsgHttpRequest.RequestHeader();
                if (object.name != null)
                    message.name = String(object.name);
                if (object.value != null)
                    message.value = String(object.value);
                return message;
            };
    
            /**
             * Creates a plain object from a RequestHeader message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgHttpRequest.RequestHeader
             * @static
             * @param {CMsgHttpRequest.RequestHeader} message RequestHeader
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            RequestHeader.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.name = "";
                    object.value = "";
                }
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = message.value;
                return object;
            };
    
            /**
             * Converts this RequestHeader to JSON.
             * @function toJSON
             * @memberof CMsgHttpRequest.RequestHeader
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            RequestHeader.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for RequestHeader
             * @function getTypeUrl
             * @memberof CMsgHttpRequest.RequestHeader
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            RequestHeader.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgHttpRequest.RequestHeader";
            };
    
            return RequestHeader;
        })();
    
        CMsgHttpRequest.QueryParam = (function() {
    
            /**
             * Properties of a QueryParam.
             * @memberof CMsgHttpRequest
             * @interface IQueryParam
             * @property {string|null} [name] QueryParam name
             * @property {Uint8Array|null} [value] QueryParam value
             */
    
            /**
             * Constructs a new QueryParam.
             * @memberof CMsgHttpRequest
             * @classdesc Represents a QueryParam.
             * @implements IQueryParam
             * @constructor
             * @param {CMsgHttpRequest.IQueryParam=} [properties] Properties to set
             */
            function QueryParam(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * QueryParam name.
             * @member {string} name
             * @memberof CMsgHttpRequest.QueryParam
             * @instance
             */
            QueryParam.prototype.name = "";
    
            /**
             * QueryParam value.
             * @member {Uint8Array} value
             * @memberof CMsgHttpRequest.QueryParam
             * @instance
             */
            QueryParam.prototype.value = $util.newBuffer([]);
    
            /**
             * Creates a new QueryParam instance using the specified properties.
             * @function create
             * @memberof CMsgHttpRequest.QueryParam
             * @static
             * @param {CMsgHttpRequest.IQueryParam=} [properties] Properties to set
             * @returns {CMsgHttpRequest.QueryParam} QueryParam instance
             */
            QueryParam.create = function create(properties) {
                return new QueryParam(properties);
            };
    
            /**
             * Encodes the specified QueryParam message. Does not implicitly {@link CMsgHttpRequest.QueryParam.verify|verify} messages.
             * @function encode
             * @memberof CMsgHttpRequest.QueryParam
             * @static
             * @param {CMsgHttpRequest.IQueryParam} message QueryParam message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryParam.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                return writer;
            };
    
            /**
             * Encodes the specified QueryParam message, length delimited. Does not implicitly {@link CMsgHttpRequest.QueryParam.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgHttpRequest.QueryParam
             * @static
             * @param {CMsgHttpRequest.IQueryParam} message QueryParam message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            QueryParam.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a QueryParam message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgHttpRequest.QueryParam
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgHttpRequest.QueryParam} QueryParam
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryParam.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgHttpRequest.QueryParam();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.name = reader.string();
                            break;
                        }
                    case 2: {
                            message.value = reader.bytes();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a QueryParam message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgHttpRequest.QueryParam
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgHttpRequest.QueryParam} QueryParam
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            QueryParam.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a QueryParam message.
             * @function verify
             * @memberof CMsgHttpRequest.QueryParam
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            QueryParam.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.name != null && message.hasOwnProperty("name"))
                    if (!$util.isString(message.name))
                        return "name: string expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                        return "value: buffer expected";
                return null;
            };
    
            /**
             * Creates a QueryParam message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgHttpRequest.QueryParam
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgHttpRequest.QueryParam} QueryParam
             */
            QueryParam.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgHttpRequest.QueryParam)
                    return object;
                var message = new $root.CMsgHttpRequest.QueryParam();
                if (object.name != null)
                    message.name = String(object.name);
                if (object.value != null)
                    if (typeof object.value === "string")
                        $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                    else if (object.value.length >= 0)
                        message.value = object.value;
                return message;
            };
    
            /**
             * Creates a plain object from a QueryParam message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgHttpRequest.QueryParam
             * @static
             * @param {CMsgHttpRequest.QueryParam} message QueryParam
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            QueryParam.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.name = "";
                    if (options.bytes === String)
                        object.value = "";
                    else {
                        object.value = [];
                        if (options.bytes !== Array)
                            object.value = $util.newBuffer(object.value);
                    }
                }
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                return object;
            };
    
            /**
             * Converts this QueryParam to JSON.
             * @function toJSON
             * @memberof CMsgHttpRequest.QueryParam
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            QueryParam.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for QueryParam
             * @function getTypeUrl
             * @memberof CMsgHttpRequest.QueryParam
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            QueryParam.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgHttpRequest.QueryParam";
            };
    
            return QueryParam;
        })();
    
        return CMsgHttpRequest;
    })();
    
    $root.CMsgWebAPIRequest = (function() {
    
        /**
         * Properties of a CMsgWebAPIRequest.
         * @exports ICMsgWebAPIRequest
         * @interface ICMsgWebAPIRequest
         * @property {string|null} [interfaceName] CMsgWebAPIRequest interfaceName
         * @property {string|null} [methodName] CMsgWebAPIRequest methodName
         * @property {number|null} [version] CMsgWebAPIRequest version
         * @property {ICMsgWebAPIKey|null} [apiKey] CMsgWebAPIRequest apiKey
         * @property {ICMsgHttpRequest|null} [request] CMsgWebAPIRequest request
         * @property {number|null} [routingAppId] CMsgWebAPIRequest routingAppId
         */
    
        /**
         * Constructs a new CMsgWebAPIRequest.
         * @exports CMsgWebAPIRequest
         * @classdesc Represents a CMsgWebAPIRequest.
         * @implements ICMsgWebAPIRequest
         * @constructor
         * @param {ICMsgWebAPIRequest=} [properties] Properties to set
         */
        function CMsgWebAPIRequest(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgWebAPIRequest interfaceName.
         * @member {string} interfaceName
         * @memberof CMsgWebAPIRequest
         * @instance
         */
        CMsgWebAPIRequest.prototype.interfaceName = "";
    
        /**
         * CMsgWebAPIRequest methodName.
         * @member {string} methodName
         * @memberof CMsgWebAPIRequest
         * @instance
         */
        CMsgWebAPIRequest.prototype.methodName = "";
    
        /**
         * CMsgWebAPIRequest version.
         * @member {number} version
         * @memberof CMsgWebAPIRequest
         * @instance
         */
        CMsgWebAPIRequest.prototype.version = 0;
    
        /**
         * CMsgWebAPIRequest apiKey.
         * @member {ICMsgWebAPIKey|null|undefined} apiKey
         * @memberof CMsgWebAPIRequest
         * @instance
         */
        CMsgWebAPIRequest.prototype.apiKey = null;
    
        /**
         * CMsgWebAPIRequest request.
         * @member {ICMsgHttpRequest|null|undefined} request
         * @memberof CMsgWebAPIRequest
         * @instance
         */
        CMsgWebAPIRequest.prototype.request = null;
    
        /**
         * CMsgWebAPIRequest routingAppId.
         * @member {number} routingAppId
         * @memberof CMsgWebAPIRequest
         * @instance
         */
        CMsgWebAPIRequest.prototype.routingAppId = 0;
    
        /**
         * Creates a new CMsgWebAPIRequest instance using the specified properties.
         * @function create
         * @memberof CMsgWebAPIRequest
         * @static
         * @param {ICMsgWebAPIRequest=} [properties] Properties to set
         * @returns {CMsgWebAPIRequest} CMsgWebAPIRequest instance
         */
        CMsgWebAPIRequest.create = function create(properties) {
            return new CMsgWebAPIRequest(properties);
        };
    
        /**
         * Encodes the specified CMsgWebAPIRequest message. Does not implicitly {@link CMsgWebAPIRequest.verify|verify} messages.
         * @function encode
         * @memberof CMsgWebAPIRequest
         * @static
         * @param {ICMsgWebAPIRequest} message CMsgWebAPIRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgWebAPIRequest.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.interfaceName != null && Object.hasOwnProperty.call(message, "interfaceName"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.interfaceName);
            if (message.methodName != null && Object.hasOwnProperty.call(message, "methodName"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.methodName);
            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.version);
            if (message.apiKey != null && Object.hasOwnProperty.call(message, "apiKey"))
                $root.CMsgWebAPIKey.encode(message.apiKey, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
            if (message.request != null && Object.hasOwnProperty.call(message, "request"))
                $root.CMsgHttpRequest.encode(message.request, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
            if (message.routingAppId != null && Object.hasOwnProperty.call(message, "routingAppId"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.routingAppId);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgWebAPIRequest message, length delimited. Does not implicitly {@link CMsgWebAPIRequest.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgWebAPIRequest
         * @static
         * @param {ICMsgWebAPIRequest} message CMsgWebAPIRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgWebAPIRequest.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgWebAPIRequest message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgWebAPIRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgWebAPIRequest} CMsgWebAPIRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgWebAPIRequest.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgWebAPIRequest();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 2: {
                        message.interfaceName = reader.string();
                        break;
                    }
                case 3: {
                        message.methodName = reader.string();
                        break;
                    }
                case 4: {
                        message.version = reader.uint32();
                        break;
                    }
                case 5: {
                        message.apiKey = $root.CMsgWebAPIKey.decode(reader, reader.uint32());
                        break;
                    }
                case 6: {
                        message.request = $root.CMsgHttpRequest.decode(reader, reader.uint32());
                        break;
                    }
                case 7: {
                        message.routingAppId = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgWebAPIRequest message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgWebAPIRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgWebAPIRequest} CMsgWebAPIRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgWebAPIRequest.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgWebAPIRequest message.
         * @function verify
         * @memberof CMsgWebAPIRequest
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgWebAPIRequest.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.interfaceName != null && message.hasOwnProperty("interfaceName"))
                if (!$util.isString(message.interfaceName))
                    return "interfaceName: string expected";
            if (message.methodName != null && message.hasOwnProperty("methodName"))
                if (!$util.isString(message.methodName))
                    return "methodName: string expected";
            if (message.version != null && message.hasOwnProperty("version"))
                if (!$util.isInteger(message.version))
                    return "version: integer expected";
            if (message.apiKey != null && message.hasOwnProperty("apiKey")) {
                var error = $root.CMsgWebAPIKey.verify(message.apiKey);
                if (error)
                    return "apiKey." + error;
            }
            if (message.request != null && message.hasOwnProperty("request")) {
                var error = $root.CMsgHttpRequest.verify(message.request);
                if (error)
                    return "request." + error;
            }
            if (message.routingAppId != null && message.hasOwnProperty("routingAppId"))
                if (!$util.isInteger(message.routingAppId))
                    return "routingAppId: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgWebAPIRequest message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgWebAPIRequest
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgWebAPIRequest} CMsgWebAPIRequest
         */
        CMsgWebAPIRequest.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgWebAPIRequest)
                return object;
            var message = new $root.CMsgWebAPIRequest();
            if (object.interfaceName != null)
                message.interfaceName = String(object.interfaceName);
            if (object.methodName != null)
                message.methodName = String(object.methodName);
            if (object.version != null)
                message.version = object.version >>> 0;
            if (object.apiKey != null) {
                if (typeof object.apiKey !== "object")
                    throw TypeError(".CMsgWebAPIRequest.apiKey: object expected");
                message.apiKey = $root.CMsgWebAPIKey.fromObject(object.apiKey);
            }
            if (object.request != null) {
                if (typeof object.request !== "object")
                    throw TypeError(".CMsgWebAPIRequest.request: object expected");
                message.request = $root.CMsgHttpRequest.fromObject(object.request);
            }
            if (object.routingAppId != null)
                message.routingAppId = object.routingAppId >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgWebAPIRequest message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgWebAPIRequest
         * @static
         * @param {CMsgWebAPIRequest} message CMsgWebAPIRequest
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgWebAPIRequest.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.interfaceName = "";
                object.methodName = "";
                object.version = 0;
                object.apiKey = null;
                object.request = null;
                object.routingAppId = 0;
            }
            if (message.interfaceName != null && message.hasOwnProperty("interfaceName"))
                object.interfaceName = message.interfaceName;
            if (message.methodName != null && message.hasOwnProperty("methodName"))
                object.methodName = message.methodName;
            if (message.version != null && message.hasOwnProperty("version"))
                object.version = message.version;
            if (message.apiKey != null && message.hasOwnProperty("apiKey"))
                object.apiKey = $root.CMsgWebAPIKey.toObject(message.apiKey, options);
            if (message.request != null && message.hasOwnProperty("request"))
                object.request = $root.CMsgHttpRequest.toObject(message.request, options);
            if (message.routingAppId != null && message.hasOwnProperty("routingAppId"))
                object.routingAppId = message.routingAppId;
            return object;
        };
    
        /**
         * Converts this CMsgWebAPIRequest to JSON.
         * @function toJSON
         * @memberof CMsgWebAPIRequest
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgWebAPIRequest.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgWebAPIRequest
         * @function getTypeUrl
         * @memberof CMsgWebAPIRequest
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgWebAPIRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgWebAPIRequest";
        };
    
        return CMsgWebAPIRequest;
    })();
    
    $root.CMsgHttpResponse = (function() {
    
        /**
         * Properties of a CMsgHttpResponse.
         * @exports ICMsgHttpResponse
         * @interface ICMsgHttpResponse
         * @property {number|null} [statusCode] CMsgHttpResponse statusCode
         * @property {Array.<CMsgHttpResponse.IResponseHeader>|null} [headers] CMsgHttpResponse headers
         * @property {Uint8Array|null} [body] CMsgHttpResponse body
         */
    
        /**
         * Constructs a new CMsgHttpResponse.
         * @exports CMsgHttpResponse
         * @classdesc Represents a CMsgHttpResponse.
         * @implements ICMsgHttpResponse
         * @constructor
         * @param {ICMsgHttpResponse=} [properties] Properties to set
         */
        function CMsgHttpResponse(properties) {
            this.headers = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgHttpResponse statusCode.
         * @member {number} statusCode
         * @memberof CMsgHttpResponse
         * @instance
         */
        CMsgHttpResponse.prototype.statusCode = 0;
    
        /**
         * CMsgHttpResponse headers.
         * @member {Array.<CMsgHttpResponse.IResponseHeader>} headers
         * @memberof CMsgHttpResponse
         * @instance
         */
        CMsgHttpResponse.prototype.headers = $util.emptyArray;
    
        /**
         * CMsgHttpResponse body.
         * @member {Uint8Array} body
         * @memberof CMsgHttpResponse
         * @instance
         */
        CMsgHttpResponse.prototype.body = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgHttpResponse instance using the specified properties.
         * @function create
         * @memberof CMsgHttpResponse
         * @static
         * @param {ICMsgHttpResponse=} [properties] Properties to set
         * @returns {CMsgHttpResponse} CMsgHttpResponse instance
         */
        CMsgHttpResponse.create = function create(properties) {
            return new CMsgHttpResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgHttpResponse message. Does not implicitly {@link CMsgHttpResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgHttpResponse
         * @static
         * @param {ICMsgHttpResponse} message CMsgHttpResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgHttpResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.statusCode != null && Object.hasOwnProperty.call(message, "statusCode"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.statusCode);
            if (message.headers != null && message.headers.length)
                for (var i = 0; i < message.headers.length; ++i)
                    $root.CMsgHttpResponse.ResponseHeader.encode(message.headers[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.body);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgHttpResponse message, length delimited. Does not implicitly {@link CMsgHttpResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgHttpResponse
         * @static
         * @param {ICMsgHttpResponse} message CMsgHttpResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgHttpResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgHttpResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgHttpResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgHttpResponse} CMsgHttpResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgHttpResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgHttpResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.statusCode = reader.uint32();
                        break;
                    }
                case 2: {
                        if (!(message.headers && message.headers.length))
                            message.headers = [];
                        message.headers.push($root.CMsgHttpResponse.ResponseHeader.decode(reader, reader.uint32()));
                        break;
                    }
                case 3: {
                        message.body = reader.bytes();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgHttpResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgHttpResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgHttpResponse} CMsgHttpResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgHttpResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgHttpResponse message.
         * @function verify
         * @memberof CMsgHttpResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgHttpResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.statusCode != null && message.hasOwnProperty("statusCode"))
                if (!$util.isInteger(message.statusCode))
                    return "statusCode: integer expected";
            if (message.headers != null && message.hasOwnProperty("headers")) {
                if (!Array.isArray(message.headers))
                    return "headers: array expected";
                for (var i = 0; i < message.headers.length; ++i) {
                    var error = $root.CMsgHttpResponse.ResponseHeader.verify(message.headers[i]);
                    if (error)
                        return "headers." + error;
                }
            }
            if (message.body != null && message.hasOwnProperty("body"))
                if (!(message.body && typeof message.body.length === "number" || $util.isString(message.body)))
                    return "body: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgHttpResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgHttpResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgHttpResponse} CMsgHttpResponse
         */
        CMsgHttpResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgHttpResponse)
                return object;
            var message = new $root.CMsgHttpResponse();
            if (object.statusCode != null)
                message.statusCode = object.statusCode >>> 0;
            if (object.headers) {
                if (!Array.isArray(object.headers))
                    throw TypeError(".CMsgHttpResponse.headers: array expected");
                message.headers = [];
                for (var i = 0; i < object.headers.length; ++i) {
                    if (typeof object.headers[i] !== "object")
                        throw TypeError(".CMsgHttpResponse.headers: object expected");
                    message.headers[i] = $root.CMsgHttpResponse.ResponseHeader.fromObject(object.headers[i]);
                }
            }
            if (object.body != null)
                if (typeof object.body === "string")
                    $util.base64.decode(object.body, message.body = $util.newBuffer($util.base64.length(object.body)), 0);
                else if (object.body.length >= 0)
                    message.body = object.body;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgHttpResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgHttpResponse
         * @static
         * @param {CMsgHttpResponse} message CMsgHttpResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgHttpResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.headers = [];
            if (options.defaults) {
                object.statusCode = 0;
                if (options.bytes === String)
                    object.body = "";
                else {
                    object.body = [];
                    if (options.bytes !== Array)
                        object.body = $util.newBuffer(object.body);
                }
            }
            if (message.statusCode != null && message.hasOwnProperty("statusCode"))
                object.statusCode = message.statusCode;
            if (message.headers && message.headers.length) {
                object.headers = [];
                for (var j = 0; j < message.headers.length; ++j)
                    object.headers[j] = $root.CMsgHttpResponse.ResponseHeader.toObject(message.headers[j], options);
            }
            if (message.body != null && message.hasOwnProperty("body"))
                object.body = options.bytes === String ? $util.base64.encode(message.body, 0, message.body.length) : options.bytes === Array ? Array.prototype.slice.call(message.body) : message.body;
            return object;
        };
    
        /**
         * Converts this CMsgHttpResponse to JSON.
         * @function toJSON
         * @memberof CMsgHttpResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgHttpResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgHttpResponse
         * @function getTypeUrl
         * @memberof CMsgHttpResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgHttpResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgHttpResponse";
        };
    
        CMsgHttpResponse.ResponseHeader = (function() {
    
            /**
             * Properties of a ResponseHeader.
             * @memberof CMsgHttpResponse
             * @interface IResponseHeader
             * @property {string|null} [name] ResponseHeader name
             * @property {string|null} [value] ResponseHeader value
             */
    
            /**
             * Constructs a new ResponseHeader.
             * @memberof CMsgHttpResponse
             * @classdesc Represents a ResponseHeader.
             * @implements IResponseHeader
             * @constructor
             * @param {CMsgHttpResponse.IResponseHeader=} [properties] Properties to set
             */
            function ResponseHeader(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * ResponseHeader name.
             * @member {string} name
             * @memberof CMsgHttpResponse.ResponseHeader
             * @instance
             */
            ResponseHeader.prototype.name = "";
    
            /**
             * ResponseHeader value.
             * @member {string} value
             * @memberof CMsgHttpResponse.ResponseHeader
             * @instance
             */
            ResponseHeader.prototype.value = "";
    
            /**
             * Creates a new ResponseHeader instance using the specified properties.
             * @function create
             * @memberof CMsgHttpResponse.ResponseHeader
             * @static
             * @param {CMsgHttpResponse.IResponseHeader=} [properties] Properties to set
             * @returns {CMsgHttpResponse.ResponseHeader} ResponseHeader instance
             */
            ResponseHeader.create = function create(properties) {
                return new ResponseHeader(properties);
            };
    
            /**
             * Encodes the specified ResponseHeader message. Does not implicitly {@link CMsgHttpResponse.ResponseHeader.verify|verify} messages.
             * @function encode
             * @memberof CMsgHttpResponse.ResponseHeader
             * @static
             * @param {CMsgHttpResponse.IResponseHeader} message ResponseHeader message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ResponseHeader.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
                return writer;
            };
    
            /**
             * Encodes the specified ResponseHeader message, length delimited. Does not implicitly {@link CMsgHttpResponse.ResponseHeader.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgHttpResponse.ResponseHeader
             * @static
             * @param {CMsgHttpResponse.IResponseHeader} message ResponseHeader message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ResponseHeader.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a ResponseHeader message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgHttpResponse.ResponseHeader
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgHttpResponse.ResponseHeader} ResponseHeader
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ResponseHeader.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgHttpResponse.ResponseHeader();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.name = reader.string();
                            break;
                        }
                    case 2: {
                            message.value = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a ResponseHeader message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgHttpResponse.ResponseHeader
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgHttpResponse.ResponseHeader} ResponseHeader
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ResponseHeader.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a ResponseHeader message.
             * @function verify
             * @memberof CMsgHttpResponse.ResponseHeader
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ResponseHeader.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.name != null && message.hasOwnProperty("name"))
                    if (!$util.isString(message.name))
                        return "name: string expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (!$util.isString(message.value))
                        return "value: string expected";
                return null;
            };
    
            /**
             * Creates a ResponseHeader message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgHttpResponse.ResponseHeader
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgHttpResponse.ResponseHeader} ResponseHeader
             */
            ResponseHeader.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgHttpResponse.ResponseHeader)
                    return object;
                var message = new $root.CMsgHttpResponse.ResponseHeader();
                if (object.name != null)
                    message.name = String(object.name);
                if (object.value != null)
                    message.value = String(object.value);
                return message;
            };
    
            /**
             * Creates a plain object from a ResponseHeader message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgHttpResponse.ResponseHeader
             * @static
             * @param {CMsgHttpResponse.ResponseHeader} message ResponseHeader
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ResponseHeader.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.name = "";
                    object.value = "";
                }
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = message.value;
                return object;
            };
    
            /**
             * Converts this ResponseHeader to JSON.
             * @function toJSON
             * @memberof CMsgHttpResponse.ResponseHeader
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ResponseHeader.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for ResponseHeader
             * @function getTypeUrl
             * @memberof CMsgHttpResponse.ResponseHeader
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ResponseHeader.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgHttpResponse.ResponseHeader";
            };
    
            return ResponseHeader;
        })();
    
        return CMsgHttpResponse;
    })();
    
    $root.CMsgAMFindAccounts = (function() {
    
        /**
         * Properties of a CMsgAMFindAccounts.
         * @exports ICMsgAMFindAccounts
         * @interface ICMsgAMFindAccounts
         * @property {number|null} [searchType] CMsgAMFindAccounts searchType
         * @property {string|null} [searchString] CMsgAMFindAccounts searchString
         */
    
        /**
         * Constructs a new CMsgAMFindAccounts.
         * @exports CMsgAMFindAccounts
         * @classdesc Represents a CMsgAMFindAccounts.
         * @implements ICMsgAMFindAccounts
         * @constructor
         * @param {ICMsgAMFindAccounts=} [properties] Properties to set
         */
        function CMsgAMFindAccounts(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAMFindAccounts searchType.
         * @member {number} searchType
         * @memberof CMsgAMFindAccounts
         * @instance
         */
        CMsgAMFindAccounts.prototype.searchType = 0;
    
        /**
         * CMsgAMFindAccounts searchString.
         * @member {string} searchString
         * @memberof CMsgAMFindAccounts
         * @instance
         */
        CMsgAMFindAccounts.prototype.searchString = "";
    
        /**
         * Creates a new CMsgAMFindAccounts instance using the specified properties.
         * @function create
         * @memberof CMsgAMFindAccounts
         * @static
         * @param {ICMsgAMFindAccounts=} [properties] Properties to set
         * @returns {CMsgAMFindAccounts} CMsgAMFindAccounts instance
         */
        CMsgAMFindAccounts.create = function create(properties) {
            return new CMsgAMFindAccounts(properties);
        };
    
        /**
         * Encodes the specified CMsgAMFindAccounts message. Does not implicitly {@link CMsgAMFindAccounts.verify|verify} messages.
         * @function encode
         * @memberof CMsgAMFindAccounts
         * @static
         * @param {ICMsgAMFindAccounts} message CMsgAMFindAccounts message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMFindAccounts.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.searchType != null && Object.hasOwnProperty.call(message, "searchType"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.searchType);
            if (message.searchString != null && Object.hasOwnProperty.call(message, "searchString"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.searchString);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAMFindAccounts message, length delimited. Does not implicitly {@link CMsgAMFindAccounts.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAMFindAccounts
         * @static
         * @param {ICMsgAMFindAccounts} message CMsgAMFindAccounts message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMFindAccounts.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAMFindAccounts message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAMFindAccounts
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAMFindAccounts} CMsgAMFindAccounts
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMFindAccounts.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMFindAccounts();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.searchType = reader.uint32();
                        break;
                    }
                case 2: {
                        message.searchString = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAMFindAccounts message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAMFindAccounts
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAMFindAccounts} CMsgAMFindAccounts
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMFindAccounts.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAMFindAccounts message.
         * @function verify
         * @memberof CMsgAMFindAccounts
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAMFindAccounts.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.searchType != null && message.hasOwnProperty("searchType"))
                if (!$util.isInteger(message.searchType))
                    return "searchType: integer expected";
            if (message.searchString != null && message.hasOwnProperty("searchString"))
                if (!$util.isString(message.searchString))
                    return "searchString: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgAMFindAccounts message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAMFindAccounts
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAMFindAccounts} CMsgAMFindAccounts
         */
        CMsgAMFindAccounts.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAMFindAccounts)
                return object;
            var message = new $root.CMsgAMFindAccounts();
            if (object.searchType != null)
                message.searchType = object.searchType >>> 0;
            if (object.searchString != null)
                message.searchString = String(object.searchString);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAMFindAccounts message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAMFindAccounts
         * @static
         * @param {CMsgAMFindAccounts} message CMsgAMFindAccounts
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAMFindAccounts.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.searchType = 0;
                object.searchString = "";
            }
            if (message.searchType != null && message.hasOwnProperty("searchType"))
                object.searchType = message.searchType;
            if (message.searchString != null && message.hasOwnProperty("searchString"))
                object.searchString = message.searchString;
            return object;
        };
    
        /**
         * Converts this CMsgAMFindAccounts to JSON.
         * @function toJSON
         * @memberof CMsgAMFindAccounts
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAMFindAccounts.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAMFindAccounts
         * @function getTypeUrl
         * @memberof CMsgAMFindAccounts
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAMFindAccounts.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAMFindAccounts";
        };
    
        return CMsgAMFindAccounts;
    })();
    
    $root.CMsgAMFindAccountsResponse = (function() {
    
        /**
         * Properties of a CMsgAMFindAccountsResponse.
         * @exports ICMsgAMFindAccountsResponse
         * @interface ICMsgAMFindAccountsResponse
         * @property {Array.<number|Long>|null} [steamId] CMsgAMFindAccountsResponse steamId
         */
    
        /**
         * Constructs a new CMsgAMFindAccountsResponse.
         * @exports CMsgAMFindAccountsResponse
         * @classdesc Represents a CMsgAMFindAccountsResponse.
         * @implements ICMsgAMFindAccountsResponse
         * @constructor
         * @param {ICMsgAMFindAccountsResponse=} [properties] Properties to set
         */
        function CMsgAMFindAccountsResponse(properties) {
            this.steamId = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAMFindAccountsResponse steamId.
         * @member {Array.<number|Long>} steamId
         * @memberof CMsgAMFindAccountsResponse
         * @instance
         */
        CMsgAMFindAccountsResponse.prototype.steamId = $util.emptyArray;
    
        /**
         * Creates a new CMsgAMFindAccountsResponse instance using the specified properties.
         * @function create
         * @memberof CMsgAMFindAccountsResponse
         * @static
         * @param {ICMsgAMFindAccountsResponse=} [properties] Properties to set
         * @returns {CMsgAMFindAccountsResponse} CMsgAMFindAccountsResponse instance
         */
        CMsgAMFindAccountsResponse.create = function create(properties) {
            return new CMsgAMFindAccountsResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgAMFindAccountsResponse message. Does not implicitly {@link CMsgAMFindAccountsResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgAMFindAccountsResponse
         * @static
         * @param {ICMsgAMFindAccountsResponse} message CMsgAMFindAccountsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMFindAccountsResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamId != null && message.steamId.length)
                for (var i = 0; i < message.steamId.length; ++i)
                    writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamId[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAMFindAccountsResponse message, length delimited. Does not implicitly {@link CMsgAMFindAccountsResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAMFindAccountsResponse
         * @static
         * @param {ICMsgAMFindAccountsResponse} message CMsgAMFindAccountsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMFindAccountsResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAMFindAccountsResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAMFindAccountsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAMFindAccountsResponse} CMsgAMFindAccountsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMFindAccountsResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMFindAccountsResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.steamId && message.steamId.length))
                            message.steamId = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.steamId.push(reader.fixed64());
                        } else
                            message.steamId.push(reader.fixed64());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAMFindAccountsResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAMFindAccountsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAMFindAccountsResponse} CMsgAMFindAccountsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMFindAccountsResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAMFindAccountsResponse message.
         * @function verify
         * @memberof CMsgAMFindAccountsResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAMFindAccountsResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamId != null && message.hasOwnProperty("steamId")) {
                if (!Array.isArray(message.steamId))
                    return "steamId: array expected";
                for (var i = 0; i < message.steamId.length; ++i)
                    if (!$util.isInteger(message.steamId[i]) && !(message.steamId[i] && $util.isInteger(message.steamId[i].low) && $util.isInteger(message.steamId[i].high)))
                        return "steamId: integer|Long[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgAMFindAccountsResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAMFindAccountsResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAMFindAccountsResponse} CMsgAMFindAccountsResponse
         */
        CMsgAMFindAccountsResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAMFindAccountsResponse)
                return object;
            var message = new $root.CMsgAMFindAccountsResponse();
            if (object.steamId) {
                if (!Array.isArray(object.steamId))
                    throw TypeError(".CMsgAMFindAccountsResponse.steamId: array expected");
                message.steamId = [];
                for (var i = 0; i < object.steamId.length; ++i)
                    if ($util.Long)
                        (message.steamId[i] = $util.Long.fromValue(object.steamId[i])).unsigned = false;
                    else if (typeof object.steamId[i] === "string")
                        message.steamId[i] = parseInt(object.steamId[i], 10);
                    else if (typeof object.steamId[i] === "number")
                        message.steamId[i] = object.steamId[i];
                    else if (typeof object.steamId[i] === "object")
                        message.steamId[i] = new $util.LongBits(object.steamId[i].low >>> 0, object.steamId[i].high >>> 0).toNumber();
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAMFindAccountsResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAMFindAccountsResponse
         * @static
         * @param {CMsgAMFindAccountsResponse} message CMsgAMFindAccountsResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAMFindAccountsResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.steamId = [];
            if (message.steamId && message.steamId.length) {
                object.steamId = [];
                for (var j = 0; j < message.steamId.length; ++j)
                    if (typeof message.steamId[j] === "number")
                        object.steamId[j] = options.longs === String ? String(message.steamId[j]) : message.steamId[j];
                    else
                        object.steamId[j] = options.longs === String ? $util.Long.prototype.toString.call(message.steamId[j]) : options.longs === Number ? new $util.LongBits(message.steamId[j].low >>> 0, message.steamId[j].high >>> 0).toNumber() : message.steamId[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgAMFindAccountsResponse to JSON.
         * @function toJSON
         * @memberof CMsgAMFindAccountsResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAMFindAccountsResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAMFindAccountsResponse
         * @function getTypeUrl
         * @memberof CMsgAMFindAccountsResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAMFindAccountsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAMFindAccountsResponse";
        };
    
        return CMsgAMFindAccountsResponse;
    })();
    
    $root.CMsgNotifyWatchdog = (function() {
    
        /**
         * Properties of a CMsgNotifyWatchdog.
         * @exports ICMsgNotifyWatchdog
         * @interface ICMsgNotifyWatchdog
         * @property {number|null} [source] CMsgNotifyWatchdog source
         * @property {number|null} [alertType] CMsgNotifyWatchdog alertType
         * @property {number|null} [alertDestination] CMsgNotifyWatchdog alertDestination
         * @property {boolean|null} [critical] CMsgNotifyWatchdog critical
         * @property {number|null} [time] CMsgNotifyWatchdog time
         * @property {number|null} [appid] CMsgNotifyWatchdog appid
         * @property {string|null} [text] CMsgNotifyWatchdog text
         */
    
        /**
         * Constructs a new CMsgNotifyWatchdog.
         * @exports CMsgNotifyWatchdog
         * @classdesc Represents a CMsgNotifyWatchdog.
         * @implements ICMsgNotifyWatchdog
         * @constructor
         * @param {ICMsgNotifyWatchdog=} [properties] Properties to set
         */
        function CMsgNotifyWatchdog(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgNotifyWatchdog source.
         * @member {number} source
         * @memberof CMsgNotifyWatchdog
         * @instance
         */
        CMsgNotifyWatchdog.prototype.source = 0;
    
        /**
         * CMsgNotifyWatchdog alertType.
         * @member {number} alertType
         * @memberof CMsgNotifyWatchdog
         * @instance
         */
        CMsgNotifyWatchdog.prototype.alertType = 0;
    
        /**
         * CMsgNotifyWatchdog alertDestination.
         * @member {number} alertDestination
         * @memberof CMsgNotifyWatchdog
         * @instance
         */
        CMsgNotifyWatchdog.prototype.alertDestination = 0;
    
        /**
         * CMsgNotifyWatchdog critical.
         * @member {boolean} critical
         * @memberof CMsgNotifyWatchdog
         * @instance
         */
        CMsgNotifyWatchdog.prototype.critical = false;
    
        /**
         * CMsgNotifyWatchdog time.
         * @member {number} time
         * @memberof CMsgNotifyWatchdog
         * @instance
         */
        CMsgNotifyWatchdog.prototype.time = 0;
    
        /**
         * CMsgNotifyWatchdog appid.
         * @member {number} appid
         * @memberof CMsgNotifyWatchdog
         * @instance
         */
        CMsgNotifyWatchdog.prototype.appid = 0;
    
        /**
         * CMsgNotifyWatchdog text.
         * @member {string} text
         * @memberof CMsgNotifyWatchdog
         * @instance
         */
        CMsgNotifyWatchdog.prototype.text = "";
    
        /**
         * Creates a new CMsgNotifyWatchdog instance using the specified properties.
         * @function create
         * @memberof CMsgNotifyWatchdog
         * @static
         * @param {ICMsgNotifyWatchdog=} [properties] Properties to set
         * @returns {CMsgNotifyWatchdog} CMsgNotifyWatchdog instance
         */
        CMsgNotifyWatchdog.create = function create(properties) {
            return new CMsgNotifyWatchdog(properties);
        };
    
        /**
         * Encodes the specified CMsgNotifyWatchdog message. Does not implicitly {@link CMsgNotifyWatchdog.verify|verify} messages.
         * @function encode
         * @memberof CMsgNotifyWatchdog
         * @static
         * @param {ICMsgNotifyWatchdog} message CMsgNotifyWatchdog message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgNotifyWatchdog.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.source != null && Object.hasOwnProperty.call(message, "source"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.source);
            if (message.alertType != null && Object.hasOwnProperty.call(message, "alertType"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.alertType);
            if (message.alertDestination != null && Object.hasOwnProperty.call(message, "alertDestination"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.alertDestination);
            if (message.critical != null && Object.hasOwnProperty.call(message, "critical"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.critical);
            if (message.time != null && Object.hasOwnProperty.call(message, "time"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.time);
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.appid);
            if (message.text != null && Object.hasOwnProperty.call(message, "text"))
                writer.uint32(/* id 7, wireType 2 =*/58).string(message.text);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgNotifyWatchdog message, length delimited. Does not implicitly {@link CMsgNotifyWatchdog.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgNotifyWatchdog
         * @static
         * @param {ICMsgNotifyWatchdog} message CMsgNotifyWatchdog message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgNotifyWatchdog.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgNotifyWatchdog message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgNotifyWatchdog
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgNotifyWatchdog} CMsgNotifyWatchdog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgNotifyWatchdog.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgNotifyWatchdog();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.source = reader.uint32();
                        break;
                    }
                case 2: {
                        message.alertType = reader.uint32();
                        break;
                    }
                case 3: {
                        message.alertDestination = reader.uint32();
                        break;
                    }
                case 4: {
                        message.critical = reader.bool();
                        break;
                    }
                case 5: {
                        message.time = reader.uint32();
                        break;
                    }
                case 6: {
                        message.appid = reader.uint32();
                        break;
                    }
                case 7: {
                        message.text = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgNotifyWatchdog message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgNotifyWatchdog
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgNotifyWatchdog} CMsgNotifyWatchdog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgNotifyWatchdog.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgNotifyWatchdog message.
         * @function verify
         * @memberof CMsgNotifyWatchdog
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgNotifyWatchdog.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.source != null && message.hasOwnProperty("source"))
                if (!$util.isInteger(message.source))
                    return "source: integer expected";
            if (message.alertType != null && message.hasOwnProperty("alertType"))
                if (!$util.isInteger(message.alertType))
                    return "alertType: integer expected";
            if (message.alertDestination != null && message.hasOwnProperty("alertDestination"))
                if (!$util.isInteger(message.alertDestination))
                    return "alertDestination: integer expected";
            if (message.critical != null && message.hasOwnProperty("critical"))
                if (typeof message.critical !== "boolean")
                    return "critical: boolean expected";
            if (message.time != null && message.hasOwnProperty("time"))
                if (!$util.isInteger(message.time))
                    return "time: integer expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.text != null && message.hasOwnProperty("text"))
                if (!$util.isString(message.text))
                    return "text: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgNotifyWatchdog message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgNotifyWatchdog
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgNotifyWatchdog} CMsgNotifyWatchdog
         */
        CMsgNotifyWatchdog.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgNotifyWatchdog)
                return object;
            var message = new $root.CMsgNotifyWatchdog();
            if (object.source != null)
                message.source = object.source >>> 0;
            if (object.alertType != null)
                message.alertType = object.alertType >>> 0;
            if (object.alertDestination != null)
                message.alertDestination = object.alertDestination >>> 0;
            if (object.critical != null)
                message.critical = Boolean(object.critical);
            if (object.time != null)
                message.time = object.time >>> 0;
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.text != null)
                message.text = String(object.text);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgNotifyWatchdog message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgNotifyWatchdog
         * @static
         * @param {CMsgNotifyWatchdog} message CMsgNotifyWatchdog
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgNotifyWatchdog.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.source = 0;
                object.alertType = 0;
                object.alertDestination = 0;
                object.critical = false;
                object.time = 0;
                object.appid = 0;
                object.text = "";
            }
            if (message.source != null && message.hasOwnProperty("source"))
                object.source = message.source;
            if (message.alertType != null && message.hasOwnProperty("alertType"))
                object.alertType = message.alertType;
            if (message.alertDestination != null && message.hasOwnProperty("alertDestination"))
                object.alertDestination = message.alertDestination;
            if (message.critical != null && message.hasOwnProperty("critical"))
                object.critical = message.critical;
            if (message.time != null && message.hasOwnProperty("time"))
                object.time = message.time;
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.text != null && message.hasOwnProperty("text"))
                object.text = message.text;
            return object;
        };
    
        /**
         * Converts this CMsgNotifyWatchdog to JSON.
         * @function toJSON
         * @memberof CMsgNotifyWatchdog
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgNotifyWatchdog.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgNotifyWatchdog
         * @function getTypeUrl
         * @memberof CMsgNotifyWatchdog
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgNotifyWatchdog.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgNotifyWatchdog";
        };
    
        return CMsgNotifyWatchdog;
    })();
    
    $root.CMsgAMGetLicenses = (function() {
    
        /**
         * Properties of a CMsgAMGetLicenses.
         * @exports ICMsgAMGetLicenses
         * @interface ICMsgAMGetLicenses
         * @property {number|Long|null} [steamid] CMsgAMGetLicenses steamid
         */
    
        /**
         * Constructs a new CMsgAMGetLicenses.
         * @exports CMsgAMGetLicenses
         * @classdesc Represents a CMsgAMGetLicenses.
         * @implements ICMsgAMGetLicenses
         * @constructor
         * @param {ICMsgAMGetLicenses=} [properties] Properties to set
         */
        function CMsgAMGetLicenses(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAMGetLicenses steamid.
         * @member {number|Long} steamid
         * @memberof CMsgAMGetLicenses
         * @instance
         */
        CMsgAMGetLicenses.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgAMGetLicenses instance using the specified properties.
         * @function create
         * @memberof CMsgAMGetLicenses
         * @static
         * @param {ICMsgAMGetLicenses=} [properties] Properties to set
         * @returns {CMsgAMGetLicenses} CMsgAMGetLicenses instance
         */
        CMsgAMGetLicenses.create = function create(properties) {
            return new CMsgAMGetLicenses(properties);
        };
    
        /**
         * Encodes the specified CMsgAMGetLicenses message. Does not implicitly {@link CMsgAMGetLicenses.verify|verify} messages.
         * @function encode
         * @memberof CMsgAMGetLicenses
         * @static
         * @param {ICMsgAMGetLicenses} message CMsgAMGetLicenses message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMGetLicenses.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAMGetLicenses message, length delimited. Does not implicitly {@link CMsgAMGetLicenses.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAMGetLicenses
         * @static
         * @param {ICMsgAMGetLicenses} message CMsgAMGetLicenses message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMGetLicenses.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAMGetLicenses message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAMGetLicenses
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAMGetLicenses} CMsgAMGetLicenses
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMGetLicenses.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMGetLicenses();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamid = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAMGetLicenses message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAMGetLicenses
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAMGetLicenses} CMsgAMGetLicenses
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMGetLicenses.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAMGetLicenses message.
         * @function verify
         * @memberof CMsgAMGetLicenses
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAMGetLicenses.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgAMGetLicenses message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAMGetLicenses
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAMGetLicenses} CMsgAMGetLicenses
         */
        CMsgAMGetLicenses.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAMGetLicenses)
                return object;
            var message = new $root.CMsgAMGetLicenses();
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAMGetLicenses message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAMGetLicenses
         * @static
         * @param {CMsgAMGetLicenses} message CMsgAMGetLicenses
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAMGetLicenses.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            return object;
        };
    
        /**
         * Converts this CMsgAMGetLicenses to JSON.
         * @function toJSON
         * @memberof CMsgAMGetLicenses
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAMGetLicenses.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAMGetLicenses
         * @function getTypeUrl
         * @memberof CMsgAMGetLicenses
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAMGetLicenses.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAMGetLicenses";
        };
    
        return CMsgAMGetLicenses;
    })();
    
    $root.CMsgPackageLicense = (function() {
    
        /**
         * Properties of a CMsgPackageLicense.
         * @exports ICMsgPackageLicense
         * @interface ICMsgPackageLicense
         * @property {number|null} [packageId] CMsgPackageLicense packageId
         * @property {number|null} [timeCreated] CMsgPackageLicense timeCreated
         * @property {number|null} [ownerId] CMsgPackageLicense ownerId
         */
    
        /**
         * Constructs a new CMsgPackageLicense.
         * @exports CMsgPackageLicense
         * @classdesc Represents a CMsgPackageLicense.
         * @implements ICMsgPackageLicense
         * @constructor
         * @param {ICMsgPackageLicense=} [properties] Properties to set
         */
        function CMsgPackageLicense(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgPackageLicense packageId.
         * @member {number} packageId
         * @memberof CMsgPackageLicense
         * @instance
         */
        CMsgPackageLicense.prototype.packageId = 0;
    
        /**
         * CMsgPackageLicense timeCreated.
         * @member {number} timeCreated
         * @memberof CMsgPackageLicense
         * @instance
         */
        CMsgPackageLicense.prototype.timeCreated = 0;
    
        /**
         * CMsgPackageLicense ownerId.
         * @member {number} ownerId
         * @memberof CMsgPackageLicense
         * @instance
         */
        CMsgPackageLicense.prototype.ownerId = 0;
    
        /**
         * Creates a new CMsgPackageLicense instance using the specified properties.
         * @function create
         * @memberof CMsgPackageLicense
         * @static
         * @param {ICMsgPackageLicense=} [properties] Properties to set
         * @returns {CMsgPackageLicense} CMsgPackageLicense instance
         */
        CMsgPackageLicense.create = function create(properties) {
            return new CMsgPackageLicense(properties);
        };
    
        /**
         * Encodes the specified CMsgPackageLicense message. Does not implicitly {@link CMsgPackageLicense.verify|verify} messages.
         * @function encode
         * @memberof CMsgPackageLicense
         * @static
         * @param {ICMsgPackageLicense} message CMsgPackageLicense message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgPackageLicense.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.packageId != null && Object.hasOwnProperty.call(message, "packageId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.packageId);
            if (message.timeCreated != null && Object.hasOwnProperty.call(message, "timeCreated"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.timeCreated);
            if (message.ownerId != null && Object.hasOwnProperty.call(message, "ownerId"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.ownerId);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgPackageLicense message, length delimited. Does not implicitly {@link CMsgPackageLicense.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgPackageLicense
         * @static
         * @param {ICMsgPackageLicense} message CMsgPackageLicense message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgPackageLicense.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgPackageLicense message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgPackageLicense
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgPackageLicense} CMsgPackageLicense
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgPackageLicense.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgPackageLicense();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.packageId = reader.uint32();
                        break;
                    }
                case 2: {
                        message.timeCreated = reader.uint32();
                        break;
                    }
                case 3: {
                        message.ownerId = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgPackageLicense message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgPackageLicense
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgPackageLicense} CMsgPackageLicense
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgPackageLicense.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgPackageLicense message.
         * @function verify
         * @memberof CMsgPackageLicense
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgPackageLicense.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.packageId != null && message.hasOwnProperty("packageId"))
                if (!$util.isInteger(message.packageId))
                    return "packageId: integer expected";
            if (message.timeCreated != null && message.hasOwnProperty("timeCreated"))
                if (!$util.isInteger(message.timeCreated))
                    return "timeCreated: integer expected";
            if (message.ownerId != null && message.hasOwnProperty("ownerId"))
                if (!$util.isInteger(message.ownerId))
                    return "ownerId: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgPackageLicense message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgPackageLicense
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgPackageLicense} CMsgPackageLicense
         */
        CMsgPackageLicense.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgPackageLicense)
                return object;
            var message = new $root.CMsgPackageLicense();
            if (object.packageId != null)
                message.packageId = object.packageId >>> 0;
            if (object.timeCreated != null)
                message.timeCreated = object.timeCreated >>> 0;
            if (object.ownerId != null)
                message.ownerId = object.ownerId >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgPackageLicense message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgPackageLicense
         * @static
         * @param {CMsgPackageLicense} message CMsgPackageLicense
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgPackageLicense.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.packageId = 0;
                object.timeCreated = 0;
                object.ownerId = 0;
            }
            if (message.packageId != null && message.hasOwnProperty("packageId"))
                object.packageId = message.packageId;
            if (message.timeCreated != null && message.hasOwnProperty("timeCreated"))
                object.timeCreated = message.timeCreated;
            if (message.ownerId != null && message.hasOwnProperty("ownerId"))
                object.ownerId = message.ownerId;
            return object;
        };
    
        /**
         * Converts this CMsgPackageLicense to JSON.
         * @function toJSON
         * @memberof CMsgPackageLicense
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgPackageLicense.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgPackageLicense
         * @function getTypeUrl
         * @memberof CMsgPackageLicense
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgPackageLicense.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgPackageLicense";
        };
    
        return CMsgPackageLicense;
    })();
    
    $root.CMsgAMGetLicensesResponse = (function() {
    
        /**
         * Properties of a CMsgAMGetLicensesResponse.
         * @exports ICMsgAMGetLicensesResponse
         * @interface ICMsgAMGetLicensesResponse
         * @property {Array.<ICMsgPackageLicense>|null} [license] CMsgAMGetLicensesResponse license
         * @property {number|null} [result] CMsgAMGetLicensesResponse result
         */
    
        /**
         * Constructs a new CMsgAMGetLicensesResponse.
         * @exports CMsgAMGetLicensesResponse
         * @classdesc Represents a CMsgAMGetLicensesResponse.
         * @implements ICMsgAMGetLicensesResponse
         * @constructor
         * @param {ICMsgAMGetLicensesResponse=} [properties] Properties to set
         */
        function CMsgAMGetLicensesResponse(properties) {
            this.license = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAMGetLicensesResponse license.
         * @member {Array.<ICMsgPackageLicense>} license
         * @memberof CMsgAMGetLicensesResponse
         * @instance
         */
        CMsgAMGetLicensesResponse.prototype.license = $util.emptyArray;
    
        /**
         * CMsgAMGetLicensesResponse result.
         * @member {number} result
         * @memberof CMsgAMGetLicensesResponse
         * @instance
         */
        CMsgAMGetLicensesResponse.prototype.result = 0;
    
        /**
         * Creates a new CMsgAMGetLicensesResponse instance using the specified properties.
         * @function create
         * @memberof CMsgAMGetLicensesResponse
         * @static
         * @param {ICMsgAMGetLicensesResponse=} [properties] Properties to set
         * @returns {CMsgAMGetLicensesResponse} CMsgAMGetLicensesResponse instance
         */
        CMsgAMGetLicensesResponse.create = function create(properties) {
            return new CMsgAMGetLicensesResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgAMGetLicensesResponse message. Does not implicitly {@link CMsgAMGetLicensesResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgAMGetLicensesResponse
         * @static
         * @param {ICMsgAMGetLicensesResponse} message CMsgAMGetLicensesResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMGetLicensesResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.license != null && message.license.length)
                for (var i = 0; i < message.license.length; ++i)
                    $root.CMsgPackageLicense.encode(message.license[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.result != null && Object.hasOwnProperty.call(message, "result"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.result);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAMGetLicensesResponse message, length delimited. Does not implicitly {@link CMsgAMGetLicensesResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAMGetLicensesResponse
         * @static
         * @param {ICMsgAMGetLicensesResponse} message CMsgAMGetLicensesResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMGetLicensesResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAMGetLicensesResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAMGetLicensesResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAMGetLicensesResponse} CMsgAMGetLicensesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMGetLicensesResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMGetLicensesResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.license && message.license.length))
                            message.license = [];
                        message.license.push($root.CMsgPackageLicense.decode(reader, reader.uint32()));
                        break;
                    }
                case 2: {
                        message.result = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAMGetLicensesResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAMGetLicensesResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAMGetLicensesResponse} CMsgAMGetLicensesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMGetLicensesResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAMGetLicensesResponse message.
         * @function verify
         * @memberof CMsgAMGetLicensesResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAMGetLicensesResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.license != null && message.hasOwnProperty("license")) {
                if (!Array.isArray(message.license))
                    return "license: array expected";
                for (var i = 0; i < message.license.length; ++i) {
                    var error = $root.CMsgPackageLicense.verify(message.license[i]);
                    if (error)
                        return "license." + error;
                }
            }
            if (message.result != null && message.hasOwnProperty("result"))
                if (!$util.isInteger(message.result))
                    return "result: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgAMGetLicensesResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAMGetLicensesResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAMGetLicensesResponse} CMsgAMGetLicensesResponse
         */
        CMsgAMGetLicensesResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAMGetLicensesResponse)
                return object;
            var message = new $root.CMsgAMGetLicensesResponse();
            if (object.license) {
                if (!Array.isArray(object.license))
                    throw TypeError(".CMsgAMGetLicensesResponse.license: array expected");
                message.license = [];
                for (var i = 0; i < object.license.length; ++i) {
                    if (typeof object.license[i] !== "object")
                        throw TypeError(".CMsgAMGetLicensesResponse.license: object expected");
                    message.license[i] = $root.CMsgPackageLicense.fromObject(object.license[i]);
                }
            }
            if (object.result != null)
                message.result = object.result >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAMGetLicensesResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAMGetLicensesResponse
         * @static
         * @param {CMsgAMGetLicensesResponse} message CMsgAMGetLicensesResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAMGetLicensesResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.license = [];
            if (options.defaults)
                object.result = 0;
            if (message.license && message.license.length) {
                object.license = [];
                for (var j = 0; j < message.license.length; ++j)
                    object.license[j] = $root.CMsgPackageLicense.toObject(message.license[j], options);
            }
            if (message.result != null && message.hasOwnProperty("result"))
                object.result = message.result;
            return object;
        };
    
        /**
         * Converts this CMsgAMGetLicensesResponse to JSON.
         * @function toJSON
         * @memberof CMsgAMGetLicensesResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAMGetLicensesResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAMGetLicensesResponse
         * @function getTypeUrl
         * @memberof CMsgAMGetLicensesResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAMGetLicensesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAMGetLicensesResponse";
        };
    
        return CMsgAMGetLicensesResponse;
    })();
    
    $root.CMsgAMGetUserGameStats = (function() {
    
        /**
         * Properties of a CMsgAMGetUserGameStats.
         * @exports ICMsgAMGetUserGameStats
         * @interface ICMsgAMGetUserGameStats
         * @property {number|Long|null} [steamId] CMsgAMGetUserGameStats steamId
         * @property {number|Long|null} [gameId] CMsgAMGetUserGameStats gameId
         * @property {Array.<number>|null} [stats] CMsgAMGetUserGameStats stats
         */
    
        /**
         * Constructs a new CMsgAMGetUserGameStats.
         * @exports CMsgAMGetUserGameStats
         * @classdesc Represents a CMsgAMGetUserGameStats.
         * @implements ICMsgAMGetUserGameStats
         * @constructor
         * @param {ICMsgAMGetUserGameStats=} [properties] Properties to set
         */
        function CMsgAMGetUserGameStats(properties) {
            this.stats = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAMGetUserGameStats steamId.
         * @member {number|Long} steamId
         * @memberof CMsgAMGetUserGameStats
         * @instance
         */
        CMsgAMGetUserGameStats.prototype.steamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgAMGetUserGameStats gameId.
         * @member {number|Long} gameId
         * @memberof CMsgAMGetUserGameStats
         * @instance
         */
        CMsgAMGetUserGameStats.prototype.gameId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgAMGetUserGameStats stats.
         * @member {Array.<number>} stats
         * @memberof CMsgAMGetUserGameStats
         * @instance
         */
        CMsgAMGetUserGameStats.prototype.stats = $util.emptyArray;
    
        /**
         * Creates a new CMsgAMGetUserGameStats instance using the specified properties.
         * @function create
         * @memberof CMsgAMGetUserGameStats
         * @static
         * @param {ICMsgAMGetUserGameStats=} [properties] Properties to set
         * @returns {CMsgAMGetUserGameStats} CMsgAMGetUserGameStats instance
         */
        CMsgAMGetUserGameStats.create = function create(properties) {
            return new CMsgAMGetUserGameStats(properties);
        };
    
        /**
         * Encodes the specified CMsgAMGetUserGameStats message. Does not implicitly {@link CMsgAMGetUserGameStats.verify|verify} messages.
         * @function encode
         * @memberof CMsgAMGetUserGameStats
         * @static
         * @param {ICMsgAMGetUserGameStats} message CMsgAMGetUserGameStats message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMGetUserGameStats.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamId != null && Object.hasOwnProperty.call(message, "steamId"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamId);
            if (message.gameId != null && Object.hasOwnProperty.call(message, "gameId"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.gameId);
            if (message.stats != null && message.stats.length)
                for (var i = 0; i < message.stats.length; ++i)
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.stats[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAMGetUserGameStats message, length delimited. Does not implicitly {@link CMsgAMGetUserGameStats.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAMGetUserGameStats
         * @static
         * @param {ICMsgAMGetUserGameStats} message CMsgAMGetUserGameStats message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMGetUserGameStats.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAMGetUserGameStats message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAMGetUserGameStats
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAMGetUserGameStats} CMsgAMGetUserGameStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMGetUserGameStats.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMGetUserGameStats();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamId = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.gameId = reader.fixed64();
                        break;
                    }
                case 3: {
                        if (!(message.stats && message.stats.length))
                            message.stats = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.stats.push(reader.uint32());
                        } else
                            message.stats.push(reader.uint32());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAMGetUserGameStats message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAMGetUserGameStats
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAMGetUserGameStats} CMsgAMGetUserGameStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMGetUserGameStats.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAMGetUserGameStats message.
         * @function verify
         * @memberof CMsgAMGetUserGameStats
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAMGetUserGameStats.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (!$util.isInteger(message.steamId) && !(message.steamId && $util.isInteger(message.steamId.low) && $util.isInteger(message.steamId.high)))
                    return "steamId: integer|Long expected";
            if (message.gameId != null && message.hasOwnProperty("gameId"))
                if (!$util.isInteger(message.gameId) && !(message.gameId && $util.isInteger(message.gameId.low) && $util.isInteger(message.gameId.high)))
                    return "gameId: integer|Long expected";
            if (message.stats != null && message.hasOwnProperty("stats")) {
                if (!Array.isArray(message.stats))
                    return "stats: array expected";
                for (var i = 0; i < message.stats.length; ++i)
                    if (!$util.isInteger(message.stats[i]))
                        return "stats: integer[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgAMGetUserGameStats message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAMGetUserGameStats
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAMGetUserGameStats} CMsgAMGetUserGameStats
         */
        CMsgAMGetUserGameStats.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAMGetUserGameStats)
                return object;
            var message = new $root.CMsgAMGetUserGameStats();
            if (object.steamId != null)
                if ($util.Long)
                    (message.steamId = $util.Long.fromValue(object.steamId)).unsigned = false;
                else if (typeof object.steamId === "string")
                    message.steamId = parseInt(object.steamId, 10);
                else if (typeof object.steamId === "number")
                    message.steamId = object.steamId;
                else if (typeof object.steamId === "object")
                    message.steamId = new $util.LongBits(object.steamId.low >>> 0, object.steamId.high >>> 0).toNumber();
            if (object.gameId != null)
                if ($util.Long)
                    (message.gameId = $util.Long.fromValue(object.gameId)).unsigned = false;
                else if (typeof object.gameId === "string")
                    message.gameId = parseInt(object.gameId, 10);
                else if (typeof object.gameId === "number")
                    message.gameId = object.gameId;
                else if (typeof object.gameId === "object")
                    message.gameId = new $util.LongBits(object.gameId.low >>> 0, object.gameId.high >>> 0).toNumber();
            if (object.stats) {
                if (!Array.isArray(object.stats))
                    throw TypeError(".CMsgAMGetUserGameStats.stats: array expected");
                message.stats = [];
                for (var i = 0; i < object.stats.length; ++i)
                    message.stats[i] = object.stats[i] >>> 0;
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAMGetUserGameStats message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAMGetUserGameStats
         * @static
         * @param {CMsgAMGetUserGameStats} message CMsgAMGetUserGameStats
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAMGetUserGameStats.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.stats = [];
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamId = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.gameId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.gameId = options.longs === String ? "0" : 0;
            }
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (typeof message.steamId === "number")
                    object.steamId = options.longs === String ? String(message.steamId) : message.steamId;
                else
                    object.steamId = options.longs === String ? $util.Long.prototype.toString.call(message.steamId) : options.longs === Number ? new $util.LongBits(message.steamId.low >>> 0, message.steamId.high >>> 0).toNumber() : message.steamId;
            if (message.gameId != null && message.hasOwnProperty("gameId"))
                if (typeof message.gameId === "number")
                    object.gameId = options.longs === String ? String(message.gameId) : message.gameId;
                else
                    object.gameId = options.longs === String ? $util.Long.prototype.toString.call(message.gameId) : options.longs === Number ? new $util.LongBits(message.gameId.low >>> 0, message.gameId.high >>> 0).toNumber() : message.gameId;
            if (message.stats && message.stats.length) {
                object.stats = [];
                for (var j = 0; j < message.stats.length; ++j)
                    object.stats[j] = message.stats[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgAMGetUserGameStats to JSON.
         * @function toJSON
         * @memberof CMsgAMGetUserGameStats
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAMGetUserGameStats.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAMGetUserGameStats
         * @function getTypeUrl
         * @memberof CMsgAMGetUserGameStats
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAMGetUserGameStats.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAMGetUserGameStats";
        };
    
        return CMsgAMGetUserGameStats;
    })();
    
    $root.CMsgAMGetUserGameStatsResponse = (function() {
    
        /**
         * Properties of a CMsgAMGetUserGameStatsResponse.
         * @exports ICMsgAMGetUserGameStatsResponse
         * @interface ICMsgAMGetUserGameStatsResponse
         * @property {number|Long|null} [steamId] CMsgAMGetUserGameStatsResponse steamId
         * @property {number|Long|null} [gameId] CMsgAMGetUserGameStatsResponse gameId
         * @property {number|null} [eresult] CMsgAMGetUserGameStatsResponse eresult
         * @property {Array.<CMsgAMGetUserGameStatsResponse.IStats>|null} [stats] CMsgAMGetUserGameStatsResponse stats
         * @property {Array.<CMsgAMGetUserGameStatsResponse.IAchievement_Blocks>|null} [achievementBlocks] CMsgAMGetUserGameStatsResponse achievementBlocks
         */
    
        /**
         * Constructs a new CMsgAMGetUserGameStatsResponse.
         * @exports CMsgAMGetUserGameStatsResponse
         * @classdesc Represents a CMsgAMGetUserGameStatsResponse.
         * @implements ICMsgAMGetUserGameStatsResponse
         * @constructor
         * @param {ICMsgAMGetUserGameStatsResponse=} [properties] Properties to set
         */
        function CMsgAMGetUserGameStatsResponse(properties) {
            this.stats = [];
            this.achievementBlocks = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAMGetUserGameStatsResponse steamId.
         * @member {number|Long} steamId
         * @memberof CMsgAMGetUserGameStatsResponse
         * @instance
         */
        CMsgAMGetUserGameStatsResponse.prototype.steamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgAMGetUserGameStatsResponse gameId.
         * @member {number|Long} gameId
         * @memberof CMsgAMGetUserGameStatsResponse
         * @instance
         */
        CMsgAMGetUserGameStatsResponse.prototype.gameId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgAMGetUserGameStatsResponse eresult.
         * @member {number} eresult
         * @memberof CMsgAMGetUserGameStatsResponse
         * @instance
         */
        CMsgAMGetUserGameStatsResponse.prototype.eresult = 2;
    
        /**
         * CMsgAMGetUserGameStatsResponse stats.
         * @member {Array.<CMsgAMGetUserGameStatsResponse.IStats>} stats
         * @memberof CMsgAMGetUserGameStatsResponse
         * @instance
         */
        CMsgAMGetUserGameStatsResponse.prototype.stats = $util.emptyArray;
    
        /**
         * CMsgAMGetUserGameStatsResponse achievementBlocks.
         * @member {Array.<CMsgAMGetUserGameStatsResponse.IAchievement_Blocks>} achievementBlocks
         * @memberof CMsgAMGetUserGameStatsResponse
         * @instance
         */
        CMsgAMGetUserGameStatsResponse.prototype.achievementBlocks = $util.emptyArray;
    
        /**
         * Creates a new CMsgAMGetUserGameStatsResponse instance using the specified properties.
         * @function create
         * @memberof CMsgAMGetUserGameStatsResponse
         * @static
         * @param {ICMsgAMGetUserGameStatsResponse=} [properties] Properties to set
         * @returns {CMsgAMGetUserGameStatsResponse} CMsgAMGetUserGameStatsResponse instance
         */
        CMsgAMGetUserGameStatsResponse.create = function create(properties) {
            return new CMsgAMGetUserGameStatsResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgAMGetUserGameStatsResponse message. Does not implicitly {@link CMsgAMGetUserGameStatsResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgAMGetUserGameStatsResponse
         * @static
         * @param {ICMsgAMGetUserGameStatsResponse} message CMsgAMGetUserGameStatsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMGetUserGameStatsResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamId != null && Object.hasOwnProperty.call(message, "steamId"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamId);
            if (message.gameId != null && Object.hasOwnProperty.call(message, "gameId"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.gameId);
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.eresult);
            if (message.stats != null && message.stats.length)
                for (var i = 0; i < message.stats.length; ++i)
                    $root.CMsgAMGetUserGameStatsResponse.Stats.encode(message.stats[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            if (message.achievementBlocks != null && message.achievementBlocks.length)
                for (var i = 0; i < message.achievementBlocks.length; ++i)
                    $root.CMsgAMGetUserGameStatsResponse.Achievement_Blocks.encode(message.achievementBlocks[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAMGetUserGameStatsResponse message, length delimited. Does not implicitly {@link CMsgAMGetUserGameStatsResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAMGetUserGameStatsResponse
         * @static
         * @param {ICMsgAMGetUserGameStatsResponse} message CMsgAMGetUserGameStatsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMGetUserGameStatsResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAMGetUserGameStatsResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAMGetUserGameStatsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAMGetUserGameStatsResponse} CMsgAMGetUserGameStatsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMGetUserGameStatsResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMGetUserGameStatsResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamId = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.gameId = reader.fixed64();
                        break;
                    }
                case 3: {
                        message.eresult = reader.int32();
                        break;
                    }
                case 4: {
                        if (!(message.stats && message.stats.length))
                            message.stats = [];
                        message.stats.push($root.CMsgAMGetUserGameStatsResponse.Stats.decode(reader, reader.uint32()));
                        break;
                    }
                case 5: {
                        if (!(message.achievementBlocks && message.achievementBlocks.length))
                            message.achievementBlocks = [];
                        message.achievementBlocks.push($root.CMsgAMGetUserGameStatsResponse.Achievement_Blocks.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAMGetUserGameStatsResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAMGetUserGameStatsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAMGetUserGameStatsResponse} CMsgAMGetUserGameStatsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMGetUserGameStatsResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAMGetUserGameStatsResponse message.
         * @function verify
         * @memberof CMsgAMGetUserGameStatsResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAMGetUserGameStatsResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (!$util.isInteger(message.steamId) && !(message.steamId && $util.isInteger(message.steamId.low) && $util.isInteger(message.steamId.high)))
                    return "steamId: integer|Long expected";
            if (message.gameId != null && message.hasOwnProperty("gameId"))
                if (!$util.isInteger(message.gameId) && !(message.gameId && $util.isInteger(message.gameId.low) && $util.isInteger(message.gameId.high)))
                    return "gameId: integer|Long expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.stats != null && message.hasOwnProperty("stats")) {
                if (!Array.isArray(message.stats))
                    return "stats: array expected";
                for (var i = 0; i < message.stats.length; ++i) {
                    var error = $root.CMsgAMGetUserGameStatsResponse.Stats.verify(message.stats[i]);
                    if (error)
                        return "stats." + error;
                }
            }
            if (message.achievementBlocks != null && message.hasOwnProperty("achievementBlocks")) {
                if (!Array.isArray(message.achievementBlocks))
                    return "achievementBlocks: array expected";
                for (var i = 0; i < message.achievementBlocks.length; ++i) {
                    var error = $root.CMsgAMGetUserGameStatsResponse.Achievement_Blocks.verify(message.achievementBlocks[i]);
                    if (error)
                        return "achievementBlocks." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgAMGetUserGameStatsResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAMGetUserGameStatsResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAMGetUserGameStatsResponse} CMsgAMGetUserGameStatsResponse
         */
        CMsgAMGetUserGameStatsResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAMGetUserGameStatsResponse)
                return object;
            var message = new $root.CMsgAMGetUserGameStatsResponse();
            if (object.steamId != null)
                if ($util.Long)
                    (message.steamId = $util.Long.fromValue(object.steamId)).unsigned = false;
                else if (typeof object.steamId === "string")
                    message.steamId = parseInt(object.steamId, 10);
                else if (typeof object.steamId === "number")
                    message.steamId = object.steamId;
                else if (typeof object.steamId === "object")
                    message.steamId = new $util.LongBits(object.steamId.low >>> 0, object.steamId.high >>> 0).toNumber();
            if (object.gameId != null)
                if ($util.Long)
                    (message.gameId = $util.Long.fromValue(object.gameId)).unsigned = false;
                else if (typeof object.gameId === "string")
                    message.gameId = parseInt(object.gameId, 10);
                else if (typeof object.gameId === "number")
                    message.gameId = object.gameId;
                else if (typeof object.gameId === "object")
                    message.gameId = new $util.LongBits(object.gameId.low >>> 0, object.gameId.high >>> 0).toNumber();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.stats) {
                if (!Array.isArray(object.stats))
                    throw TypeError(".CMsgAMGetUserGameStatsResponse.stats: array expected");
                message.stats = [];
                for (var i = 0; i < object.stats.length; ++i) {
                    if (typeof object.stats[i] !== "object")
                        throw TypeError(".CMsgAMGetUserGameStatsResponse.stats: object expected");
                    message.stats[i] = $root.CMsgAMGetUserGameStatsResponse.Stats.fromObject(object.stats[i]);
                }
            }
            if (object.achievementBlocks) {
                if (!Array.isArray(object.achievementBlocks))
                    throw TypeError(".CMsgAMGetUserGameStatsResponse.achievementBlocks: array expected");
                message.achievementBlocks = [];
                for (var i = 0; i < object.achievementBlocks.length; ++i) {
                    if (typeof object.achievementBlocks[i] !== "object")
                        throw TypeError(".CMsgAMGetUserGameStatsResponse.achievementBlocks: object expected");
                    message.achievementBlocks[i] = $root.CMsgAMGetUserGameStatsResponse.Achievement_Blocks.fromObject(object.achievementBlocks[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAMGetUserGameStatsResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAMGetUserGameStatsResponse
         * @static
         * @param {CMsgAMGetUserGameStatsResponse} message CMsgAMGetUserGameStatsResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAMGetUserGameStatsResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.stats = [];
                object.achievementBlocks = [];
            }
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamId = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.gameId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.gameId = options.longs === String ? "0" : 0;
                object.eresult = 2;
            }
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (typeof message.steamId === "number")
                    object.steamId = options.longs === String ? String(message.steamId) : message.steamId;
                else
                    object.steamId = options.longs === String ? $util.Long.prototype.toString.call(message.steamId) : options.longs === Number ? new $util.LongBits(message.steamId.low >>> 0, message.steamId.high >>> 0).toNumber() : message.steamId;
            if (message.gameId != null && message.hasOwnProperty("gameId"))
                if (typeof message.gameId === "number")
                    object.gameId = options.longs === String ? String(message.gameId) : message.gameId;
                else
                    object.gameId = options.longs === String ? $util.Long.prototype.toString.call(message.gameId) : options.longs === Number ? new $util.LongBits(message.gameId.low >>> 0, message.gameId.high >>> 0).toNumber() : message.gameId;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.stats && message.stats.length) {
                object.stats = [];
                for (var j = 0; j < message.stats.length; ++j)
                    object.stats[j] = $root.CMsgAMGetUserGameStatsResponse.Stats.toObject(message.stats[j], options);
            }
            if (message.achievementBlocks && message.achievementBlocks.length) {
                object.achievementBlocks = [];
                for (var j = 0; j < message.achievementBlocks.length; ++j)
                    object.achievementBlocks[j] = $root.CMsgAMGetUserGameStatsResponse.Achievement_Blocks.toObject(message.achievementBlocks[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgAMGetUserGameStatsResponse to JSON.
         * @function toJSON
         * @memberof CMsgAMGetUserGameStatsResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAMGetUserGameStatsResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAMGetUserGameStatsResponse
         * @function getTypeUrl
         * @memberof CMsgAMGetUserGameStatsResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAMGetUserGameStatsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAMGetUserGameStatsResponse";
        };
    
        CMsgAMGetUserGameStatsResponse.Stats = (function() {
    
            /**
             * Properties of a Stats.
             * @memberof CMsgAMGetUserGameStatsResponse
             * @interface IStats
             * @property {number|null} [statId] Stats statId
             * @property {number|null} [statValue] Stats statValue
             */
    
            /**
             * Constructs a new Stats.
             * @memberof CMsgAMGetUserGameStatsResponse
             * @classdesc Represents a Stats.
             * @implements IStats
             * @constructor
             * @param {CMsgAMGetUserGameStatsResponse.IStats=} [properties] Properties to set
             */
            function Stats(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Stats statId.
             * @member {number} statId
             * @memberof CMsgAMGetUserGameStatsResponse.Stats
             * @instance
             */
            Stats.prototype.statId = 0;
    
            /**
             * Stats statValue.
             * @member {number} statValue
             * @memberof CMsgAMGetUserGameStatsResponse.Stats
             * @instance
             */
            Stats.prototype.statValue = 0;
    
            /**
             * Creates a new Stats instance using the specified properties.
             * @function create
             * @memberof CMsgAMGetUserGameStatsResponse.Stats
             * @static
             * @param {CMsgAMGetUserGameStatsResponse.IStats=} [properties] Properties to set
             * @returns {CMsgAMGetUserGameStatsResponse.Stats} Stats instance
             */
            Stats.create = function create(properties) {
                return new Stats(properties);
            };
    
            /**
             * Encodes the specified Stats message. Does not implicitly {@link CMsgAMGetUserGameStatsResponse.Stats.verify|verify} messages.
             * @function encode
             * @memberof CMsgAMGetUserGameStatsResponse.Stats
             * @static
             * @param {CMsgAMGetUserGameStatsResponse.IStats} message Stats message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Stats.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.statId != null && Object.hasOwnProperty.call(message, "statId"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.statId);
                if (message.statValue != null && Object.hasOwnProperty.call(message, "statValue"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.statValue);
                return writer;
            };
    
            /**
             * Encodes the specified Stats message, length delimited. Does not implicitly {@link CMsgAMGetUserGameStatsResponse.Stats.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgAMGetUserGameStatsResponse.Stats
             * @static
             * @param {CMsgAMGetUserGameStatsResponse.IStats} message Stats message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Stats.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Stats message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgAMGetUserGameStatsResponse.Stats
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgAMGetUserGameStatsResponse.Stats} Stats
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Stats.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMGetUserGameStatsResponse.Stats();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.statId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.statValue = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Stats message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgAMGetUserGameStatsResponse.Stats
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgAMGetUserGameStatsResponse.Stats} Stats
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Stats.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Stats message.
             * @function verify
             * @memberof CMsgAMGetUserGameStatsResponse.Stats
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Stats.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.statId != null && message.hasOwnProperty("statId"))
                    if (!$util.isInteger(message.statId))
                        return "statId: integer expected";
                if (message.statValue != null && message.hasOwnProperty("statValue"))
                    if (!$util.isInteger(message.statValue))
                        return "statValue: integer expected";
                return null;
            };
    
            /**
             * Creates a Stats message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgAMGetUserGameStatsResponse.Stats
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgAMGetUserGameStatsResponse.Stats} Stats
             */
            Stats.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgAMGetUserGameStatsResponse.Stats)
                    return object;
                var message = new $root.CMsgAMGetUserGameStatsResponse.Stats();
                if (object.statId != null)
                    message.statId = object.statId >>> 0;
                if (object.statValue != null)
                    message.statValue = object.statValue >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a Stats message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgAMGetUserGameStatsResponse.Stats
             * @static
             * @param {CMsgAMGetUserGameStatsResponse.Stats} message Stats
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Stats.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.statId = 0;
                    object.statValue = 0;
                }
                if (message.statId != null && message.hasOwnProperty("statId"))
                    object.statId = message.statId;
                if (message.statValue != null && message.hasOwnProperty("statValue"))
                    object.statValue = message.statValue;
                return object;
            };
    
            /**
             * Converts this Stats to JSON.
             * @function toJSON
             * @memberof CMsgAMGetUserGameStatsResponse.Stats
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Stats.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for Stats
             * @function getTypeUrl
             * @memberof CMsgAMGetUserGameStatsResponse.Stats
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Stats.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgAMGetUserGameStatsResponse.Stats";
            };
    
            return Stats;
        })();
    
        CMsgAMGetUserGameStatsResponse.Achievement_Blocks = (function() {
    
            /**
             * Properties of an Achievement_Blocks.
             * @memberof CMsgAMGetUserGameStatsResponse
             * @interface IAchievement_Blocks
             * @property {number|null} [achievementId] Achievement_Blocks achievementId
             * @property {number|null} [achievementBitId] Achievement_Blocks achievementBitId
             * @property {number|null} [unlockTime] Achievement_Blocks unlockTime
             */
    
            /**
             * Constructs a new Achievement_Blocks.
             * @memberof CMsgAMGetUserGameStatsResponse
             * @classdesc Represents an Achievement_Blocks.
             * @implements IAchievement_Blocks
             * @constructor
             * @param {CMsgAMGetUserGameStatsResponse.IAchievement_Blocks=} [properties] Properties to set
             */
            function Achievement_Blocks(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Achievement_Blocks achievementId.
             * @member {number} achievementId
             * @memberof CMsgAMGetUserGameStatsResponse.Achievement_Blocks
             * @instance
             */
            Achievement_Blocks.prototype.achievementId = 0;
    
            /**
             * Achievement_Blocks achievementBitId.
             * @member {number} achievementBitId
             * @memberof CMsgAMGetUserGameStatsResponse.Achievement_Blocks
             * @instance
             */
            Achievement_Blocks.prototype.achievementBitId = 0;
    
            /**
             * Achievement_Blocks unlockTime.
             * @member {number} unlockTime
             * @memberof CMsgAMGetUserGameStatsResponse.Achievement_Blocks
             * @instance
             */
            Achievement_Blocks.prototype.unlockTime = 0;
    
            /**
             * Creates a new Achievement_Blocks instance using the specified properties.
             * @function create
             * @memberof CMsgAMGetUserGameStatsResponse.Achievement_Blocks
             * @static
             * @param {CMsgAMGetUserGameStatsResponse.IAchievement_Blocks=} [properties] Properties to set
             * @returns {CMsgAMGetUserGameStatsResponse.Achievement_Blocks} Achievement_Blocks instance
             */
            Achievement_Blocks.create = function create(properties) {
                return new Achievement_Blocks(properties);
            };
    
            /**
             * Encodes the specified Achievement_Blocks message. Does not implicitly {@link CMsgAMGetUserGameStatsResponse.Achievement_Blocks.verify|verify} messages.
             * @function encode
             * @memberof CMsgAMGetUserGameStatsResponse.Achievement_Blocks
             * @static
             * @param {CMsgAMGetUserGameStatsResponse.IAchievement_Blocks} message Achievement_Blocks message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Achievement_Blocks.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.achievementId != null && Object.hasOwnProperty.call(message, "achievementId"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.achievementId);
                if (message.achievementBitId != null && Object.hasOwnProperty.call(message, "achievementBitId"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.achievementBitId);
                if (message.unlockTime != null && Object.hasOwnProperty.call(message, "unlockTime"))
                    writer.uint32(/* id 3, wireType 5 =*/29).fixed32(message.unlockTime);
                return writer;
            };
    
            /**
             * Encodes the specified Achievement_Blocks message, length delimited. Does not implicitly {@link CMsgAMGetUserGameStatsResponse.Achievement_Blocks.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgAMGetUserGameStatsResponse.Achievement_Blocks
             * @static
             * @param {CMsgAMGetUserGameStatsResponse.IAchievement_Blocks} message Achievement_Blocks message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Achievement_Blocks.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an Achievement_Blocks message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgAMGetUserGameStatsResponse.Achievement_Blocks
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgAMGetUserGameStatsResponse.Achievement_Blocks} Achievement_Blocks
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Achievement_Blocks.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMGetUserGameStatsResponse.Achievement_Blocks();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.achievementId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.achievementBitId = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.unlockTime = reader.fixed32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an Achievement_Blocks message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgAMGetUserGameStatsResponse.Achievement_Blocks
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgAMGetUserGameStatsResponse.Achievement_Blocks} Achievement_Blocks
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Achievement_Blocks.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an Achievement_Blocks message.
             * @function verify
             * @memberof CMsgAMGetUserGameStatsResponse.Achievement_Blocks
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Achievement_Blocks.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.achievementId != null && message.hasOwnProperty("achievementId"))
                    if (!$util.isInteger(message.achievementId))
                        return "achievementId: integer expected";
                if (message.achievementBitId != null && message.hasOwnProperty("achievementBitId"))
                    if (!$util.isInteger(message.achievementBitId))
                        return "achievementBitId: integer expected";
                if (message.unlockTime != null && message.hasOwnProperty("unlockTime"))
                    if (!$util.isInteger(message.unlockTime))
                        return "unlockTime: integer expected";
                return null;
            };
    
            /**
             * Creates an Achievement_Blocks message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgAMGetUserGameStatsResponse.Achievement_Blocks
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgAMGetUserGameStatsResponse.Achievement_Blocks} Achievement_Blocks
             */
            Achievement_Blocks.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
                    return object;
                var message = new $root.CMsgAMGetUserGameStatsResponse.Achievement_Blocks();
                if (object.achievementId != null)
                    message.achievementId = object.achievementId >>> 0;
                if (object.achievementBitId != null)
                    message.achievementBitId = object.achievementBitId >>> 0;
                if (object.unlockTime != null)
                    message.unlockTime = object.unlockTime >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from an Achievement_Blocks message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgAMGetUserGameStatsResponse.Achievement_Blocks
             * @static
             * @param {CMsgAMGetUserGameStatsResponse.Achievement_Blocks} message Achievement_Blocks
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Achievement_Blocks.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.achievementId = 0;
                    object.achievementBitId = 0;
                    object.unlockTime = 0;
                }
                if (message.achievementId != null && message.hasOwnProperty("achievementId"))
                    object.achievementId = message.achievementId;
                if (message.achievementBitId != null && message.hasOwnProperty("achievementBitId"))
                    object.achievementBitId = message.achievementBitId;
                if (message.unlockTime != null && message.hasOwnProperty("unlockTime"))
                    object.unlockTime = message.unlockTime;
                return object;
            };
    
            /**
             * Converts this Achievement_Blocks to JSON.
             * @function toJSON
             * @memberof CMsgAMGetUserGameStatsResponse.Achievement_Blocks
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Achievement_Blocks.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for Achievement_Blocks
             * @function getTypeUrl
             * @memberof CMsgAMGetUserGameStatsResponse.Achievement_Blocks
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Achievement_Blocks.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgAMGetUserGameStatsResponse.Achievement_Blocks";
            };
    
            return Achievement_Blocks;
        })();
    
        return CMsgAMGetUserGameStatsResponse;
    })();
    
    $root.CMsgGCGetCommandList = (function() {
    
        /**
         * Properties of a CMsgGCGetCommandList.
         * @exports ICMsgGCGetCommandList
         * @interface ICMsgGCGetCommandList
         * @property {number|null} [appId] CMsgGCGetCommandList appId
         * @property {string|null} [commandPrefix] CMsgGCGetCommandList commandPrefix
         */
    
        /**
         * Constructs a new CMsgGCGetCommandList.
         * @exports CMsgGCGetCommandList
         * @classdesc Represents a CMsgGCGetCommandList.
         * @implements ICMsgGCGetCommandList
         * @constructor
         * @param {ICMsgGCGetCommandList=} [properties] Properties to set
         */
        function CMsgGCGetCommandList(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCGetCommandList appId.
         * @member {number} appId
         * @memberof CMsgGCGetCommandList
         * @instance
         */
        CMsgGCGetCommandList.prototype.appId = 0;
    
        /**
         * CMsgGCGetCommandList commandPrefix.
         * @member {string} commandPrefix
         * @memberof CMsgGCGetCommandList
         * @instance
         */
        CMsgGCGetCommandList.prototype.commandPrefix = "";
    
        /**
         * Creates a new CMsgGCGetCommandList instance using the specified properties.
         * @function create
         * @memberof CMsgGCGetCommandList
         * @static
         * @param {ICMsgGCGetCommandList=} [properties] Properties to set
         * @returns {CMsgGCGetCommandList} CMsgGCGetCommandList instance
         */
        CMsgGCGetCommandList.create = function create(properties) {
            return new CMsgGCGetCommandList(properties);
        };
    
        /**
         * Encodes the specified CMsgGCGetCommandList message. Does not implicitly {@link CMsgGCGetCommandList.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCGetCommandList
         * @static
         * @param {ICMsgGCGetCommandList} message CMsgGCGetCommandList message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetCommandList.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appId != null && Object.hasOwnProperty.call(message, "appId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appId);
            if (message.commandPrefix != null && Object.hasOwnProperty.call(message, "commandPrefix"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.commandPrefix);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCGetCommandList message, length delimited. Does not implicitly {@link CMsgGCGetCommandList.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCGetCommandList
         * @static
         * @param {ICMsgGCGetCommandList} message CMsgGCGetCommandList message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetCommandList.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCGetCommandList message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCGetCommandList
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCGetCommandList} CMsgGCGetCommandList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetCommandList.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCGetCommandList();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.appId = reader.uint32();
                        break;
                    }
                case 2: {
                        message.commandPrefix = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCGetCommandList message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCGetCommandList
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCGetCommandList} CMsgGCGetCommandList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetCommandList.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCGetCommandList message.
         * @function verify
         * @memberof CMsgGCGetCommandList
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCGetCommandList.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appId != null && message.hasOwnProperty("appId"))
                if (!$util.isInteger(message.appId))
                    return "appId: integer expected";
            if (message.commandPrefix != null && message.hasOwnProperty("commandPrefix"))
                if (!$util.isString(message.commandPrefix))
                    return "commandPrefix: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCGetCommandList message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCGetCommandList
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCGetCommandList} CMsgGCGetCommandList
         */
        CMsgGCGetCommandList.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCGetCommandList)
                return object;
            var message = new $root.CMsgGCGetCommandList();
            if (object.appId != null)
                message.appId = object.appId >>> 0;
            if (object.commandPrefix != null)
                message.commandPrefix = String(object.commandPrefix);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCGetCommandList message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCGetCommandList
         * @static
         * @param {CMsgGCGetCommandList} message CMsgGCGetCommandList
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCGetCommandList.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.appId = 0;
                object.commandPrefix = "";
            }
            if (message.appId != null && message.hasOwnProperty("appId"))
                object.appId = message.appId;
            if (message.commandPrefix != null && message.hasOwnProperty("commandPrefix"))
                object.commandPrefix = message.commandPrefix;
            return object;
        };
    
        /**
         * Converts this CMsgGCGetCommandList to JSON.
         * @function toJSON
         * @memberof CMsgGCGetCommandList
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCGetCommandList.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCGetCommandList
         * @function getTypeUrl
         * @memberof CMsgGCGetCommandList
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCGetCommandList.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCGetCommandList";
        };
    
        return CMsgGCGetCommandList;
    })();
    
    $root.CMsgGCGetCommandListResponse = (function() {
    
        /**
         * Properties of a CMsgGCGetCommandListResponse.
         * @exports ICMsgGCGetCommandListResponse
         * @interface ICMsgGCGetCommandListResponse
         * @property {Array.<string>|null} [commandName] CMsgGCGetCommandListResponse commandName
         */
    
        /**
         * Constructs a new CMsgGCGetCommandListResponse.
         * @exports CMsgGCGetCommandListResponse
         * @classdesc Represents a CMsgGCGetCommandListResponse.
         * @implements ICMsgGCGetCommandListResponse
         * @constructor
         * @param {ICMsgGCGetCommandListResponse=} [properties] Properties to set
         */
        function CMsgGCGetCommandListResponse(properties) {
            this.commandName = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCGetCommandListResponse commandName.
         * @member {Array.<string>} commandName
         * @memberof CMsgGCGetCommandListResponse
         * @instance
         */
        CMsgGCGetCommandListResponse.prototype.commandName = $util.emptyArray;
    
        /**
         * Creates a new CMsgGCGetCommandListResponse instance using the specified properties.
         * @function create
         * @memberof CMsgGCGetCommandListResponse
         * @static
         * @param {ICMsgGCGetCommandListResponse=} [properties] Properties to set
         * @returns {CMsgGCGetCommandListResponse} CMsgGCGetCommandListResponse instance
         */
        CMsgGCGetCommandListResponse.create = function create(properties) {
            return new CMsgGCGetCommandListResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgGCGetCommandListResponse message. Does not implicitly {@link CMsgGCGetCommandListResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCGetCommandListResponse
         * @static
         * @param {ICMsgGCGetCommandListResponse} message CMsgGCGetCommandListResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetCommandListResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.commandName != null && message.commandName.length)
                for (var i = 0; i < message.commandName.length; ++i)
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.commandName[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCGetCommandListResponse message, length delimited. Does not implicitly {@link CMsgGCGetCommandListResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCGetCommandListResponse
         * @static
         * @param {ICMsgGCGetCommandListResponse} message CMsgGCGetCommandListResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetCommandListResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCGetCommandListResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCGetCommandListResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCGetCommandListResponse} CMsgGCGetCommandListResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetCommandListResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCGetCommandListResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.commandName && message.commandName.length))
                            message.commandName = [];
                        message.commandName.push(reader.string());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCGetCommandListResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCGetCommandListResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCGetCommandListResponse} CMsgGCGetCommandListResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetCommandListResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCGetCommandListResponse message.
         * @function verify
         * @memberof CMsgGCGetCommandListResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCGetCommandListResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.commandName != null && message.hasOwnProperty("commandName")) {
                if (!Array.isArray(message.commandName))
                    return "commandName: array expected";
                for (var i = 0; i < message.commandName.length; ++i)
                    if (!$util.isString(message.commandName[i]))
                        return "commandName: string[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCGetCommandListResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCGetCommandListResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCGetCommandListResponse} CMsgGCGetCommandListResponse
         */
        CMsgGCGetCommandListResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCGetCommandListResponse)
                return object;
            var message = new $root.CMsgGCGetCommandListResponse();
            if (object.commandName) {
                if (!Array.isArray(object.commandName))
                    throw TypeError(".CMsgGCGetCommandListResponse.commandName: array expected");
                message.commandName = [];
                for (var i = 0; i < object.commandName.length; ++i)
                    message.commandName[i] = String(object.commandName[i]);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCGetCommandListResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCGetCommandListResponse
         * @static
         * @param {CMsgGCGetCommandListResponse} message CMsgGCGetCommandListResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCGetCommandListResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.commandName = [];
            if (message.commandName && message.commandName.length) {
                object.commandName = [];
                for (var j = 0; j < message.commandName.length; ++j)
                    object.commandName[j] = message.commandName[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgGCGetCommandListResponse to JSON.
         * @function toJSON
         * @memberof CMsgGCGetCommandListResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCGetCommandListResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCGetCommandListResponse
         * @function getTypeUrl
         * @memberof CMsgGCGetCommandListResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCGetCommandListResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCGetCommandListResponse";
        };
    
        return CMsgGCGetCommandListResponse;
    })();
    
    $root.CGCMsgMemCachedGet = (function() {
    
        /**
         * Properties of a CGCMsgMemCachedGet.
         * @exports ICGCMsgMemCachedGet
         * @interface ICGCMsgMemCachedGet
         * @property {Array.<string>|null} [keys] CGCMsgMemCachedGet keys
         */
    
        /**
         * Constructs a new CGCMsgMemCachedGet.
         * @exports CGCMsgMemCachedGet
         * @classdesc Represents a CGCMsgMemCachedGet.
         * @implements ICGCMsgMemCachedGet
         * @constructor
         * @param {ICGCMsgMemCachedGet=} [properties] Properties to set
         */
        function CGCMsgMemCachedGet(properties) {
            this.keys = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCMsgMemCachedGet keys.
         * @member {Array.<string>} keys
         * @memberof CGCMsgMemCachedGet
         * @instance
         */
        CGCMsgMemCachedGet.prototype.keys = $util.emptyArray;
    
        /**
         * Creates a new CGCMsgMemCachedGet instance using the specified properties.
         * @function create
         * @memberof CGCMsgMemCachedGet
         * @static
         * @param {ICGCMsgMemCachedGet=} [properties] Properties to set
         * @returns {CGCMsgMemCachedGet} CGCMsgMemCachedGet instance
         */
        CGCMsgMemCachedGet.create = function create(properties) {
            return new CGCMsgMemCachedGet(properties);
        };
    
        /**
         * Encodes the specified CGCMsgMemCachedGet message. Does not implicitly {@link CGCMsgMemCachedGet.verify|verify} messages.
         * @function encode
         * @memberof CGCMsgMemCachedGet
         * @static
         * @param {ICGCMsgMemCachedGet} message CGCMsgMemCachedGet message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgMemCachedGet.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.keys != null && message.keys.length)
                for (var i = 0; i < message.keys.length; ++i)
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.keys[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CGCMsgMemCachedGet message, length delimited. Does not implicitly {@link CGCMsgMemCachedGet.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCMsgMemCachedGet
         * @static
         * @param {ICGCMsgMemCachedGet} message CGCMsgMemCachedGet message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgMemCachedGet.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCMsgMemCachedGet message from the specified reader or buffer.
         * @function decode
         * @memberof CGCMsgMemCachedGet
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCMsgMemCachedGet} CGCMsgMemCachedGet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgMemCachedGet.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgMemCachedGet();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.keys && message.keys.length))
                            message.keys = [];
                        message.keys.push(reader.string());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCMsgMemCachedGet message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCMsgMemCachedGet
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCMsgMemCachedGet} CGCMsgMemCachedGet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgMemCachedGet.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCMsgMemCachedGet message.
         * @function verify
         * @memberof CGCMsgMemCachedGet
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCMsgMemCachedGet.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.keys != null && message.hasOwnProperty("keys")) {
                if (!Array.isArray(message.keys))
                    return "keys: array expected";
                for (var i = 0; i < message.keys.length; ++i)
                    if (!$util.isString(message.keys[i]))
                        return "keys: string[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CGCMsgMemCachedGet message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCMsgMemCachedGet
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCMsgMemCachedGet} CGCMsgMemCachedGet
         */
        CGCMsgMemCachedGet.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCMsgMemCachedGet)
                return object;
            var message = new $root.CGCMsgMemCachedGet();
            if (object.keys) {
                if (!Array.isArray(object.keys))
                    throw TypeError(".CGCMsgMemCachedGet.keys: array expected");
                message.keys = [];
                for (var i = 0; i < object.keys.length; ++i)
                    message.keys[i] = String(object.keys[i]);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CGCMsgMemCachedGet message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCMsgMemCachedGet
         * @static
         * @param {CGCMsgMemCachedGet} message CGCMsgMemCachedGet
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCMsgMemCachedGet.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.keys = [];
            if (message.keys && message.keys.length) {
                object.keys = [];
                for (var j = 0; j < message.keys.length; ++j)
                    object.keys[j] = message.keys[j];
            }
            return object;
        };
    
        /**
         * Converts this CGCMsgMemCachedGet to JSON.
         * @function toJSON
         * @memberof CGCMsgMemCachedGet
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCMsgMemCachedGet.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCMsgMemCachedGet
         * @function getTypeUrl
         * @memberof CGCMsgMemCachedGet
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCMsgMemCachedGet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCMsgMemCachedGet";
        };
    
        return CGCMsgMemCachedGet;
    })();
    
    $root.CGCMsgMemCachedGetResponse = (function() {
    
        /**
         * Properties of a CGCMsgMemCachedGetResponse.
         * @exports ICGCMsgMemCachedGetResponse
         * @interface ICGCMsgMemCachedGetResponse
         * @property {Array.<CGCMsgMemCachedGetResponse.IValueTag>|null} [values] CGCMsgMemCachedGetResponse values
         */
    
        /**
         * Constructs a new CGCMsgMemCachedGetResponse.
         * @exports CGCMsgMemCachedGetResponse
         * @classdesc Represents a CGCMsgMemCachedGetResponse.
         * @implements ICGCMsgMemCachedGetResponse
         * @constructor
         * @param {ICGCMsgMemCachedGetResponse=} [properties] Properties to set
         */
        function CGCMsgMemCachedGetResponse(properties) {
            this.values = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCMsgMemCachedGetResponse values.
         * @member {Array.<CGCMsgMemCachedGetResponse.IValueTag>} values
         * @memberof CGCMsgMemCachedGetResponse
         * @instance
         */
        CGCMsgMemCachedGetResponse.prototype.values = $util.emptyArray;
    
        /**
         * Creates a new CGCMsgMemCachedGetResponse instance using the specified properties.
         * @function create
         * @memberof CGCMsgMemCachedGetResponse
         * @static
         * @param {ICGCMsgMemCachedGetResponse=} [properties] Properties to set
         * @returns {CGCMsgMemCachedGetResponse} CGCMsgMemCachedGetResponse instance
         */
        CGCMsgMemCachedGetResponse.create = function create(properties) {
            return new CGCMsgMemCachedGetResponse(properties);
        };
    
        /**
         * Encodes the specified CGCMsgMemCachedGetResponse message. Does not implicitly {@link CGCMsgMemCachedGetResponse.verify|verify} messages.
         * @function encode
         * @memberof CGCMsgMemCachedGetResponse
         * @static
         * @param {ICGCMsgMemCachedGetResponse} message CGCMsgMemCachedGetResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgMemCachedGetResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.values != null && message.values.length)
                for (var i = 0; i < message.values.length; ++i)
                    $root.CGCMsgMemCachedGetResponse.ValueTag.encode(message.values[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CGCMsgMemCachedGetResponse message, length delimited. Does not implicitly {@link CGCMsgMemCachedGetResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCMsgMemCachedGetResponse
         * @static
         * @param {ICGCMsgMemCachedGetResponse} message CGCMsgMemCachedGetResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgMemCachedGetResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCMsgMemCachedGetResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CGCMsgMemCachedGetResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCMsgMemCachedGetResponse} CGCMsgMemCachedGetResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgMemCachedGetResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgMemCachedGetResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.values && message.values.length))
                            message.values = [];
                        message.values.push($root.CGCMsgMemCachedGetResponse.ValueTag.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCMsgMemCachedGetResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCMsgMemCachedGetResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCMsgMemCachedGetResponse} CGCMsgMemCachedGetResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgMemCachedGetResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCMsgMemCachedGetResponse message.
         * @function verify
         * @memberof CGCMsgMemCachedGetResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCMsgMemCachedGetResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.values != null && message.hasOwnProperty("values")) {
                if (!Array.isArray(message.values))
                    return "values: array expected";
                for (var i = 0; i < message.values.length; ++i) {
                    var error = $root.CGCMsgMemCachedGetResponse.ValueTag.verify(message.values[i]);
                    if (error)
                        return "values." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CGCMsgMemCachedGetResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCMsgMemCachedGetResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCMsgMemCachedGetResponse} CGCMsgMemCachedGetResponse
         */
        CGCMsgMemCachedGetResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCMsgMemCachedGetResponse)
                return object;
            var message = new $root.CGCMsgMemCachedGetResponse();
            if (object.values) {
                if (!Array.isArray(object.values))
                    throw TypeError(".CGCMsgMemCachedGetResponse.values: array expected");
                message.values = [];
                for (var i = 0; i < object.values.length; ++i) {
                    if (typeof object.values[i] !== "object")
                        throw TypeError(".CGCMsgMemCachedGetResponse.values: object expected");
                    message.values[i] = $root.CGCMsgMemCachedGetResponse.ValueTag.fromObject(object.values[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CGCMsgMemCachedGetResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCMsgMemCachedGetResponse
         * @static
         * @param {CGCMsgMemCachedGetResponse} message CGCMsgMemCachedGetResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCMsgMemCachedGetResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.values = [];
            if (message.values && message.values.length) {
                object.values = [];
                for (var j = 0; j < message.values.length; ++j)
                    object.values[j] = $root.CGCMsgMemCachedGetResponse.ValueTag.toObject(message.values[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CGCMsgMemCachedGetResponse to JSON.
         * @function toJSON
         * @memberof CGCMsgMemCachedGetResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCMsgMemCachedGetResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCMsgMemCachedGetResponse
         * @function getTypeUrl
         * @memberof CGCMsgMemCachedGetResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCMsgMemCachedGetResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCMsgMemCachedGetResponse";
        };
    
        CGCMsgMemCachedGetResponse.ValueTag = (function() {
    
            /**
             * Properties of a ValueTag.
             * @memberof CGCMsgMemCachedGetResponse
             * @interface IValueTag
             * @property {boolean|null} [found] ValueTag found
             * @property {Uint8Array|null} [value] ValueTag value
             */
    
            /**
             * Constructs a new ValueTag.
             * @memberof CGCMsgMemCachedGetResponse
             * @classdesc Represents a ValueTag.
             * @implements IValueTag
             * @constructor
             * @param {CGCMsgMemCachedGetResponse.IValueTag=} [properties] Properties to set
             */
            function ValueTag(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * ValueTag found.
             * @member {boolean} found
             * @memberof CGCMsgMemCachedGetResponse.ValueTag
             * @instance
             */
            ValueTag.prototype.found = false;
    
            /**
             * ValueTag value.
             * @member {Uint8Array} value
             * @memberof CGCMsgMemCachedGetResponse.ValueTag
             * @instance
             */
            ValueTag.prototype.value = $util.newBuffer([]);
    
            /**
             * Creates a new ValueTag instance using the specified properties.
             * @function create
             * @memberof CGCMsgMemCachedGetResponse.ValueTag
             * @static
             * @param {CGCMsgMemCachedGetResponse.IValueTag=} [properties] Properties to set
             * @returns {CGCMsgMemCachedGetResponse.ValueTag} ValueTag instance
             */
            ValueTag.create = function create(properties) {
                return new ValueTag(properties);
            };
    
            /**
             * Encodes the specified ValueTag message. Does not implicitly {@link CGCMsgMemCachedGetResponse.ValueTag.verify|verify} messages.
             * @function encode
             * @memberof CGCMsgMemCachedGetResponse.ValueTag
             * @static
             * @param {CGCMsgMemCachedGetResponse.IValueTag} message ValueTag message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ValueTag.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.found != null && Object.hasOwnProperty.call(message, "found"))
                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.found);
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                return writer;
            };
    
            /**
             * Encodes the specified ValueTag message, length delimited. Does not implicitly {@link CGCMsgMemCachedGetResponse.ValueTag.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CGCMsgMemCachedGetResponse.ValueTag
             * @static
             * @param {CGCMsgMemCachedGetResponse.IValueTag} message ValueTag message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ValueTag.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a ValueTag message from the specified reader or buffer.
             * @function decode
             * @memberof CGCMsgMemCachedGetResponse.ValueTag
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CGCMsgMemCachedGetResponse.ValueTag} ValueTag
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ValueTag.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgMemCachedGetResponse.ValueTag();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.found = reader.bool();
                            break;
                        }
                    case 2: {
                            message.value = reader.bytes();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a ValueTag message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CGCMsgMemCachedGetResponse.ValueTag
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CGCMsgMemCachedGetResponse.ValueTag} ValueTag
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ValueTag.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a ValueTag message.
             * @function verify
             * @memberof CGCMsgMemCachedGetResponse.ValueTag
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ValueTag.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.found != null && message.hasOwnProperty("found"))
                    if (typeof message.found !== "boolean")
                        return "found: boolean expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                        return "value: buffer expected";
                return null;
            };
    
            /**
             * Creates a ValueTag message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CGCMsgMemCachedGetResponse.ValueTag
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CGCMsgMemCachedGetResponse.ValueTag} ValueTag
             */
            ValueTag.fromObject = function fromObject(object) {
                if (object instanceof $root.CGCMsgMemCachedGetResponse.ValueTag)
                    return object;
                var message = new $root.CGCMsgMemCachedGetResponse.ValueTag();
                if (object.found != null)
                    message.found = Boolean(object.found);
                if (object.value != null)
                    if (typeof object.value === "string")
                        $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                    else if (object.value.length >= 0)
                        message.value = object.value;
                return message;
            };
    
            /**
             * Creates a plain object from a ValueTag message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CGCMsgMemCachedGetResponse.ValueTag
             * @static
             * @param {CGCMsgMemCachedGetResponse.ValueTag} message ValueTag
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ValueTag.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.found = false;
                    if (options.bytes === String)
                        object.value = "";
                    else {
                        object.value = [];
                        if (options.bytes !== Array)
                            object.value = $util.newBuffer(object.value);
                    }
                }
                if (message.found != null && message.hasOwnProperty("found"))
                    object.found = message.found;
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                return object;
            };
    
            /**
             * Converts this ValueTag to JSON.
             * @function toJSON
             * @memberof CGCMsgMemCachedGetResponse.ValueTag
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ValueTag.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for ValueTag
             * @function getTypeUrl
             * @memberof CGCMsgMemCachedGetResponse.ValueTag
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ValueTag.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CGCMsgMemCachedGetResponse.ValueTag";
            };
    
            return ValueTag;
        })();
    
        return CGCMsgMemCachedGetResponse;
    })();
    
    $root.CGCMsgMemCachedSet = (function() {
    
        /**
         * Properties of a CGCMsgMemCachedSet.
         * @exports ICGCMsgMemCachedSet
         * @interface ICGCMsgMemCachedSet
         * @property {Array.<CGCMsgMemCachedSet.IKeyPair>|null} [keys] CGCMsgMemCachedSet keys
         */
    
        /**
         * Constructs a new CGCMsgMemCachedSet.
         * @exports CGCMsgMemCachedSet
         * @classdesc Represents a CGCMsgMemCachedSet.
         * @implements ICGCMsgMemCachedSet
         * @constructor
         * @param {ICGCMsgMemCachedSet=} [properties] Properties to set
         */
        function CGCMsgMemCachedSet(properties) {
            this.keys = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCMsgMemCachedSet keys.
         * @member {Array.<CGCMsgMemCachedSet.IKeyPair>} keys
         * @memberof CGCMsgMemCachedSet
         * @instance
         */
        CGCMsgMemCachedSet.prototype.keys = $util.emptyArray;
    
        /**
         * Creates a new CGCMsgMemCachedSet instance using the specified properties.
         * @function create
         * @memberof CGCMsgMemCachedSet
         * @static
         * @param {ICGCMsgMemCachedSet=} [properties] Properties to set
         * @returns {CGCMsgMemCachedSet} CGCMsgMemCachedSet instance
         */
        CGCMsgMemCachedSet.create = function create(properties) {
            return new CGCMsgMemCachedSet(properties);
        };
    
        /**
         * Encodes the specified CGCMsgMemCachedSet message. Does not implicitly {@link CGCMsgMemCachedSet.verify|verify} messages.
         * @function encode
         * @memberof CGCMsgMemCachedSet
         * @static
         * @param {ICGCMsgMemCachedSet} message CGCMsgMemCachedSet message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgMemCachedSet.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.keys != null && message.keys.length)
                for (var i = 0; i < message.keys.length; ++i)
                    $root.CGCMsgMemCachedSet.KeyPair.encode(message.keys[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CGCMsgMemCachedSet message, length delimited. Does not implicitly {@link CGCMsgMemCachedSet.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCMsgMemCachedSet
         * @static
         * @param {ICGCMsgMemCachedSet} message CGCMsgMemCachedSet message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgMemCachedSet.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCMsgMemCachedSet message from the specified reader or buffer.
         * @function decode
         * @memberof CGCMsgMemCachedSet
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCMsgMemCachedSet} CGCMsgMemCachedSet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgMemCachedSet.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgMemCachedSet();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.keys && message.keys.length))
                            message.keys = [];
                        message.keys.push($root.CGCMsgMemCachedSet.KeyPair.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCMsgMemCachedSet message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCMsgMemCachedSet
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCMsgMemCachedSet} CGCMsgMemCachedSet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgMemCachedSet.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCMsgMemCachedSet message.
         * @function verify
         * @memberof CGCMsgMemCachedSet
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCMsgMemCachedSet.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.keys != null && message.hasOwnProperty("keys")) {
                if (!Array.isArray(message.keys))
                    return "keys: array expected";
                for (var i = 0; i < message.keys.length; ++i) {
                    var error = $root.CGCMsgMemCachedSet.KeyPair.verify(message.keys[i]);
                    if (error)
                        return "keys." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CGCMsgMemCachedSet message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCMsgMemCachedSet
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCMsgMemCachedSet} CGCMsgMemCachedSet
         */
        CGCMsgMemCachedSet.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCMsgMemCachedSet)
                return object;
            var message = new $root.CGCMsgMemCachedSet();
            if (object.keys) {
                if (!Array.isArray(object.keys))
                    throw TypeError(".CGCMsgMemCachedSet.keys: array expected");
                message.keys = [];
                for (var i = 0; i < object.keys.length; ++i) {
                    if (typeof object.keys[i] !== "object")
                        throw TypeError(".CGCMsgMemCachedSet.keys: object expected");
                    message.keys[i] = $root.CGCMsgMemCachedSet.KeyPair.fromObject(object.keys[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CGCMsgMemCachedSet message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCMsgMemCachedSet
         * @static
         * @param {CGCMsgMemCachedSet} message CGCMsgMemCachedSet
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCMsgMemCachedSet.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.keys = [];
            if (message.keys && message.keys.length) {
                object.keys = [];
                for (var j = 0; j < message.keys.length; ++j)
                    object.keys[j] = $root.CGCMsgMemCachedSet.KeyPair.toObject(message.keys[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CGCMsgMemCachedSet to JSON.
         * @function toJSON
         * @memberof CGCMsgMemCachedSet
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCMsgMemCachedSet.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCMsgMemCachedSet
         * @function getTypeUrl
         * @memberof CGCMsgMemCachedSet
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCMsgMemCachedSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCMsgMemCachedSet";
        };
    
        CGCMsgMemCachedSet.KeyPair = (function() {
    
            /**
             * Properties of a KeyPair.
             * @memberof CGCMsgMemCachedSet
             * @interface IKeyPair
             * @property {string|null} [name] KeyPair name
             * @property {Uint8Array|null} [value] KeyPair value
             */
    
            /**
             * Constructs a new KeyPair.
             * @memberof CGCMsgMemCachedSet
             * @classdesc Represents a KeyPair.
             * @implements IKeyPair
             * @constructor
             * @param {CGCMsgMemCachedSet.IKeyPair=} [properties] Properties to set
             */
            function KeyPair(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * KeyPair name.
             * @member {string} name
             * @memberof CGCMsgMemCachedSet.KeyPair
             * @instance
             */
            KeyPair.prototype.name = "";
    
            /**
             * KeyPair value.
             * @member {Uint8Array} value
             * @memberof CGCMsgMemCachedSet.KeyPair
             * @instance
             */
            KeyPair.prototype.value = $util.newBuffer([]);
    
            /**
             * Creates a new KeyPair instance using the specified properties.
             * @function create
             * @memberof CGCMsgMemCachedSet.KeyPair
             * @static
             * @param {CGCMsgMemCachedSet.IKeyPair=} [properties] Properties to set
             * @returns {CGCMsgMemCachedSet.KeyPair} KeyPair instance
             */
            KeyPair.create = function create(properties) {
                return new KeyPair(properties);
            };
    
            /**
             * Encodes the specified KeyPair message. Does not implicitly {@link CGCMsgMemCachedSet.KeyPair.verify|verify} messages.
             * @function encode
             * @memberof CGCMsgMemCachedSet.KeyPair
             * @static
             * @param {CGCMsgMemCachedSet.IKeyPair} message KeyPair message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            KeyPair.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                return writer;
            };
    
            /**
             * Encodes the specified KeyPair message, length delimited. Does not implicitly {@link CGCMsgMemCachedSet.KeyPair.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CGCMsgMemCachedSet.KeyPair
             * @static
             * @param {CGCMsgMemCachedSet.IKeyPair} message KeyPair message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            KeyPair.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a KeyPair message from the specified reader or buffer.
             * @function decode
             * @memberof CGCMsgMemCachedSet.KeyPair
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CGCMsgMemCachedSet.KeyPair} KeyPair
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            KeyPair.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgMemCachedSet.KeyPair();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.name = reader.string();
                            break;
                        }
                    case 2: {
                            message.value = reader.bytes();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a KeyPair message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CGCMsgMemCachedSet.KeyPair
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CGCMsgMemCachedSet.KeyPair} KeyPair
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            KeyPair.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a KeyPair message.
             * @function verify
             * @memberof CGCMsgMemCachedSet.KeyPair
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            KeyPair.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.name != null && message.hasOwnProperty("name"))
                    if (!$util.isString(message.name))
                        return "name: string expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                        return "value: buffer expected";
                return null;
            };
    
            /**
             * Creates a KeyPair message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CGCMsgMemCachedSet.KeyPair
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CGCMsgMemCachedSet.KeyPair} KeyPair
             */
            KeyPair.fromObject = function fromObject(object) {
                if (object instanceof $root.CGCMsgMemCachedSet.KeyPair)
                    return object;
                var message = new $root.CGCMsgMemCachedSet.KeyPair();
                if (object.name != null)
                    message.name = String(object.name);
                if (object.value != null)
                    if (typeof object.value === "string")
                        $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                    else if (object.value.length >= 0)
                        message.value = object.value;
                return message;
            };
    
            /**
             * Creates a plain object from a KeyPair message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CGCMsgMemCachedSet.KeyPair
             * @static
             * @param {CGCMsgMemCachedSet.KeyPair} message KeyPair
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            KeyPair.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.name = "";
                    if (options.bytes === String)
                        object.value = "";
                    else {
                        object.value = [];
                        if (options.bytes !== Array)
                            object.value = $util.newBuffer(object.value);
                    }
                }
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                return object;
            };
    
            /**
             * Converts this KeyPair to JSON.
             * @function toJSON
             * @memberof CGCMsgMemCachedSet.KeyPair
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            KeyPair.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for KeyPair
             * @function getTypeUrl
             * @memberof CGCMsgMemCachedSet.KeyPair
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            KeyPair.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CGCMsgMemCachedSet.KeyPair";
            };
    
            return KeyPair;
        })();
    
        return CGCMsgMemCachedSet;
    })();
    
    $root.CGCMsgMemCachedDelete = (function() {
    
        /**
         * Properties of a CGCMsgMemCachedDelete.
         * @exports ICGCMsgMemCachedDelete
         * @interface ICGCMsgMemCachedDelete
         * @property {Array.<string>|null} [keys] CGCMsgMemCachedDelete keys
         */
    
        /**
         * Constructs a new CGCMsgMemCachedDelete.
         * @exports CGCMsgMemCachedDelete
         * @classdesc Represents a CGCMsgMemCachedDelete.
         * @implements ICGCMsgMemCachedDelete
         * @constructor
         * @param {ICGCMsgMemCachedDelete=} [properties] Properties to set
         */
        function CGCMsgMemCachedDelete(properties) {
            this.keys = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCMsgMemCachedDelete keys.
         * @member {Array.<string>} keys
         * @memberof CGCMsgMemCachedDelete
         * @instance
         */
        CGCMsgMemCachedDelete.prototype.keys = $util.emptyArray;
    
        /**
         * Creates a new CGCMsgMemCachedDelete instance using the specified properties.
         * @function create
         * @memberof CGCMsgMemCachedDelete
         * @static
         * @param {ICGCMsgMemCachedDelete=} [properties] Properties to set
         * @returns {CGCMsgMemCachedDelete} CGCMsgMemCachedDelete instance
         */
        CGCMsgMemCachedDelete.create = function create(properties) {
            return new CGCMsgMemCachedDelete(properties);
        };
    
        /**
         * Encodes the specified CGCMsgMemCachedDelete message. Does not implicitly {@link CGCMsgMemCachedDelete.verify|verify} messages.
         * @function encode
         * @memberof CGCMsgMemCachedDelete
         * @static
         * @param {ICGCMsgMemCachedDelete} message CGCMsgMemCachedDelete message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgMemCachedDelete.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.keys != null && message.keys.length)
                for (var i = 0; i < message.keys.length; ++i)
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.keys[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CGCMsgMemCachedDelete message, length delimited. Does not implicitly {@link CGCMsgMemCachedDelete.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCMsgMemCachedDelete
         * @static
         * @param {ICGCMsgMemCachedDelete} message CGCMsgMemCachedDelete message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgMemCachedDelete.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCMsgMemCachedDelete message from the specified reader or buffer.
         * @function decode
         * @memberof CGCMsgMemCachedDelete
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCMsgMemCachedDelete} CGCMsgMemCachedDelete
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgMemCachedDelete.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgMemCachedDelete();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.keys && message.keys.length))
                            message.keys = [];
                        message.keys.push(reader.string());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCMsgMemCachedDelete message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCMsgMemCachedDelete
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCMsgMemCachedDelete} CGCMsgMemCachedDelete
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgMemCachedDelete.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCMsgMemCachedDelete message.
         * @function verify
         * @memberof CGCMsgMemCachedDelete
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCMsgMemCachedDelete.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.keys != null && message.hasOwnProperty("keys")) {
                if (!Array.isArray(message.keys))
                    return "keys: array expected";
                for (var i = 0; i < message.keys.length; ++i)
                    if (!$util.isString(message.keys[i]))
                        return "keys: string[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CGCMsgMemCachedDelete message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCMsgMemCachedDelete
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCMsgMemCachedDelete} CGCMsgMemCachedDelete
         */
        CGCMsgMemCachedDelete.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCMsgMemCachedDelete)
                return object;
            var message = new $root.CGCMsgMemCachedDelete();
            if (object.keys) {
                if (!Array.isArray(object.keys))
                    throw TypeError(".CGCMsgMemCachedDelete.keys: array expected");
                message.keys = [];
                for (var i = 0; i < object.keys.length; ++i)
                    message.keys[i] = String(object.keys[i]);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CGCMsgMemCachedDelete message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCMsgMemCachedDelete
         * @static
         * @param {CGCMsgMemCachedDelete} message CGCMsgMemCachedDelete
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCMsgMemCachedDelete.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.keys = [];
            if (message.keys && message.keys.length) {
                object.keys = [];
                for (var j = 0; j < message.keys.length; ++j)
                    object.keys[j] = message.keys[j];
            }
            return object;
        };
    
        /**
         * Converts this CGCMsgMemCachedDelete to JSON.
         * @function toJSON
         * @memberof CGCMsgMemCachedDelete
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCMsgMemCachedDelete.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCMsgMemCachedDelete
         * @function getTypeUrl
         * @memberof CGCMsgMemCachedDelete
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCMsgMemCachedDelete.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCMsgMemCachedDelete";
        };
    
        return CGCMsgMemCachedDelete;
    })();
    
    $root.CGCMsgMemCachedStats = (function() {
    
        /**
         * Properties of a CGCMsgMemCachedStats.
         * @exports ICGCMsgMemCachedStats
         * @interface ICGCMsgMemCachedStats
         */
    
        /**
         * Constructs a new CGCMsgMemCachedStats.
         * @exports CGCMsgMemCachedStats
         * @classdesc Represents a CGCMsgMemCachedStats.
         * @implements ICGCMsgMemCachedStats
         * @constructor
         * @param {ICGCMsgMemCachedStats=} [properties] Properties to set
         */
        function CGCMsgMemCachedStats(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CGCMsgMemCachedStats instance using the specified properties.
         * @function create
         * @memberof CGCMsgMemCachedStats
         * @static
         * @param {ICGCMsgMemCachedStats=} [properties] Properties to set
         * @returns {CGCMsgMemCachedStats} CGCMsgMemCachedStats instance
         */
        CGCMsgMemCachedStats.create = function create(properties) {
            return new CGCMsgMemCachedStats(properties);
        };
    
        /**
         * Encodes the specified CGCMsgMemCachedStats message. Does not implicitly {@link CGCMsgMemCachedStats.verify|verify} messages.
         * @function encode
         * @memberof CGCMsgMemCachedStats
         * @static
         * @param {ICGCMsgMemCachedStats} message CGCMsgMemCachedStats message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgMemCachedStats.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CGCMsgMemCachedStats message, length delimited. Does not implicitly {@link CGCMsgMemCachedStats.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCMsgMemCachedStats
         * @static
         * @param {ICGCMsgMemCachedStats} message CGCMsgMemCachedStats message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgMemCachedStats.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCMsgMemCachedStats message from the specified reader or buffer.
         * @function decode
         * @memberof CGCMsgMemCachedStats
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCMsgMemCachedStats} CGCMsgMemCachedStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgMemCachedStats.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgMemCachedStats();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCMsgMemCachedStats message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCMsgMemCachedStats
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCMsgMemCachedStats} CGCMsgMemCachedStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgMemCachedStats.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCMsgMemCachedStats message.
         * @function verify
         * @memberof CGCMsgMemCachedStats
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCMsgMemCachedStats.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CGCMsgMemCachedStats message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCMsgMemCachedStats
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCMsgMemCachedStats} CGCMsgMemCachedStats
         */
        CGCMsgMemCachedStats.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCMsgMemCachedStats)
                return object;
            return new $root.CGCMsgMemCachedStats();
        };
    
        /**
         * Creates a plain object from a CGCMsgMemCachedStats message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCMsgMemCachedStats
         * @static
         * @param {CGCMsgMemCachedStats} message CGCMsgMemCachedStats
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCMsgMemCachedStats.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CGCMsgMemCachedStats to JSON.
         * @function toJSON
         * @memberof CGCMsgMemCachedStats
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCMsgMemCachedStats.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCMsgMemCachedStats
         * @function getTypeUrl
         * @memberof CGCMsgMemCachedStats
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCMsgMemCachedStats.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCMsgMemCachedStats";
        };
    
        return CGCMsgMemCachedStats;
    })();
    
    $root.CGCMsgMemCachedStatsResponse = (function() {
    
        /**
         * Properties of a CGCMsgMemCachedStatsResponse.
         * @exports ICGCMsgMemCachedStatsResponse
         * @interface ICGCMsgMemCachedStatsResponse
         * @property {number|Long|null} [currConnections] CGCMsgMemCachedStatsResponse currConnections
         * @property {number|Long|null} [cmdGet] CGCMsgMemCachedStatsResponse cmdGet
         * @property {number|Long|null} [cmdSet] CGCMsgMemCachedStatsResponse cmdSet
         * @property {number|Long|null} [cmdFlush] CGCMsgMemCachedStatsResponse cmdFlush
         * @property {number|Long|null} [getHits] CGCMsgMemCachedStatsResponse getHits
         * @property {number|Long|null} [getMisses] CGCMsgMemCachedStatsResponse getMisses
         * @property {number|Long|null} [deleteHits] CGCMsgMemCachedStatsResponse deleteHits
         * @property {number|Long|null} [deleteMisses] CGCMsgMemCachedStatsResponse deleteMisses
         * @property {number|Long|null} [bytesRead] CGCMsgMemCachedStatsResponse bytesRead
         * @property {number|Long|null} [bytesWritten] CGCMsgMemCachedStatsResponse bytesWritten
         * @property {number|Long|null} [limitMaxbytes] CGCMsgMemCachedStatsResponse limitMaxbytes
         * @property {number|Long|null} [currItems] CGCMsgMemCachedStatsResponse currItems
         * @property {number|Long|null} [evictions] CGCMsgMemCachedStatsResponse evictions
         * @property {number|Long|null} [bytes] CGCMsgMemCachedStatsResponse bytes
         */
    
        /**
         * Constructs a new CGCMsgMemCachedStatsResponse.
         * @exports CGCMsgMemCachedStatsResponse
         * @classdesc Represents a CGCMsgMemCachedStatsResponse.
         * @implements ICGCMsgMemCachedStatsResponse
         * @constructor
         * @param {ICGCMsgMemCachedStatsResponse=} [properties] Properties to set
         */
        function CGCMsgMemCachedStatsResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCMsgMemCachedStatsResponse currConnections.
         * @member {number|Long} currConnections
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         */
        CGCMsgMemCachedStatsResponse.prototype.currConnections = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CGCMsgMemCachedStatsResponse cmdGet.
         * @member {number|Long} cmdGet
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         */
        CGCMsgMemCachedStatsResponse.prototype.cmdGet = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CGCMsgMemCachedStatsResponse cmdSet.
         * @member {number|Long} cmdSet
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         */
        CGCMsgMemCachedStatsResponse.prototype.cmdSet = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CGCMsgMemCachedStatsResponse cmdFlush.
         * @member {number|Long} cmdFlush
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         */
        CGCMsgMemCachedStatsResponse.prototype.cmdFlush = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CGCMsgMemCachedStatsResponse getHits.
         * @member {number|Long} getHits
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         */
        CGCMsgMemCachedStatsResponse.prototype.getHits = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CGCMsgMemCachedStatsResponse getMisses.
         * @member {number|Long} getMisses
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         */
        CGCMsgMemCachedStatsResponse.prototype.getMisses = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CGCMsgMemCachedStatsResponse deleteHits.
         * @member {number|Long} deleteHits
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         */
        CGCMsgMemCachedStatsResponse.prototype.deleteHits = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CGCMsgMemCachedStatsResponse deleteMisses.
         * @member {number|Long} deleteMisses
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         */
        CGCMsgMemCachedStatsResponse.prototype.deleteMisses = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CGCMsgMemCachedStatsResponse bytesRead.
         * @member {number|Long} bytesRead
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         */
        CGCMsgMemCachedStatsResponse.prototype.bytesRead = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CGCMsgMemCachedStatsResponse bytesWritten.
         * @member {number|Long} bytesWritten
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         */
        CGCMsgMemCachedStatsResponse.prototype.bytesWritten = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CGCMsgMemCachedStatsResponse limitMaxbytes.
         * @member {number|Long} limitMaxbytes
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         */
        CGCMsgMemCachedStatsResponse.prototype.limitMaxbytes = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CGCMsgMemCachedStatsResponse currItems.
         * @member {number|Long} currItems
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         */
        CGCMsgMemCachedStatsResponse.prototype.currItems = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CGCMsgMemCachedStatsResponse evictions.
         * @member {number|Long} evictions
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         */
        CGCMsgMemCachedStatsResponse.prototype.evictions = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CGCMsgMemCachedStatsResponse bytes.
         * @member {number|Long} bytes
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         */
        CGCMsgMemCachedStatsResponse.prototype.bytes = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CGCMsgMemCachedStatsResponse instance using the specified properties.
         * @function create
         * @memberof CGCMsgMemCachedStatsResponse
         * @static
         * @param {ICGCMsgMemCachedStatsResponse=} [properties] Properties to set
         * @returns {CGCMsgMemCachedStatsResponse} CGCMsgMemCachedStatsResponse instance
         */
        CGCMsgMemCachedStatsResponse.create = function create(properties) {
            return new CGCMsgMemCachedStatsResponse(properties);
        };
    
        /**
         * Encodes the specified CGCMsgMemCachedStatsResponse message. Does not implicitly {@link CGCMsgMemCachedStatsResponse.verify|verify} messages.
         * @function encode
         * @memberof CGCMsgMemCachedStatsResponse
         * @static
         * @param {ICGCMsgMemCachedStatsResponse} message CGCMsgMemCachedStatsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgMemCachedStatsResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.currConnections != null && Object.hasOwnProperty.call(message, "currConnections"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.currConnections);
            if (message.cmdGet != null && Object.hasOwnProperty.call(message, "cmdGet"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.cmdGet);
            if (message.cmdSet != null && Object.hasOwnProperty.call(message, "cmdSet"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.cmdSet);
            if (message.cmdFlush != null && Object.hasOwnProperty.call(message, "cmdFlush"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.cmdFlush);
            if (message.getHits != null && Object.hasOwnProperty.call(message, "getHits"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint64(message.getHits);
            if (message.getMisses != null && Object.hasOwnProperty.call(message, "getMisses"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint64(message.getMisses);
            if (message.deleteHits != null && Object.hasOwnProperty.call(message, "deleteHits"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint64(message.deleteHits);
            if (message.deleteMisses != null && Object.hasOwnProperty.call(message, "deleteMisses"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint64(message.deleteMisses);
            if (message.bytesRead != null && Object.hasOwnProperty.call(message, "bytesRead"))
                writer.uint32(/* id 9, wireType 0 =*/72).uint64(message.bytesRead);
            if (message.bytesWritten != null && Object.hasOwnProperty.call(message, "bytesWritten"))
                writer.uint32(/* id 10, wireType 0 =*/80).uint64(message.bytesWritten);
            if (message.limitMaxbytes != null && Object.hasOwnProperty.call(message, "limitMaxbytes"))
                writer.uint32(/* id 11, wireType 0 =*/88).uint64(message.limitMaxbytes);
            if (message.currItems != null && Object.hasOwnProperty.call(message, "currItems"))
                writer.uint32(/* id 12, wireType 0 =*/96).uint64(message.currItems);
            if (message.evictions != null && Object.hasOwnProperty.call(message, "evictions"))
                writer.uint32(/* id 13, wireType 0 =*/104).uint64(message.evictions);
            if (message.bytes != null && Object.hasOwnProperty.call(message, "bytes"))
                writer.uint32(/* id 14, wireType 0 =*/112).uint64(message.bytes);
            return writer;
        };
    
        /**
         * Encodes the specified CGCMsgMemCachedStatsResponse message, length delimited. Does not implicitly {@link CGCMsgMemCachedStatsResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCMsgMemCachedStatsResponse
         * @static
         * @param {ICGCMsgMemCachedStatsResponse} message CGCMsgMemCachedStatsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgMemCachedStatsResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCMsgMemCachedStatsResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CGCMsgMemCachedStatsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCMsgMemCachedStatsResponse} CGCMsgMemCachedStatsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgMemCachedStatsResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgMemCachedStatsResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.currConnections = reader.uint64();
                        break;
                    }
                case 2: {
                        message.cmdGet = reader.uint64();
                        break;
                    }
                case 3: {
                        message.cmdSet = reader.uint64();
                        break;
                    }
                case 4: {
                        message.cmdFlush = reader.uint64();
                        break;
                    }
                case 5: {
                        message.getHits = reader.uint64();
                        break;
                    }
                case 6: {
                        message.getMisses = reader.uint64();
                        break;
                    }
                case 7: {
                        message.deleteHits = reader.uint64();
                        break;
                    }
                case 8: {
                        message.deleteMisses = reader.uint64();
                        break;
                    }
                case 9: {
                        message.bytesRead = reader.uint64();
                        break;
                    }
                case 10: {
                        message.bytesWritten = reader.uint64();
                        break;
                    }
                case 11: {
                        message.limitMaxbytes = reader.uint64();
                        break;
                    }
                case 12: {
                        message.currItems = reader.uint64();
                        break;
                    }
                case 13: {
                        message.evictions = reader.uint64();
                        break;
                    }
                case 14: {
                        message.bytes = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCMsgMemCachedStatsResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCMsgMemCachedStatsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCMsgMemCachedStatsResponse} CGCMsgMemCachedStatsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgMemCachedStatsResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCMsgMemCachedStatsResponse message.
         * @function verify
         * @memberof CGCMsgMemCachedStatsResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCMsgMemCachedStatsResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.currConnections != null && message.hasOwnProperty("currConnections"))
                if (!$util.isInteger(message.currConnections) && !(message.currConnections && $util.isInteger(message.currConnections.low) && $util.isInteger(message.currConnections.high)))
                    return "currConnections: integer|Long expected";
            if (message.cmdGet != null && message.hasOwnProperty("cmdGet"))
                if (!$util.isInteger(message.cmdGet) && !(message.cmdGet && $util.isInteger(message.cmdGet.low) && $util.isInteger(message.cmdGet.high)))
                    return "cmdGet: integer|Long expected";
            if (message.cmdSet != null && message.hasOwnProperty("cmdSet"))
                if (!$util.isInteger(message.cmdSet) && !(message.cmdSet && $util.isInteger(message.cmdSet.low) && $util.isInteger(message.cmdSet.high)))
                    return "cmdSet: integer|Long expected";
            if (message.cmdFlush != null && message.hasOwnProperty("cmdFlush"))
                if (!$util.isInteger(message.cmdFlush) && !(message.cmdFlush && $util.isInteger(message.cmdFlush.low) && $util.isInteger(message.cmdFlush.high)))
                    return "cmdFlush: integer|Long expected";
            if (message.getHits != null && message.hasOwnProperty("getHits"))
                if (!$util.isInteger(message.getHits) && !(message.getHits && $util.isInteger(message.getHits.low) && $util.isInteger(message.getHits.high)))
                    return "getHits: integer|Long expected";
            if (message.getMisses != null && message.hasOwnProperty("getMisses"))
                if (!$util.isInteger(message.getMisses) && !(message.getMisses && $util.isInteger(message.getMisses.low) && $util.isInteger(message.getMisses.high)))
                    return "getMisses: integer|Long expected";
            if (message.deleteHits != null && message.hasOwnProperty("deleteHits"))
                if (!$util.isInteger(message.deleteHits) && !(message.deleteHits && $util.isInteger(message.deleteHits.low) && $util.isInteger(message.deleteHits.high)))
                    return "deleteHits: integer|Long expected";
            if (message.deleteMisses != null && message.hasOwnProperty("deleteMisses"))
                if (!$util.isInteger(message.deleteMisses) && !(message.deleteMisses && $util.isInteger(message.deleteMisses.low) && $util.isInteger(message.deleteMisses.high)))
                    return "deleteMisses: integer|Long expected";
            if (message.bytesRead != null && message.hasOwnProperty("bytesRead"))
                if (!$util.isInteger(message.bytesRead) && !(message.bytesRead && $util.isInteger(message.bytesRead.low) && $util.isInteger(message.bytesRead.high)))
                    return "bytesRead: integer|Long expected";
            if (message.bytesWritten != null && message.hasOwnProperty("bytesWritten"))
                if (!$util.isInteger(message.bytesWritten) && !(message.bytesWritten && $util.isInteger(message.bytesWritten.low) && $util.isInteger(message.bytesWritten.high)))
                    return "bytesWritten: integer|Long expected";
            if (message.limitMaxbytes != null && message.hasOwnProperty("limitMaxbytes"))
                if (!$util.isInteger(message.limitMaxbytes) && !(message.limitMaxbytes && $util.isInteger(message.limitMaxbytes.low) && $util.isInteger(message.limitMaxbytes.high)))
                    return "limitMaxbytes: integer|Long expected";
            if (message.currItems != null && message.hasOwnProperty("currItems"))
                if (!$util.isInteger(message.currItems) && !(message.currItems && $util.isInteger(message.currItems.low) && $util.isInteger(message.currItems.high)))
                    return "currItems: integer|Long expected";
            if (message.evictions != null && message.hasOwnProperty("evictions"))
                if (!$util.isInteger(message.evictions) && !(message.evictions && $util.isInteger(message.evictions.low) && $util.isInteger(message.evictions.high)))
                    return "evictions: integer|Long expected";
            if (message.bytes != null && message.hasOwnProperty("bytes"))
                if (!$util.isInteger(message.bytes) && !(message.bytes && $util.isInteger(message.bytes.low) && $util.isInteger(message.bytes.high)))
                    return "bytes: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CGCMsgMemCachedStatsResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCMsgMemCachedStatsResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCMsgMemCachedStatsResponse} CGCMsgMemCachedStatsResponse
         */
        CGCMsgMemCachedStatsResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCMsgMemCachedStatsResponse)
                return object;
            var message = new $root.CGCMsgMemCachedStatsResponse();
            if (object.currConnections != null)
                if ($util.Long)
                    (message.currConnections = $util.Long.fromValue(object.currConnections)).unsigned = true;
                else if (typeof object.currConnections === "string")
                    message.currConnections = parseInt(object.currConnections, 10);
                else if (typeof object.currConnections === "number")
                    message.currConnections = object.currConnections;
                else if (typeof object.currConnections === "object")
                    message.currConnections = new $util.LongBits(object.currConnections.low >>> 0, object.currConnections.high >>> 0).toNumber(true);
            if (object.cmdGet != null)
                if ($util.Long)
                    (message.cmdGet = $util.Long.fromValue(object.cmdGet)).unsigned = true;
                else if (typeof object.cmdGet === "string")
                    message.cmdGet = parseInt(object.cmdGet, 10);
                else if (typeof object.cmdGet === "number")
                    message.cmdGet = object.cmdGet;
                else if (typeof object.cmdGet === "object")
                    message.cmdGet = new $util.LongBits(object.cmdGet.low >>> 0, object.cmdGet.high >>> 0).toNumber(true);
            if (object.cmdSet != null)
                if ($util.Long)
                    (message.cmdSet = $util.Long.fromValue(object.cmdSet)).unsigned = true;
                else if (typeof object.cmdSet === "string")
                    message.cmdSet = parseInt(object.cmdSet, 10);
                else if (typeof object.cmdSet === "number")
                    message.cmdSet = object.cmdSet;
                else if (typeof object.cmdSet === "object")
                    message.cmdSet = new $util.LongBits(object.cmdSet.low >>> 0, object.cmdSet.high >>> 0).toNumber(true);
            if (object.cmdFlush != null)
                if ($util.Long)
                    (message.cmdFlush = $util.Long.fromValue(object.cmdFlush)).unsigned = true;
                else if (typeof object.cmdFlush === "string")
                    message.cmdFlush = parseInt(object.cmdFlush, 10);
                else if (typeof object.cmdFlush === "number")
                    message.cmdFlush = object.cmdFlush;
                else if (typeof object.cmdFlush === "object")
                    message.cmdFlush = new $util.LongBits(object.cmdFlush.low >>> 0, object.cmdFlush.high >>> 0).toNumber(true);
            if (object.getHits != null)
                if ($util.Long)
                    (message.getHits = $util.Long.fromValue(object.getHits)).unsigned = true;
                else if (typeof object.getHits === "string")
                    message.getHits = parseInt(object.getHits, 10);
                else if (typeof object.getHits === "number")
                    message.getHits = object.getHits;
                else if (typeof object.getHits === "object")
                    message.getHits = new $util.LongBits(object.getHits.low >>> 0, object.getHits.high >>> 0).toNumber(true);
            if (object.getMisses != null)
                if ($util.Long)
                    (message.getMisses = $util.Long.fromValue(object.getMisses)).unsigned = true;
                else if (typeof object.getMisses === "string")
                    message.getMisses = parseInt(object.getMisses, 10);
                else if (typeof object.getMisses === "number")
                    message.getMisses = object.getMisses;
                else if (typeof object.getMisses === "object")
                    message.getMisses = new $util.LongBits(object.getMisses.low >>> 0, object.getMisses.high >>> 0).toNumber(true);
            if (object.deleteHits != null)
                if ($util.Long)
                    (message.deleteHits = $util.Long.fromValue(object.deleteHits)).unsigned = true;
                else if (typeof object.deleteHits === "string")
                    message.deleteHits = parseInt(object.deleteHits, 10);
                else if (typeof object.deleteHits === "number")
                    message.deleteHits = object.deleteHits;
                else if (typeof object.deleteHits === "object")
                    message.deleteHits = new $util.LongBits(object.deleteHits.low >>> 0, object.deleteHits.high >>> 0).toNumber(true);
            if (object.deleteMisses != null)
                if ($util.Long)
                    (message.deleteMisses = $util.Long.fromValue(object.deleteMisses)).unsigned = true;
                else if (typeof object.deleteMisses === "string")
                    message.deleteMisses = parseInt(object.deleteMisses, 10);
                else if (typeof object.deleteMisses === "number")
                    message.deleteMisses = object.deleteMisses;
                else if (typeof object.deleteMisses === "object")
                    message.deleteMisses = new $util.LongBits(object.deleteMisses.low >>> 0, object.deleteMisses.high >>> 0).toNumber(true);
            if (object.bytesRead != null)
                if ($util.Long)
                    (message.bytesRead = $util.Long.fromValue(object.bytesRead)).unsigned = true;
                else if (typeof object.bytesRead === "string")
                    message.bytesRead = parseInt(object.bytesRead, 10);
                else if (typeof object.bytesRead === "number")
                    message.bytesRead = object.bytesRead;
                else if (typeof object.bytesRead === "object")
                    message.bytesRead = new $util.LongBits(object.bytesRead.low >>> 0, object.bytesRead.high >>> 0).toNumber(true);
            if (object.bytesWritten != null)
                if ($util.Long)
                    (message.bytesWritten = $util.Long.fromValue(object.bytesWritten)).unsigned = true;
                else if (typeof object.bytesWritten === "string")
                    message.bytesWritten = parseInt(object.bytesWritten, 10);
                else if (typeof object.bytesWritten === "number")
                    message.bytesWritten = object.bytesWritten;
                else if (typeof object.bytesWritten === "object")
                    message.bytesWritten = new $util.LongBits(object.bytesWritten.low >>> 0, object.bytesWritten.high >>> 0).toNumber(true);
            if (object.limitMaxbytes != null)
                if ($util.Long)
                    (message.limitMaxbytes = $util.Long.fromValue(object.limitMaxbytes)).unsigned = true;
                else if (typeof object.limitMaxbytes === "string")
                    message.limitMaxbytes = parseInt(object.limitMaxbytes, 10);
                else if (typeof object.limitMaxbytes === "number")
                    message.limitMaxbytes = object.limitMaxbytes;
                else if (typeof object.limitMaxbytes === "object")
                    message.limitMaxbytes = new $util.LongBits(object.limitMaxbytes.low >>> 0, object.limitMaxbytes.high >>> 0).toNumber(true);
            if (object.currItems != null)
                if ($util.Long)
                    (message.currItems = $util.Long.fromValue(object.currItems)).unsigned = true;
                else if (typeof object.currItems === "string")
                    message.currItems = parseInt(object.currItems, 10);
                else if (typeof object.currItems === "number")
                    message.currItems = object.currItems;
                else if (typeof object.currItems === "object")
                    message.currItems = new $util.LongBits(object.currItems.low >>> 0, object.currItems.high >>> 0).toNumber(true);
            if (object.evictions != null)
                if ($util.Long)
                    (message.evictions = $util.Long.fromValue(object.evictions)).unsigned = true;
                else if (typeof object.evictions === "string")
                    message.evictions = parseInt(object.evictions, 10);
                else if (typeof object.evictions === "number")
                    message.evictions = object.evictions;
                else if (typeof object.evictions === "object")
                    message.evictions = new $util.LongBits(object.evictions.low >>> 0, object.evictions.high >>> 0).toNumber(true);
            if (object.bytes != null)
                if ($util.Long)
                    (message.bytes = $util.Long.fromValue(object.bytes)).unsigned = true;
                else if (typeof object.bytes === "string")
                    message.bytes = parseInt(object.bytes, 10);
                else if (typeof object.bytes === "number")
                    message.bytes = object.bytes;
                else if (typeof object.bytes === "object")
                    message.bytes = new $util.LongBits(object.bytes.low >>> 0, object.bytes.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CGCMsgMemCachedStatsResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCMsgMemCachedStatsResponse
         * @static
         * @param {CGCMsgMemCachedStatsResponse} message CGCMsgMemCachedStatsResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCMsgMemCachedStatsResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.currConnections = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.currConnections = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.cmdGet = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.cmdGet = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.cmdSet = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.cmdSet = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.cmdFlush = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.cmdFlush = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.getHits = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.getHits = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.getMisses = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.getMisses = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.deleteHits = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.deleteHits = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.deleteMisses = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.deleteMisses = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.bytesRead = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.bytesRead = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.bytesWritten = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.bytesWritten = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.limitMaxbytes = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.limitMaxbytes = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.currItems = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.currItems = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.evictions = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.evictions = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.bytes = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.bytes = options.longs === String ? "0" : 0;
            }
            if (message.currConnections != null && message.hasOwnProperty("currConnections"))
                if (typeof message.currConnections === "number")
                    object.currConnections = options.longs === String ? String(message.currConnections) : message.currConnections;
                else
                    object.currConnections = options.longs === String ? $util.Long.prototype.toString.call(message.currConnections) : options.longs === Number ? new $util.LongBits(message.currConnections.low >>> 0, message.currConnections.high >>> 0).toNumber(true) : message.currConnections;
            if (message.cmdGet != null && message.hasOwnProperty("cmdGet"))
                if (typeof message.cmdGet === "number")
                    object.cmdGet = options.longs === String ? String(message.cmdGet) : message.cmdGet;
                else
                    object.cmdGet = options.longs === String ? $util.Long.prototype.toString.call(message.cmdGet) : options.longs === Number ? new $util.LongBits(message.cmdGet.low >>> 0, message.cmdGet.high >>> 0).toNumber(true) : message.cmdGet;
            if (message.cmdSet != null && message.hasOwnProperty("cmdSet"))
                if (typeof message.cmdSet === "number")
                    object.cmdSet = options.longs === String ? String(message.cmdSet) : message.cmdSet;
                else
                    object.cmdSet = options.longs === String ? $util.Long.prototype.toString.call(message.cmdSet) : options.longs === Number ? new $util.LongBits(message.cmdSet.low >>> 0, message.cmdSet.high >>> 0).toNumber(true) : message.cmdSet;
            if (message.cmdFlush != null && message.hasOwnProperty("cmdFlush"))
                if (typeof message.cmdFlush === "number")
                    object.cmdFlush = options.longs === String ? String(message.cmdFlush) : message.cmdFlush;
                else
                    object.cmdFlush = options.longs === String ? $util.Long.prototype.toString.call(message.cmdFlush) : options.longs === Number ? new $util.LongBits(message.cmdFlush.low >>> 0, message.cmdFlush.high >>> 0).toNumber(true) : message.cmdFlush;
            if (message.getHits != null && message.hasOwnProperty("getHits"))
                if (typeof message.getHits === "number")
                    object.getHits = options.longs === String ? String(message.getHits) : message.getHits;
                else
                    object.getHits = options.longs === String ? $util.Long.prototype.toString.call(message.getHits) : options.longs === Number ? new $util.LongBits(message.getHits.low >>> 0, message.getHits.high >>> 0).toNumber(true) : message.getHits;
            if (message.getMisses != null && message.hasOwnProperty("getMisses"))
                if (typeof message.getMisses === "number")
                    object.getMisses = options.longs === String ? String(message.getMisses) : message.getMisses;
                else
                    object.getMisses = options.longs === String ? $util.Long.prototype.toString.call(message.getMisses) : options.longs === Number ? new $util.LongBits(message.getMisses.low >>> 0, message.getMisses.high >>> 0).toNumber(true) : message.getMisses;
            if (message.deleteHits != null && message.hasOwnProperty("deleteHits"))
                if (typeof message.deleteHits === "number")
                    object.deleteHits = options.longs === String ? String(message.deleteHits) : message.deleteHits;
                else
                    object.deleteHits = options.longs === String ? $util.Long.prototype.toString.call(message.deleteHits) : options.longs === Number ? new $util.LongBits(message.deleteHits.low >>> 0, message.deleteHits.high >>> 0).toNumber(true) : message.deleteHits;
            if (message.deleteMisses != null && message.hasOwnProperty("deleteMisses"))
                if (typeof message.deleteMisses === "number")
                    object.deleteMisses = options.longs === String ? String(message.deleteMisses) : message.deleteMisses;
                else
                    object.deleteMisses = options.longs === String ? $util.Long.prototype.toString.call(message.deleteMisses) : options.longs === Number ? new $util.LongBits(message.deleteMisses.low >>> 0, message.deleteMisses.high >>> 0).toNumber(true) : message.deleteMisses;
            if (message.bytesRead != null && message.hasOwnProperty("bytesRead"))
                if (typeof message.bytesRead === "number")
                    object.bytesRead = options.longs === String ? String(message.bytesRead) : message.bytesRead;
                else
                    object.bytesRead = options.longs === String ? $util.Long.prototype.toString.call(message.bytesRead) : options.longs === Number ? new $util.LongBits(message.bytesRead.low >>> 0, message.bytesRead.high >>> 0).toNumber(true) : message.bytesRead;
            if (message.bytesWritten != null && message.hasOwnProperty("bytesWritten"))
                if (typeof message.bytesWritten === "number")
                    object.bytesWritten = options.longs === String ? String(message.bytesWritten) : message.bytesWritten;
                else
                    object.bytesWritten = options.longs === String ? $util.Long.prototype.toString.call(message.bytesWritten) : options.longs === Number ? new $util.LongBits(message.bytesWritten.low >>> 0, message.bytesWritten.high >>> 0).toNumber(true) : message.bytesWritten;
            if (message.limitMaxbytes != null && message.hasOwnProperty("limitMaxbytes"))
                if (typeof message.limitMaxbytes === "number")
                    object.limitMaxbytes = options.longs === String ? String(message.limitMaxbytes) : message.limitMaxbytes;
                else
                    object.limitMaxbytes = options.longs === String ? $util.Long.prototype.toString.call(message.limitMaxbytes) : options.longs === Number ? new $util.LongBits(message.limitMaxbytes.low >>> 0, message.limitMaxbytes.high >>> 0).toNumber(true) : message.limitMaxbytes;
            if (message.currItems != null && message.hasOwnProperty("currItems"))
                if (typeof message.currItems === "number")
                    object.currItems = options.longs === String ? String(message.currItems) : message.currItems;
                else
                    object.currItems = options.longs === String ? $util.Long.prototype.toString.call(message.currItems) : options.longs === Number ? new $util.LongBits(message.currItems.low >>> 0, message.currItems.high >>> 0).toNumber(true) : message.currItems;
            if (message.evictions != null && message.hasOwnProperty("evictions"))
                if (typeof message.evictions === "number")
                    object.evictions = options.longs === String ? String(message.evictions) : message.evictions;
                else
                    object.evictions = options.longs === String ? $util.Long.prototype.toString.call(message.evictions) : options.longs === Number ? new $util.LongBits(message.evictions.low >>> 0, message.evictions.high >>> 0).toNumber(true) : message.evictions;
            if (message.bytes != null && message.hasOwnProperty("bytes"))
                if (typeof message.bytes === "number")
                    object.bytes = options.longs === String ? String(message.bytes) : message.bytes;
                else
                    object.bytes = options.longs === String ? $util.Long.prototype.toString.call(message.bytes) : options.longs === Number ? new $util.LongBits(message.bytes.low >>> 0, message.bytes.high >>> 0).toNumber(true) : message.bytes;
            return object;
        };
    
        /**
         * Converts this CGCMsgMemCachedStatsResponse to JSON.
         * @function toJSON
         * @memberof CGCMsgMemCachedStatsResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCMsgMemCachedStatsResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCMsgMemCachedStatsResponse
         * @function getTypeUrl
         * @memberof CGCMsgMemCachedStatsResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCMsgMemCachedStatsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCMsgMemCachedStatsResponse";
        };
    
        return CGCMsgMemCachedStatsResponse;
    })();
    
    $root.CGCMsgSQLStats = (function() {
    
        /**
         * Properties of a CGCMsgSQLStats.
         * @exports ICGCMsgSQLStats
         * @interface ICGCMsgSQLStats
         * @property {number|null} [schemaCatalog] CGCMsgSQLStats schemaCatalog
         */
    
        /**
         * Constructs a new CGCMsgSQLStats.
         * @exports CGCMsgSQLStats
         * @classdesc Represents a CGCMsgSQLStats.
         * @implements ICGCMsgSQLStats
         * @constructor
         * @param {ICGCMsgSQLStats=} [properties] Properties to set
         */
        function CGCMsgSQLStats(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCMsgSQLStats schemaCatalog.
         * @member {number} schemaCatalog
         * @memberof CGCMsgSQLStats
         * @instance
         */
        CGCMsgSQLStats.prototype.schemaCatalog = 0;
    
        /**
         * Creates a new CGCMsgSQLStats instance using the specified properties.
         * @function create
         * @memberof CGCMsgSQLStats
         * @static
         * @param {ICGCMsgSQLStats=} [properties] Properties to set
         * @returns {CGCMsgSQLStats} CGCMsgSQLStats instance
         */
        CGCMsgSQLStats.create = function create(properties) {
            return new CGCMsgSQLStats(properties);
        };
    
        /**
         * Encodes the specified CGCMsgSQLStats message. Does not implicitly {@link CGCMsgSQLStats.verify|verify} messages.
         * @function encode
         * @memberof CGCMsgSQLStats
         * @static
         * @param {ICGCMsgSQLStats} message CGCMsgSQLStats message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgSQLStats.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.schemaCatalog != null && Object.hasOwnProperty.call(message, "schemaCatalog"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.schemaCatalog);
            return writer;
        };
    
        /**
         * Encodes the specified CGCMsgSQLStats message, length delimited. Does not implicitly {@link CGCMsgSQLStats.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCMsgSQLStats
         * @static
         * @param {ICGCMsgSQLStats} message CGCMsgSQLStats message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgSQLStats.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCMsgSQLStats message from the specified reader or buffer.
         * @function decode
         * @memberof CGCMsgSQLStats
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCMsgSQLStats} CGCMsgSQLStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgSQLStats.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgSQLStats();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.schemaCatalog = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCMsgSQLStats message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCMsgSQLStats
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCMsgSQLStats} CGCMsgSQLStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgSQLStats.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCMsgSQLStats message.
         * @function verify
         * @memberof CGCMsgSQLStats
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCMsgSQLStats.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.schemaCatalog != null && message.hasOwnProperty("schemaCatalog"))
                if (!$util.isInteger(message.schemaCatalog))
                    return "schemaCatalog: integer expected";
            return null;
        };
    
        /**
         * Creates a CGCMsgSQLStats message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCMsgSQLStats
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCMsgSQLStats} CGCMsgSQLStats
         */
        CGCMsgSQLStats.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCMsgSQLStats)
                return object;
            var message = new $root.CGCMsgSQLStats();
            if (object.schemaCatalog != null)
                message.schemaCatalog = object.schemaCatalog >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CGCMsgSQLStats message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCMsgSQLStats
         * @static
         * @param {CGCMsgSQLStats} message CGCMsgSQLStats
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCMsgSQLStats.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.schemaCatalog = 0;
            if (message.schemaCatalog != null && message.hasOwnProperty("schemaCatalog"))
                object.schemaCatalog = message.schemaCatalog;
            return object;
        };
    
        /**
         * Converts this CGCMsgSQLStats to JSON.
         * @function toJSON
         * @memberof CGCMsgSQLStats
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCMsgSQLStats.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCMsgSQLStats
         * @function getTypeUrl
         * @memberof CGCMsgSQLStats
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCMsgSQLStats.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCMsgSQLStats";
        };
    
        return CGCMsgSQLStats;
    })();
    
    $root.CGCMsgSQLStatsResponse = (function() {
    
        /**
         * Properties of a CGCMsgSQLStatsResponse.
         * @exports ICGCMsgSQLStatsResponse
         * @interface ICGCMsgSQLStatsResponse
         * @property {number|null} [threads] CGCMsgSQLStatsResponse threads
         * @property {number|null} [threadsConnected] CGCMsgSQLStatsResponse threadsConnected
         * @property {number|null} [threadsActive] CGCMsgSQLStatsResponse threadsActive
         * @property {number|null} [operationsSubmitted] CGCMsgSQLStatsResponse operationsSubmitted
         * @property {number|null} [preparedStatementsExecuted] CGCMsgSQLStatsResponse preparedStatementsExecuted
         * @property {number|null} [nonPreparedStatementsExecuted] CGCMsgSQLStatsResponse nonPreparedStatementsExecuted
         * @property {number|null} [deadlockRetries] CGCMsgSQLStatsResponse deadlockRetries
         * @property {number|null} [operationsTimedOutInQueue] CGCMsgSQLStatsResponse operationsTimedOutInQueue
         * @property {number|null} [errors] CGCMsgSQLStatsResponse errors
         */
    
        /**
         * Constructs a new CGCMsgSQLStatsResponse.
         * @exports CGCMsgSQLStatsResponse
         * @classdesc Represents a CGCMsgSQLStatsResponse.
         * @implements ICGCMsgSQLStatsResponse
         * @constructor
         * @param {ICGCMsgSQLStatsResponse=} [properties] Properties to set
         */
        function CGCMsgSQLStatsResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCMsgSQLStatsResponse threads.
         * @member {number} threads
         * @memberof CGCMsgSQLStatsResponse
         * @instance
         */
        CGCMsgSQLStatsResponse.prototype.threads = 0;
    
        /**
         * CGCMsgSQLStatsResponse threadsConnected.
         * @member {number} threadsConnected
         * @memberof CGCMsgSQLStatsResponse
         * @instance
         */
        CGCMsgSQLStatsResponse.prototype.threadsConnected = 0;
    
        /**
         * CGCMsgSQLStatsResponse threadsActive.
         * @member {number} threadsActive
         * @memberof CGCMsgSQLStatsResponse
         * @instance
         */
        CGCMsgSQLStatsResponse.prototype.threadsActive = 0;
    
        /**
         * CGCMsgSQLStatsResponse operationsSubmitted.
         * @member {number} operationsSubmitted
         * @memberof CGCMsgSQLStatsResponse
         * @instance
         */
        CGCMsgSQLStatsResponse.prototype.operationsSubmitted = 0;
    
        /**
         * CGCMsgSQLStatsResponse preparedStatementsExecuted.
         * @member {number} preparedStatementsExecuted
         * @memberof CGCMsgSQLStatsResponse
         * @instance
         */
        CGCMsgSQLStatsResponse.prototype.preparedStatementsExecuted = 0;
    
        /**
         * CGCMsgSQLStatsResponse nonPreparedStatementsExecuted.
         * @member {number} nonPreparedStatementsExecuted
         * @memberof CGCMsgSQLStatsResponse
         * @instance
         */
        CGCMsgSQLStatsResponse.prototype.nonPreparedStatementsExecuted = 0;
    
        /**
         * CGCMsgSQLStatsResponse deadlockRetries.
         * @member {number} deadlockRetries
         * @memberof CGCMsgSQLStatsResponse
         * @instance
         */
        CGCMsgSQLStatsResponse.prototype.deadlockRetries = 0;
    
        /**
         * CGCMsgSQLStatsResponse operationsTimedOutInQueue.
         * @member {number} operationsTimedOutInQueue
         * @memberof CGCMsgSQLStatsResponse
         * @instance
         */
        CGCMsgSQLStatsResponse.prototype.operationsTimedOutInQueue = 0;
    
        /**
         * CGCMsgSQLStatsResponse errors.
         * @member {number} errors
         * @memberof CGCMsgSQLStatsResponse
         * @instance
         */
        CGCMsgSQLStatsResponse.prototype.errors = 0;
    
        /**
         * Creates a new CGCMsgSQLStatsResponse instance using the specified properties.
         * @function create
         * @memberof CGCMsgSQLStatsResponse
         * @static
         * @param {ICGCMsgSQLStatsResponse=} [properties] Properties to set
         * @returns {CGCMsgSQLStatsResponse} CGCMsgSQLStatsResponse instance
         */
        CGCMsgSQLStatsResponse.create = function create(properties) {
            return new CGCMsgSQLStatsResponse(properties);
        };
    
        /**
         * Encodes the specified CGCMsgSQLStatsResponse message. Does not implicitly {@link CGCMsgSQLStatsResponse.verify|verify} messages.
         * @function encode
         * @memberof CGCMsgSQLStatsResponse
         * @static
         * @param {ICGCMsgSQLStatsResponse} message CGCMsgSQLStatsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgSQLStatsResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.threads != null && Object.hasOwnProperty.call(message, "threads"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.threads);
            if (message.threadsConnected != null && Object.hasOwnProperty.call(message, "threadsConnected"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.threadsConnected);
            if (message.threadsActive != null && Object.hasOwnProperty.call(message, "threadsActive"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.threadsActive);
            if (message.operationsSubmitted != null && Object.hasOwnProperty.call(message, "operationsSubmitted"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.operationsSubmitted);
            if (message.preparedStatementsExecuted != null && Object.hasOwnProperty.call(message, "preparedStatementsExecuted"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.preparedStatementsExecuted);
            if (message.nonPreparedStatementsExecuted != null && Object.hasOwnProperty.call(message, "nonPreparedStatementsExecuted"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.nonPreparedStatementsExecuted);
            if (message.deadlockRetries != null && Object.hasOwnProperty.call(message, "deadlockRetries"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.deadlockRetries);
            if (message.operationsTimedOutInQueue != null && Object.hasOwnProperty.call(message, "operationsTimedOutInQueue"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.operationsTimedOutInQueue);
            if (message.errors != null && Object.hasOwnProperty.call(message, "errors"))
                writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.errors);
            return writer;
        };
    
        /**
         * Encodes the specified CGCMsgSQLStatsResponse message, length delimited. Does not implicitly {@link CGCMsgSQLStatsResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCMsgSQLStatsResponse
         * @static
         * @param {ICGCMsgSQLStatsResponse} message CGCMsgSQLStatsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgSQLStatsResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCMsgSQLStatsResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CGCMsgSQLStatsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCMsgSQLStatsResponse} CGCMsgSQLStatsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgSQLStatsResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgSQLStatsResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.threads = reader.uint32();
                        break;
                    }
                case 2: {
                        message.threadsConnected = reader.uint32();
                        break;
                    }
                case 3: {
                        message.threadsActive = reader.uint32();
                        break;
                    }
                case 4: {
                        message.operationsSubmitted = reader.uint32();
                        break;
                    }
                case 5: {
                        message.preparedStatementsExecuted = reader.uint32();
                        break;
                    }
                case 6: {
                        message.nonPreparedStatementsExecuted = reader.uint32();
                        break;
                    }
                case 7: {
                        message.deadlockRetries = reader.uint32();
                        break;
                    }
                case 8: {
                        message.operationsTimedOutInQueue = reader.uint32();
                        break;
                    }
                case 9: {
                        message.errors = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCMsgSQLStatsResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCMsgSQLStatsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCMsgSQLStatsResponse} CGCMsgSQLStatsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgSQLStatsResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCMsgSQLStatsResponse message.
         * @function verify
         * @memberof CGCMsgSQLStatsResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCMsgSQLStatsResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.threads != null && message.hasOwnProperty("threads"))
                if (!$util.isInteger(message.threads))
                    return "threads: integer expected";
            if (message.threadsConnected != null && message.hasOwnProperty("threadsConnected"))
                if (!$util.isInteger(message.threadsConnected))
                    return "threadsConnected: integer expected";
            if (message.threadsActive != null && message.hasOwnProperty("threadsActive"))
                if (!$util.isInteger(message.threadsActive))
                    return "threadsActive: integer expected";
            if (message.operationsSubmitted != null && message.hasOwnProperty("operationsSubmitted"))
                if (!$util.isInteger(message.operationsSubmitted))
                    return "operationsSubmitted: integer expected";
            if (message.preparedStatementsExecuted != null && message.hasOwnProperty("preparedStatementsExecuted"))
                if (!$util.isInteger(message.preparedStatementsExecuted))
                    return "preparedStatementsExecuted: integer expected";
            if (message.nonPreparedStatementsExecuted != null && message.hasOwnProperty("nonPreparedStatementsExecuted"))
                if (!$util.isInteger(message.nonPreparedStatementsExecuted))
                    return "nonPreparedStatementsExecuted: integer expected";
            if (message.deadlockRetries != null && message.hasOwnProperty("deadlockRetries"))
                if (!$util.isInteger(message.deadlockRetries))
                    return "deadlockRetries: integer expected";
            if (message.operationsTimedOutInQueue != null && message.hasOwnProperty("operationsTimedOutInQueue"))
                if (!$util.isInteger(message.operationsTimedOutInQueue))
                    return "operationsTimedOutInQueue: integer expected";
            if (message.errors != null && message.hasOwnProperty("errors"))
                if (!$util.isInteger(message.errors))
                    return "errors: integer expected";
            return null;
        };
    
        /**
         * Creates a CGCMsgSQLStatsResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCMsgSQLStatsResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCMsgSQLStatsResponse} CGCMsgSQLStatsResponse
         */
        CGCMsgSQLStatsResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCMsgSQLStatsResponse)
                return object;
            var message = new $root.CGCMsgSQLStatsResponse();
            if (object.threads != null)
                message.threads = object.threads >>> 0;
            if (object.threadsConnected != null)
                message.threadsConnected = object.threadsConnected >>> 0;
            if (object.threadsActive != null)
                message.threadsActive = object.threadsActive >>> 0;
            if (object.operationsSubmitted != null)
                message.operationsSubmitted = object.operationsSubmitted >>> 0;
            if (object.preparedStatementsExecuted != null)
                message.preparedStatementsExecuted = object.preparedStatementsExecuted >>> 0;
            if (object.nonPreparedStatementsExecuted != null)
                message.nonPreparedStatementsExecuted = object.nonPreparedStatementsExecuted >>> 0;
            if (object.deadlockRetries != null)
                message.deadlockRetries = object.deadlockRetries >>> 0;
            if (object.operationsTimedOutInQueue != null)
                message.operationsTimedOutInQueue = object.operationsTimedOutInQueue >>> 0;
            if (object.errors != null)
                message.errors = object.errors >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CGCMsgSQLStatsResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCMsgSQLStatsResponse
         * @static
         * @param {CGCMsgSQLStatsResponse} message CGCMsgSQLStatsResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCMsgSQLStatsResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.threads = 0;
                object.threadsConnected = 0;
                object.threadsActive = 0;
                object.operationsSubmitted = 0;
                object.preparedStatementsExecuted = 0;
                object.nonPreparedStatementsExecuted = 0;
                object.deadlockRetries = 0;
                object.operationsTimedOutInQueue = 0;
                object.errors = 0;
            }
            if (message.threads != null && message.hasOwnProperty("threads"))
                object.threads = message.threads;
            if (message.threadsConnected != null && message.hasOwnProperty("threadsConnected"))
                object.threadsConnected = message.threadsConnected;
            if (message.threadsActive != null && message.hasOwnProperty("threadsActive"))
                object.threadsActive = message.threadsActive;
            if (message.operationsSubmitted != null && message.hasOwnProperty("operationsSubmitted"))
                object.operationsSubmitted = message.operationsSubmitted;
            if (message.preparedStatementsExecuted != null && message.hasOwnProperty("preparedStatementsExecuted"))
                object.preparedStatementsExecuted = message.preparedStatementsExecuted;
            if (message.nonPreparedStatementsExecuted != null && message.hasOwnProperty("nonPreparedStatementsExecuted"))
                object.nonPreparedStatementsExecuted = message.nonPreparedStatementsExecuted;
            if (message.deadlockRetries != null && message.hasOwnProperty("deadlockRetries"))
                object.deadlockRetries = message.deadlockRetries;
            if (message.operationsTimedOutInQueue != null && message.hasOwnProperty("operationsTimedOutInQueue"))
                object.operationsTimedOutInQueue = message.operationsTimedOutInQueue;
            if (message.errors != null && message.hasOwnProperty("errors"))
                object.errors = message.errors;
            return object;
        };
    
        /**
         * Converts this CGCMsgSQLStatsResponse to JSON.
         * @function toJSON
         * @memberof CGCMsgSQLStatsResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCMsgSQLStatsResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCMsgSQLStatsResponse
         * @function getTypeUrl
         * @memberof CGCMsgSQLStatsResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCMsgSQLStatsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCMsgSQLStatsResponse";
        };
    
        return CGCMsgSQLStatsResponse;
    })();
    
    $root.CMsgAMAddFreeLicense = (function() {
    
        /**
         * Properties of a CMsgAMAddFreeLicense.
         * @exports ICMsgAMAddFreeLicense
         * @interface ICMsgAMAddFreeLicense
         * @property {number|Long|null} [steamid] CMsgAMAddFreeLicense steamid
         * @property {number|null} [ipPublic] CMsgAMAddFreeLicense ipPublic
         * @property {number|null} [packageid] CMsgAMAddFreeLicense packageid
         * @property {string|null} [storeCountryCode] CMsgAMAddFreeLicense storeCountryCode
         */
    
        /**
         * Constructs a new CMsgAMAddFreeLicense.
         * @exports CMsgAMAddFreeLicense
         * @classdesc Represents a CMsgAMAddFreeLicense.
         * @implements ICMsgAMAddFreeLicense
         * @constructor
         * @param {ICMsgAMAddFreeLicense=} [properties] Properties to set
         */
        function CMsgAMAddFreeLicense(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAMAddFreeLicense steamid.
         * @member {number|Long} steamid
         * @memberof CMsgAMAddFreeLicense
         * @instance
         */
        CMsgAMAddFreeLicense.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgAMAddFreeLicense ipPublic.
         * @member {number} ipPublic
         * @memberof CMsgAMAddFreeLicense
         * @instance
         */
        CMsgAMAddFreeLicense.prototype.ipPublic = 0;
    
        /**
         * CMsgAMAddFreeLicense packageid.
         * @member {number} packageid
         * @memberof CMsgAMAddFreeLicense
         * @instance
         */
        CMsgAMAddFreeLicense.prototype.packageid = 0;
    
        /**
         * CMsgAMAddFreeLicense storeCountryCode.
         * @member {string} storeCountryCode
         * @memberof CMsgAMAddFreeLicense
         * @instance
         */
        CMsgAMAddFreeLicense.prototype.storeCountryCode = "";
    
        /**
         * Creates a new CMsgAMAddFreeLicense instance using the specified properties.
         * @function create
         * @memberof CMsgAMAddFreeLicense
         * @static
         * @param {ICMsgAMAddFreeLicense=} [properties] Properties to set
         * @returns {CMsgAMAddFreeLicense} CMsgAMAddFreeLicense instance
         */
        CMsgAMAddFreeLicense.create = function create(properties) {
            return new CMsgAMAddFreeLicense(properties);
        };
    
        /**
         * Encodes the specified CMsgAMAddFreeLicense message. Does not implicitly {@link CMsgAMAddFreeLicense.verify|verify} messages.
         * @function encode
         * @memberof CMsgAMAddFreeLicense
         * @static
         * @param {ICMsgAMAddFreeLicense} message CMsgAMAddFreeLicense message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMAddFreeLicense.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
            if (message.ipPublic != null && Object.hasOwnProperty.call(message, "ipPublic"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.ipPublic);
            if (message.packageid != null && Object.hasOwnProperty.call(message, "packageid"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.packageid);
            if (message.storeCountryCode != null && Object.hasOwnProperty.call(message, "storeCountryCode"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.storeCountryCode);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAMAddFreeLicense message, length delimited. Does not implicitly {@link CMsgAMAddFreeLicense.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAMAddFreeLicense
         * @static
         * @param {ICMsgAMAddFreeLicense} message CMsgAMAddFreeLicense message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMAddFreeLicense.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAMAddFreeLicense message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAMAddFreeLicense
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAMAddFreeLicense} CMsgAMAddFreeLicense
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMAddFreeLicense.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMAddFreeLicense();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamid = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.ipPublic = reader.uint32();
                        break;
                    }
                case 3: {
                        message.packageid = reader.uint32();
                        break;
                    }
                case 4: {
                        message.storeCountryCode = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAMAddFreeLicense message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAMAddFreeLicense
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAMAddFreeLicense} CMsgAMAddFreeLicense
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMAddFreeLicense.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAMAddFreeLicense message.
         * @function verify
         * @memberof CMsgAMAddFreeLicense
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAMAddFreeLicense.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.ipPublic != null && message.hasOwnProperty("ipPublic"))
                if (!$util.isInteger(message.ipPublic))
                    return "ipPublic: integer expected";
            if (message.packageid != null && message.hasOwnProperty("packageid"))
                if (!$util.isInteger(message.packageid))
                    return "packageid: integer expected";
            if (message.storeCountryCode != null && message.hasOwnProperty("storeCountryCode"))
                if (!$util.isString(message.storeCountryCode))
                    return "storeCountryCode: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgAMAddFreeLicense message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAMAddFreeLicense
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAMAddFreeLicense} CMsgAMAddFreeLicense
         */
        CMsgAMAddFreeLicense.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAMAddFreeLicense)
                return object;
            var message = new $root.CMsgAMAddFreeLicense();
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.ipPublic != null)
                message.ipPublic = object.ipPublic >>> 0;
            if (object.packageid != null)
                message.packageid = object.packageid >>> 0;
            if (object.storeCountryCode != null)
                message.storeCountryCode = String(object.storeCountryCode);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAMAddFreeLicense message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAMAddFreeLicense
         * @static
         * @param {CMsgAMAddFreeLicense} message CMsgAMAddFreeLicense
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAMAddFreeLicense.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
                object.ipPublic = 0;
                object.packageid = 0;
                object.storeCountryCode = "";
            }
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.ipPublic != null && message.hasOwnProperty("ipPublic"))
                object.ipPublic = message.ipPublic;
            if (message.packageid != null && message.hasOwnProperty("packageid"))
                object.packageid = message.packageid;
            if (message.storeCountryCode != null && message.hasOwnProperty("storeCountryCode"))
                object.storeCountryCode = message.storeCountryCode;
            return object;
        };
    
        /**
         * Converts this CMsgAMAddFreeLicense to JSON.
         * @function toJSON
         * @memberof CMsgAMAddFreeLicense
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAMAddFreeLicense.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAMAddFreeLicense
         * @function getTypeUrl
         * @memberof CMsgAMAddFreeLicense
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAMAddFreeLicense.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAMAddFreeLicense";
        };
    
        return CMsgAMAddFreeLicense;
    })();
    
    $root.CMsgAMAddFreeLicenseResponse = (function() {
    
        /**
         * Properties of a CMsgAMAddFreeLicenseResponse.
         * @exports ICMsgAMAddFreeLicenseResponse
         * @interface ICMsgAMAddFreeLicenseResponse
         * @property {number|null} [eresult] CMsgAMAddFreeLicenseResponse eresult
         * @property {number|null} [purchaseResultDetail] CMsgAMAddFreeLicenseResponse purchaseResultDetail
         * @property {number|Long|null} [transid] CMsgAMAddFreeLicenseResponse transid
         */
    
        /**
         * Constructs a new CMsgAMAddFreeLicenseResponse.
         * @exports CMsgAMAddFreeLicenseResponse
         * @classdesc Represents a CMsgAMAddFreeLicenseResponse.
         * @implements ICMsgAMAddFreeLicenseResponse
         * @constructor
         * @param {ICMsgAMAddFreeLicenseResponse=} [properties] Properties to set
         */
        function CMsgAMAddFreeLicenseResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAMAddFreeLicenseResponse eresult.
         * @member {number} eresult
         * @memberof CMsgAMAddFreeLicenseResponse
         * @instance
         */
        CMsgAMAddFreeLicenseResponse.prototype.eresult = 2;
    
        /**
         * CMsgAMAddFreeLicenseResponse purchaseResultDetail.
         * @member {number} purchaseResultDetail
         * @memberof CMsgAMAddFreeLicenseResponse
         * @instance
         */
        CMsgAMAddFreeLicenseResponse.prototype.purchaseResultDetail = 0;
    
        /**
         * CMsgAMAddFreeLicenseResponse transid.
         * @member {number|Long} transid
         * @memberof CMsgAMAddFreeLicenseResponse
         * @instance
         */
        CMsgAMAddFreeLicenseResponse.prototype.transid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgAMAddFreeLicenseResponse instance using the specified properties.
         * @function create
         * @memberof CMsgAMAddFreeLicenseResponse
         * @static
         * @param {ICMsgAMAddFreeLicenseResponse=} [properties] Properties to set
         * @returns {CMsgAMAddFreeLicenseResponse} CMsgAMAddFreeLicenseResponse instance
         */
        CMsgAMAddFreeLicenseResponse.create = function create(properties) {
            return new CMsgAMAddFreeLicenseResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgAMAddFreeLicenseResponse message. Does not implicitly {@link CMsgAMAddFreeLicenseResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgAMAddFreeLicenseResponse
         * @static
         * @param {ICMsgAMAddFreeLicenseResponse} message CMsgAMAddFreeLicenseResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMAddFreeLicenseResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.purchaseResultDetail != null && Object.hasOwnProperty.call(message, "purchaseResultDetail"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.purchaseResultDetail);
            if (message.transid != null && Object.hasOwnProperty.call(message, "transid"))
                writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.transid);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAMAddFreeLicenseResponse message, length delimited. Does not implicitly {@link CMsgAMAddFreeLicenseResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAMAddFreeLicenseResponse
         * @static
         * @param {ICMsgAMAddFreeLicenseResponse} message CMsgAMAddFreeLicenseResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMAddFreeLicenseResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAMAddFreeLicenseResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAMAddFreeLicenseResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAMAddFreeLicenseResponse} CMsgAMAddFreeLicenseResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMAddFreeLicenseResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMAddFreeLicenseResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.eresult = reader.int32();
                        break;
                    }
                case 2: {
                        message.purchaseResultDetail = reader.int32();
                        break;
                    }
                case 3: {
                        message.transid = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAMAddFreeLicenseResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAMAddFreeLicenseResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAMAddFreeLicenseResponse} CMsgAMAddFreeLicenseResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMAddFreeLicenseResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAMAddFreeLicenseResponse message.
         * @function verify
         * @memberof CMsgAMAddFreeLicenseResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAMAddFreeLicenseResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.purchaseResultDetail != null && message.hasOwnProperty("purchaseResultDetail"))
                if (!$util.isInteger(message.purchaseResultDetail))
                    return "purchaseResultDetail: integer expected";
            if (message.transid != null && message.hasOwnProperty("transid"))
                if (!$util.isInteger(message.transid) && !(message.transid && $util.isInteger(message.transid.low) && $util.isInteger(message.transid.high)))
                    return "transid: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgAMAddFreeLicenseResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAMAddFreeLicenseResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAMAddFreeLicenseResponse} CMsgAMAddFreeLicenseResponse
         */
        CMsgAMAddFreeLicenseResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAMAddFreeLicenseResponse)
                return object;
            var message = new $root.CMsgAMAddFreeLicenseResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.purchaseResultDetail != null)
                message.purchaseResultDetail = object.purchaseResultDetail | 0;
            if (object.transid != null)
                if ($util.Long)
                    (message.transid = $util.Long.fromValue(object.transid)).unsigned = false;
                else if (typeof object.transid === "string")
                    message.transid = parseInt(object.transid, 10);
                else if (typeof object.transid === "number")
                    message.transid = object.transid;
                else if (typeof object.transid === "object")
                    message.transid = new $util.LongBits(object.transid.low >>> 0, object.transid.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAMAddFreeLicenseResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAMAddFreeLicenseResponse
         * @static
         * @param {CMsgAMAddFreeLicenseResponse} message CMsgAMAddFreeLicenseResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAMAddFreeLicenseResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.purchaseResultDetail = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.transid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.transid = options.longs === String ? "0" : 0;
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.purchaseResultDetail != null && message.hasOwnProperty("purchaseResultDetail"))
                object.purchaseResultDetail = message.purchaseResultDetail;
            if (message.transid != null && message.hasOwnProperty("transid"))
                if (typeof message.transid === "number")
                    object.transid = options.longs === String ? String(message.transid) : message.transid;
                else
                    object.transid = options.longs === String ? $util.Long.prototype.toString.call(message.transid) : options.longs === Number ? new $util.LongBits(message.transid.low >>> 0, message.transid.high >>> 0).toNumber() : message.transid;
            return object;
        };
    
        /**
         * Converts this CMsgAMAddFreeLicenseResponse to JSON.
         * @function toJSON
         * @memberof CMsgAMAddFreeLicenseResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAMAddFreeLicenseResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAMAddFreeLicenseResponse
         * @function getTypeUrl
         * @memberof CMsgAMAddFreeLicenseResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAMAddFreeLicenseResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAMAddFreeLicenseResponse";
        };
    
        return CMsgAMAddFreeLicenseResponse;
    })();
    
    $root.CGCMsgGetIPLocation = (function() {
    
        /**
         * Properties of a CGCMsgGetIPLocation.
         * @exports ICGCMsgGetIPLocation
         * @interface ICGCMsgGetIPLocation
         * @property {Array.<number>|null} [ips] CGCMsgGetIPLocation ips
         */
    
        /**
         * Constructs a new CGCMsgGetIPLocation.
         * @exports CGCMsgGetIPLocation
         * @classdesc Represents a CGCMsgGetIPLocation.
         * @implements ICGCMsgGetIPLocation
         * @constructor
         * @param {ICGCMsgGetIPLocation=} [properties] Properties to set
         */
        function CGCMsgGetIPLocation(properties) {
            this.ips = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCMsgGetIPLocation ips.
         * @member {Array.<number>} ips
         * @memberof CGCMsgGetIPLocation
         * @instance
         */
        CGCMsgGetIPLocation.prototype.ips = $util.emptyArray;
    
        /**
         * Creates a new CGCMsgGetIPLocation instance using the specified properties.
         * @function create
         * @memberof CGCMsgGetIPLocation
         * @static
         * @param {ICGCMsgGetIPLocation=} [properties] Properties to set
         * @returns {CGCMsgGetIPLocation} CGCMsgGetIPLocation instance
         */
        CGCMsgGetIPLocation.create = function create(properties) {
            return new CGCMsgGetIPLocation(properties);
        };
    
        /**
         * Encodes the specified CGCMsgGetIPLocation message. Does not implicitly {@link CGCMsgGetIPLocation.verify|verify} messages.
         * @function encode
         * @memberof CGCMsgGetIPLocation
         * @static
         * @param {ICGCMsgGetIPLocation} message CGCMsgGetIPLocation message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgGetIPLocation.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.ips != null && message.ips.length)
                for (var i = 0; i < message.ips.length; ++i)
                    writer.uint32(/* id 1, wireType 5 =*/13).fixed32(message.ips[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CGCMsgGetIPLocation message, length delimited. Does not implicitly {@link CGCMsgGetIPLocation.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCMsgGetIPLocation
         * @static
         * @param {ICGCMsgGetIPLocation} message CGCMsgGetIPLocation message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgGetIPLocation.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCMsgGetIPLocation message from the specified reader or buffer.
         * @function decode
         * @memberof CGCMsgGetIPLocation
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCMsgGetIPLocation} CGCMsgGetIPLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgGetIPLocation.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgGetIPLocation();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.ips && message.ips.length))
                            message.ips = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.ips.push(reader.fixed32());
                        } else
                            message.ips.push(reader.fixed32());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCMsgGetIPLocation message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCMsgGetIPLocation
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCMsgGetIPLocation} CGCMsgGetIPLocation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgGetIPLocation.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCMsgGetIPLocation message.
         * @function verify
         * @memberof CGCMsgGetIPLocation
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCMsgGetIPLocation.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.ips != null && message.hasOwnProperty("ips")) {
                if (!Array.isArray(message.ips))
                    return "ips: array expected";
                for (var i = 0; i < message.ips.length; ++i)
                    if (!$util.isInteger(message.ips[i]))
                        return "ips: integer[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CGCMsgGetIPLocation message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCMsgGetIPLocation
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCMsgGetIPLocation} CGCMsgGetIPLocation
         */
        CGCMsgGetIPLocation.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCMsgGetIPLocation)
                return object;
            var message = new $root.CGCMsgGetIPLocation();
            if (object.ips) {
                if (!Array.isArray(object.ips))
                    throw TypeError(".CGCMsgGetIPLocation.ips: array expected");
                message.ips = [];
                for (var i = 0; i < object.ips.length; ++i)
                    message.ips[i] = object.ips[i] >>> 0;
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CGCMsgGetIPLocation message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCMsgGetIPLocation
         * @static
         * @param {CGCMsgGetIPLocation} message CGCMsgGetIPLocation
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCMsgGetIPLocation.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.ips = [];
            if (message.ips && message.ips.length) {
                object.ips = [];
                for (var j = 0; j < message.ips.length; ++j)
                    object.ips[j] = message.ips[j];
            }
            return object;
        };
    
        /**
         * Converts this CGCMsgGetIPLocation to JSON.
         * @function toJSON
         * @memberof CGCMsgGetIPLocation
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCMsgGetIPLocation.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCMsgGetIPLocation
         * @function getTypeUrl
         * @memberof CGCMsgGetIPLocation
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCMsgGetIPLocation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCMsgGetIPLocation";
        };
    
        return CGCMsgGetIPLocation;
    })();
    
    $root.CIPLocationInfo = (function() {
    
        /**
         * Properties of a CIPLocationInfo.
         * @exports ICIPLocationInfo
         * @interface ICIPLocationInfo
         * @property {number|null} [ip] CIPLocationInfo ip
         * @property {number|null} [latitude] CIPLocationInfo latitude
         * @property {number|null} [longitude] CIPLocationInfo longitude
         * @property {string|null} [country] CIPLocationInfo country
         * @property {string|null} [state] CIPLocationInfo state
         * @property {string|null} [city] CIPLocationInfo city
         */
    
        /**
         * Constructs a new CIPLocationInfo.
         * @exports CIPLocationInfo
         * @classdesc Represents a CIPLocationInfo.
         * @implements ICIPLocationInfo
         * @constructor
         * @param {ICIPLocationInfo=} [properties] Properties to set
         */
        function CIPLocationInfo(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CIPLocationInfo ip.
         * @member {number} ip
         * @memberof CIPLocationInfo
         * @instance
         */
        CIPLocationInfo.prototype.ip = 0;
    
        /**
         * CIPLocationInfo latitude.
         * @member {number} latitude
         * @memberof CIPLocationInfo
         * @instance
         */
        CIPLocationInfo.prototype.latitude = 0;
    
        /**
         * CIPLocationInfo longitude.
         * @member {number} longitude
         * @memberof CIPLocationInfo
         * @instance
         */
        CIPLocationInfo.prototype.longitude = 0;
    
        /**
         * CIPLocationInfo country.
         * @member {string} country
         * @memberof CIPLocationInfo
         * @instance
         */
        CIPLocationInfo.prototype.country = "";
    
        /**
         * CIPLocationInfo state.
         * @member {string} state
         * @memberof CIPLocationInfo
         * @instance
         */
        CIPLocationInfo.prototype.state = "";
    
        /**
         * CIPLocationInfo city.
         * @member {string} city
         * @memberof CIPLocationInfo
         * @instance
         */
        CIPLocationInfo.prototype.city = "";
    
        /**
         * Creates a new CIPLocationInfo instance using the specified properties.
         * @function create
         * @memberof CIPLocationInfo
         * @static
         * @param {ICIPLocationInfo=} [properties] Properties to set
         * @returns {CIPLocationInfo} CIPLocationInfo instance
         */
        CIPLocationInfo.create = function create(properties) {
            return new CIPLocationInfo(properties);
        };
    
        /**
         * Encodes the specified CIPLocationInfo message. Does not implicitly {@link CIPLocationInfo.verify|verify} messages.
         * @function encode
         * @memberof CIPLocationInfo
         * @static
         * @param {ICIPLocationInfo} message CIPLocationInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CIPLocationInfo.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.ip != null && Object.hasOwnProperty.call(message, "ip"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.ip);
            if (message.latitude != null && Object.hasOwnProperty.call(message, "latitude"))
                writer.uint32(/* id 2, wireType 5 =*/21).float(message.latitude);
            if (message.longitude != null && Object.hasOwnProperty.call(message, "longitude"))
                writer.uint32(/* id 3, wireType 5 =*/29).float(message.longitude);
            if (message.country != null && Object.hasOwnProperty.call(message, "country"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.country);
            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.state);
            if (message.city != null && Object.hasOwnProperty.call(message, "city"))
                writer.uint32(/* id 6, wireType 2 =*/50).string(message.city);
            return writer;
        };
    
        /**
         * Encodes the specified CIPLocationInfo message, length delimited. Does not implicitly {@link CIPLocationInfo.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CIPLocationInfo
         * @static
         * @param {ICIPLocationInfo} message CIPLocationInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CIPLocationInfo.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CIPLocationInfo message from the specified reader or buffer.
         * @function decode
         * @memberof CIPLocationInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CIPLocationInfo} CIPLocationInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CIPLocationInfo.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CIPLocationInfo();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.ip = reader.uint32();
                        break;
                    }
                case 2: {
                        message.latitude = reader.float();
                        break;
                    }
                case 3: {
                        message.longitude = reader.float();
                        break;
                    }
                case 4: {
                        message.country = reader.string();
                        break;
                    }
                case 5: {
                        message.state = reader.string();
                        break;
                    }
                case 6: {
                        message.city = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CIPLocationInfo message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CIPLocationInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CIPLocationInfo} CIPLocationInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CIPLocationInfo.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CIPLocationInfo message.
         * @function verify
         * @memberof CIPLocationInfo
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CIPLocationInfo.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.ip != null && message.hasOwnProperty("ip"))
                if (!$util.isInteger(message.ip))
                    return "ip: integer expected";
            if (message.latitude != null && message.hasOwnProperty("latitude"))
                if (typeof message.latitude !== "number")
                    return "latitude: number expected";
            if (message.longitude != null && message.hasOwnProperty("longitude"))
                if (typeof message.longitude !== "number")
                    return "longitude: number expected";
            if (message.country != null && message.hasOwnProperty("country"))
                if (!$util.isString(message.country))
                    return "country: string expected";
            if (message.state != null && message.hasOwnProperty("state"))
                if (!$util.isString(message.state))
                    return "state: string expected";
            if (message.city != null && message.hasOwnProperty("city"))
                if (!$util.isString(message.city))
                    return "city: string expected";
            return null;
        };
    
        /**
         * Creates a CIPLocationInfo message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CIPLocationInfo
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CIPLocationInfo} CIPLocationInfo
         */
        CIPLocationInfo.fromObject = function fromObject(object) {
            if (object instanceof $root.CIPLocationInfo)
                return object;
            var message = new $root.CIPLocationInfo();
            if (object.ip != null)
                message.ip = object.ip >>> 0;
            if (object.latitude != null)
                message.latitude = Number(object.latitude);
            if (object.longitude != null)
                message.longitude = Number(object.longitude);
            if (object.country != null)
                message.country = String(object.country);
            if (object.state != null)
                message.state = String(object.state);
            if (object.city != null)
                message.city = String(object.city);
            return message;
        };
    
        /**
         * Creates a plain object from a CIPLocationInfo message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CIPLocationInfo
         * @static
         * @param {CIPLocationInfo} message CIPLocationInfo
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CIPLocationInfo.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.ip = 0;
                object.latitude = 0;
                object.longitude = 0;
                object.country = "";
                object.state = "";
                object.city = "";
            }
            if (message.ip != null && message.hasOwnProperty("ip"))
                object.ip = message.ip;
            if (message.latitude != null && message.hasOwnProperty("latitude"))
                object.latitude = options.json && !isFinite(message.latitude) ? String(message.latitude) : message.latitude;
            if (message.longitude != null && message.hasOwnProperty("longitude"))
                object.longitude = options.json && !isFinite(message.longitude) ? String(message.longitude) : message.longitude;
            if (message.country != null && message.hasOwnProperty("country"))
                object.country = message.country;
            if (message.state != null && message.hasOwnProperty("state"))
                object.state = message.state;
            if (message.city != null && message.hasOwnProperty("city"))
                object.city = message.city;
            return object;
        };
    
        /**
         * Converts this CIPLocationInfo to JSON.
         * @function toJSON
         * @memberof CIPLocationInfo
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CIPLocationInfo.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CIPLocationInfo
         * @function getTypeUrl
         * @memberof CIPLocationInfo
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CIPLocationInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CIPLocationInfo";
        };
    
        return CIPLocationInfo;
    })();
    
    $root.CGCMsgGetIPLocationResponse = (function() {
    
        /**
         * Properties of a CGCMsgGetIPLocationResponse.
         * @exports ICGCMsgGetIPLocationResponse
         * @interface ICGCMsgGetIPLocationResponse
         * @property {Array.<ICIPLocationInfo>|null} [infos] CGCMsgGetIPLocationResponse infos
         */
    
        /**
         * Constructs a new CGCMsgGetIPLocationResponse.
         * @exports CGCMsgGetIPLocationResponse
         * @classdesc Represents a CGCMsgGetIPLocationResponse.
         * @implements ICGCMsgGetIPLocationResponse
         * @constructor
         * @param {ICGCMsgGetIPLocationResponse=} [properties] Properties to set
         */
        function CGCMsgGetIPLocationResponse(properties) {
            this.infos = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCMsgGetIPLocationResponse infos.
         * @member {Array.<ICIPLocationInfo>} infos
         * @memberof CGCMsgGetIPLocationResponse
         * @instance
         */
        CGCMsgGetIPLocationResponse.prototype.infos = $util.emptyArray;
    
        /**
         * Creates a new CGCMsgGetIPLocationResponse instance using the specified properties.
         * @function create
         * @memberof CGCMsgGetIPLocationResponse
         * @static
         * @param {ICGCMsgGetIPLocationResponse=} [properties] Properties to set
         * @returns {CGCMsgGetIPLocationResponse} CGCMsgGetIPLocationResponse instance
         */
        CGCMsgGetIPLocationResponse.create = function create(properties) {
            return new CGCMsgGetIPLocationResponse(properties);
        };
    
        /**
         * Encodes the specified CGCMsgGetIPLocationResponse message. Does not implicitly {@link CGCMsgGetIPLocationResponse.verify|verify} messages.
         * @function encode
         * @memberof CGCMsgGetIPLocationResponse
         * @static
         * @param {ICGCMsgGetIPLocationResponse} message CGCMsgGetIPLocationResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgGetIPLocationResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.infos != null && message.infos.length)
                for (var i = 0; i < message.infos.length; ++i)
                    $root.CIPLocationInfo.encode(message.infos[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CGCMsgGetIPLocationResponse message, length delimited. Does not implicitly {@link CGCMsgGetIPLocationResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCMsgGetIPLocationResponse
         * @static
         * @param {ICGCMsgGetIPLocationResponse} message CGCMsgGetIPLocationResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgGetIPLocationResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCMsgGetIPLocationResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CGCMsgGetIPLocationResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCMsgGetIPLocationResponse} CGCMsgGetIPLocationResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgGetIPLocationResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgGetIPLocationResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.infos && message.infos.length))
                            message.infos = [];
                        message.infos.push($root.CIPLocationInfo.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCMsgGetIPLocationResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCMsgGetIPLocationResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCMsgGetIPLocationResponse} CGCMsgGetIPLocationResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgGetIPLocationResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCMsgGetIPLocationResponse message.
         * @function verify
         * @memberof CGCMsgGetIPLocationResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCMsgGetIPLocationResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.infos != null && message.hasOwnProperty("infos")) {
                if (!Array.isArray(message.infos))
                    return "infos: array expected";
                for (var i = 0; i < message.infos.length; ++i) {
                    var error = $root.CIPLocationInfo.verify(message.infos[i]);
                    if (error)
                        return "infos." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CGCMsgGetIPLocationResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCMsgGetIPLocationResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCMsgGetIPLocationResponse} CGCMsgGetIPLocationResponse
         */
        CGCMsgGetIPLocationResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCMsgGetIPLocationResponse)
                return object;
            var message = new $root.CGCMsgGetIPLocationResponse();
            if (object.infos) {
                if (!Array.isArray(object.infos))
                    throw TypeError(".CGCMsgGetIPLocationResponse.infos: array expected");
                message.infos = [];
                for (var i = 0; i < object.infos.length; ++i) {
                    if (typeof object.infos[i] !== "object")
                        throw TypeError(".CGCMsgGetIPLocationResponse.infos: object expected");
                    message.infos[i] = $root.CIPLocationInfo.fromObject(object.infos[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CGCMsgGetIPLocationResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCMsgGetIPLocationResponse
         * @static
         * @param {CGCMsgGetIPLocationResponse} message CGCMsgGetIPLocationResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCMsgGetIPLocationResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.infos = [];
            if (message.infos && message.infos.length) {
                object.infos = [];
                for (var j = 0; j < message.infos.length; ++j)
                    object.infos[j] = $root.CIPLocationInfo.toObject(message.infos[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CGCMsgGetIPLocationResponse to JSON.
         * @function toJSON
         * @memberof CGCMsgGetIPLocationResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCMsgGetIPLocationResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCMsgGetIPLocationResponse
         * @function getTypeUrl
         * @memberof CGCMsgGetIPLocationResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCMsgGetIPLocationResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCMsgGetIPLocationResponse";
        };
    
        return CGCMsgGetIPLocationResponse;
    })();
    
    $root.CGCMsgSystemStatsSchema = (function() {
    
        /**
         * Properties of a CGCMsgSystemStatsSchema.
         * @exports ICGCMsgSystemStatsSchema
         * @interface ICGCMsgSystemStatsSchema
         * @property {number|null} [gcAppId] CGCMsgSystemStatsSchema gcAppId
         * @property {Uint8Array|null} [schemaKv] CGCMsgSystemStatsSchema schemaKv
         */
    
        /**
         * Constructs a new CGCMsgSystemStatsSchema.
         * @exports CGCMsgSystemStatsSchema
         * @classdesc Represents a CGCMsgSystemStatsSchema.
         * @implements ICGCMsgSystemStatsSchema
         * @constructor
         * @param {ICGCMsgSystemStatsSchema=} [properties] Properties to set
         */
        function CGCMsgSystemStatsSchema(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCMsgSystemStatsSchema gcAppId.
         * @member {number} gcAppId
         * @memberof CGCMsgSystemStatsSchema
         * @instance
         */
        CGCMsgSystemStatsSchema.prototype.gcAppId = 0;
    
        /**
         * CGCMsgSystemStatsSchema schemaKv.
         * @member {Uint8Array} schemaKv
         * @memberof CGCMsgSystemStatsSchema
         * @instance
         */
        CGCMsgSystemStatsSchema.prototype.schemaKv = $util.newBuffer([]);
    
        /**
         * Creates a new CGCMsgSystemStatsSchema instance using the specified properties.
         * @function create
         * @memberof CGCMsgSystemStatsSchema
         * @static
         * @param {ICGCMsgSystemStatsSchema=} [properties] Properties to set
         * @returns {CGCMsgSystemStatsSchema} CGCMsgSystemStatsSchema instance
         */
        CGCMsgSystemStatsSchema.create = function create(properties) {
            return new CGCMsgSystemStatsSchema(properties);
        };
    
        /**
         * Encodes the specified CGCMsgSystemStatsSchema message. Does not implicitly {@link CGCMsgSystemStatsSchema.verify|verify} messages.
         * @function encode
         * @memberof CGCMsgSystemStatsSchema
         * @static
         * @param {ICGCMsgSystemStatsSchema} message CGCMsgSystemStatsSchema message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgSystemStatsSchema.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.gcAppId != null && Object.hasOwnProperty.call(message, "gcAppId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.gcAppId);
            if (message.schemaKv != null && Object.hasOwnProperty.call(message, "schemaKv"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.schemaKv);
            return writer;
        };
    
        /**
         * Encodes the specified CGCMsgSystemStatsSchema message, length delimited. Does not implicitly {@link CGCMsgSystemStatsSchema.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCMsgSystemStatsSchema
         * @static
         * @param {ICGCMsgSystemStatsSchema} message CGCMsgSystemStatsSchema message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgSystemStatsSchema.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCMsgSystemStatsSchema message from the specified reader or buffer.
         * @function decode
         * @memberof CGCMsgSystemStatsSchema
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCMsgSystemStatsSchema} CGCMsgSystemStatsSchema
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgSystemStatsSchema.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgSystemStatsSchema();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.gcAppId = reader.uint32();
                        break;
                    }
                case 2: {
                        message.schemaKv = reader.bytes();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCMsgSystemStatsSchema message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCMsgSystemStatsSchema
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCMsgSystemStatsSchema} CGCMsgSystemStatsSchema
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgSystemStatsSchema.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCMsgSystemStatsSchema message.
         * @function verify
         * @memberof CGCMsgSystemStatsSchema
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCMsgSystemStatsSchema.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.gcAppId != null && message.hasOwnProperty("gcAppId"))
                if (!$util.isInteger(message.gcAppId))
                    return "gcAppId: integer expected";
            if (message.schemaKv != null && message.hasOwnProperty("schemaKv"))
                if (!(message.schemaKv && typeof message.schemaKv.length === "number" || $util.isString(message.schemaKv)))
                    return "schemaKv: buffer expected";
            return null;
        };
    
        /**
         * Creates a CGCMsgSystemStatsSchema message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCMsgSystemStatsSchema
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCMsgSystemStatsSchema} CGCMsgSystemStatsSchema
         */
        CGCMsgSystemStatsSchema.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCMsgSystemStatsSchema)
                return object;
            var message = new $root.CGCMsgSystemStatsSchema();
            if (object.gcAppId != null)
                message.gcAppId = object.gcAppId >>> 0;
            if (object.schemaKv != null)
                if (typeof object.schemaKv === "string")
                    $util.base64.decode(object.schemaKv, message.schemaKv = $util.newBuffer($util.base64.length(object.schemaKv)), 0);
                else if (object.schemaKv.length >= 0)
                    message.schemaKv = object.schemaKv;
            return message;
        };
    
        /**
         * Creates a plain object from a CGCMsgSystemStatsSchema message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCMsgSystemStatsSchema
         * @static
         * @param {CGCMsgSystemStatsSchema} message CGCMsgSystemStatsSchema
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCMsgSystemStatsSchema.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.gcAppId = 0;
                if (options.bytes === String)
                    object.schemaKv = "";
                else {
                    object.schemaKv = [];
                    if (options.bytes !== Array)
                        object.schemaKv = $util.newBuffer(object.schemaKv);
                }
            }
            if (message.gcAppId != null && message.hasOwnProperty("gcAppId"))
                object.gcAppId = message.gcAppId;
            if (message.schemaKv != null && message.hasOwnProperty("schemaKv"))
                object.schemaKv = options.bytes === String ? $util.base64.encode(message.schemaKv, 0, message.schemaKv.length) : options.bytes === Array ? Array.prototype.slice.call(message.schemaKv) : message.schemaKv;
            return object;
        };
    
        /**
         * Converts this CGCMsgSystemStatsSchema to JSON.
         * @function toJSON
         * @memberof CGCMsgSystemStatsSchema
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCMsgSystemStatsSchema.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCMsgSystemStatsSchema
         * @function getTypeUrl
         * @memberof CGCMsgSystemStatsSchema
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCMsgSystemStatsSchema.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCMsgSystemStatsSchema";
        };
    
        return CGCMsgSystemStatsSchema;
    })();
    
    $root.CGCMsgGetSystemStats = (function() {
    
        /**
         * Properties of a CGCMsgGetSystemStats.
         * @exports ICGCMsgGetSystemStats
         * @interface ICGCMsgGetSystemStats
         */
    
        /**
         * Constructs a new CGCMsgGetSystemStats.
         * @exports CGCMsgGetSystemStats
         * @classdesc Represents a CGCMsgGetSystemStats.
         * @implements ICGCMsgGetSystemStats
         * @constructor
         * @param {ICGCMsgGetSystemStats=} [properties] Properties to set
         */
        function CGCMsgGetSystemStats(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CGCMsgGetSystemStats instance using the specified properties.
         * @function create
         * @memberof CGCMsgGetSystemStats
         * @static
         * @param {ICGCMsgGetSystemStats=} [properties] Properties to set
         * @returns {CGCMsgGetSystemStats} CGCMsgGetSystemStats instance
         */
        CGCMsgGetSystemStats.create = function create(properties) {
            return new CGCMsgGetSystemStats(properties);
        };
    
        /**
         * Encodes the specified CGCMsgGetSystemStats message. Does not implicitly {@link CGCMsgGetSystemStats.verify|verify} messages.
         * @function encode
         * @memberof CGCMsgGetSystemStats
         * @static
         * @param {ICGCMsgGetSystemStats} message CGCMsgGetSystemStats message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgGetSystemStats.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CGCMsgGetSystemStats message, length delimited. Does not implicitly {@link CGCMsgGetSystemStats.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCMsgGetSystemStats
         * @static
         * @param {ICGCMsgGetSystemStats} message CGCMsgGetSystemStats message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgGetSystemStats.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCMsgGetSystemStats message from the specified reader or buffer.
         * @function decode
         * @memberof CGCMsgGetSystemStats
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCMsgGetSystemStats} CGCMsgGetSystemStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgGetSystemStats.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgGetSystemStats();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCMsgGetSystemStats message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCMsgGetSystemStats
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCMsgGetSystemStats} CGCMsgGetSystemStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgGetSystemStats.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCMsgGetSystemStats message.
         * @function verify
         * @memberof CGCMsgGetSystemStats
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCMsgGetSystemStats.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CGCMsgGetSystemStats message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCMsgGetSystemStats
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCMsgGetSystemStats} CGCMsgGetSystemStats
         */
        CGCMsgGetSystemStats.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCMsgGetSystemStats)
                return object;
            return new $root.CGCMsgGetSystemStats();
        };
    
        /**
         * Creates a plain object from a CGCMsgGetSystemStats message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCMsgGetSystemStats
         * @static
         * @param {CGCMsgGetSystemStats} message CGCMsgGetSystemStats
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCMsgGetSystemStats.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CGCMsgGetSystemStats to JSON.
         * @function toJSON
         * @memberof CGCMsgGetSystemStats
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCMsgGetSystemStats.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCMsgGetSystemStats
         * @function getTypeUrl
         * @memberof CGCMsgGetSystemStats
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCMsgGetSystemStats.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCMsgGetSystemStats";
        };
    
        return CGCMsgGetSystemStats;
    })();
    
    $root.CGCMsgGetSystemStatsResponse = (function() {
    
        /**
         * Properties of a CGCMsgGetSystemStatsResponse.
         * @exports ICGCMsgGetSystemStatsResponse
         * @interface ICGCMsgGetSystemStatsResponse
         * @property {number|null} [gcAppId] CGCMsgGetSystemStatsResponse gcAppId
         * @property {Uint8Array|null} [statsKv] CGCMsgGetSystemStatsResponse statsKv
         * @property {number|null} [activeJobs] CGCMsgGetSystemStatsResponse activeJobs
         * @property {number|null} [yieldingJobs] CGCMsgGetSystemStatsResponse yieldingJobs
         * @property {number|null} [userSessions] CGCMsgGetSystemStatsResponse userSessions
         * @property {number|null} [gameServerSessions] CGCMsgGetSystemStatsResponse gameServerSessions
         * @property {number|null} [socaches] CGCMsgGetSystemStatsResponse socaches
         * @property {number|null} [socachesToUnload] CGCMsgGetSystemStatsResponse socachesToUnload
         * @property {number|null} [socachesLoading] CGCMsgGetSystemStatsResponse socachesLoading
         * @property {number|null} [writebackQueue] CGCMsgGetSystemStatsResponse writebackQueue
         * @property {number|null} [steamidLocks] CGCMsgGetSystemStatsResponse steamidLocks
         * @property {number|null} [logonQueue] CGCMsgGetSystemStatsResponse logonQueue
         * @property {number|null} [logonJobs] CGCMsgGetSystemStatsResponse logonJobs
         */
    
        /**
         * Constructs a new CGCMsgGetSystemStatsResponse.
         * @exports CGCMsgGetSystemStatsResponse
         * @classdesc Represents a CGCMsgGetSystemStatsResponse.
         * @implements ICGCMsgGetSystemStatsResponse
         * @constructor
         * @param {ICGCMsgGetSystemStatsResponse=} [properties] Properties to set
         */
        function CGCMsgGetSystemStatsResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCMsgGetSystemStatsResponse gcAppId.
         * @member {number} gcAppId
         * @memberof CGCMsgGetSystemStatsResponse
         * @instance
         */
        CGCMsgGetSystemStatsResponse.prototype.gcAppId = 0;
    
        /**
         * CGCMsgGetSystemStatsResponse statsKv.
         * @member {Uint8Array} statsKv
         * @memberof CGCMsgGetSystemStatsResponse
         * @instance
         */
        CGCMsgGetSystemStatsResponse.prototype.statsKv = $util.newBuffer([]);
    
        /**
         * CGCMsgGetSystemStatsResponse activeJobs.
         * @member {number} activeJobs
         * @memberof CGCMsgGetSystemStatsResponse
         * @instance
         */
        CGCMsgGetSystemStatsResponse.prototype.activeJobs = 0;
    
        /**
         * CGCMsgGetSystemStatsResponse yieldingJobs.
         * @member {number} yieldingJobs
         * @memberof CGCMsgGetSystemStatsResponse
         * @instance
         */
        CGCMsgGetSystemStatsResponse.prototype.yieldingJobs = 0;
    
        /**
         * CGCMsgGetSystemStatsResponse userSessions.
         * @member {number} userSessions
         * @memberof CGCMsgGetSystemStatsResponse
         * @instance
         */
        CGCMsgGetSystemStatsResponse.prototype.userSessions = 0;
    
        /**
         * CGCMsgGetSystemStatsResponse gameServerSessions.
         * @member {number} gameServerSessions
         * @memberof CGCMsgGetSystemStatsResponse
         * @instance
         */
        CGCMsgGetSystemStatsResponse.prototype.gameServerSessions = 0;
    
        /**
         * CGCMsgGetSystemStatsResponse socaches.
         * @member {number} socaches
         * @memberof CGCMsgGetSystemStatsResponse
         * @instance
         */
        CGCMsgGetSystemStatsResponse.prototype.socaches = 0;
    
        /**
         * CGCMsgGetSystemStatsResponse socachesToUnload.
         * @member {number} socachesToUnload
         * @memberof CGCMsgGetSystemStatsResponse
         * @instance
         */
        CGCMsgGetSystemStatsResponse.prototype.socachesToUnload = 0;
    
        /**
         * CGCMsgGetSystemStatsResponse socachesLoading.
         * @member {number} socachesLoading
         * @memberof CGCMsgGetSystemStatsResponse
         * @instance
         */
        CGCMsgGetSystemStatsResponse.prototype.socachesLoading = 0;
    
        /**
         * CGCMsgGetSystemStatsResponse writebackQueue.
         * @member {number} writebackQueue
         * @memberof CGCMsgGetSystemStatsResponse
         * @instance
         */
        CGCMsgGetSystemStatsResponse.prototype.writebackQueue = 0;
    
        /**
         * CGCMsgGetSystemStatsResponse steamidLocks.
         * @member {number} steamidLocks
         * @memberof CGCMsgGetSystemStatsResponse
         * @instance
         */
        CGCMsgGetSystemStatsResponse.prototype.steamidLocks = 0;
    
        /**
         * CGCMsgGetSystemStatsResponse logonQueue.
         * @member {number} logonQueue
         * @memberof CGCMsgGetSystemStatsResponse
         * @instance
         */
        CGCMsgGetSystemStatsResponse.prototype.logonQueue = 0;
    
        /**
         * CGCMsgGetSystemStatsResponse logonJobs.
         * @member {number} logonJobs
         * @memberof CGCMsgGetSystemStatsResponse
         * @instance
         */
        CGCMsgGetSystemStatsResponse.prototype.logonJobs = 0;
    
        /**
         * Creates a new CGCMsgGetSystemStatsResponse instance using the specified properties.
         * @function create
         * @memberof CGCMsgGetSystemStatsResponse
         * @static
         * @param {ICGCMsgGetSystemStatsResponse=} [properties] Properties to set
         * @returns {CGCMsgGetSystemStatsResponse} CGCMsgGetSystemStatsResponse instance
         */
        CGCMsgGetSystemStatsResponse.create = function create(properties) {
            return new CGCMsgGetSystemStatsResponse(properties);
        };
    
        /**
         * Encodes the specified CGCMsgGetSystemStatsResponse message. Does not implicitly {@link CGCMsgGetSystemStatsResponse.verify|verify} messages.
         * @function encode
         * @memberof CGCMsgGetSystemStatsResponse
         * @static
         * @param {ICGCMsgGetSystemStatsResponse} message CGCMsgGetSystemStatsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgGetSystemStatsResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.gcAppId != null && Object.hasOwnProperty.call(message, "gcAppId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.gcAppId);
            if (message.statsKv != null && Object.hasOwnProperty.call(message, "statsKv"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.statsKv);
            if (message.activeJobs != null && Object.hasOwnProperty.call(message, "activeJobs"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.activeJobs);
            if (message.yieldingJobs != null && Object.hasOwnProperty.call(message, "yieldingJobs"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.yieldingJobs);
            if (message.userSessions != null && Object.hasOwnProperty.call(message, "userSessions"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.userSessions);
            if (message.gameServerSessions != null && Object.hasOwnProperty.call(message, "gameServerSessions"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.gameServerSessions);
            if (message.socaches != null && Object.hasOwnProperty.call(message, "socaches"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.socaches);
            if (message.socachesToUnload != null && Object.hasOwnProperty.call(message, "socachesToUnload"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.socachesToUnload);
            if (message.socachesLoading != null && Object.hasOwnProperty.call(message, "socachesLoading"))
                writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.socachesLoading);
            if (message.writebackQueue != null && Object.hasOwnProperty.call(message, "writebackQueue"))
                writer.uint32(/* id 10, wireType 0 =*/80).uint32(message.writebackQueue);
            if (message.steamidLocks != null && Object.hasOwnProperty.call(message, "steamidLocks"))
                writer.uint32(/* id 11, wireType 0 =*/88).uint32(message.steamidLocks);
            if (message.logonQueue != null && Object.hasOwnProperty.call(message, "logonQueue"))
                writer.uint32(/* id 12, wireType 0 =*/96).uint32(message.logonQueue);
            if (message.logonJobs != null && Object.hasOwnProperty.call(message, "logonJobs"))
                writer.uint32(/* id 13, wireType 0 =*/104).uint32(message.logonJobs);
            return writer;
        };
    
        /**
         * Encodes the specified CGCMsgGetSystemStatsResponse message, length delimited. Does not implicitly {@link CGCMsgGetSystemStatsResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCMsgGetSystemStatsResponse
         * @static
         * @param {ICGCMsgGetSystemStatsResponse} message CGCMsgGetSystemStatsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCMsgGetSystemStatsResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCMsgGetSystemStatsResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CGCMsgGetSystemStatsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCMsgGetSystemStatsResponse} CGCMsgGetSystemStatsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgGetSystemStatsResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCMsgGetSystemStatsResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.gcAppId = reader.uint32();
                        break;
                    }
                case 2: {
                        message.statsKv = reader.bytes();
                        break;
                    }
                case 3: {
                        message.activeJobs = reader.uint32();
                        break;
                    }
                case 4: {
                        message.yieldingJobs = reader.uint32();
                        break;
                    }
                case 5: {
                        message.userSessions = reader.uint32();
                        break;
                    }
                case 6: {
                        message.gameServerSessions = reader.uint32();
                        break;
                    }
                case 7: {
                        message.socaches = reader.uint32();
                        break;
                    }
                case 8: {
                        message.socachesToUnload = reader.uint32();
                        break;
                    }
                case 9: {
                        message.socachesLoading = reader.uint32();
                        break;
                    }
                case 10: {
                        message.writebackQueue = reader.uint32();
                        break;
                    }
                case 11: {
                        message.steamidLocks = reader.uint32();
                        break;
                    }
                case 12: {
                        message.logonQueue = reader.uint32();
                        break;
                    }
                case 13: {
                        message.logonJobs = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCMsgGetSystemStatsResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCMsgGetSystemStatsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCMsgGetSystemStatsResponse} CGCMsgGetSystemStatsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCMsgGetSystemStatsResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCMsgGetSystemStatsResponse message.
         * @function verify
         * @memberof CGCMsgGetSystemStatsResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCMsgGetSystemStatsResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.gcAppId != null && message.hasOwnProperty("gcAppId"))
                if (!$util.isInteger(message.gcAppId))
                    return "gcAppId: integer expected";
            if (message.statsKv != null && message.hasOwnProperty("statsKv"))
                if (!(message.statsKv && typeof message.statsKv.length === "number" || $util.isString(message.statsKv)))
                    return "statsKv: buffer expected";
            if (message.activeJobs != null && message.hasOwnProperty("activeJobs"))
                if (!$util.isInteger(message.activeJobs))
                    return "activeJobs: integer expected";
            if (message.yieldingJobs != null && message.hasOwnProperty("yieldingJobs"))
                if (!$util.isInteger(message.yieldingJobs))
                    return "yieldingJobs: integer expected";
            if (message.userSessions != null && message.hasOwnProperty("userSessions"))
                if (!$util.isInteger(message.userSessions))
                    return "userSessions: integer expected";
            if (message.gameServerSessions != null && message.hasOwnProperty("gameServerSessions"))
                if (!$util.isInteger(message.gameServerSessions))
                    return "gameServerSessions: integer expected";
            if (message.socaches != null && message.hasOwnProperty("socaches"))
                if (!$util.isInteger(message.socaches))
                    return "socaches: integer expected";
            if (message.socachesToUnload != null && message.hasOwnProperty("socachesToUnload"))
                if (!$util.isInteger(message.socachesToUnload))
                    return "socachesToUnload: integer expected";
            if (message.socachesLoading != null && message.hasOwnProperty("socachesLoading"))
                if (!$util.isInteger(message.socachesLoading))
                    return "socachesLoading: integer expected";
            if (message.writebackQueue != null && message.hasOwnProperty("writebackQueue"))
                if (!$util.isInteger(message.writebackQueue))
                    return "writebackQueue: integer expected";
            if (message.steamidLocks != null && message.hasOwnProperty("steamidLocks"))
                if (!$util.isInteger(message.steamidLocks))
                    return "steamidLocks: integer expected";
            if (message.logonQueue != null && message.hasOwnProperty("logonQueue"))
                if (!$util.isInteger(message.logonQueue))
                    return "logonQueue: integer expected";
            if (message.logonJobs != null && message.hasOwnProperty("logonJobs"))
                if (!$util.isInteger(message.logonJobs))
                    return "logonJobs: integer expected";
            return null;
        };
    
        /**
         * Creates a CGCMsgGetSystemStatsResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCMsgGetSystemStatsResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCMsgGetSystemStatsResponse} CGCMsgGetSystemStatsResponse
         */
        CGCMsgGetSystemStatsResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCMsgGetSystemStatsResponse)
                return object;
            var message = new $root.CGCMsgGetSystemStatsResponse();
            if (object.gcAppId != null)
                message.gcAppId = object.gcAppId >>> 0;
            if (object.statsKv != null)
                if (typeof object.statsKv === "string")
                    $util.base64.decode(object.statsKv, message.statsKv = $util.newBuffer($util.base64.length(object.statsKv)), 0);
                else if (object.statsKv.length >= 0)
                    message.statsKv = object.statsKv;
            if (object.activeJobs != null)
                message.activeJobs = object.activeJobs >>> 0;
            if (object.yieldingJobs != null)
                message.yieldingJobs = object.yieldingJobs >>> 0;
            if (object.userSessions != null)
                message.userSessions = object.userSessions >>> 0;
            if (object.gameServerSessions != null)
                message.gameServerSessions = object.gameServerSessions >>> 0;
            if (object.socaches != null)
                message.socaches = object.socaches >>> 0;
            if (object.socachesToUnload != null)
                message.socachesToUnload = object.socachesToUnload >>> 0;
            if (object.socachesLoading != null)
                message.socachesLoading = object.socachesLoading >>> 0;
            if (object.writebackQueue != null)
                message.writebackQueue = object.writebackQueue >>> 0;
            if (object.steamidLocks != null)
                message.steamidLocks = object.steamidLocks >>> 0;
            if (object.logonQueue != null)
                message.logonQueue = object.logonQueue >>> 0;
            if (object.logonJobs != null)
                message.logonJobs = object.logonJobs >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CGCMsgGetSystemStatsResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCMsgGetSystemStatsResponse
         * @static
         * @param {CGCMsgGetSystemStatsResponse} message CGCMsgGetSystemStatsResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCMsgGetSystemStatsResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.gcAppId = 0;
                if (options.bytes === String)
                    object.statsKv = "";
                else {
                    object.statsKv = [];
                    if (options.bytes !== Array)
                        object.statsKv = $util.newBuffer(object.statsKv);
                }
                object.activeJobs = 0;
                object.yieldingJobs = 0;
                object.userSessions = 0;
                object.gameServerSessions = 0;
                object.socaches = 0;
                object.socachesToUnload = 0;
                object.socachesLoading = 0;
                object.writebackQueue = 0;
                object.steamidLocks = 0;
                object.logonQueue = 0;
                object.logonJobs = 0;
            }
            if (message.gcAppId != null && message.hasOwnProperty("gcAppId"))
                object.gcAppId = message.gcAppId;
            if (message.statsKv != null && message.hasOwnProperty("statsKv"))
                object.statsKv = options.bytes === String ? $util.base64.encode(message.statsKv, 0, message.statsKv.length) : options.bytes === Array ? Array.prototype.slice.call(message.statsKv) : message.statsKv;
            if (message.activeJobs != null && message.hasOwnProperty("activeJobs"))
                object.activeJobs = message.activeJobs;
            if (message.yieldingJobs != null && message.hasOwnProperty("yieldingJobs"))
                object.yieldingJobs = message.yieldingJobs;
            if (message.userSessions != null && message.hasOwnProperty("userSessions"))
                object.userSessions = message.userSessions;
            if (message.gameServerSessions != null && message.hasOwnProperty("gameServerSessions"))
                object.gameServerSessions = message.gameServerSessions;
            if (message.socaches != null && message.hasOwnProperty("socaches"))
                object.socaches = message.socaches;
            if (message.socachesToUnload != null && message.hasOwnProperty("socachesToUnload"))
                object.socachesToUnload = message.socachesToUnload;
            if (message.socachesLoading != null && message.hasOwnProperty("socachesLoading"))
                object.socachesLoading = message.socachesLoading;
            if (message.writebackQueue != null && message.hasOwnProperty("writebackQueue"))
                object.writebackQueue = message.writebackQueue;
            if (message.steamidLocks != null && message.hasOwnProperty("steamidLocks"))
                object.steamidLocks = message.steamidLocks;
            if (message.logonQueue != null && message.hasOwnProperty("logonQueue"))
                object.logonQueue = message.logonQueue;
            if (message.logonJobs != null && message.hasOwnProperty("logonJobs"))
                object.logonJobs = message.logonJobs;
            return object;
        };
    
        /**
         * Converts this CGCMsgGetSystemStatsResponse to JSON.
         * @function toJSON
         * @memberof CGCMsgGetSystemStatsResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCMsgGetSystemStatsResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCMsgGetSystemStatsResponse
         * @function getTypeUrl
         * @memberof CGCMsgGetSystemStatsResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCMsgGetSystemStatsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCMsgGetSystemStatsResponse";
        };
    
        return CGCMsgGetSystemStatsResponse;
    })();
    
    $root.CMsgAMSendEmail = (function() {
    
        /**
         * Properties of a CMsgAMSendEmail.
         * @exports ICMsgAMSendEmail
         * @interface ICMsgAMSendEmail
         * @property {number|Long|null} [steamid] CMsgAMSendEmail steamid
         * @property {number|null} [emailMsgType] CMsgAMSendEmail emailMsgType
         * @property {number|null} [emailFormat] CMsgAMSendEmail emailFormat
         * @property {Array.<CMsgAMSendEmail.IPersonaNameReplacementToken>|null} [personaNameTokens] CMsgAMSendEmail personaNameTokens
         * @property {number|null} [sourceGc] CMsgAMSendEmail sourceGc
         * @property {Array.<CMsgAMSendEmail.IReplacementToken>|null} [tokens] CMsgAMSendEmail tokens
         */
    
        /**
         * Constructs a new CMsgAMSendEmail.
         * @exports CMsgAMSendEmail
         * @classdesc Represents a CMsgAMSendEmail.
         * @implements ICMsgAMSendEmail
         * @constructor
         * @param {ICMsgAMSendEmail=} [properties] Properties to set
         */
        function CMsgAMSendEmail(properties) {
            this.personaNameTokens = [];
            this.tokens = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAMSendEmail steamid.
         * @member {number|Long} steamid
         * @memberof CMsgAMSendEmail
         * @instance
         */
        CMsgAMSendEmail.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgAMSendEmail emailMsgType.
         * @member {number} emailMsgType
         * @memberof CMsgAMSendEmail
         * @instance
         */
        CMsgAMSendEmail.prototype.emailMsgType = 0;
    
        /**
         * CMsgAMSendEmail emailFormat.
         * @member {number} emailFormat
         * @memberof CMsgAMSendEmail
         * @instance
         */
        CMsgAMSendEmail.prototype.emailFormat = 0;
    
        /**
         * CMsgAMSendEmail personaNameTokens.
         * @member {Array.<CMsgAMSendEmail.IPersonaNameReplacementToken>} personaNameTokens
         * @memberof CMsgAMSendEmail
         * @instance
         */
        CMsgAMSendEmail.prototype.personaNameTokens = $util.emptyArray;
    
        /**
         * CMsgAMSendEmail sourceGc.
         * @member {number} sourceGc
         * @memberof CMsgAMSendEmail
         * @instance
         */
        CMsgAMSendEmail.prototype.sourceGc = 0;
    
        /**
         * CMsgAMSendEmail tokens.
         * @member {Array.<CMsgAMSendEmail.IReplacementToken>} tokens
         * @memberof CMsgAMSendEmail
         * @instance
         */
        CMsgAMSendEmail.prototype.tokens = $util.emptyArray;
    
        /**
         * Creates a new CMsgAMSendEmail instance using the specified properties.
         * @function create
         * @memberof CMsgAMSendEmail
         * @static
         * @param {ICMsgAMSendEmail=} [properties] Properties to set
         * @returns {CMsgAMSendEmail} CMsgAMSendEmail instance
         */
        CMsgAMSendEmail.create = function create(properties) {
            return new CMsgAMSendEmail(properties);
        };
    
        /**
         * Encodes the specified CMsgAMSendEmail message. Does not implicitly {@link CMsgAMSendEmail.verify|verify} messages.
         * @function encode
         * @memberof CMsgAMSendEmail
         * @static
         * @param {ICMsgAMSendEmail} message CMsgAMSendEmail message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMSendEmail.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
            if (message.emailMsgType != null && Object.hasOwnProperty.call(message, "emailMsgType"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.emailMsgType);
            if (message.emailFormat != null && Object.hasOwnProperty.call(message, "emailFormat"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.emailFormat);
            if (message.personaNameTokens != null && message.personaNameTokens.length)
                for (var i = 0; i < message.personaNameTokens.length; ++i)
                    $root.CMsgAMSendEmail.PersonaNameReplacementToken.encode(message.personaNameTokens[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
            if (message.sourceGc != null && Object.hasOwnProperty.call(message, "sourceGc"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.sourceGc);
            if (message.tokens != null && message.tokens.length)
                for (var i = 0; i < message.tokens.length; ++i)
                    $root.CMsgAMSendEmail.ReplacementToken.encode(message.tokens[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAMSendEmail message, length delimited. Does not implicitly {@link CMsgAMSendEmail.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAMSendEmail
         * @static
         * @param {ICMsgAMSendEmail} message CMsgAMSendEmail message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMSendEmail.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAMSendEmail message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAMSendEmail
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAMSendEmail} CMsgAMSendEmail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMSendEmail.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMSendEmail();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamid = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.emailMsgType = reader.uint32();
                        break;
                    }
                case 3: {
                        message.emailFormat = reader.uint32();
                        break;
                    }
                case 5: {
                        if (!(message.personaNameTokens && message.personaNameTokens.length))
                            message.personaNameTokens = [];
                        message.personaNameTokens.push($root.CMsgAMSendEmail.PersonaNameReplacementToken.decode(reader, reader.uint32()));
                        break;
                    }
                case 6: {
                        message.sourceGc = reader.uint32();
                        break;
                    }
                case 7: {
                        if (!(message.tokens && message.tokens.length))
                            message.tokens = [];
                        message.tokens.push($root.CMsgAMSendEmail.ReplacementToken.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAMSendEmail message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAMSendEmail
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAMSendEmail} CMsgAMSendEmail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMSendEmail.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAMSendEmail message.
         * @function verify
         * @memberof CMsgAMSendEmail
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAMSendEmail.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.emailMsgType != null && message.hasOwnProperty("emailMsgType"))
                if (!$util.isInteger(message.emailMsgType))
                    return "emailMsgType: integer expected";
            if (message.emailFormat != null && message.hasOwnProperty("emailFormat"))
                if (!$util.isInteger(message.emailFormat))
                    return "emailFormat: integer expected";
            if (message.personaNameTokens != null && message.hasOwnProperty("personaNameTokens")) {
                if (!Array.isArray(message.personaNameTokens))
                    return "personaNameTokens: array expected";
                for (var i = 0; i < message.personaNameTokens.length; ++i) {
                    var error = $root.CMsgAMSendEmail.PersonaNameReplacementToken.verify(message.personaNameTokens[i]);
                    if (error)
                        return "personaNameTokens." + error;
                }
            }
            if (message.sourceGc != null && message.hasOwnProperty("sourceGc"))
                if (!$util.isInteger(message.sourceGc))
                    return "sourceGc: integer expected";
            if (message.tokens != null && message.hasOwnProperty("tokens")) {
                if (!Array.isArray(message.tokens))
                    return "tokens: array expected";
                for (var i = 0; i < message.tokens.length; ++i) {
                    var error = $root.CMsgAMSendEmail.ReplacementToken.verify(message.tokens[i]);
                    if (error)
                        return "tokens." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgAMSendEmail message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAMSendEmail
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAMSendEmail} CMsgAMSendEmail
         */
        CMsgAMSendEmail.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAMSendEmail)
                return object;
            var message = new $root.CMsgAMSendEmail();
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.emailMsgType != null)
                message.emailMsgType = object.emailMsgType >>> 0;
            if (object.emailFormat != null)
                message.emailFormat = object.emailFormat >>> 0;
            if (object.personaNameTokens) {
                if (!Array.isArray(object.personaNameTokens))
                    throw TypeError(".CMsgAMSendEmail.personaNameTokens: array expected");
                message.personaNameTokens = [];
                for (var i = 0; i < object.personaNameTokens.length; ++i) {
                    if (typeof object.personaNameTokens[i] !== "object")
                        throw TypeError(".CMsgAMSendEmail.personaNameTokens: object expected");
                    message.personaNameTokens[i] = $root.CMsgAMSendEmail.PersonaNameReplacementToken.fromObject(object.personaNameTokens[i]);
                }
            }
            if (object.sourceGc != null)
                message.sourceGc = object.sourceGc >>> 0;
            if (object.tokens) {
                if (!Array.isArray(object.tokens))
                    throw TypeError(".CMsgAMSendEmail.tokens: array expected");
                message.tokens = [];
                for (var i = 0; i < object.tokens.length; ++i) {
                    if (typeof object.tokens[i] !== "object")
                        throw TypeError(".CMsgAMSendEmail.tokens: object expected");
                    message.tokens[i] = $root.CMsgAMSendEmail.ReplacementToken.fromObject(object.tokens[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAMSendEmail message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAMSendEmail
         * @static
         * @param {CMsgAMSendEmail} message CMsgAMSendEmail
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAMSendEmail.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.personaNameTokens = [];
                object.tokens = [];
            }
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
                object.emailMsgType = 0;
                object.emailFormat = 0;
                object.sourceGc = 0;
            }
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.emailMsgType != null && message.hasOwnProperty("emailMsgType"))
                object.emailMsgType = message.emailMsgType;
            if (message.emailFormat != null && message.hasOwnProperty("emailFormat"))
                object.emailFormat = message.emailFormat;
            if (message.personaNameTokens && message.personaNameTokens.length) {
                object.personaNameTokens = [];
                for (var j = 0; j < message.personaNameTokens.length; ++j)
                    object.personaNameTokens[j] = $root.CMsgAMSendEmail.PersonaNameReplacementToken.toObject(message.personaNameTokens[j], options);
            }
            if (message.sourceGc != null && message.hasOwnProperty("sourceGc"))
                object.sourceGc = message.sourceGc;
            if (message.tokens && message.tokens.length) {
                object.tokens = [];
                for (var j = 0; j < message.tokens.length; ++j)
                    object.tokens[j] = $root.CMsgAMSendEmail.ReplacementToken.toObject(message.tokens[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgAMSendEmail to JSON.
         * @function toJSON
         * @memberof CMsgAMSendEmail
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAMSendEmail.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAMSendEmail
         * @function getTypeUrl
         * @memberof CMsgAMSendEmail
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAMSendEmail.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAMSendEmail";
        };
    
        CMsgAMSendEmail.ReplacementToken = (function() {
    
            /**
             * Properties of a ReplacementToken.
             * @memberof CMsgAMSendEmail
             * @interface IReplacementToken
             * @property {string|null} [tokenName] ReplacementToken tokenName
             * @property {string|null} [tokenValue] ReplacementToken tokenValue
             */
    
            /**
             * Constructs a new ReplacementToken.
             * @memberof CMsgAMSendEmail
             * @classdesc Represents a ReplacementToken.
             * @implements IReplacementToken
             * @constructor
             * @param {CMsgAMSendEmail.IReplacementToken=} [properties] Properties to set
             */
            function ReplacementToken(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * ReplacementToken tokenName.
             * @member {string} tokenName
             * @memberof CMsgAMSendEmail.ReplacementToken
             * @instance
             */
            ReplacementToken.prototype.tokenName = "";
    
            /**
             * ReplacementToken tokenValue.
             * @member {string} tokenValue
             * @memberof CMsgAMSendEmail.ReplacementToken
             * @instance
             */
            ReplacementToken.prototype.tokenValue = "";
    
            /**
             * Creates a new ReplacementToken instance using the specified properties.
             * @function create
             * @memberof CMsgAMSendEmail.ReplacementToken
             * @static
             * @param {CMsgAMSendEmail.IReplacementToken=} [properties] Properties to set
             * @returns {CMsgAMSendEmail.ReplacementToken} ReplacementToken instance
             */
            ReplacementToken.create = function create(properties) {
                return new ReplacementToken(properties);
            };
    
            /**
             * Encodes the specified ReplacementToken message. Does not implicitly {@link CMsgAMSendEmail.ReplacementToken.verify|verify} messages.
             * @function encode
             * @memberof CMsgAMSendEmail.ReplacementToken
             * @static
             * @param {CMsgAMSendEmail.IReplacementToken} message ReplacementToken message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ReplacementToken.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.tokenName != null && Object.hasOwnProperty.call(message, "tokenName"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.tokenName);
                if (message.tokenValue != null && Object.hasOwnProperty.call(message, "tokenValue"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.tokenValue);
                return writer;
            };
    
            /**
             * Encodes the specified ReplacementToken message, length delimited. Does not implicitly {@link CMsgAMSendEmail.ReplacementToken.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgAMSendEmail.ReplacementToken
             * @static
             * @param {CMsgAMSendEmail.IReplacementToken} message ReplacementToken message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ReplacementToken.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a ReplacementToken message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgAMSendEmail.ReplacementToken
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgAMSendEmail.ReplacementToken} ReplacementToken
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ReplacementToken.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMSendEmail.ReplacementToken();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.tokenName = reader.string();
                            break;
                        }
                    case 2: {
                            message.tokenValue = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a ReplacementToken message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgAMSendEmail.ReplacementToken
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgAMSendEmail.ReplacementToken} ReplacementToken
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ReplacementToken.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a ReplacementToken message.
             * @function verify
             * @memberof CMsgAMSendEmail.ReplacementToken
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ReplacementToken.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.tokenName != null && message.hasOwnProperty("tokenName"))
                    if (!$util.isString(message.tokenName))
                        return "tokenName: string expected";
                if (message.tokenValue != null && message.hasOwnProperty("tokenValue"))
                    if (!$util.isString(message.tokenValue))
                        return "tokenValue: string expected";
                return null;
            };
    
            /**
             * Creates a ReplacementToken message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgAMSendEmail.ReplacementToken
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgAMSendEmail.ReplacementToken} ReplacementToken
             */
            ReplacementToken.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgAMSendEmail.ReplacementToken)
                    return object;
                var message = new $root.CMsgAMSendEmail.ReplacementToken();
                if (object.tokenName != null)
                    message.tokenName = String(object.tokenName);
                if (object.tokenValue != null)
                    message.tokenValue = String(object.tokenValue);
                return message;
            };
    
            /**
             * Creates a plain object from a ReplacementToken message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgAMSendEmail.ReplacementToken
             * @static
             * @param {CMsgAMSendEmail.ReplacementToken} message ReplacementToken
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ReplacementToken.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.tokenName = "";
                    object.tokenValue = "";
                }
                if (message.tokenName != null && message.hasOwnProperty("tokenName"))
                    object.tokenName = message.tokenName;
                if (message.tokenValue != null && message.hasOwnProperty("tokenValue"))
                    object.tokenValue = message.tokenValue;
                return object;
            };
    
            /**
             * Converts this ReplacementToken to JSON.
             * @function toJSON
             * @memberof CMsgAMSendEmail.ReplacementToken
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ReplacementToken.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for ReplacementToken
             * @function getTypeUrl
             * @memberof CMsgAMSendEmail.ReplacementToken
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ReplacementToken.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgAMSendEmail.ReplacementToken";
            };
    
            return ReplacementToken;
        })();
    
        CMsgAMSendEmail.PersonaNameReplacementToken = (function() {
    
            /**
             * Properties of a PersonaNameReplacementToken.
             * @memberof CMsgAMSendEmail
             * @interface IPersonaNameReplacementToken
             * @property {number|Long|null} [steamid] PersonaNameReplacementToken steamid
             * @property {string|null} [tokenName] PersonaNameReplacementToken tokenName
             */
    
            /**
             * Constructs a new PersonaNameReplacementToken.
             * @memberof CMsgAMSendEmail
             * @classdesc Represents a PersonaNameReplacementToken.
             * @implements IPersonaNameReplacementToken
             * @constructor
             * @param {CMsgAMSendEmail.IPersonaNameReplacementToken=} [properties] Properties to set
             */
            function PersonaNameReplacementToken(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * PersonaNameReplacementToken steamid.
             * @member {number|Long} steamid
             * @memberof CMsgAMSendEmail.PersonaNameReplacementToken
             * @instance
             */
            PersonaNameReplacementToken.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
            /**
             * PersonaNameReplacementToken tokenName.
             * @member {string} tokenName
             * @memberof CMsgAMSendEmail.PersonaNameReplacementToken
             * @instance
             */
            PersonaNameReplacementToken.prototype.tokenName = "";
    
            /**
             * Creates a new PersonaNameReplacementToken instance using the specified properties.
             * @function create
             * @memberof CMsgAMSendEmail.PersonaNameReplacementToken
             * @static
             * @param {CMsgAMSendEmail.IPersonaNameReplacementToken=} [properties] Properties to set
             * @returns {CMsgAMSendEmail.PersonaNameReplacementToken} PersonaNameReplacementToken instance
             */
            PersonaNameReplacementToken.create = function create(properties) {
                return new PersonaNameReplacementToken(properties);
            };
    
            /**
             * Encodes the specified PersonaNameReplacementToken message. Does not implicitly {@link CMsgAMSendEmail.PersonaNameReplacementToken.verify|verify} messages.
             * @function encode
             * @memberof CMsgAMSendEmail.PersonaNameReplacementToken
             * @static
             * @param {CMsgAMSendEmail.IPersonaNameReplacementToken} message PersonaNameReplacementToken message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PersonaNameReplacementToken.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                    writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
                if (message.tokenName != null && Object.hasOwnProperty.call(message, "tokenName"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.tokenName);
                return writer;
            };
    
            /**
             * Encodes the specified PersonaNameReplacementToken message, length delimited. Does not implicitly {@link CMsgAMSendEmail.PersonaNameReplacementToken.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgAMSendEmail.PersonaNameReplacementToken
             * @static
             * @param {CMsgAMSendEmail.IPersonaNameReplacementToken} message PersonaNameReplacementToken message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PersonaNameReplacementToken.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a PersonaNameReplacementToken message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgAMSendEmail.PersonaNameReplacementToken
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgAMSendEmail.PersonaNameReplacementToken} PersonaNameReplacementToken
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PersonaNameReplacementToken.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMSendEmail.PersonaNameReplacementToken();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.steamid = reader.fixed64();
                            break;
                        }
                    case 2: {
                            message.tokenName = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a PersonaNameReplacementToken message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgAMSendEmail.PersonaNameReplacementToken
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgAMSendEmail.PersonaNameReplacementToken} PersonaNameReplacementToken
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PersonaNameReplacementToken.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a PersonaNameReplacementToken message.
             * @function verify
             * @memberof CMsgAMSendEmail.PersonaNameReplacementToken
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            PersonaNameReplacementToken.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.steamid != null && message.hasOwnProperty("steamid"))
                    if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                        return "steamid: integer|Long expected";
                if (message.tokenName != null && message.hasOwnProperty("tokenName"))
                    if (!$util.isString(message.tokenName))
                        return "tokenName: string expected";
                return null;
            };
    
            /**
             * Creates a PersonaNameReplacementToken message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgAMSendEmail.PersonaNameReplacementToken
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgAMSendEmail.PersonaNameReplacementToken} PersonaNameReplacementToken
             */
            PersonaNameReplacementToken.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgAMSendEmail.PersonaNameReplacementToken)
                    return object;
                var message = new $root.CMsgAMSendEmail.PersonaNameReplacementToken();
                if (object.steamid != null)
                    if ($util.Long)
                        (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                    else if (typeof object.steamid === "string")
                        message.steamid = parseInt(object.steamid, 10);
                    else if (typeof object.steamid === "number")
                        message.steamid = object.steamid;
                    else if (typeof object.steamid === "object")
                        message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
                if (object.tokenName != null)
                    message.tokenName = String(object.tokenName);
                return message;
            };
    
            /**
             * Creates a plain object from a PersonaNameReplacementToken message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgAMSendEmail.PersonaNameReplacementToken
             * @static
             * @param {CMsgAMSendEmail.PersonaNameReplacementToken} message PersonaNameReplacementToken
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            PersonaNameReplacementToken.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.steamid = options.longs === String ? "0" : 0;
                    object.tokenName = "";
                }
                if (message.steamid != null && message.hasOwnProperty("steamid"))
                    if (typeof message.steamid === "number")
                        object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                    else
                        object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
                if (message.tokenName != null && message.hasOwnProperty("tokenName"))
                    object.tokenName = message.tokenName;
                return object;
            };
    
            /**
             * Converts this PersonaNameReplacementToken to JSON.
             * @function toJSON
             * @memberof CMsgAMSendEmail.PersonaNameReplacementToken
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            PersonaNameReplacementToken.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for PersonaNameReplacementToken
             * @function getTypeUrl
             * @memberof CMsgAMSendEmail.PersonaNameReplacementToken
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            PersonaNameReplacementToken.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgAMSendEmail.PersonaNameReplacementToken";
            };
    
            return PersonaNameReplacementToken;
        })();
    
        return CMsgAMSendEmail;
    })();
    
    $root.CMsgAMSendEmailResponse = (function() {
    
        /**
         * Properties of a CMsgAMSendEmailResponse.
         * @exports ICMsgAMSendEmailResponse
         * @interface ICMsgAMSendEmailResponse
         * @property {number|null} [eresult] CMsgAMSendEmailResponse eresult
         */
    
        /**
         * Constructs a new CMsgAMSendEmailResponse.
         * @exports CMsgAMSendEmailResponse
         * @classdesc Represents a CMsgAMSendEmailResponse.
         * @implements ICMsgAMSendEmailResponse
         * @constructor
         * @param {ICMsgAMSendEmailResponse=} [properties] Properties to set
         */
        function CMsgAMSendEmailResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAMSendEmailResponse eresult.
         * @member {number} eresult
         * @memberof CMsgAMSendEmailResponse
         * @instance
         */
        CMsgAMSendEmailResponse.prototype.eresult = 2;
    
        /**
         * Creates a new CMsgAMSendEmailResponse instance using the specified properties.
         * @function create
         * @memberof CMsgAMSendEmailResponse
         * @static
         * @param {ICMsgAMSendEmailResponse=} [properties] Properties to set
         * @returns {CMsgAMSendEmailResponse} CMsgAMSendEmailResponse instance
         */
        CMsgAMSendEmailResponse.create = function create(properties) {
            return new CMsgAMSendEmailResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgAMSendEmailResponse message. Does not implicitly {@link CMsgAMSendEmailResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgAMSendEmailResponse
         * @static
         * @param {ICMsgAMSendEmailResponse} message CMsgAMSendEmailResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMSendEmailResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.eresult);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAMSendEmailResponse message, length delimited. Does not implicitly {@link CMsgAMSendEmailResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAMSendEmailResponse
         * @static
         * @param {ICMsgAMSendEmailResponse} message CMsgAMSendEmailResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMSendEmailResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAMSendEmailResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAMSendEmailResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAMSendEmailResponse} CMsgAMSendEmailResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMSendEmailResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMSendEmailResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.eresult = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAMSendEmailResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAMSendEmailResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAMSendEmailResponse} CMsgAMSendEmailResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMSendEmailResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAMSendEmailResponse message.
         * @function verify
         * @memberof CMsgAMSendEmailResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAMSendEmailResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgAMSendEmailResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAMSendEmailResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAMSendEmailResponse} CMsgAMSendEmailResponse
         */
        CMsgAMSendEmailResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAMSendEmailResponse)
                return object;
            var message = new $root.CMsgAMSendEmailResponse();
            if (object.eresult != null)
                message.eresult = object.eresult >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAMSendEmailResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAMSendEmailResponse
         * @static
         * @param {CMsgAMSendEmailResponse} message CMsgAMSendEmailResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAMSendEmailResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.eresult = 2;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            return object;
        };
    
        /**
         * Converts this CMsgAMSendEmailResponse to JSON.
         * @function toJSON
         * @memberof CMsgAMSendEmailResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAMSendEmailResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAMSendEmailResponse
         * @function getTypeUrl
         * @memberof CMsgAMSendEmailResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAMSendEmailResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAMSendEmailResponse";
        };
    
        return CMsgAMSendEmailResponse;
    })();
    
    $root.CMsgGCGetEmailTemplate = (function() {
    
        /**
         * Properties of a CMsgGCGetEmailTemplate.
         * @exports ICMsgGCGetEmailTemplate
         * @interface ICMsgGCGetEmailTemplate
         * @property {number|null} [appId] CMsgGCGetEmailTemplate appId
         * @property {number|null} [emailMsgType] CMsgGCGetEmailTemplate emailMsgType
         * @property {number|null} [emailLang] CMsgGCGetEmailTemplate emailLang
         * @property {number|null} [emailFormat] CMsgGCGetEmailTemplate emailFormat
         */
    
        /**
         * Constructs a new CMsgGCGetEmailTemplate.
         * @exports CMsgGCGetEmailTemplate
         * @classdesc Represents a CMsgGCGetEmailTemplate.
         * @implements ICMsgGCGetEmailTemplate
         * @constructor
         * @param {ICMsgGCGetEmailTemplate=} [properties] Properties to set
         */
        function CMsgGCGetEmailTemplate(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCGetEmailTemplate appId.
         * @member {number} appId
         * @memberof CMsgGCGetEmailTemplate
         * @instance
         */
        CMsgGCGetEmailTemplate.prototype.appId = 0;
    
        /**
         * CMsgGCGetEmailTemplate emailMsgType.
         * @member {number} emailMsgType
         * @memberof CMsgGCGetEmailTemplate
         * @instance
         */
        CMsgGCGetEmailTemplate.prototype.emailMsgType = 0;
    
        /**
         * CMsgGCGetEmailTemplate emailLang.
         * @member {number} emailLang
         * @memberof CMsgGCGetEmailTemplate
         * @instance
         */
        CMsgGCGetEmailTemplate.prototype.emailLang = 0;
    
        /**
         * CMsgGCGetEmailTemplate emailFormat.
         * @member {number} emailFormat
         * @memberof CMsgGCGetEmailTemplate
         * @instance
         */
        CMsgGCGetEmailTemplate.prototype.emailFormat = 0;
    
        /**
         * Creates a new CMsgGCGetEmailTemplate instance using the specified properties.
         * @function create
         * @memberof CMsgGCGetEmailTemplate
         * @static
         * @param {ICMsgGCGetEmailTemplate=} [properties] Properties to set
         * @returns {CMsgGCGetEmailTemplate} CMsgGCGetEmailTemplate instance
         */
        CMsgGCGetEmailTemplate.create = function create(properties) {
            return new CMsgGCGetEmailTemplate(properties);
        };
    
        /**
         * Encodes the specified CMsgGCGetEmailTemplate message. Does not implicitly {@link CMsgGCGetEmailTemplate.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCGetEmailTemplate
         * @static
         * @param {ICMsgGCGetEmailTemplate} message CMsgGCGetEmailTemplate message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetEmailTemplate.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appId != null && Object.hasOwnProperty.call(message, "appId"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appId);
            if (message.emailMsgType != null && Object.hasOwnProperty.call(message, "emailMsgType"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.emailMsgType);
            if (message.emailLang != null && Object.hasOwnProperty.call(message, "emailLang"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.emailLang);
            if (message.emailFormat != null && Object.hasOwnProperty.call(message, "emailFormat"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.emailFormat);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCGetEmailTemplate message, length delimited. Does not implicitly {@link CMsgGCGetEmailTemplate.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCGetEmailTemplate
         * @static
         * @param {ICMsgGCGetEmailTemplate} message CMsgGCGetEmailTemplate message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetEmailTemplate.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCGetEmailTemplate message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCGetEmailTemplate
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCGetEmailTemplate} CMsgGCGetEmailTemplate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetEmailTemplate.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCGetEmailTemplate();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.appId = reader.uint32();
                        break;
                    }
                case 2: {
                        message.emailMsgType = reader.uint32();
                        break;
                    }
                case 3: {
                        message.emailLang = reader.int32();
                        break;
                    }
                case 4: {
                        message.emailFormat = reader.int32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCGetEmailTemplate message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCGetEmailTemplate
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCGetEmailTemplate} CMsgGCGetEmailTemplate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetEmailTemplate.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCGetEmailTemplate message.
         * @function verify
         * @memberof CMsgGCGetEmailTemplate
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCGetEmailTemplate.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appId != null && message.hasOwnProperty("appId"))
                if (!$util.isInteger(message.appId))
                    return "appId: integer expected";
            if (message.emailMsgType != null && message.hasOwnProperty("emailMsgType"))
                if (!$util.isInteger(message.emailMsgType))
                    return "emailMsgType: integer expected";
            if (message.emailLang != null && message.hasOwnProperty("emailLang"))
                if (!$util.isInteger(message.emailLang))
                    return "emailLang: integer expected";
            if (message.emailFormat != null && message.hasOwnProperty("emailFormat"))
                if (!$util.isInteger(message.emailFormat))
                    return "emailFormat: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCGetEmailTemplate message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCGetEmailTemplate
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCGetEmailTemplate} CMsgGCGetEmailTemplate
         */
        CMsgGCGetEmailTemplate.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCGetEmailTemplate)
                return object;
            var message = new $root.CMsgGCGetEmailTemplate();
            if (object.appId != null)
                message.appId = object.appId >>> 0;
            if (object.emailMsgType != null)
                message.emailMsgType = object.emailMsgType >>> 0;
            if (object.emailLang != null)
                message.emailLang = object.emailLang | 0;
            if (object.emailFormat != null)
                message.emailFormat = object.emailFormat | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCGetEmailTemplate message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCGetEmailTemplate
         * @static
         * @param {CMsgGCGetEmailTemplate} message CMsgGCGetEmailTemplate
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCGetEmailTemplate.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.appId = 0;
                object.emailMsgType = 0;
                object.emailLang = 0;
                object.emailFormat = 0;
            }
            if (message.appId != null && message.hasOwnProperty("appId"))
                object.appId = message.appId;
            if (message.emailMsgType != null && message.hasOwnProperty("emailMsgType"))
                object.emailMsgType = message.emailMsgType;
            if (message.emailLang != null && message.hasOwnProperty("emailLang"))
                object.emailLang = message.emailLang;
            if (message.emailFormat != null && message.hasOwnProperty("emailFormat"))
                object.emailFormat = message.emailFormat;
            return object;
        };
    
        /**
         * Converts this CMsgGCGetEmailTemplate to JSON.
         * @function toJSON
         * @memberof CMsgGCGetEmailTemplate
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCGetEmailTemplate.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCGetEmailTemplate
         * @function getTypeUrl
         * @memberof CMsgGCGetEmailTemplate
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCGetEmailTemplate.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCGetEmailTemplate";
        };
    
        return CMsgGCGetEmailTemplate;
    })();
    
    $root.CMsgGCGetEmailTemplateResponse = (function() {
    
        /**
         * Properties of a CMsgGCGetEmailTemplateResponse.
         * @exports ICMsgGCGetEmailTemplateResponse
         * @interface ICMsgGCGetEmailTemplateResponse
         * @property {number|null} [eresult] CMsgGCGetEmailTemplateResponse eresult
         * @property {boolean|null} [templateExists] CMsgGCGetEmailTemplateResponse templateExists
         * @property {string|null} [template] CMsgGCGetEmailTemplateResponse template
         */
    
        /**
         * Constructs a new CMsgGCGetEmailTemplateResponse.
         * @exports CMsgGCGetEmailTemplateResponse
         * @classdesc Represents a CMsgGCGetEmailTemplateResponse.
         * @implements ICMsgGCGetEmailTemplateResponse
         * @constructor
         * @param {ICMsgGCGetEmailTemplateResponse=} [properties] Properties to set
         */
        function CMsgGCGetEmailTemplateResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCGetEmailTemplateResponse eresult.
         * @member {number} eresult
         * @memberof CMsgGCGetEmailTemplateResponse
         * @instance
         */
        CMsgGCGetEmailTemplateResponse.prototype.eresult = 2;
    
        /**
         * CMsgGCGetEmailTemplateResponse templateExists.
         * @member {boolean} templateExists
         * @memberof CMsgGCGetEmailTemplateResponse
         * @instance
         */
        CMsgGCGetEmailTemplateResponse.prototype.templateExists = false;
    
        /**
         * CMsgGCGetEmailTemplateResponse template.
         * @member {string} template
         * @memberof CMsgGCGetEmailTemplateResponse
         * @instance
         */
        CMsgGCGetEmailTemplateResponse.prototype.template = "";
    
        /**
         * Creates a new CMsgGCGetEmailTemplateResponse instance using the specified properties.
         * @function create
         * @memberof CMsgGCGetEmailTemplateResponse
         * @static
         * @param {ICMsgGCGetEmailTemplateResponse=} [properties] Properties to set
         * @returns {CMsgGCGetEmailTemplateResponse} CMsgGCGetEmailTemplateResponse instance
         */
        CMsgGCGetEmailTemplateResponse.create = function create(properties) {
            return new CMsgGCGetEmailTemplateResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgGCGetEmailTemplateResponse message. Does not implicitly {@link CMsgGCGetEmailTemplateResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCGetEmailTemplateResponse
         * @static
         * @param {ICMsgGCGetEmailTemplateResponse} message CMsgGCGetEmailTemplateResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetEmailTemplateResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.eresult);
            if (message.templateExists != null && Object.hasOwnProperty.call(message, "templateExists"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.templateExists);
            if (message.template != null && Object.hasOwnProperty.call(message, "template"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.template);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCGetEmailTemplateResponse message, length delimited. Does not implicitly {@link CMsgGCGetEmailTemplateResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCGetEmailTemplateResponse
         * @static
         * @param {ICMsgGCGetEmailTemplateResponse} message CMsgGCGetEmailTemplateResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetEmailTemplateResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCGetEmailTemplateResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCGetEmailTemplateResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCGetEmailTemplateResponse} CMsgGCGetEmailTemplateResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetEmailTemplateResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCGetEmailTemplateResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.eresult = reader.uint32();
                        break;
                    }
                case 2: {
                        message.templateExists = reader.bool();
                        break;
                    }
                case 3: {
                        message.template = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCGetEmailTemplateResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCGetEmailTemplateResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCGetEmailTemplateResponse} CMsgGCGetEmailTemplateResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetEmailTemplateResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCGetEmailTemplateResponse message.
         * @function verify
         * @memberof CMsgGCGetEmailTemplateResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCGetEmailTemplateResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.templateExists != null && message.hasOwnProperty("templateExists"))
                if (typeof message.templateExists !== "boolean")
                    return "templateExists: boolean expected";
            if (message.template != null && message.hasOwnProperty("template"))
                if (!$util.isString(message.template))
                    return "template: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCGetEmailTemplateResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCGetEmailTemplateResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCGetEmailTemplateResponse} CMsgGCGetEmailTemplateResponse
         */
        CMsgGCGetEmailTemplateResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCGetEmailTemplateResponse)
                return object;
            var message = new $root.CMsgGCGetEmailTemplateResponse();
            if (object.eresult != null)
                message.eresult = object.eresult >>> 0;
            if (object.templateExists != null)
                message.templateExists = Boolean(object.templateExists);
            if (object.template != null)
                message.template = String(object.template);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCGetEmailTemplateResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCGetEmailTemplateResponse
         * @static
         * @param {CMsgGCGetEmailTemplateResponse} message CMsgGCGetEmailTemplateResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCGetEmailTemplateResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.templateExists = false;
                object.template = "";
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.templateExists != null && message.hasOwnProperty("templateExists"))
                object.templateExists = message.templateExists;
            if (message.template != null && message.hasOwnProperty("template"))
                object.template = message.template;
            return object;
        };
    
        /**
         * Converts this CMsgGCGetEmailTemplateResponse to JSON.
         * @function toJSON
         * @memberof CMsgGCGetEmailTemplateResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCGetEmailTemplateResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCGetEmailTemplateResponse
         * @function getTypeUrl
         * @memberof CMsgGCGetEmailTemplateResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCGetEmailTemplateResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCGetEmailTemplateResponse";
        };
    
        return CMsgGCGetEmailTemplateResponse;
    })();
    
    $root.CMsgAMGrantGuestPasses2 = (function() {
    
        /**
         * Properties of a CMsgAMGrantGuestPasses2.
         * @exports ICMsgAMGrantGuestPasses2
         * @interface ICMsgAMGrantGuestPasses2
         * @property {number|Long|null} [steamId] CMsgAMGrantGuestPasses2 steamId
         * @property {number|null} [packageId] CMsgAMGrantGuestPasses2 packageId
         * @property {number|null} [passesToGrant] CMsgAMGrantGuestPasses2 passesToGrant
         * @property {number|null} [daysToExpiration] CMsgAMGrantGuestPasses2 daysToExpiration
         * @property {number|null} [action] CMsgAMGrantGuestPasses2 action
         */
    
        /**
         * Constructs a new CMsgAMGrantGuestPasses2.
         * @exports CMsgAMGrantGuestPasses2
         * @classdesc Represents a CMsgAMGrantGuestPasses2.
         * @implements ICMsgAMGrantGuestPasses2
         * @constructor
         * @param {ICMsgAMGrantGuestPasses2=} [properties] Properties to set
         */
        function CMsgAMGrantGuestPasses2(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAMGrantGuestPasses2 steamId.
         * @member {number|Long} steamId
         * @memberof CMsgAMGrantGuestPasses2
         * @instance
         */
        CMsgAMGrantGuestPasses2.prototype.steamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgAMGrantGuestPasses2 packageId.
         * @member {number} packageId
         * @memberof CMsgAMGrantGuestPasses2
         * @instance
         */
        CMsgAMGrantGuestPasses2.prototype.packageId = 0;
    
        /**
         * CMsgAMGrantGuestPasses2 passesToGrant.
         * @member {number} passesToGrant
         * @memberof CMsgAMGrantGuestPasses2
         * @instance
         */
        CMsgAMGrantGuestPasses2.prototype.passesToGrant = 0;
    
        /**
         * CMsgAMGrantGuestPasses2 daysToExpiration.
         * @member {number} daysToExpiration
         * @memberof CMsgAMGrantGuestPasses2
         * @instance
         */
        CMsgAMGrantGuestPasses2.prototype.daysToExpiration = 0;
    
        /**
         * CMsgAMGrantGuestPasses2 action.
         * @member {number} action
         * @memberof CMsgAMGrantGuestPasses2
         * @instance
         */
        CMsgAMGrantGuestPasses2.prototype.action = 0;
    
        /**
         * Creates a new CMsgAMGrantGuestPasses2 instance using the specified properties.
         * @function create
         * @memberof CMsgAMGrantGuestPasses2
         * @static
         * @param {ICMsgAMGrantGuestPasses2=} [properties] Properties to set
         * @returns {CMsgAMGrantGuestPasses2} CMsgAMGrantGuestPasses2 instance
         */
        CMsgAMGrantGuestPasses2.create = function create(properties) {
            return new CMsgAMGrantGuestPasses2(properties);
        };
    
        /**
         * Encodes the specified CMsgAMGrantGuestPasses2 message. Does not implicitly {@link CMsgAMGrantGuestPasses2.verify|verify} messages.
         * @function encode
         * @memberof CMsgAMGrantGuestPasses2
         * @static
         * @param {ICMsgAMGrantGuestPasses2} message CMsgAMGrantGuestPasses2 message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMGrantGuestPasses2.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamId != null && Object.hasOwnProperty.call(message, "steamId"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamId);
            if (message.packageId != null && Object.hasOwnProperty.call(message, "packageId"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.packageId);
            if (message.passesToGrant != null && Object.hasOwnProperty.call(message, "passesToGrant"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.passesToGrant);
            if (message.daysToExpiration != null && Object.hasOwnProperty.call(message, "daysToExpiration"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.daysToExpiration);
            if (message.action != null && Object.hasOwnProperty.call(message, "action"))
                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.action);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAMGrantGuestPasses2 message, length delimited. Does not implicitly {@link CMsgAMGrantGuestPasses2.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAMGrantGuestPasses2
         * @static
         * @param {ICMsgAMGrantGuestPasses2} message CMsgAMGrantGuestPasses2 message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMGrantGuestPasses2.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAMGrantGuestPasses2 message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAMGrantGuestPasses2
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAMGrantGuestPasses2} CMsgAMGrantGuestPasses2
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMGrantGuestPasses2.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMGrantGuestPasses2();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamId = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.packageId = reader.uint32();
                        break;
                    }
                case 3: {
                        message.passesToGrant = reader.int32();
                        break;
                    }
                case 4: {
                        message.daysToExpiration = reader.int32();
                        break;
                    }
                case 5: {
                        message.action = reader.int32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAMGrantGuestPasses2 message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAMGrantGuestPasses2
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAMGrantGuestPasses2} CMsgAMGrantGuestPasses2
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMGrantGuestPasses2.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAMGrantGuestPasses2 message.
         * @function verify
         * @memberof CMsgAMGrantGuestPasses2
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAMGrantGuestPasses2.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (!$util.isInteger(message.steamId) && !(message.steamId && $util.isInteger(message.steamId.low) && $util.isInteger(message.steamId.high)))
                    return "steamId: integer|Long expected";
            if (message.packageId != null && message.hasOwnProperty("packageId"))
                if (!$util.isInteger(message.packageId))
                    return "packageId: integer expected";
            if (message.passesToGrant != null && message.hasOwnProperty("passesToGrant"))
                if (!$util.isInteger(message.passesToGrant))
                    return "passesToGrant: integer expected";
            if (message.daysToExpiration != null && message.hasOwnProperty("daysToExpiration"))
                if (!$util.isInteger(message.daysToExpiration))
                    return "daysToExpiration: integer expected";
            if (message.action != null && message.hasOwnProperty("action"))
                if (!$util.isInteger(message.action))
                    return "action: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgAMGrantGuestPasses2 message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAMGrantGuestPasses2
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAMGrantGuestPasses2} CMsgAMGrantGuestPasses2
         */
        CMsgAMGrantGuestPasses2.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAMGrantGuestPasses2)
                return object;
            var message = new $root.CMsgAMGrantGuestPasses2();
            if (object.steamId != null)
                if ($util.Long)
                    (message.steamId = $util.Long.fromValue(object.steamId)).unsigned = false;
                else if (typeof object.steamId === "string")
                    message.steamId = parseInt(object.steamId, 10);
                else if (typeof object.steamId === "number")
                    message.steamId = object.steamId;
                else if (typeof object.steamId === "object")
                    message.steamId = new $util.LongBits(object.steamId.low >>> 0, object.steamId.high >>> 0).toNumber();
            if (object.packageId != null)
                message.packageId = object.packageId >>> 0;
            if (object.passesToGrant != null)
                message.passesToGrant = object.passesToGrant | 0;
            if (object.daysToExpiration != null)
                message.daysToExpiration = object.daysToExpiration | 0;
            if (object.action != null)
                message.action = object.action | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAMGrantGuestPasses2 message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAMGrantGuestPasses2
         * @static
         * @param {CMsgAMGrantGuestPasses2} message CMsgAMGrantGuestPasses2
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAMGrantGuestPasses2.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamId = options.longs === String ? "0" : 0;
                object.packageId = 0;
                object.passesToGrant = 0;
                object.daysToExpiration = 0;
                object.action = 0;
            }
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (typeof message.steamId === "number")
                    object.steamId = options.longs === String ? String(message.steamId) : message.steamId;
                else
                    object.steamId = options.longs === String ? $util.Long.prototype.toString.call(message.steamId) : options.longs === Number ? new $util.LongBits(message.steamId.low >>> 0, message.steamId.high >>> 0).toNumber() : message.steamId;
            if (message.packageId != null && message.hasOwnProperty("packageId"))
                object.packageId = message.packageId;
            if (message.passesToGrant != null && message.hasOwnProperty("passesToGrant"))
                object.passesToGrant = message.passesToGrant;
            if (message.daysToExpiration != null && message.hasOwnProperty("daysToExpiration"))
                object.daysToExpiration = message.daysToExpiration;
            if (message.action != null && message.hasOwnProperty("action"))
                object.action = message.action;
            return object;
        };
    
        /**
         * Converts this CMsgAMGrantGuestPasses2 to JSON.
         * @function toJSON
         * @memberof CMsgAMGrantGuestPasses2
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAMGrantGuestPasses2.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAMGrantGuestPasses2
         * @function getTypeUrl
         * @memberof CMsgAMGrantGuestPasses2
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAMGrantGuestPasses2.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAMGrantGuestPasses2";
        };
    
        return CMsgAMGrantGuestPasses2;
    })();
    
    $root.CMsgAMGrantGuestPasses2Response = (function() {
    
        /**
         * Properties of a CMsgAMGrantGuestPasses2Response.
         * @exports ICMsgAMGrantGuestPasses2Response
         * @interface ICMsgAMGrantGuestPasses2Response
         * @property {number|null} [eresult] CMsgAMGrantGuestPasses2Response eresult
         * @property {number|null} [passesGranted] CMsgAMGrantGuestPasses2Response passesGranted
         */
    
        /**
         * Constructs a new CMsgAMGrantGuestPasses2Response.
         * @exports CMsgAMGrantGuestPasses2Response
         * @classdesc Represents a CMsgAMGrantGuestPasses2Response.
         * @implements ICMsgAMGrantGuestPasses2Response
         * @constructor
         * @param {ICMsgAMGrantGuestPasses2Response=} [properties] Properties to set
         */
        function CMsgAMGrantGuestPasses2Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAMGrantGuestPasses2Response eresult.
         * @member {number} eresult
         * @memberof CMsgAMGrantGuestPasses2Response
         * @instance
         */
        CMsgAMGrantGuestPasses2Response.prototype.eresult = 2;
    
        /**
         * CMsgAMGrantGuestPasses2Response passesGranted.
         * @member {number} passesGranted
         * @memberof CMsgAMGrantGuestPasses2Response
         * @instance
         */
        CMsgAMGrantGuestPasses2Response.prototype.passesGranted = 0;
    
        /**
         * Creates a new CMsgAMGrantGuestPasses2Response instance using the specified properties.
         * @function create
         * @memberof CMsgAMGrantGuestPasses2Response
         * @static
         * @param {ICMsgAMGrantGuestPasses2Response=} [properties] Properties to set
         * @returns {CMsgAMGrantGuestPasses2Response} CMsgAMGrantGuestPasses2Response instance
         */
        CMsgAMGrantGuestPasses2Response.create = function create(properties) {
            return new CMsgAMGrantGuestPasses2Response(properties);
        };
    
        /**
         * Encodes the specified CMsgAMGrantGuestPasses2Response message. Does not implicitly {@link CMsgAMGrantGuestPasses2Response.verify|verify} messages.
         * @function encode
         * @memberof CMsgAMGrantGuestPasses2Response
         * @static
         * @param {ICMsgAMGrantGuestPasses2Response} message CMsgAMGrantGuestPasses2Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMGrantGuestPasses2Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.passesGranted != null && Object.hasOwnProperty.call(message, "passesGranted"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.passesGranted);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAMGrantGuestPasses2Response message, length delimited. Does not implicitly {@link CMsgAMGrantGuestPasses2Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAMGrantGuestPasses2Response
         * @static
         * @param {ICMsgAMGrantGuestPasses2Response} message CMsgAMGrantGuestPasses2Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMGrantGuestPasses2Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAMGrantGuestPasses2Response message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAMGrantGuestPasses2Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAMGrantGuestPasses2Response} CMsgAMGrantGuestPasses2Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMGrantGuestPasses2Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMGrantGuestPasses2Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.eresult = reader.int32();
                        break;
                    }
                case 2: {
                        message.passesGranted = reader.int32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAMGrantGuestPasses2Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAMGrantGuestPasses2Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAMGrantGuestPasses2Response} CMsgAMGrantGuestPasses2Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMGrantGuestPasses2Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAMGrantGuestPasses2Response message.
         * @function verify
         * @memberof CMsgAMGrantGuestPasses2Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAMGrantGuestPasses2Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.passesGranted != null && message.hasOwnProperty("passesGranted"))
                if (!$util.isInteger(message.passesGranted))
                    return "passesGranted: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgAMGrantGuestPasses2Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAMGrantGuestPasses2Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAMGrantGuestPasses2Response} CMsgAMGrantGuestPasses2Response
         */
        CMsgAMGrantGuestPasses2Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAMGrantGuestPasses2Response)
                return object;
            var message = new $root.CMsgAMGrantGuestPasses2Response();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.passesGranted != null)
                message.passesGranted = object.passesGranted | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAMGrantGuestPasses2Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAMGrantGuestPasses2Response
         * @static
         * @param {CMsgAMGrantGuestPasses2Response} message CMsgAMGrantGuestPasses2Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAMGrantGuestPasses2Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.passesGranted = 0;
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.passesGranted != null && message.hasOwnProperty("passesGranted"))
                object.passesGranted = message.passesGranted;
            return object;
        };
    
        /**
         * Converts this CMsgAMGrantGuestPasses2Response to JSON.
         * @function toJSON
         * @memberof CMsgAMGrantGuestPasses2Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAMGrantGuestPasses2Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAMGrantGuestPasses2Response
         * @function getTypeUrl
         * @memberof CMsgAMGrantGuestPasses2Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAMGrantGuestPasses2Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAMGrantGuestPasses2Response";
        };
    
        return CMsgAMGrantGuestPasses2Response;
    })();
    
    $root.CGCSystemMsg_GetAccountDetails = (function() {
    
        /**
         * Properties of a CGCSystemMsg_GetAccountDetails.
         * @exports ICGCSystemMsg_GetAccountDetails
         * @interface ICGCSystemMsg_GetAccountDetails
         * @property {number|Long|null} [steamid] CGCSystemMsg_GetAccountDetails steamid
         * @property {number|null} [appid] CGCSystemMsg_GetAccountDetails appid
         */
    
        /**
         * Constructs a new CGCSystemMsg_GetAccountDetails.
         * @exports CGCSystemMsg_GetAccountDetails
         * @classdesc Represents a CGCSystemMsg_GetAccountDetails.
         * @implements ICGCSystemMsg_GetAccountDetails
         * @constructor
         * @param {ICGCSystemMsg_GetAccountDetails=} [properties] Properties to set
         */
        function CGCSystemMsg_GetAccountDetails(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCSystemMsg_GetAccountDetails steamid.
         * @member {number|Long} steamid
         * @memberof CGCSystemMsg_GetAccountDetails
         * @instance
         */
        CGCSystemMsg_GetAccountDetails.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CGCSystemMsg_GetAccountDetails appid.
         * @member {number} appid
         * @memberof CGCSystemMsg_GetAccountDetails
         * @instance
         */
        CGCSystemMsg_GetAccountDetails.prototype.appid = 0;
    
        /**
         * Creates a new CGCSystemMsg_GetAccountDetails instance using the specified properties.
         * @function create
         * @memberof CGCSystemMsg_GetAccountDetails
         * @static
         * @param {ICGCSystemMsg_GetAccountDetails=} [properties] Properties to set
         * @returns {CGCSystemMsg_GetAccountDetails} CGCSystemMsg_GetAccountDetails instance
         */
        CGCSystemMsg_GetAccountDetails.create = function create(properties) {
            return new CGCSystemMsg_GetAccountDetails(properties);
        };
    
        /**
         * Encodes the specified CGCSystemMsg_GetAccountDetails message. Does not implicitly {@link CGCSystemMsg_GetAccountDetails.verify|verify} messages.
         * @function encode
         * @memberof CGCSystemMsg_GetAccountDetails
         * @static
         * @param {ICGCSystemMsg_GetAccountDetails} message CGCSystemMsg_GetAccountDetails message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCSystemMsg_GetAccountDetails.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.appid);
            return writer;
        };
    
        /**
         * Encodes the specified CGCSystemMsg_GetAccountDetails message, length delimited. Does not implicitly {@link CGCSystemMsg_GetAccountDetails.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCSystemMsg_GetAccountDetails
         * @static
         * @param {ICGCSystemMsg_GetAccountDetails} message CGCSystemMsg_GetAccountDetails message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCSystemMsg_GetAccountDetails.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCSystemMsg_GetAccountDetails message from the specified reader or buffer.
         * @function decode
         * @memberof CGCSystemMsg_GetAccountDetails
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCSystemMsg_GetAccountDetails} CGCSystemMsg_GetAccountDetails
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCSystemMsg_GetAccountDetails.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCSystemMsg_GetAccountDetails();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamid = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.appid = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCSystemMsg_GetAccountDetails message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCSystemMsg_GetAccountDetails
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCSystemMsg_GetAccountDetails} CGCSystemMsg_GetAccountDetails
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCSystemMsg_GetAccountDetails.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCSystemMsg_GetAccountDetails message.
         * @function verify
         * @memberof CGCSystemMsg_GetAccountDetails
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCSystemMsg_GetAccountDetails.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            return null;
        };
    
        /**
         * Creates a CGCSystemMsg_GetAccountDetails message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCSystemMsg_GetAccountDetails
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCSystemMsg_GetAccountDetails} CGCSystemMsg_GetAccountDetails
         */
        CGCSystemMsg_GetAccountDetails.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCSystemMsg_GetAccountDetails)
                return object;
            var message = new $root.CGCSystemMsg_GetAccountDetails();
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CGCSystemMsg_GetAccountDetails message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCSystemMsg_GetAccountDetails
         * @static
         * @param {CGCSystemMsg_GetAccountDetails} message CGCSystemMsg_GetAccountDetails
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCSystemMsg_GetAccountDetails.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
                object.appid = 0;
            }
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            return object;
        };
    
        /**
         * Converts this CGCSystemMsg_GetAccountDetails to JSON.
         * @function toJSON
         * @memberof CGCSystemMsg_GetAccountDetails
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCSystemMsg_GetAccountDetails.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCSystemMsg_GetAccountDetails
         * @function getTypeUrl
         * @memberof CGCSystemMsg_GetAccountDetails
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCSystemMsg_GetAccountDetails.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCSystemMsg_GetAccountDetails";
        };
    
        return CGCSystemMsg_GetAccountDetails;
    })();
    
    $root.CGCSystemMsg_GetAccountDetails_Response = (function() {
    
        /**
         * Properties of a CGCSystemMsg_GetAccountDetails_Response.
         * @exports ICGCSystemMsg_GetAccountDetails_Response
         * @interface ICGCSystemMsg_GetAccountDetails_Response
         * @property {number|null} [eresultDeprecated] CGCSystemMsg_GetAccountDetails_Response eresultDeprecated
         * @property {string|null} [accountName] CGCSystemMsg_GetAccountDetails_Response accountName
         * @property {string|null} [personaName] CGCSystemMsg_GetAccountDetails_Response personaName
         * @property {boolean|null} [isProfilePublic] CGCSystemMsg_GetAccountDetails_Response isProfilePublic
         * @property {boolean|null} [isInventoryPublic] CGCSystemMsg_GetAccountDetails_Response isInventoryPublic
         * @property {boolean|null} [isVacBanned] CGCSystemMsg_GetAccountDetails_Response isVacBanned
         * @property {boolean|null} [isCyberCafe] CGCSystemMsg_GetAccountDetails_Response isCyberCafe
         * @property {boolean|null} [isSchoolAccount] CGCSystemMsg_GetAccountDetails_Response isSchoolAccount
         * @property {boolean|null} [isLimited] CGCSystemMsg_GetAccountDetails_Response isLimited
         * @property {boolean|null} [isSubscribed] CGCSystemMsg_GetAccountDetails_Response isSubscribed
         * @property {number|null} ["package"] CGCSystemMsg_GetAccountDetails_Response package
         * @property {boolean|null} [isFreeTrialAccount] CGCSystemMsg_GetAccountDetails_Response isFreeTrialAccount
         * @property {number|null} [freeTrialExpiration] CGCSystemMsg_GetAccountDetails_Response freeTrialExpiration
         * @property {boolean|null} [isLowViolence] CGCSystemMsg_GetAccountDetails_Response isLowViolence
         * @property {boolean|null} [isAccountLockedDown] CGCSystemMsg_GetAccountDetails_Response isAccountLockedDown
         * @property {boolean|null} [isCommunityBanned] CGCSystemMsg_GetAccountDetails_Response isCommunityBanned
         * @property {boolean|null} [isTradeBanned] CGCSystemMsg_GetAccountDetails_Response isTradeBanned
         * @property {number|null} [tradeBanExpiration] CGCSystemMsg_GetAccountDetails_Response tradeBanExpiration
         * @property {number|null} [accountid] CGCSystemMsg_GetAccountDetails_Response accountid
         * @property {number|null} [suspensionEndTime] CGCSystemMsg_GetAccountDetails_Response suspensionEndTime
         * @property {string|null} [currency] CGCSystemMsg_GetAccountDetails_Response currency
         * @property {number|null} [steamLevel] CGCSystemMsg_GetAccountDetails_Response steamLevel
         * @property {number|null} [friendCount] CGCSystemMsg_GetAccountDetails_Response friendCount
         * @property {number|null} [accountCreationTime] CGCSystemMsg_GetAccountDetails_Response accountCreationTime
         * @property {boolean|null} [isSteamguardEnabled] CGCSystemMsg_GetAccountDetails_Response isSteamguardEnabled
         * @property {boolean|null} [isPhoneVerified] CGCSystemMsg_GetAccountDetails_Response isPhoneVerified
         * @property {boolean|null} [isTwoFactorAuthEnabled] CGCSystemMsg_GetAccountDetails_Response isTwoFactorAuthEnabled
         * @property {number|null} [twoFactorEnabledTime] CGCSystemMsg_GetAccountDetails_Response twoFactorEnabledTime
         * @property {number|null} [phoneVerificationTime] CGCSystemMsg_GetAccountDetails_Response phoneVerificationTime
         * @property {number|Long|null} [phoneId] CGCSystemMsg_GetAccountDetails_Response phoneId
         * @property {boolean|null} [isPhoneIdentifying] CGCSystemMsg_GetAccountDetails_Response isPhoneIdentifying
         * @property {number|null} [rtIdentityLinked] CGCSystemMsg_GetAccountDetails_Response rtIdentityLinked
         * @property {number|null} [rtBirthDate] CGCSystemMsg_GetAccountDetails_Response rtBirthDate
         * @property {string|null} [txnCountryCode] CGCSystemMsg_GetAccountDetails_Response txnCountryCode
         * @property {boolean|null} [hasAcceptedChinaSsa] CGCSystemMsg_GetAccountDetails_Response hasAcceptedChinaSsa
         * @property {boolean|null} [isBannedSteamChina] CGCSystemMsg_GetAccountDetails_Response isBannedSteamChina
         */
    
        /**
         * Constructs a new CGCSystemMsg_GetAccountDetails_Response.
         * @exports CGCSystemMsg_GetAccountDetails_Response
         * @classdesc Represents a CGCSystemMsg_GetAccountDetails_Response.
         * @implements ICGCSystemMsg_GetAccountDetails_Response
         * @constructor
         * @param {ICGCSystemMsg_GetAccountDetails_Response=} [properties] Properties to set
         */
        function CGCSystemMsg_GetAccountDetails_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response eresultDeprecated.
         * @member {number} eresultDeprecated
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.eresultDeprecated = 2;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response accountName.
         * @member {string} accountName
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.accountName = "";
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response personaName.
         * @member {string} personaName
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.personaName = "";
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isProfilePublic.
         * @member {boolean} isProfilePublic
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isProfilePublic = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isInventoryPublic.
         * @member {boolean} isInventoryPublic
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isInventoryPublic = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isVacBanned.
         * @member {boolean} isVacBanned
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isVacBanned = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isCyberCafe.
         * @member {boolean} isCyberCafe
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isCyberCafe = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isSchoolAccount.
         * @member {boolean} isSchoolAccount
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isSchoolAccount = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isLimited.
         * @member {boolean} isLimited
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isLimited = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isSubscribed.
         * @member {boolean} isSubscribed
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isSubscribed = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response package.
         * @member {number} package
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype["package"] = 0;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isFreeTrialAccount.
         * @member {boolean} isFreeTrialAccount
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isFreeTrialAccount = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response freeTrialExpiration.
         * @member {number} freeTrialExpiration
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.freeTrialExpiration = 0;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isLowViolence.
         * @member {boolean} isLowViolence
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isLowViolence = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isAccountLockedDown.
         * @member {boolean} isAccountLockedDown
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isAccountLockedDown = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isCommunityBanned.
         * @member {boolean} isCommunityBanned
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isCommunityBanned = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isTradeBanned.
         * @member {boolean} isTradeBanned
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isTradeBanned = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response tradeBanExpiration.
         * @member {number} tradeBanExpiration
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.tradeBanExpiration = 0;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response accountid.
         * @member {number} accountid
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.accountid = 0;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response suspensionEndTime.
         * @member {number} suspensionEndTime
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.suspensionEndTime = 0;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response currency.
         * @member {string} currency
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.currency = "";
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response steamLevel.
         * @member {number} steamLevel
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.steamLevel = 0;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response friendCount.
         * @member {number} friendCount
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.friendCount = 0;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response accountCreationTime.
         * @member {number} accountCreationTime
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.accountCreationTime = 0;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isSteamguardEnabled.
         * @member {boolean} isSteamguardEnabled
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isSteamguardEnabled = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isPhoneVerified.
         * @member {boolean} isPhoneVerified
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isPhoneVerified = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isTwoFactorAuthEnabled.
         * @member {boolean} isTwoFactorAuthEnabled
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isTwoFactorAuthEnabled = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response twoFactorEnabledTime.
         * @member {number} twoFactorEnabledTime
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.twoFactorEnabledTime = 0;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response phoneVerificationTime.
         * @member {number} phoneVerificationTime
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.phoneVerificationTime = 0;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response phoneId.
         * @member {number|Long} phoneId
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.phoneId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isPhoneIdentifying.
         * @member {boolean} isPhoneIdentifying
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isPhoneIdentifying = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response rtIdentityLinked.
         * @member {number} rtIdentityLinked
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.rtIdentityLinked = 0;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response rtBirthDate.
         * @member {number} rtBirthDate
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.rtBirthDate = 0;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response txnCountryCode.
         * @member {string} txnCountryCode
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.txnCountryCode = "";
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response hasAcceptedChinaSsa.
         * @member {boolean} hasAcceptedChinaSsa
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.hasAcceptedChinaSsa = false;
    
        /**
         * CGCSystemMsg_GetAccountDetails_Response isBannedSteamChina.
         * @member {boolean} isBannedSteamChina
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.isBannedSteamChina = false;
    
        /**
         * Creates a new CGCSystemMsg_GetAccountDetails_Response instance using the specified properties.
         * @function create
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @static
         * @param {ICGCSystemMsg_GetAccountDetails_Response=} [properties] Properties to set
         * @returns {CGCSystemMsg_GetAccountDetails_Response} CGCSystemMsg_GetAccountDetails_Response instance
         */
        CGCSystemMsg_GetAccountDetails_Response.create = function create(properties) {
            return new CGCSystemMsg_GetAccountDetails_Response(properties);
        };
    
        /**
         * Encodes the specified CGCSystemMsg_GetAccountDetails_Response message. Does not implicitly {@link CGCSystemMsg_GetAccountDetails_Response.verify|verify} messages.
         * @function encode
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @static
         * @param {ICGCSystemMsg_GetAccountDetails_Response} message CGCSystemMsg_GetAccountDetails_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCSystemMsg_GetAccountDetails_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresultDeprecated != null && Object.hasOwnProperty.call(message, "eresultDeprecated"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.eresultDeprecated);
            if (message.accountName != null && Object.hasOwnProperty.call(message, "accountName"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.accountName);
            if (message.personaName != null && Object.hasOwnProperty.call(message, "personaName"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.personaName);
            if (message.isProfilePublic != null && Object.hasOwnProperty.call(message, "isProfilePublic"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.isProfilePublic);
            if (message.isInventoryPublic != null && Object.hasOwnProperty.call(message, "isInventoryPublic"))
                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.isInventoryPublic);
            if (message.isVacBanned != null && Object.hasOwnProperty.call(message, "isVacBanned"))
                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.isVacBanned);
            if (message.isCyberCafe != null && Object.hasOwnProperty.call(message, "isCyberCafe"))
                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.isCyberCafe);
            if (message.isSchoolAccount != null && Object.hasOwnProperty.call(message, "isSchoolAccount"))
                writer.uint32(/* id 9, wireType 0 =*/72).bool(message.isSchoolAccount);
            if (message.isLimited != null && Object.hasOwnProperty.call(message, "isLimited"))
                writer.uint32(/* id 10, wireType 0 =*/80).bool(message.isLimited);
            if (message.isSubscribed != null && Object.hasOwnProperty.call(message, "isSubscribed"))
                writer.uint32(/* id 11, wireType 0 =*/88).bool(message.isSubscribed);
            if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                writer.uint32(/* id 12, wireType 0 =*/96).uint32(message["package"]);
            if (message.isFreeTrialAccount != null && Object.hasOwnProperty.call(message, "isFreeTrialAccount"))
                writer.uint32(/* id 13, wireType 0 =*/104).bool(message.isFreeTrialAccount);
            if (message.freeTrialExpiration != null && Object.hasOwnProperty.call(message, "freeTrialExpiration"))
                writer.uint32(/* id 14, wireType 0 =*/112).uint32(message.freeTrialExpiration);
            if (message.isLowViolence != null && Object.hasOwnProperty.call(message, "isLowViolence"))
                writer.uint32(/* id 15, wireType 0 =*/120).bool(message.isLowViolence);
            if (message.isAccountLockedDown != null && Object.hasOwnProperty.call(message, "isAccountLockedDown"))
                writer.uint32(/* id 16, wireType 0 =*/128).bool(message.isAccountLockedDown);
            if (message.isCommunityBanned != null && Object.hasOwnProperty.call(message, "isCommunityBanned"))
                writer.uint32(/* id 17, wireType 0 =*/136).bool(message.isCommunityBanned);
            if (message.isTradeBanned != null && Object.hasOwnProperty.call(message, "isTradeBanned"))
                writer.uint32(/* id 18, wireType 0 =*/144).bool(message.isTradeBanned);
            if (message.tradeBanExpiration != null && Object.hasOwnProperty.call(message, "tradeBanExpiration"))
                writer.uint32(/* id 19, wireType 0 =*/152).uint32(message.tradeBanExpiration);
            if (message.accountid != null && Object.hasOwnProperty.call(message, "accountid"))
                writer.uint32(/* id 20, wireType 0 =*/160).uint32(message.accountid);
            if (message.suspensionEndTime != null && Object.hasOwnProperty.call(message, "suspensionEndTime"))
                writer.uint32(/* id 21, wireType 0 =*/168).uint32(message.suspensionEndTime);
            if (message.currency != null && Object.hasOwnProperty.call(message, "currency"))
                writer.uint32(/* id 22, wireType 2 =*/178).string(message.currency);
            if (message.steamLevel != null && Object.hasOwnProperty.call(message, "steamLevel"))
                writer.uint32(/* id 23, wireType 0 =*/184).uint32(message.steamLevel);
            if (message.friendCount != null && Object.hasOwnProperty.call(message, "friendCount"))
                writer.uint32(/* id 24, wireType 0 =*/192).uint32(message.friendCount);
            if (message.accountCreationTime != null && Object.hasOwnProperty.call(message, "accountCreationTime"))
                writer.uint32(/* id 25, wireType 0 =*/200).uint32(message.accountCreationTime);
            if (message.isSteamguardEnabled != null && Object.hasOwnProperty.call(message, "isSteamguardEnabled"))
                writer.uint32(/* id 27, wireType 0 =*/216).bool(message.isSteamguardEnabled);
            if (message.isPhoneVerified != null && Object.hasOwnProperty.call(message, "isPhoneVerified"))
                writer.uint32(/* id 28, wireType 0 =*/224).bool(message.isPhoneVerified);
            if (message.isTwoFactorAuthEnabled != null && Object.hasOwnProperty.call(message, "isTwoFactorAuthEnabled"))
                writer.uint32(/* id 29, wireType 0 =*/232).bool(message.isTwoFactorAuthEnabled);
            if (message.twoFactorEnabledTime != null && Object.hasOwnProperty.call(message, "twoFactorEnabledTime"))
                writer.uint32(/* id 30, wireType 0 =*/240).uint32(message.twoFactorEnabledTime);
            if (message.phoneVerificationTime != null && Object.hasOwnProperty.call(message, "phoneVerificationTime"))
                writer.uint32(/* id 31, wireType 0 =*/248).uint32(message.phoneVerificationTime);
            if (message.phoneId != null && Object.hasOwnProperty.call(message, "phoneId"))
                writer.uint32(/* id 33, wireType 0 =*/264).uint64(message.phoneId);
            if (message.isPhoneIdentifying != null && Object.hasOwnProperty.call(message, "isPhoneIdentifying"))
                writer.uint32(/* id 34, wireType 0 =*/272).bool(message.isPhoneIdentifying);
            if (message.rtIdentityLinked != null && Object.hasOwnProperty.call(message, "rtIdentityLinked"))
                writer.uint32(/* id 35, wireType 0 =*/280).uint32(message.rtIdentityLinked);
            if (message.rtBirthDate != null && Object.hasOwnProperty.call(message, "rtBirthDate"))
                writer.uint32(/* id 36, wireType 0 =*/288).uint32(message.rtBirthDate);
            if (message.txnCountryCode != null && Object.hasOwnProperty.call(message, "txnCountryCode"))
                writer.uint32(/* id 37, wireType 2 =*/298).string(message.txnCountryCode);
            if (message.hasAcceptedChinaSsa != null && Object.hasOwnProperty.call(message, "hasAcceptedChinaSsa"))
                writer.uint32(/* id 38, wireType 0 =*/304).bool(message.hasAcceptedChinaSsa);
            if (message.isBannedSteamChina != null && Object.hasOwnProperty.call(message, "isBannedSteamChina"))
                writer.uint32(/* id 39, wireType 0 =*/312).bool(message.isBannedSteamChina);
            return writer;
        };
    
        /**
         * Encodes the specified CGCSystemMsg_GetAccountDetails_Response message, length delimited. Does not implicitly {@link CGCSystemMsg_GetAccountDetails_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @static
         * @param {ICGCSystemMsg_GetAccountDetails_Response} message CGCSystemMsg_GetAccountDetails_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCSystemMsg_GetAccountDetails_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCSystemMsg_GetAccountDetails_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCSystemMsg_GetAccountDetails_Response} CGCSystemMsg_GetAccountDetails_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCSystemMsg_GetAccountDetails_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCSystemMsg_GetAccountDetails_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.eresultDeprecated = reader.uint32();
                        break;
                    }
                case 2: {
                        message.accountName = reader.string();
                        break;
                    }
                case 3: {
                        message.personaName = reader.string();
                        break;
                    }
                case 4: {
                        message.isProfilePublic = reader.bool();
                        break;
                    }
                case 5: {
                        message.isInventoryPublic = reader.bool();
                        break;
                    }
                case 7: {
                        message.isVacBanned = reader.bool();
                        break;
                    }
                case 8: {
                        message.isCyberCafe = reader.bool();
                        break;
                    }
                case 9: {
                        message.isSchoolAccount = reader.bool();
                        break;
                    }
                case 10: {
                        message.isLimited = reader.bool();
                        break;
                    }
                case 11: {
                        message.isSubscribed = reader.bool();
                        break;
                    }
                case 12: {
                        message["package"] = reader.uint32();
                        break;
                    }
                case 13: {
                        message.isFreeTrialAccount = reader.bool();
                        break;
                    }
                case 14: {
                        message.freeTrialExpiration = reader.uint32();
                        break;
                    }
                case 15: {
                        message.isLowViolence = reader.bool();
                        break;
                    }
                case 16: {
                        message.isAccountLockedDown = reader.bool();
                        break;
                    }
                case 17: {
                        message.isCommunityBanned = reader.bool();
                        break;
                    }
                case 18: {
                        message.isTradeBanned = reader.bool();
                        break;
                    }
                case 19: {
                        message.tradeBanExpiration = reader.uint32();
                        break;
                    }
                case 20: {
                        message.accountid = reader.uint32();
                        break;
                    }
                case 21: {
                        message.suspensionEndTime = reader.uint32();
                        break;
                    }
                case 22: {
                        message.currency = reader.string();
                        break;
                    }
                case 23: {
                        message.steamLevel = reader.uint32();
                        break;
                    }
                case 24: {
                        message.friendCount = reader.uint32();
                        break;
                    }
                case 25: {
                        message.accountCreationTime = reader.uint32();
                        break;
                    }
                case 27: {
                        message.isSteamguardEnabled = reader.bool();
                        break;
                    }
                case 28: {
                        message.isPhoneVerified = reader.bool();
                        break;
                    }
                case 29: {
                        message.isTwoFactorAuthEnabled = reader.bool();
                        break;
                    }
                case 30: {
                        message.twoFactorEnabledTime = reader.uint32();
                        break;
                    }
                case 31: {
                        message.phoneVerificationTime = reader.uint32();
                        break;
                    }
                case 33: {
                        message.phoneId = reader.uint64();
                        break;
                    }
                case 34: {
                        message.isPhoneIdentifying = reader.bool();
                        break;
                    }
                case 35: {
                        message.rtIdentityLinked = reader.uint32();
                        break;
                    }
                case 36: {
                        message.rtBirthDate = reader.uint32();
                        break;
                    }
                case 37: {
                        message.txnCountryCode = reader.string();
                        break;
                    }
                case 38: {
                        message.hasAcceptedChinaSsa = reader.bool();
                        break;
                    }
                case 39: {
                        message.isBannedSteamChina = reader.bool();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCSystemMsg_GetAccountDetails_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCSystemMsg_GetAccountDetails_Response} CGCSystemMsg_GetAccountDetails_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCSystemMsg_GetAccountDetails_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCSystemMsg_GetAccountDetails_Response message.
         * @function verify
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCSystemMsg_GetAccountDetails_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresultDeprecated != null && message.hasOwnProperty("eresultDeprecated"))
                if (!$util.isInteger(message.eresultDeprecated))
                    return "eresultDeprecated: integer expected";
            if (message.accountName != null && message.hasOwnProperty("accountName"))
                if (!$util.isString(message.accountName))
                    return "accountName: string expected";
            if (message.personaName != null && message.hasOwnProperty("personaName"))
                if (!$util.isString(message.personaName))
                    return "personaName: string expected";
            if (message.isProfilePublic != null && message.hasOwnProperty("isProfilePublic"))
                if (typeof message.isProfilePublic !== "boolean")
                    return "isProfilePublic: boolean expected";
            if (message.isInventoryPublic != null && message.hasOwnProperty("isInventoryPublic"))
                if (typeof message.isInventoryPublic !== "boolean")
                    return "isInventoryPublic: boolean expected";
            if (message.isVacBanned != null && message.hasOwnProperty("isVacBanned"))
                if (typeof message.isVacBanned !== "boolean")
                    return "isVacBanned: boolean expected";
            if (message.isCyberCafe != null && message.hasOwnProperty("isCyberCafe"))
                if (typeof message.isCyberCafe !== "boolean")
                    return "isCyberCafe: boolean expected";
            if (message.isSchoolAccount != null && message.hasOwnProperty("isSchoolAccount"))
                if (typeof message.isSchoolAccount !== "boolean")
                    return "isSchoolAccount: boolean expected";
            if (message.isLimited != null && message.hasOwnProperty("isLimited"))
                if (typeof message.isLimited !== "boolean")
                    return "isLimited: boolean expected";
            if (message.isSubscribed != null && message.hasOwnProperty("isSubscribed"))
                if (typeof message.isSubscribed !== "boolean")
                    return "isSubscribed: boolean expected";
            if (message["package"] != null && message.hasOwnProperty("package"))
                if (!$util.isInteger(message["package"]))
                    return "package: integer expected";
            if (message.isFreeTrialAccount != null && message.hasOwnProperty("isFreeTrialAccount"))
                if (typeof message.isFreeTrialAccount !== "boolean")
                    return "isFreeTrialAccount: boolean expected";
            if (message.freeTrialExpiration != null && message.hasOwnProperty("freeTrialExpiration"))
                if (!$util.isInteger(message.freeTrialExpiration))
                    return "freeTrialExpiration: integer expected";
            if (message.isLowViolence != null && message.hasOwnProperty("isLowViolence"))
                if (typeof message.isLowViolence !== "boolean")
                    return "isLowViolence: boolean expected";
            if (message.isAccountLockedDown != null && message.hasOwnProperty("isAccountLockedDown"))
                if (typeof message.isAccountLockedDown !== "boolean")
                    return "isAccountLockedDown: boolean expected";
            if (message.isCommunityBanned != null && message.hasOwnProperty("isCommunityBanned"))
                if (typeof message.isCommunityBanned !== "boolean")
                    return "isCommunityBanned: boolean expected";
            if (message.isTradeBanned != null && message.hasOwnProperty("isTradeBanned"))
                if (typeof message.isTradeBanned !== "boolean")
                    return "isTradeBanned: boolean expected";
            if (message.tradeBanExpiration != null && message.hasOwnProperty("tradeBanExpiration"))
                if (!$util.isInteger(message.tradeBanExpiration))
                    return "tradeBanExpiration: integer expected";
            if (message.accountid != null && message.hasOwnProperty("accountid"))
                if (!$util.isInteger(message.accountid))
                    return "accountid: integer expected";
            if (message.suspensionEndTime != null && message.hasOwnProperty("suspensionEndTime"))
                if (!$util.isInteger(message.suspensionEndTime))
                    return "suspensionEndTime: integer expected";
            if (message.currency != null && message.hasOwnProperty("currency"))
                if (!$util.isString(message.currency))
                    return "currency: string expected";
            if (message.steamLevel != null && message.hasOwnProperty("steamLevel"))
                if (!$util.isInteger(message.steamLevel))
                    return "steamLevel: integer expected";
            if (message.friendCount != null && message.hasOwnProperty("friendCount"))
                if (!$util.isInteger(message.friendCount))
                    return "friendCount: integer expected";
            if (message.accountCreationTime != null && message.hasOwnProperty("accountCreationTime"))
                if (!$util.isInteger(message.accountCreationTime))
                    return "accountCreationTime: integer expected";
            if (message.isSteamguardEnabled != null && message.hasOwnProperty("isSteamguardEnabled"))
                if (typeof message.isSteamguardEnabled !== "boolean")
                    return "isSteamguardEnabled: boolean expected";
            if (message.isPhoneVerified != null && message.hasOwnProperty("isPhoneVerified"))
                if (typeof message.isPhoneVerified !== "boolean")
                    return "isPhoneVerified: boolean expected";
            if (message.isTwoFactorAuthEnabled != null && message.hasOwnProperty("isTwoFactorAuthEnabled"))
                if (typeof message.isTwoFactorAuthEnabled !== "boolean")
                    return "isTwoFactorAuthEnabled: boolean expected";
            if (message.twoFactorEnabledTime != null && message.hasOwnProperty("twoFactorEnabledTime"))
                if (!$util.isInteger(message.twoFactorEnabledTime))
                    return "twoFactorEnabledTime: integer expected";
            if (message.phoneVerificationTime != null && message.hasOwnProperty("phoneVerificationTime"))
                if (!$util.isInteger(message.phoneVerificationTime))
                    return "phoneVerificationTime: integer expected";
            if (message.phoneId != null && message.hasOwnProperty("phoneId"))
                if (!$util.isInteger(message.phoneId) && !(message.phoneId && $util.isInteger(message.phoneId.low) && $util.isInteger(message.phoneId.high)))
                    return "phoneId: integer|Long expected";
            if (message.isPhoneIdentifying != null && message.hasOwnProperty("isPhoneIdentifying"))
                if (typeof message.isPhoneIdentifying !== "boolean")
                    return "isPhoneIdentifying: boolean expected";
            if (message.rtIdentityLinked != null && message.hasOwnProperty("rtIdentityLinked"))
                if (!$util.isInteger(message.rtIdentityLinked))
                    return "rtIdentityLinked: integer expected";
            if (message.rtBirthDate != null && message.hasOwnProperty("rtBirthDate"))
                if (!$util.isInteger(message.rtBirthDate))
                    return "rtBirthDate: integer expected";
            if (message.txnCountryCode != null && message.hasOwnProperty("txnCountryCode"))
                if (!$util.isString(message.txnCountryCode))
                    return "txnCountryCode: string expected";
            if (message.hasAcceptedChinaSsa != null && message.hasOwnProperty("hasAcceptedChinaSsa"))
                if (typeof message.hasAcceptedChinaSsa !== "boolean")
                    return "hasAcceptedChinaSsa: boolean expected";
            if (message.isBannedSteamChina != null && message.hasOwnProperty("isBannedSteamChina"))
                if (typeof message.isBannedSteamChina !== "boolean")
                    return "isBannedSteamChina: boolean expected";
            return null;
        };
    
        /**
         * Creates a CGCSystemMsg_GetAccountDetails_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCSystemMsg_GetAccountDetails_Response} CGCSystemMsg_GetAccountDetails_Response
         */
        CGCSystemMsg_GetAccountDetails_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCSystemMsg_GetAccountDetails_Response)
                return object;
            var message = new $root.CGCSystemMsg_GetAccountDetails_Response();
            if (object.eresultDeprecated != null)
                message.eresultDeprecated = object.eresultDeprecated >>> 0;
            if (object.accountName != null)
                message.accountName = String(object.accountName);
            if (object.personaName != null)
                message.personaName = String(object.personaName);
            if (object.isProfilePublic != null)
                message.isProfilePublic = Boolean(object.isProfilePublic);
            if (object.isInventoryPublic != null)
                message.isInventoryPublic = Boolean(object.isInventoryPublic);
            if (object.isVacBanned != null)
                message.isVacBanned = Boolean(object.isVacBanned);
            if (object.isCyberCafe != null)
                message.isCyberCafe = Boolean(object.isCyberCafe);
            if (object.isSchoolAccount != null)
                message.isSchoolAccount = Boolean(object.isSchoolAccount);
            if (object.isLimited != null)
                message.isLimited = Boolean(object.isLimited);
            if (object.isSubscribed != null)
                message.isSubscribed = Boolean(object.isSubscribed);
            if (object["package"] != null)
                message["package"] = object["package"] >>> 0;
            if (object.isFreeTrialAccount != null)
                message.isFreeTrialAccount = Boolean(object.isFreeTrialAccount);
            if (object.freeTrialExpiration != null)
                message.freeTrialExpiration = object.freeTrialExpiration >>> 0;
            if (object.isLowViolence != null)
                message.isLowViolence = Boolean(object.isLowViolence);
            if (object.isAccountLockedDown != null)
                message.isAccountLockedDown = Boolean(object.isAccountLockedDown);
            if (object.isCommunityBanned != null)
                message.isCommunityBanned = Boolean(object.isCommunityBanned);
            if (object.isTradeBanned != null)
                message.isTradeBanned = Boolean(object.isTradeBanned);
            if (object.tradeBanExpiration != null)
                message.tradeBanExpiration = object.tradeBanExpiration >>> 0;
            if (object.accountid != null)
                message.accountid = object.accountid >>> 0;
            if (object.suspensionEndTime != null)
                message.suspensionEndTime = object.suspensionEndTime >>> 0;
            if (object.currency != null)
                message.currency = String(object.currency);
            if (object.steamLevel != null)
                message.steamLevel = object.steamLevel >>> 0;
            if (object.friendCount != null)
                message.friendCount = object.friendCount >>> 0;
            if (object.accountCreationTime != null)
                message.accountCreationTime = object.accountCreationTime >>> 0;
            if (object.isSteamguardEnabled != null)
                message.isSteamguardEnabled = Boolean(object.isSteamguardEnabled);
            if (object.isPhoneVerified != null)
                message.isPhoneVerified = Boolean(object.isPhoneVerified);
            if (object.isTwoFactorAuthEnabled != null)
                message.isTwoFactorAuthEnabled = Boolean(object.isTwoFactorAuthEnabled);
            if (object.twoFactorEnabledTime != null)
                message.twoFactorEnabledTime = object.twoFactorEnabledTime >>> 0;
            if (object.phoneVerificationTime != null)
                message.phoneVerificationTime = object.phoneVerificationTime >>> 0;
            if (object.phoneId != null)
                if ($util.Long)
                    (message.phoneId = $util.Long.fromValue(object.phoneId)).unsigned = true;
                else if (typeof object.phoneId === "string")
                    message.phoneId = parseInt(object.phoneId, 10);
                else if (typeof object.phoneId === "number")
                    message.phoneId = object.phoneId;
                else if (typeof object.phoneId === "object")
                    message.phoneId = new $util.LongBits(object.phoneId.low >>> 0, object.phoneId.high >>> 0).toNumber(true);
            if (object.isPhoneIdentifying != null)
                message.isPhoneIdentifying = Boolean(object.isPhoneIdentifying);
            if (object.rtIdentityLinked != null)
                message.rtIdentityLinked = object.rtIdentityLinked >>> 0;
            if (object.rtBirthDate != null)
                message.rtBirthDate = object.rtBirthDate >>> 0;
            if (object.txnCountryCode != null)
                message.txnCountryCode = String(object.txnCountryCode);
            if (object.hasAcceptedChinaSsa != null)
                message.hasAcceptedChinaSsa = Boolean(object.hasAcceptedChinaSsa);
            if (object.isBannedSteamChina != null)
                message.isBannedSteamChina = Boolean(object.isBannedSteamChina);
            return message;
        };
    
        /**
         * Creates a plain object from a CGCSystemMsg_GetAccountDetails_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @static
         * @param {CGCSystemMsg_GetAccountDetails_Response} message CGCSystemMsg_GetAccountDetails_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCSystemMsg_GetAccountDetails_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresultDeprecated = 2;
                object.accountName = "";
                object.personaName = "";
                object.isProfilePublic = false;
                object.isInventoryPublic = false;
                object.isVacBanned = false;
                object.isCyberCafe = false;
                object.isSchoolAccount = false;
                object.isLimited = false;
                object.isSubscribed = false;
                object["package"] = 0;
                object.isFreeTrialAccount = false;
                object.freeTrialExpiration = 0;
                object.isLowViolence = false;
                object.isAccountLockedDown = false;
                object.isCommunityBanned = false;
                object.isTradeBanned = false;
                object.tradeBanExpiration = 0;
                object.accountid = 0;
                object.suspensionEndTime = 0;
                object.currency = "";
                object.steamLevel = 0;
                object.friendCount = 0;
                object.accountCreationTime = 0;
                object.isSteamguardEnabled = false;
                object.isPhoneVerified = false;
                object.isTwoFactorAuthEnabled = false;
                object.twoFactorEnabledTime = 0;
                object.phoneVerificationTime = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.phoneId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.phoneId = options.longs === String ? "0" : 0;
                object.isPhoneIdentifying = false;
                object.rtIdentityLinked = 0;
                object.rtBirthDate = 0;
                object.txnCountryCode = "";
                object.hasAcceptedChinaSsa = false;
                object.isBannedSteamChina = false;
            }
            if (message.eresultDeprecated != null && message.hasOwnProperty("eresultDeprecated"))
                object.eresultDeprecated = message.eresultDeprecated;
            if (message.accountName != null && message.hasOwnProperty("accountName"))
                object.accountName = message.accountName;
            if (message.personaName != null && message.hasOwnProperty("personaName"))
                object.personaName = message.personaName;
            if (message.isProfilePublic != null && message.hasOwnProperty("isProfilePublic"))
                object.isProfilePublic = message.isProfilePublic;
            if (message.isInventoryPublic != null && message.hasOwnProperty("isInventoryPublic"))
                object.isInventoryPublic = message.isInventoryPublic;
            if (message.isVacBanned != null && message.hasOwnProperty("isVacBanned"))
                object.isVacBanned = message.isVacBanned;
            if (message.isCyberCafe != null && message.hasOwnProperty("isCyberCafe"))
                object.isCyberCafe = message.isCyberCafe;
            if (message.isSchoolAccount != null && message.hasOwnProperty("isSchoolAccount"))
                object.isSchoolAccount = message.isSchoolAccount;
            if (message.isLimited != null && message.hasOwnProperty("isLimited"))
                object.isLimited = message.isLimited;
            if (message.isSubscribed != null && message.hasOwnProperty("isSubscribed"))
                object.isSubscribed = message.isSubscribed;
            if (message["package"] != null && message.hasOwnProperty("package"))
                object["package"] = message["package"];
            if (message.isFreeTrialAccount != null && message.hasOwnProperty("isFreeTrialAccount"))
                object.isFreeTrialAccount = message.isFreeTrialAccount;
            if (message.freeTrialExpiration != null && message.hasOwnProperty("freeTrialExpiration"))
                object.freeTrialExpiration = message.freeTrialExpiration;
            if (message.isLowViolence != null && message.hasOwnProperty("isLowViolence"))
                object.isLowViolence = message.isLowViolence;
            if (message.isAccountLockedDown != null && message.hasOwnProperty("isAccountLockedDown"))
                object.isAccountLockedDown = message.isAccountLockedDown;
            if (message.isCommunityBanned != null && message.hasOwnProperty("isCommunityBanned"))
                object.isCommunityBanned = message.isCommunityBanned;
            if (message.isTradeBanned != null && message.hasOwnProperty("isTradeBanned"))
                object.isTradeBanned = message.isTradeBanned;
            if (message.tradeBanExpiration != null && message.hasOwnProperty("tradeBanExpiration"))
                object.tradeBanExpiration = message.tradeBanExpiration;
            if (message.accountid != null && message.hasOwnProperty("accountid"))
                object.accountid = message.accountid;
            if (message.suspensionEndTime != null && message.hasOwnProperty("suspensionEndTime"))
                object.suspensionEndTime = message.suspensionEndTime;
            if (message.currency != null && message.hasOwnProperty("currency"))
                object.currency = message.currency;
            if (message.steamLevel != null && message.hasOwnProperty("steamLevel"))
                object.steamLevel = message.steamLevel;
            if (message.friendCount != null && message.hasOwnProperty("friendCount"))
                object.friendCount = message.friendCount;
            if (message.accountCreationTime != null && message.hasOwnProperty("accountCreationTime"))
                object.accountCreationTime = message.accountCreationTime;
            if (message.isSteamguardEnabled != null && message.hasOwnProperty("isSteamguardEnabled"))
                object.isSteamguardEnabled = message.isSteamguardEnabled;
            if (message.isPhoneVerified != null && message.hasOwnProperty("isPhoneVerified"))
                object.isPhoneVerified = message.isPhoneVerified;
            if (message.isTwoFactorAuthEnabled != null && message.hasOwnProperty("isTwoFactorAuthEnabled"))
                object.isTwoFactorAuthEnabled = message.isTwoFactorAuthEnabled;
            if (message.twoFactorEnabledTime != null && message.hasOwnProperty("twoFactorEnabledTime"))
                object.twoFactorEnabledTime = message.twoFactorEnabledTime;
            if (message.phoneVerificationTime != null && message.hasOwnProperty("phoneVerificationTime"))
                object.phoneVerificationTime = message.phoneVerificationTime;
            if (message.phoneId != null && message.hasOwnProperty("phoneId"))
                if (typeof message.phoneId === "number")
                    object.phoneId = options.longs === String ? String(message.phoneId) : message.phoneId;
                else
                    object.phoneId = options.longs === String ? $util.Long.prototype.toString.call(message.phoneId) : options.longs === Number ? new $util.LongBits(message.phoneId.low >>> 0, message.phoneId.high >>> 0).toNumber(true) : message.phoneId;
            if (message.isPhoneIdentifying != null && message.hasOwnProperty("isPhoneIdentifying"))
                object.isPhoneIdentifying = message.isPhoneIdentifying;
            if (message.rtIdentityLinked != null && message.hasOwnProperty("rtIdentityLinked"))
                object.rtIdentityLinked = message.rtIdentityLinked;
            if (message.rtBirthDate != null && message.hasOwnProperty("rtBirthDate"))
                object.rtBirthDate = message.rtBirthDate;
            if (message.txnCountryCode != null && message.hasOwnProperty("txnCountryCode"))
                object.txnCountryCode = message.txnCountryCode;
            if (message.hasAcceptedChinaSsa != null && message.hasOwnProperty("hasAcceptedChinaSsa"))
                object.hasAcceptedChinaSsa = message.hasAcceptedChinaSsa;
            if (message.isBannedSteamChina != null && message.hasOwnProperty("isBannedSteamChina"))
                object.isBannedSteamChina = message.isBannedSteamChina;
            return object;
        };
    
        /**
         * Converts this CGCSystemMsg_GetAccountDetails_Response to JSON.
         * @function toJSON
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCSystemMsg_GetAccountDetails_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCSystemMsg_GetAccountDetails_Response
         * @function getTypeUrl
         * @memberof CGCSystemMsg_GetAccountDetails_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCSystemMsg_GetAccountDetails_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCSystemMsg_GetAccountDetails_Response";
        };
    
        return CGCSystemMsg_GetAccountDetails_Response;
    })();
    
    $root.CMsgGCGetPersonaNames = (function() {
    
        /**
         * Properties of a CMsgGCGetPersonaNames.
         * @exports ICMsgGCGetPersonaNames
         * @interface ICMsgGCGetPersonaNames
         * @property {Array.<number|Long>|null} [steamids] CMsgGCGetPersonaNames steamids
         */
    
        /**
         * Constructs a new CMsgGCGetPersonaNames.
         * @exports CMsgGCGetPersonaNames
         * @classdesc Represents a CMsgGCGetPersonaNames.
         * @implements ICMsgGCGetPersonaNames
         * @constructor
         * @param {ICMsgGCGetPersonaNames=} [properties] Properties to set
         */
        function CMsgGCGetPersonaNames(properties) {
            this.steamids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCGetPersonaNames steamids.
         * @member {Array.<number|Long>} steamids
         * @memberof CMsgGCGetPersonaNames
         * @instance
         */
        CMsgGCGetPersonaNames.prototype.steamids = $util.emptyArray;
    
        /**
         * Creates a new CMsgGCGetPersonaNames instance using the specified properties.
         * @function create
         * @memberof CMsgGCGetPersonaNames
         * @static
         * @param {ICMsgGCGetPersonaNames=} [properties] Properties to set
         * @returns {CMsgGCGetPersonaNames} CMsgGCGetPersonaNames instance
         */
        CMsgGCGetPersonaNames.create = function create(properties) {
            return new CMsgGCGetPersonaNames(properties);
        };
    
        /**
         * Encodes the specified CMsgGCGetPersonaNames message. Does not implicitly {@link CMsgGCGetPersonaNames.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCGetPersonaNames
         * @static
         * @param {ICMsgGCGetPersonaNames} message CMsgGCGetPersonaNames message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetPersonaNames.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamids != null && message.steamids.length)
                for (var i = 0; i < message.steamids.length; ++i)
                    writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamids[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCGetPersonaNames message, length delimited. Does not implicitly {@link CMsgGCGetPersonaNames.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCGetPersonaNames
         * @static
         * @param {ICMsgGCGetPersonaNames} message CMsgGCGetPersonaNames message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetPersonaNames.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCGetPersonaNames message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCGetPersonaNames
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCGetPersonaNames} CMsgGCGetPersonaNames
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetPersonaNames.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCGetPersonaNames();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.steamids && message.steamids.length))
                            message.steamids = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.steamids.push(reader.fixed64());
                        } else
                            message.steamids.push(reader.fixed64());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCGetPersonaNames message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCGetPersonaNames
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCGetPersonaNames} CMsgGCGetPersonaNames
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetPersonaNames.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCGetPersonaNames message.
         * @function verify
         * @memberof CMsgGCGetPersonaNames
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCGetPersonaNames.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamids != null && message.hasOwnProperty("steamids")) {
                if (!Array.isArray(message.steamids))
                    return "steamids: array expected";
                for (var i = 0; i < message.steamids.length; ++i)
                    if (!$util.isInteger(message.steamids[i]) && !(message.steamids[i] && $util.isInteger(message.steamids[i].low) && $util.isInteger(message.steamids[i].high)))
                        return "steamids: integer|Long[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCGetPersonaNames message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCGetPersonaNames
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCGetPersonaNames} CMsgGCGetPersonaNames
         */
        CMsgGCGetPersonaNames.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCGetPersonaNames)
                return object;
            var message = new $root.CMsgGCGetPersonaNames();
            if (object.steamids) {
                if (!Array.isArray(object.steamids))
                    throw TypeError(".CMsgGCGetPersonaNames.steamids: array expected");
                message.steamids = [];
                for (var i = 0; i < object.steamids.length; ++i)
                    if ($util.Long)
                        (message.steamids[i] = $util.Long.fromValue(object.steamids[i])).unsigned = false;
                    else if (typeof object.steamids[i] === "string")
                        message.steamids[i] = parseInt(object.steamids[i], 10);
                    else if (typeof object.steamids[i] === "number")
                        message.steamids[i] = object.steamids[i];
                    else if (typeof object.steamids[i] === "object")
                        message.steamids[i] = new $util.LongBits(object.steamids[i].low >>> 0, object.steamids[i].high >>> 0).toNumber();
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCGetPersonaNames message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCGetPersonaNames
         * @static
         * @param {CMsgGCGetPersonaNames} message CMsgGCGetPersonaNames
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCGetPersonaNames.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.steamids = [];
            if (message.steamids && message.steamids.length) {
                object.steamids = [];
                for (var j = 0; j < message.steamids.length; ++j)
                    if (typeof message.steamids[j] === "number")
                        object.steamids[j] = options.longs === String ? String(message.steamids[j]) : message.steamids[j];
                    else
                        object.steamids[j] = options.longs === String ? $util.Long.prototype.toString.call(message.steamids[j]) : options.longs === Number ? new $util.LongBits(message.steamids[j].low >>> 0, message.steamids[j].high >>> 0).toNumber() : message.steamids[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgGCGetPersonaNames to JSON.
         * @function toJSON
         * @memberof CMsgGCGetPersonaNames
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCGetPersonaNames.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCGetPersonaNames
         * @function getTypeUrl
         * @memberof CMsgGCGetPersonaNames
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCGetPersonaNames.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCGetPersonaNames";
        };
    
        return CMsgGCGetPersonaNames;
    })();
    
    $root.CMsgGCGetPersonaNames_Response = (function() {
    
        /**
         * Properties of a CMsgGCGetPersonaNames_Response.
         * @exports ICMsgGCGetPersonaNames_Response
         * @interface ICMsgGCGetPersonaNames_Response
         * @property {Array.<CMsgGCGetPersonaNames_Response.IPersonaName>|null} [succeededLookups] CMsgGCGetPersonaNames_Response succeededLookups
         * @property {Array.<number|Long>|null} [failedLookupSteamids] CMsgGCGetPersonaNames_Response failedLookupSteamids
         */
    
        /**
         * Constructs a new CMsgGCGetPersonaNames_Response.
         * @exports CMsgGCGetPersonaNames_Response
         * @classdesc Represents a CMsgGCGetPersonaNames_Response.
         * @implements ICMsgGCGetPersonaNames_Response
         * @constructor
         * @param {ICMsgGCGetPersonaNames_Response=} [properties] Properties to set
         */
        function CMsgGCGetPersonaNames_Response(properties) {
            this.succeededLookups = [];
            this.failedLookupSteamids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCGetPersonaNames_Response succeededLookups.
         * @member {Array.<CMsgGCGetPersonaNames_Response.IPersonaName>} succeededLookups
         * @memberof CMsgGCGetPersonaNames_Response
         * @instance
         */
        CMsgGCGetPersonaNames_Response.prototype.succeededLookups = $util.emptyArray;
    
        /**
         * CMsgGCGetPersonaNames_Response failedLookupSteamids.
         * @member {Array.<number|Long>} failedLookupSteamids
         * @memberof CMsgGCGetPersonaNames_Response
         * @instance
         */
        CMsgGCGetPersonaNames_Response.prototype.failedLookupSteamids = $util.emptyArray;
    
        /**
         * Creates a new CMsgGCGetPersonaNames_Response instance using the specified properties.
         * @function create
         * @memberof CMsgGCGetPersonaNames_Response
         * @static
         * @param {ICMsgGCGetPersonaNames_Response=} [properties] Properties to set
         * @returns {CMsgGCGetPersonaNames_Response} CMsgGCGetPersonaNames_Response instance
         */
        CMsgGCGetPersonaNames_Response.create = function create(properties) {
            return new CMsgGCGetPersonaNames_Response(properties);
        };
    
        /**
         * Encodes the specified CMsgGCGetPersonaNames_Response message. Does not implicitly {@link CMsgGCGetPersonaNames_Response.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCGetPersonaNames_Response
         * @static
         * @param {ICMsgGCGetPersonaNames_Response} message CMsgGCGetPersonaNames_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetPersonaNames_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.succeededLookups != null && message.succeededLookups.length)
                for (var i = 0; i < message.succeededLookups.length; ++i)
                    $root.CMsgGCGetPersonaNames_Response.PersonaName.encode(message.succeededLookups[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.failedLookupSteamids != null && message.failedLookupSteamids.length)
                for (var i = 0; i < message.failedLookupSteamids.length; ++i)
                    writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.failedLookupSteamids[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCGetPersonaNames_Response message, length delimited. Does not implicitly {@link CMsgGCGetPersonaNames_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCGetPersonaNames_Response
         * @static
         * @param {ICMsgGCGetPersonaNames_Response} message CMsgGCGetPersonaNames_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetPersonaNames_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCGetPersonaNames_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCGetPersonaNames_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCGetPersonaNames_Response} CMsgGCGetPersonaNames_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetPersonaNames_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCGetPersonaNames_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.succeededLookups && message.succeededLookups.length))
                            message.succeededLookups = [];
                        message.succeededLookups.push($root.CMsgGCGetPersonaNames_Response.PersonaName.decode(reader, reader.uint32()));
                        break;
                    }
                case 2: {
                        if (!(message.failedLookupSteamids && message.failedLookupSteamids.length))
                            message.failedLookupSteamids = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.failedLookupSteamids.push(reader.fixed64());
                        } else
                            message.failedLookupSteamids.push(reader.fixed64());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCGetPersonaNames_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCGetPersonaNames_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCGetPersonaNames_Response} CMsgGCGetPersonaNames_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetPersonaNames_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCGetPersonaNames_Response message.
         * @function verify
         * @memberof CMsgGCGetPersonaNames_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCGetPersonaNames_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.succeededLookups != null && message.hasOwnProperty("succeededLookups")) {
                if (!Array.isArray(message.succeededLookups))
                    return "succeededLookups: array expected";
                for (var i = 0; i < message.succeededLookups.length; ++i) {
                    var error = $root.CMsgGCGetPersonaNames_Response.PersonaName.verify(message.succeededLookups[i]);
                    if (error)
                        return "succeededLookups." + error;
                }
            }
            if (message.failedLookupSteamids != null && message.hasOwnProperty("failedLookupSteamids")) {
                if (!Array.isArray(message.failedLookupSteamids))
                    return "failedLookupSteamids: array expected";
                for (var i = 0; i < message.failedLookupSteamids.length; ++i)
                    if (!$util.isInteger(message.failedLookupSteamids[i]) && !(message.failedLookupSteamids[i] && $util.isInteger(message.failedLookupSteamids[i].low) && $util.isInteger(message.failedLookupSteamids[i].high)))
                        return "failedLookupSteamids: integer|Long[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCGetPersonaNames_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCGetPersonaNames_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCGetPersonaNames_Response} CMsgGCGetPersonaNames_Response
         */
        CMsgGCGetPersonaNames_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCGetPersonaNames_Response)
                return object;
            var message = new $root.CMsgGCGetPersonaNames_Response();
            if (object.succeededLookups) {
                if (!Array.isArray(object.succeededLookups))
                    throw TypeError(".CMsgGCGetPersonaNames_Response.succeededLookups: array expected");
                message.succeededLookups = [];
                for (var i = 0; i < object.succeededLookups.length; ++i) {
                    if (typeof object.succeededLookups[i] !== "object")
                        throw TypeError(".CMsgGCGetPersonaNames_Response.succeededLookups: object expected");
                    message.succeededLookups[i] = $root.CMsgGCGetPersonaNames_Response.PersonaName.fromObject(object.succeededLookups[i]);
                }
            }
            if (object.failedLookupSteamids) {
                if (!Array.isArray(object.failedLookupSteamids))
                    throw TypeError(".CMsgGCGetPersonaNames_Response.failedLookupSteamids: array expected");
                message.failedLookupSteamids = [];
                for (var i = 0; i < object.failedLookupSteamids.length; ++i)
                    if ($util.Long)
                        (message.failedLookupSteamids[i] = $util.Long.fromValue(object.failedLookupSteamids[i])).unsigned = false;
                    else if (typeof object.failedLookupSteamids[i] === "string")
                        message.failedLookupSteamids[i] = parseInt(object.failedLookupSteamids[i], 10);
                    else if (typeof object.failedLookupSteamids[i] === "number")
                        message.failedLookupSteamids[i] = object.failedLookupSteamids[i];
                    else if (typeof object.failedLookupSteamids[i] === "object")
                        message.failedLookupSteamids[i] = new $util.LongBits(object.failedLookupSteamids[i].low >>> 0, object.failedLookupSteamids[i].high >>> 0).toNumber();
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCGetPersonaNames_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCGetPersonaNames_Response
         * @static
         * @param {CMsgGCGetPersonaNames_Response} message CMsgGCGetPersonaNames_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCGetPersonaNames_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.succeededLookups = [];
                object.failedLookupSteamids = [];
            }
            if (message.succeededLookups && message.succeededLookups.length) {
                object.succeededLookups = [];
                for (var j = 0; j < message.succeededLookups.length; ++j)
                    object.succeededLookups[j] = $root.CMsgGCGetPersonaNames_Response.PersonaName.toObject(message.succeededLookups[j], options);
            }
            if (message.failedLookupSteamids && message.failedLookupSteamids.length) {
                object.failedLookupSteamids = [];
                for (var j = 0; j < message.failedLookupSteamids.length; ++j)
                    if (typeof message.failedLookupSteamids[j] === "number")
                        object.failedLookupSteamids[j] = options.longs === String ? String(message.failedLookupSteamids[j]) : message.failedLookupSteamids[j];
                    else
                        object.failedLookupSteamids[j] = options.longs === String ? $util.Long.prototype.toString.call(message.failedLookupSteamids[j]) : options.longs === Number ? new $util.LongBits(message.failedLookupSteamids[j].low >>> 0, message.failedLookupSteamids[j].high >>> 0).toNumber() : message.failedLookupSteamids[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgGCGetPersonaNames_Response to JSON.
         * @function toJSON
         * @memberof CMsgGCGetPersonaNames_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCGetPersonaNames_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCGetPersonaNames_Response
         * @function getTypeUrl
         * @memberof CMsgGCGetPersonaNames_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCGetPersonaNames_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCGetPersonaNames_Response";
        };
    
        CMsgGCGetPersonaNames_Response.PersonaName = (function() {
    
            /**
             * Properties of a PersonaName.
             * @memberof CMsgGCGetPersonaNames_Response
             * @interface IPersonaName
             * @property {number|Long|null} [steamid] PersonaName steamid
             * @property {string|null} [personaName] PersonaName personaName
             */
    
            /**
             * Constructs a new PersonaName.
             * @memberof CMsgGCGetPersonaNames_Response
             * @classdesc Represents a PersonaName.
             * @implements IPersonaName
             * @constructor
             * @param {CMsgGCGetPersonaNames_Response.IPersonaName=} [properties] Properties to set
             */
            function PersonaName(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * PersonaName steamid.
             * @member {number|Long} steamid
             * @memberof CMsgGCGetPersonaNames_Response.PersonaName
             * @instance
             */
            PersonaName.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
            /**
             * PersonaName personaName.
             * @member {string} personaName
             * @memberof CMsgGCGetPersonaNames_Response.PersonaName
             * @instance
             */
            PersonaName.prototype.personaName = "";
    
            /**
             * Creates a new PersonaName instance using the specified properties.
             * @function create
             * @memberof CMsgGCGetPersonaNames_Response.PersonaName
             * @static
             * @param {CMsgGCGetPersonaNames_Response.IPersonaName=} [properties] Properties to set
             * @returns {CMsgGCGetPersonaNames_Response.PersonaName} PersonaName instance
             */
            PersonaName.create = function create(properties) {
                return new PersonaName(properties);
            };
    
            /**
             * Encodes the specified PersonaName message. Does not implicitly {@link CMsgGCGetPersonaNames_Response.PersonaName.verify|verify} messages.
             * @function encode
             * @memberof CMsgGCGetPersonaNames_Response.PersonaName
             * @static
             * @param {CMsgGCGetPersonaNames_Response.IPersonaName} message PersonaName message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PersonaName.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                    writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
                if (message.personaName != null && Object.hasOwnProperty.call(message, "personaName"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.personaName);
                return writer;
            };
    
            /**
             * Encodes the specified PersonaName message, length delimited. Does not implicitly {@link CMsgGCGetPersonaNames_Response.PersonaName.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgGCGetPersonaNames_Response.PersonaName
             * @static
             * @param {CMsgGCGetPersonaNames_Response.IPersonaName} message PersonaName message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PersonaName.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a PersonaName message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgGCGetPersonaNames_Response.PersonaName
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgGCGetPersonaNames_Response.PersonaName} PersonaName
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PersonaName.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCGetPersonaNames_Response.PersonaName();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.steamid = reader.fixed64();
                            break;
                        }
                    case 2: {
                            message.personaName = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a PersonaName message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgGCGetPersonaNames_Response.PersonaName
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgGCGetPersonaNames_Response.PersonaName} PersonaName
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PersonaName.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a PersonaName message.
             * @function verify
             * @memberof CMsgGCGetPersonaNames_Response.PersonaName
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            PersonaName.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.steamid != null && message.hasOwnProperty("steamid"))
                    if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                        return "steamid: integer|Long expected";
                if (message.personaName != null && message.hasOwnProperty("personaName"))
                    if (!$util.isString(message.personaName))
                        return "personaName: string expected";
                return null;
            };
    
            /**
             * Creates a PersonaName message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgGCGetPersonaNames_Response.PersonaName
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgGCGetPersonaNames_Response.PersonaName} PersonaName
             */
            PersonaName.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgGCGetPersonaNames_Response.PersonaName)
                    return object;
                var message = new $root.CMsgGCGetPersonaNames_Response.PersonaName();
                if (object.steamid != null)
                    if ($util.Long)
                        (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                    else if (typeof object.steamid === "string")
                        message.steamid = parseInt(object.steamid, 10);
                    else if (typeof object.steamid === "number")
                        message.steamid = object.steamid;
                    else if (typeof object.steamid === "object")
                        message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
                if (object.personaName != null)
                    message.personaName = String(object.personaName);
                return message;
            };
    
            /**
             * Creates a plain object from a PersonaName message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgGCGetPersonaNames_Response.PersonaName
             * @static
             * @param {CMsgGCGetPersonaNames_Response.PersonaName} message PersonaName
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            PersonaName.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.steamid = options.longs === String ? "0" : 0;
                    object.personaName = "";
                }
                if (message.steamid != null && message.hasOwnProperty("steamid"))
                    if (typeof message.steamid === "number")
                        object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                    else
                        object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
                if (message.personaName != null && message.hasOwnProperty("personaName"))
                    object.personaName = message.personaName;
                return object;
            };
    
            /**
             * Converts this PersonaName to JSON.
             * @function toJSON
             * @memberof CMsgGCGetPersonaNames_Response.PersonaName
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            PersonaName.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for PersonaName
             * @function getTypeUrl
             * @memberof CMsgGCGetPersonaNames_Response.PersonaName
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            PersonaName.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgGCGetPersonaNames_Response.PersonaName";
            };
    
            return PersonaName;
        })();
    
        return CMsgGCGetPersonaNames_Response;
    })();
    
    $root.CMsgGCCheckFriendship = (function() {
    
        /**
         * Properties of a CMsgGCCheckFriendship.
         * @exports ICMsgGCCheckFriendship
         * @interface ICMsgGCCheckFriendship
         * @property {number|Long|null} [steamidLeft] CMsgGCCheckFriendship steamidLeft
         * @property {number|Long|null} [steamidRight] CMsgGCCheckFriendship steamidRight
         */
    
        /**
         * Constructs a new CMsgGCCheckFriendship.
         * @exports CMsgGCCheckFriendship
         * @classdesc Represents a CMsgGCCheckFriendship.
         * @implements ICMsgGCCheckFriendship
         * @constructor
         * @param {ICMsgGCCheckFriendship=} [properties] Properties to set
         */
        function CMsgGCCheckFriendship(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCCheckFriendship steamidLeft.
         * @member {number|Long} steamidLeft
         * @memberof CMsgGCCheckFriendship
         * @instance
         */
        CMsgGCCheckFriendship.prototype.steamidLeft = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGCCheckFriendship steamidRight.
         * @member {number|Long} steamidRight
         * @memberof CMsgGCCheckFriendship
         * @instance
         */
        CMsgGCCheckFriendship.prototype.steamidRight = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgGCCheckFriendship instance using the specified properties.
         * @function create
         * @memberof CMsgGCCheckFriendship
         * @static
         * @param {ICMsgGCCheckFriendship=} [properties] Properties to set
         * @returns {CMsgGCCheckFriendship} CMsgGCCheckFriendship instance
         */
        CMsgGCCheckFriendship.create = function create(properties) {
            return new CMsgGCCheckFriendship(properties);
        };
    
        /**
         * Encodes the specified CMsgGCCheckFriendship message. Does not implicitly {@link CMsgGCCheckFriendship.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCCheckFriendship
         * @static
         * @param {ICMsgGCCheckFriendship} message CMsgGCCheckFriendship message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCCheckFriendship.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamidLeft != null && Object.hasOwnProperty.call(message, "steamidLeft"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamidLeft);
            if (message.steamidRight != null && Object.hasOwnProperty.call(message, "steamidRight"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steamidRight);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCCheckFriendship message, length delimited. Does not implicitly {@link CMsgGCCheckFriendship.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCCheckFriendship
         * @static
         * @param {ICMsgGCCheckFriendship} message CMsgGCCheckFriendship message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCCheckFriendship.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCCheckFriendship message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCCheckFriendship
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCCheckFriendship} CMsgGCCheckFriendship
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCCheckFriendship.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCCheckFriendship();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamidLeft = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.steamidRight = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCCheckFriendship message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCCheckFriendship
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCCheckFriendship} CMsgGCCheckFriendship
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCCheckFriendship.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCCheckFriendship message.
         * @function verify
         * @memberof CMsgGCCheckFriendship
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCCheckFriendship.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamidLeft != null && message.hasOwnProperty("steamidLeft"))
                if (!$util.isInteger(message.steamidLeft) && !(message.steamidLeft && $util.isInteger(message.steamidLeft.low) && $util.isInteger(message.steamidLeft.high)))
                    return "steamidLeft: integer|Long expected";
            if (message.steamidRight != null && message.hasOwnProperty("steamidRight"))
                if (!$util.isInteger(message.steamidRight) && !(message.steamidRight && $util.isInteger(message.steamidRight.low) && $util.isInteger(message.steamidRight.high)))
                    return "steamidRight: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCCheckFriendship message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCCheckFriendship
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCCheckFriendship} CMsgGCCheckFriendship
         */
        CMsgGCCheckFriendship.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCCheckFriendship)
                return object;
            var message = new $root.CMsgGCCheckFriendship();
            if (object.steamidLeft != null)
                if ($util.Long)
                    (message.steamidLeft = $util.Long.fromValue(object.steamidLeft)).unsigned = false;
                else if (typeof object.steamidLeft === "string")
                    message.steamidLeft = parseInt(object.steamidLeft, 10);
                else if (typeof object.steamidLeft === "number")
                    message.steamidLeft = object.steamidLeft;
                else if (typeof object.steamidLeft === "object")
                    message.steamidLeft = new $util.LongBits(object.steamidLeft.low >>> 0, object.steamidLeft.high >>> 0).toNumber();
            if (object.steamidRight != null)
                if ($util.Long)
                    (message.steamidRight = $util.Long.fromValue(object.steamidRight)).unsigned = false;
                else if (typeof object.steamidRight === "string")
                    message.steamidRight = parseInt(object.steamidRight, 10);
                else if (typeof object.steamidRight === "number")
                    message.steamidRight = object.steamidRight;
                else if (typeof object.steamidRight === "object")
                    message.steamidRight = new $util.LongBits(object.steamidRight.low >>> 0, object.steamidRight.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCCheckFriendship message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCCheckFriendship
         * @static
         * @param {CMsgGCCheckFriendship} message CMsgGCCheckFriendship
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCCheckFriendship.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamidLeft = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamidLeft = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamidRight = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamidRight = options.longs === String ? "0" : 0;
            }
            if (message.steamidLeft != null && message.hasOwnProperty("steamidLeft"))
                if (typeof message.steamidLeft === "number")
                    object.steamidLeft = options.longs === String ? String(message.steamidLeft) : message.steamidLeft;
                else
                    object.steamidLeft = options.longs === String ? $util.Long.prototype.toString.call(message.steamidLeft) : options.longs === Number ? new $util.LongBits(message.steamidLeft.low >>> 0, message.steamidLeft.high >>> 0).toNumber() : message.steamidLeft;
            if (message.steamidRight != null && message.hasOwnProperty("steamidRight"))
                if (typeof message.steamidRight === "number")
                    object.steamidRight = options.longs === String ? String(message.steamidRight) : message.steamidRight;
                else
                    object.steamidRight = options.longs === String ? $util.Long.prototype.toString.call(message.steamidRight) : options.longs === Number ? new $util.LongBits(message.steamidRight.low >>> 0, message.steamidRight.high >>> 0).toNumber() : message.steamidRight;
            return object;
        };
    
        /**
         * Converts this CMsgGCCheckFriendship to JSON.
         * @function toJSON
         * @memberof CMsgGCCheckFriendship
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCCheckFriendship.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCCheckFriendship
         * @function getTypeUrl
         * @memberof CMsgGCCheckFriendship
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCCheckFriendship.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCCheckFriendship";
        };
    
        return CMsgGCCheckFriendship;
    })();
    
    $root.CMsgGCCheckFriendship_Response = (function() {
    
        /**
         * Properties of a CMsgGCCheckFriendship_Response.
         * @exports ICMsgGCCheckFriendship_Response
         * @interface ICMsgGCCheckFriendship_Response
         * @property {boolean|null} [success] CMsgGCCheckFriendship_Response success
         * @property {boolean|null} [foundFriendship] CMsgGCCheckFriendship_Response foundFriendship
         */
    
        /**
         * Constructs a new CMsgGCCheckFriendship_Response.
         * @exports CMsgGCCheckFriendship_Response
         * @classdesc Represents a CMsgGCCheckFriendship_Response.
         * @implements ICMsgGCCheckFriendship_Response
         * @constructor
         * @param {ICMsgGCCheckFriendship_Response=} [properties] Properties to set
         */
        function CMsgGCCheckFriendship_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCCheckFriendship_Response success.
         * @member {boolean} success
         * @memberof CMsgGCCheckFriendship_Response
         * @instance
         */
        CMsgGCCheckFriendship_Response.prototype.success = false;
    
        /**
         * CMsgGCCheckFriendship_Response foundFriendship.
         * @member {boolean} foundFriendship
         * @memberof CMsgGCCheckFriendship_Response
         * @instance
         */
        CMsgGCCheckFriendship_Response.prototype.foundFriendship = false;
    
        /**
         * Creates a new CMsgGCCheckFriendship_Response instance using the specified properties.
         * @function create
         * @memberof CMsgGCCheckFriendship_Response
         * @static
         * @param {ICMsgGCCheckFriendship_Response=} [properties] Properties to set
         * @returns {CMsgGCCheckFriendship_Response} CMsgGCCheckFriendship_Response instance
         */
        CMsgGCCheckFriendship_Response.create = function create(properties) {
            return new CMsgGCCheckFriendship_Response(properties);
        };
    
        /**
         * Encodes the specified CMsgGCCheckFriendship_Response message. Does not implicitly {@link CMsgGCCheckFriendship_Response.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCCheckFriendship_Response
         * @static
         * @param {ICMsgGCCheckFriendship_Response} message CMsgGCCheckFriendship_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCCheckFriendship_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.success != null && Object.hasOwnProperty.call(message, "success"))
                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.success);
            if (message.foundFriendship != null && Object.hasOwnProperty.call(message, "foundFriendship"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.foundFriendship);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCCheckFriendship_Response message, length delimited. Does not implicitly {@link CMsgGCCheckFriendship_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCCheckFriendship_Response
         * @static
         * @param {ICMsgGCCheckFriendship_Response} message CMsgGCCheckFriendship_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCCheckFriendship_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCCheckFriendship_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCCheckFriendship_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCCheckFriendship_Response} CMsgGCCheckFriendship_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCCheckFriendship_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCCheckFriendship_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.success = reader.bool();
                        break;
                    }
                case 2: {
                        message.foundFriendship = reader.bool();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCCheckFriendship_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCCheckFriendship_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCCheckFriendship_Response} CMsgGCCheckFriendship_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCCheckFriendship_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCCheckFriendship_Response message.
         * @function verify
         * @memberof CMsgGCCheckFriendship_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCCheckFriendship_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.success != null && message.hasOwnProperty("success"))
                if (typeof message.success !== "boolean")
                    return "success: boolean expected";
            if (message.foundFriendship != null && message.hasOwnProperty("foundFriendship"))
                if (typeof message.foundFriendship !== "boolean")
                    return "foundFriendship: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCCheckFriendship_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCCheckFriendship_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCCheckFriendship_Response} CMsgGCCheckFriendship_Response
         */
        CMsgGCCheckFriendship_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCCheckFriendship_Response)
                return object;
            var message = new $root.CMsgGCCheckFriendship_Response();
            if (object.success != null)
                message.success = Boolean(object.success);
            if (object.foundFriendship != null)
                message.foundFriendship = Boolean(object.foundFriendship);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCCheckFriendship_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCCheckFriendship_Response
         * @static
         * @param {CMsgGCCheckFriendship_Response} message CMsgGCCheckFriendship_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCCheckFriendship_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.success = false;
                object.foundFriendship = false;
            }
            if (message.success != null && message.hasOwnProperty("success"))
                object.success = message.success;
            if (message.foundFriendship != null && message.hasOwnProperty("foundFriendship"))
                object.foundFriendship = message.foundFriendship;
            return object;
        };
    
        /**
         * Converts this CMsgGCCheckFriendship_Response to JSON.
         * @function toJSON
         * @memberof CMsgGCCheckFriendship_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCCheckFriendship_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCCheckFriendship_Response
         * @function getTypeUrl
         * @memberof CMsgGCCheckFriendship_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCCheckFriendship_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCCheckFriendship_Response";
        };
    
        return CMsgGCCheckFriendship_Response;
    })();
    
    $root.CMsgGCMsgMasterSetDirectory = (function() {
    
        /**
         * Properties of a CMsgGCMsgMasterSetDirectory.
         * @exports ICMsgGCMsgMasterSetDirectory
         * @interface ICMsgGCMsgMasterSetDirectory
         * @property {number|null} [masterDirIndex] CMsgGCMsgMasterSetDirectory masterDirIndex
         * @property {Array.<CMsgGCMsgMasterSetDirectory.ISubGC>|null} [dir] CMsgGCMsgMasterSetDirectory dir
         */
    
        /**
         * Constructs a new CMsgGCMsgMasterSetDirectory.
         * @exports CMsgGCMsgMasterSetDirectory
         * @classdesc Represents a CMsgGCMsgMasterSetDirectory.
         * @implements ICMsgGCMsgMasterSetDirectory
         * @constructor
         * @param {ICMsgGCMsgMasterSetDirectory=} [properties] Properties to set
         */
        function CMsgGCMsgMasterSetDirectory(properties) {
            this.dir = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCMsgMasterSetDirectory masterDirIndex.
         * @member {number} masterDirIndex
         * @memberof CMsgGCMsgMasterSetDirectory
         * @instance
         */
        CMsgGCMsgMasterSetDirectory.prototype.masterDirIndex = 0;
    
        /**
         * CMsgGCMsgMasterSetDirectory dir.
         * @member {Array.<CMsgGCMsgMasterSetDirectory.ISubGC>} dir
         * @memberof CMsgGCMsgMasterSetDirectory
         * @instance
         */
        CMsgGCMsgMasterSetDirectory.prototype.dir = $util.emptyArray;
    
        /**
         * Creates a new CMsgGCMsgMasterSetDirectory instance using the specified properties.
         * @function create
         * @memberof CMsgGCMsgMasterSetDirectory
         * @static
         * @param {ICMsgGCMsgMasterSetDirectory=} [properties] Properties to set
         * @returns {CMsgGCMsgMasterSetDirectory} CMsgGCMsgMasterSetDirectory instance
         */
        CMsgGCMsgMasterSetDirectory.create = function create(properties) {
            return new CMsgGCMsgMasterSetDirectory(properties);
        };
    
        /**
         * Encodes the specified CMsgGCMsgMasterSetDirectory message. Does not implicitly {@link CMsgGCMsgMasterSetDirectory.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCMsgMasterSetDirectory
         * @static
         * @param {ICMsgGCMsgMasterSetDirectory} message CMsgGCMsgMasterSetDirectory message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgMasterSetDirectory.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.masterDirIndex != null && Object.hasOwnProperty.call(message, "masterDirIndex"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.masterDirIndex);
            if (message.dir != null && message.dir.length)
                for (var i = 0; i < message.dir.length; ++i)
                    $root.CMsgGCMsgMasterSetDirectory.SubGC.encode(message.dir[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCMsgMasterSetDirectory message, length delimited. Does not implicitly {@link CMsgGCMsgMasterSetDirectory.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCMsgMasterSetDirectory
         * @static
         * @param {ICMsgGCMsgMasterSetDirectory} message CMsgGCMsgMasterSetDirectory message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgMasterSetDirectory.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCMsgMasterSetDirectory message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCMsgMasterSetDirectory
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCMsgMasterSetDirectory} CMsgGCMsgMasterSetDirectory
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgMasterSetDirectory.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCMsgMasterSetDirectory();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.masterDirIndex = reader.uint32();
                        break;
                    }
                case 2: {
                        if (!(message.dir && message.dir.length))
                            message.dir = [];
                        message.dir.push($root.CMsgGCMsgMasterSetDirectory.SubGC.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCMsgMasterSetDirectory message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCMsgMasterSetDirectory
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCMsgMasterSetDirectory} CMsgGCMsgMasterSetDirectory
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgMasterSetDirectory.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCMsgMasterSetDirectory message.
         * @function verify
         * @memberof CMsgGCMsgMasterSetDirectory
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCMsgMasterSetDirectory.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.masterDirIndex != null && message.hasOwnProperty("masterDirIndex"))
                if (!$util.isInteger(message.masterDirIndex))
                    return "masterDirIndex: integer expected";
            if (message.dir != null && message.hasOwnProperty("dir")) {
                if (!Array.isArray(message.dir))
                    return "dir: array expected";
                for (var i = 0; i < message.dir.length; ++i) {
                    var error = $root.CMsgGCMsgMasterSetDirectory.SubGC.verify(message.dir[i]);
                    if (error)
                        return "dir." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCMsgMasterSetDirectory message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCMsgMasterSetDirectory
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCMsgMasterSetDirectory} CMsgGCMsgMasterSetDirectory
         */
        CMsgGCMsgMasterSetDirectory.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCMsgMasterSetDirectory)
                return object;
            var message = new $root.CMsgGCMsgMasterSetDirectory();
            if (object.masterDirIndex != null)
                message.masterDirIndex = object.masterDirIndex >>> 0;
            if (object.dir) {
                if (!Array.isArray(object.dir))
                    throw TypeError(".CMsgGCMsgMasterSetDirectory.dir: array expected");
                message.dir = [];
                for (var i = 0; i < object.dir.length; ++i) {
                    if (typeof object.dir[i] !== "object")
                        throw TypeError(".CMsgGCMsgMasterSetDirectory.dir: object expected");
                    message.dir[i] = $root.CMsgGCMsgMasterSetDirectory.SubGC.fromObject(object.dir[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCMsgMasterSetDirectory message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCMsgMasterSetDirectory
         * @static
         * @param {CMsgGCMsgMasterSetDirectory} message CMsgGCMsgMasterSetDirectory
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCMsgMasterSetDirectory.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.dir = [];
            if (options.defaults)
                object.masterDirIndex = 0;
            if (message.masterDirIndex != null && message.hasOwnProperty("masterDirIndex"))
                object.masterDirIndex = message.masterDirIndex;
            if (message.dir && message.dir.length) {
                object.dir = [];
                for (var j = 0; j < message.dir.length; ++j)
                    object.dir[j] = $root.CMsgGCMsgMasterSetDirectory.SubGC.toObject(message.dir[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgGCMsgMasterSetDirectory to JSON.
         * @function toJSON
         * @memberof CMsgGCMsgMasterSetDirectory
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCMsgMasterSetDirectory.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCMsgMasterSetDirectory
         * @function getTypeUrl
         * @memberof CMsgGCMsgMasterSetDirectory
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCMsgMasterSetDirectory.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCMsgMasterSetDirectory";
        };
    
        CMsgGCMsgMasterSetDirectory.SubGC = (function() {
    
            /**
             * Properties of a SubGC.
             * @memberof CMsgGCMsgMasterSetDirectory
             * @interface ISubGC
             * @property {number|null} [dirIndex] SubGC dirIndex
             * @property {string|null} [name] SubGC name
             * @property {string|null} [box] SubGC box
             * @property {string|null} [commandLine] SubGC commandLine
             * @property {string|null} [gcBinary] SubGC gcBinary
             */
    
            /**
             * Constructs a new SubGC.
             * @memberof CMsgGCMsgMasterSetDirectory
             * @classdesc Represents a SubGC.
             * @implements ISubGC
             * @constructor
             * @param {CMsgGCMsgMasterSetDirectory.ISubGC=} [properties] Properties to set
             */
            function SubGC(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * SubGC dirIndex.
             * @member {number} dirIndex
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @instance
             */
            SubGC.prototype.dirIndex = 0;
    
            /**
             * SubGC name.
             * @member {string} name
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @instance
             */
            SubGC.prototype.name = "";
    
            /**
             * SubGC box.
             * @member {string} box
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @instance
             */
            SubGC.prototype.box = "";
    
            /**
             * SubGC commandLine.
             * @member {string} commandLine
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @instance
             */
            SubGC.prototype.commandLine = "";
    
            /**
             * SubGC gcBinary.
             * @member {string} gcBinary
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @instance
             */
            SubGC.prototype.gcBinary = "";
    
            /**
             * Creates a new SubGC instance using the specified properties.
             * @function create
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @static
             * @param {CMsgGCMsgMasterSetDirectory.ISubGC=} [properties] Properties to set
             * @returns {CMsgGCMsgMasterSetDirectory.SubGC} SubGC instance
             */
            SubGC.create = function create(properties) {
                return new SubGC(properties);
            };
    
            /**
             * Encodes the specified SubGC message. Does not implicitly {@link CMsgGCMsgMasterSetDirectory.SubGC.verify|verify} messages.
             * @function encode
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @static
             * @param {CMsgGCMsgMasterSetDirectory.ISubGC} message SubGC message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SubGC.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.dirIndex != null && Object.hasOwnProperty.call(message, "dirIndex"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.dirIndex);
                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
                if (message.box != null && Object.hasOwnProperty.call(message, "box"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.box);
                if (message.commandLine != null && Object.hasOwnProperty.call(message, "commandLine"))
                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.commandLine);
                if (message.gcBinary != null && Object.hasOwnProperty.call(message, "gcBinary"))
                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.gcBinary);
                return writer;
            };
    
            /**
             * Encodes the specified SubGC message, length delimited. Does not implicitly {@link CMsgGCMsgMasterSetDirectory.SubGC.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @static
             * @param {CMsgGCMsgMasterSetDirectory.ISubGC} message SubGC message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SubGC.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a SubGC message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgGCMsgMasterSetDirectory.SubGC} SubGC
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SubGC.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCMsgMasterSetDirectory.SubGC();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.dirIndex = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.name = reader.string();
                            break;
                        }
                    case 3: {
                            message.box = reader.string();
                            break;
                        }
                    case 4: {
                            message.commandLine = reader.string();
                            break;
                        }
                    case 5: {
                            message.gcBinary = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a SubGC message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgGCMsgMasterSetDirectory.SubGC} SubGC
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SubGC.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a SubGC message.
             * @function verify
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SubGC.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.dirIndex != null && message.hasOwnProperty("dirIndex"))
                    if (!$util.isInteger(message.dirIndex))
                        return "dirIndex: integer expected";
                if (message.name != null && message.hasOwnProperty("name"))
                    if (!$util.isString(message.name))
                        return "name: string expected";
                if (message.box != null && message.hasOwnProperty("box"))
                    if (!$util.isString(message.box))
                        return "box: string expected";
                if (message.commandLine != null && message.hasOwnProperty("commandLine"))
                    if (!$util.isString(message.commandLine))
                        return "commandLine: string expected";
                if (message.gcBinary != null && message.hasOwnProperty("gcBinary"))
                    if (!$util.isString(message.gcBinary))
                        return "gcBinary: string expected";
                return null;
            };
    
            /**
             * Creates a SubGC message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgGCMsgMasterSetDirectory.SubGC} SubGC
             */
            SubGC.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgGCMsgMasterSetDirectory.SubGC)
                    return object;
                var message = new $root.CMsgGCMsgMasterSetDirectory.SubGC();
                if (object.dirIndex != null)
                    message.dirIndex = object.dirIndex >>> 0;
                if (object.name != null)
                    message.name = String(object.name);
                if (object.box != null)
                    message.box = String(object.box);
                if (object.commandLine != null)
                    message.commandLine = String(object.commandLine);
                if (object.gcBinary != null)
                    message.gcBinary = String(object.gcBinary);
                return message;
            };
    
            /**
             * Creates a plain object from a SubGC message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @static
             * @param {CMsgGCMsgMasterSetDirectory.SubGC} message SubGC
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SubGC.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.dirIndex = 0;
                    object.name = "";
                    object.box = "";
                    object.commandLine = "";
                    object.gcBinary = "";
                }
                if (message.dirIndex != null && message.hasOwnProperty("dirIndex"))
                    object.dirIndex = message.dirIndex;
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.box != null && message.hasOwnProperty("box"))
                    object.box = message.box;
                if (message.commandLine != null && message.hasOwnProperty("commandLine"))
                    object.commandLine = message.commandLine;
                if (message.gcBinary != null && message.hasOwnProperty("gcBinary"))
                    object.gcBinary = message.gcBinary;
                return object;
            };
    
            /**
             * Converts this SubGC to JSON.
             * @function toJSON
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SubGC.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for SubGC
             * @function getTypeUrl
             * @memberof CMsgGCMsgMasterSetDirectory.SubGC
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SubGC.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgGCMsgMasterSetDirectory.SubGC";
            };
    
            return SubGC;
        })();
    
        return CMsgGCMsgMasterSetDirectory;
    })();
    
    $root.CMsgGCMsgMasterSetDirectory_Response = (function() {
    
        /**
         * Properties of a CMsgGCMsgMasterSetDirectory_Response.
         * @exports ICMsgGCMsgMasterSetDirectory_Response
         * @interface ICMsgGCMsgMasterSetDirectory_Response
         * @property {number|null} [eresult] CMsgGCMsgMasterSetDirectory_Response eresult
         * @property {string|null} [message] CMsgGCMsgMasterSetDirectory_Response message
         */
    
        /**
         * Constructs a new CMsgGCMsgMasterSetDirectory_Response.
         * @exports CMsgGCMsgMasterSetDirectory_Response
         * @classdesc Represents a CMsgGCMsgMasterSetDirectory_Response.
         * @implements ICMsgGCMsgMasterSetDirectory_Response
         * @constructor
         * @param {ICMsgGCMsgMasterSetDirectory_Response=} [properties] Properties to set
         */
        function CMsgGCMsgMasterSetDirectory_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCMsgMasterSetDirectory_Response eresult.
         * @member {number} eresult
         * @memberof CMsgGCMsgMasterSetDirectory_Response
         * @instance
         */
        CMsgGCMsgMasterSetDirectory_Response.prototype.eresult = 2;
    
        /**
         * CMsgGCMsgMasterSetDirectory_Response message.
         * @member {string} message
         * @memberof CMsgGCMsgMasterSetDirectory_Response
         * @instance
         */
        CMsgGCMsgMasterSetDirectory_Response.prototype.message = "";
    
        /**
         * Creates a new CMsgGCMsgMasterSetDirectory_Response instance using the specified properties.
         * @function create
         * @memberof CMsgGCMsgMasterSetDirectory_Response
         * @static
         * @param {ICMsgGCMsgMasterSetDirectory_Response=} [properties] Properties to set
         * @returns {CMsgGCMsgMasterSetDirectory_Response} CMsgGCMsgMasterSetDirectory_Response instance
         */
        CMsgGCMsgMasterSetDirectory_Response.create = function create(properties) {
            return new CMsgGCMsgMasterSetDirectory_Response(properties);
        };
    
        /**
         * Encodes the specified CMsgGCMsgMasterSetDirectory_Response message. Does not implicitly {@link CMsgGCMsgMasterSetDirectory_Response.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCMsgMasterSetDirectory_Response
         * @static
         * @param {ICMsgGCMsgMasterSetDirectory_Response} message CMsgGCMsgMasterSetDirectory_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgMasterSetDirectory_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCMsgMasterSetDirectory_Response message, length delimited. Does not implicitly {@link CMsgGCMsgMasterSetDirectory_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCMsgMasterSetDirectory_Response
         * @static
         * @param {ICMsgGCMsgMasterSetDirectory_Response} message CMsgGCMsgMasterSetDirectory_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgMasterSetDirectory_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCMsgMasterSetDirectory_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCMsgMasterSetDirectory_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCMsgMasterSetDirectory_Response} CMsgGCMsgMasterSetDirectory_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgMasterSetDirectory_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCMsgMasterSetDirectory_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.eresult = reader.int32();
                        break;
                    }
                case 2: {
                        message.message = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCMsgMasterSetDirectory_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCMsgMasterSetDirectory_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCMsgMasterSetDirectory_Response} CMsgGCMsgMasterSetDirectory_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgMasterSetDirectory_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCMsgMasterSetDirectory_Response message.
         * @function verify
         * @memberof CMsgGCMsgMasterSetDirectory_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCMsgMasterSetDirectory_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.message != null && message.hasOwnProperty("message"))
                if (!$util.isString(message.message))
                    return "message: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCMsgMasterSetDirectory_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCMsgMasterSetDirectory_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCMsgMasterSetDirectory_Response} CMsgGCMsgMasterSetDirectory_Response
         */
        CMsgGCMsgMasterSetDirectory_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCMsgMasterSetDirectory_Response)
                return object;
            var message = new $root.CMsgGCMsgMasterSetDirectory_Response();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.message != null)
                message.message = String(object.message);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCMsgMasterSetDirectory_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCMsgMasterSetDirectory_Response
         * @static
         * @param {CMsgGCMsgMasterSetDirectory_Response} message CMsgGCMsgMasterSetDirectory_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCMsgMasterSetDirectory_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.message = "";
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.message != null && message.hasOwnProperty("message"))
                object.message = message.message;
            return object;
        };
    
        /**
         * Converts this CMsgGCMsgMasterSetDirectory_Response to JSON.
         * @function toJSON
         * @memberof CMsgGCMsgMasterSetDirectory_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCMsgMasterSetDirectory_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCMsgMasterSetDirectory_Response
         * @function getTypeUrl
         * @memberof CMsgGCMsgMasterSetDirectory_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCMsgMasterSetDirectory_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCMsgMasterSetDirectory_Response";
        };
    
        return CMsgGCMsgMasterSetDirectory_Response;
    })();
    
    $root.CMsgGCMsgWebAPIJobRequestForwardResponse = (function() {
    
        /**
         * Properties of a CMsgGCMsgWebAPIJobRequestForwardResponse.
         * @exports ICMsgGCMsgWebAPIJobRequestForwardResponse
         * @interface ICMsgGCMsgWebAPIJobRequestForwardResponse
         * @property {number|null} [dirIndex] CMsgGCMsgWebAPIJobRequestForwardResponse dirIndex
         */
    
        /**
         * Constructs a new CMsgGCMsgWebAPIJobRequestForwardResponse.
         * @exports CMsgGCMsgWebAPIJobRequestForwardResponse
         * @classdesc Represents a CMsgGCMsgWebAPIJobRequestForwardResponse.
         * @implements ICMsgGCMsgWebAPIJobRequestForwardResponse
         * @constructor
         * @param {ICMsgGCMsgWebAPIJobRequestForwardResponse=} [properties] Properties to set
         */
        function CMsgGCMsgWebAPIJobRequestForwardResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCMsgWebAPIJobRequestForwardResponse dirIndex.
         * @member {number} dirIndex
         * @memberof CMsgGCMsgWebAPIJobRequestForwardResponse
         * @instance
         */
        CMsgGCMsgWebAPIJobRequestForwardResponse.prototype.dirIndex = 0;
    
        /**
         * Creates a new CMsgGCMsgWebAPIJobRequestForwardResponse instance using the specified properties.
         * @function create
         * @memberof CMsgGCMsgWebAPIJobRequestForwardResponse
         * @static
         * @param {ICMsgGCMsgWebAPIJobRequestForwardResponse=} [properties] Properties to set
         * @returns {CMsgGCMsgWebAPIJobRequestForwardResponse} CMsgGCMsgWebAPIJobRequestForwardResponse instance
         */
        CMsgGCMsgWebAPIJobRequestForwardResponse.create = function create(properties) {
            return new CMsgGCMsgWebAPIJobRequestForwardResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgGCMsgWebAPIJobRequestForwardResponse message. Does not implicitly {@link CMsgGCMsgWebAPIJobRequestForwardResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCMsgWebAPIJobRequestForwardResponse
         * @static
         * @param {ICMsgGCMsgWebAPIJobRequestForwardResponse} message CMsgGCMsgWebAPIJobRequestForwardResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgWebAPIJobRequestForwardResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.dirIndex != null && Object.hasOwnProperty.call(message, "dirIndex"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.dirIndex);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCMsgWebAPIJobRequestForwardResponse message, length delimited. Does not implicitly {@link CMsgGCMsgWebAPIJobRequestForwardResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCMsgWebAPIJobRequestForwardResponse
         * @static
         * @param {ICMsgGCMsgWebAPIJobRequestForwardResponse} message CMsgGCMsgWebAPIJobRequestForwardResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgWebAPIJobRequestForwardResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCMsgWebAPIJobRequestForwardResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCMsgWebAPIJobRequestForwardResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCMsgWebAPIJobRequestForwardResponse} CMsgGCMsgWebAPIJobRequestForwardResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgWebAPIJobRequestForwardResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCMsgWebAPIJobRequestForwardResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.dirIndex = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCMsgWebAPIJobRequestForwardResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCMsgWebAPIJobRequestForwardResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCMsgWebAPIJobRequestForwardResponse} CMsgGCMsgWebAPIJobRequestForwardResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgWebAPIJobRequestForwardResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCMsgWebAPIJobRequestForwardResponse message.
         * @function verify
         * @memberof CMsgGCMsgWebAPIJobRequestForwardResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCMsgWebAPIJobRequestForwardResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.dirIndex != null && message.hasOwnProperty("dirIndex"))
                if (!$util.isInteger(message.dirIndex))
                    return "dirIndex: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCMsgWebAPIJobRequestForwardResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCMsgWebAPIJobRequestForwardResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCMsgWebAPIJobRequestForwardResponse} CMsgGCMsgWebAPIJobRequestForwardResponse
         */
        CMsgGCMsgWebAPIJobRequestForwardResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCMsgWebAPIJobRequestForwardResponse)
                return object;
            var message = new $root.CMsgGCMsgWebAPIJobRequestForwardResponse();
            if (object.dirIndex != null)
                message.dirIndex = object.dirIndex >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCMsgWebAPIJobRequestForwardResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCMsgWebAPIJobRequestForwardResponse
         * @static
         * @param {CMsgGCMsgWebAPIJobRequestForwardResponse} message CMsgGCMsgWebAPIJobRequestForwardResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCMsgWebAPIJobRequestForwardResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.dirIndex = 0;
            if (message.dirIndex != null && message.hasOwnProperty("dirIndex"))
                object.dirIndex = message.dirIndex;
            return object;
        };
    
        /**
         * Converts this CMsgGCMsgWebAPIJobRequestForwardResponse to JSON.
         * @function toJSON
         * @memberof CMsgGCMsgWebAPIJobRequestForwardResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCMsgWebAPIJobRequestForwardResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCMsgWebAPIJobRequestForwardResponse
         * @function getTypeUrl
         * @memberof CMsgGCMsgWebAPIJobRequestForwardResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCMsgWebAPIJobRequestForwardResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCMsgWebAPIJobRequestForwardResponse";
        };
    
        return CMsgGCMsgWebAPIJobRequestForwardResponse;
    })();
    
    $root.CGCSystemMsg_GetPurchaseTrust_Request = (function() {
    
        /**
         * Properties of a CGCSystemMsg_GetPurchaseTrust_Request.
         * @exports ICGCSystemMsg_GetPurchaseTrust_Request
         * @interface ICGCSystemMsg_GetPurchaseTrust_Request
         * @property {number|Long|null} [steamid] CGCSystemMsg_GetPurchaseTrust_Request steamid
         */
    
        /**
         * Constructs a new CGCSystemMsg_GetPurchaseTrust_Request.
         * @exports CGCSystemMsg_GetPurchaseTrust_Request
         * @classdesc Represents a CGCSystemMsg_GetPurchaseTrust_Request.
         * @implements ICGCSystemMsg_GetPurchaseTrust_Request
         * @constructor
         * @param {ICGCSystemMsg_GetPurchaseTrust_Request=} [properties] Properties to set
         */
        function CGCSystemMsg_GetPurchaseTrust_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCSystemMsg_GetPurchaseTrust_Request steamid.
         * @member {number|Long} steamid
         * @memberof CGCSystemMsg_GetPurchaseTrust_Request
         * @instance
         */
        CGCSystemMsg_GetPurchaseTrust_Request.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CGCSystemMsg_GetPurchaseTrust_Request instance using the specified properties.
         * @function create
         * @memberof CGCSystemMsg_GetPurchaseTrust_Request
         * @static
         * @param {ICGCSystemMsg_GetPurchaseTrust_Request=} [properties] Properties to set
         * @returns {CGCSystemMsg_GetPurchaseTrust_Request} CGCSystemMsg_GetPurchaseTrust_Request instance
         */
        CGCSystemMsg_GetPurchaseTrust_Request.create = function create(properties) {
            return new CGCSystemMsg_GetPurchaseTrust_Request(properties);
        };
    
        /**
         * Encodes the specified CGCSystemMsg_GetPurchaseTrust_Request message. Does not implicitly {@link CGCSystemMsg_GetPurchaseTrust_Request.verify|verify} messages.
         * @function encode
         * @memberof CGCSystemMsg_GetPurchaseTrust_Request
         * @static
         * @param {ICGCSystemMsg_GetPurchaseTrust_Request} message CGCSystemMsg_GetPurchaseTrust_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCSystemMsg_GetPurchaseTrust_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
            return writer;
        };
    
        /**
         * Encodes the specified CGCSystemMsg_GetPurchaseTrust_Request message, length delimited. Does not implicitly {@link CGCSystemMsg_GetPurchaseTrust_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCSystemMsg_GetPurchaseTrust_Request
         * @static
         * @param {ICGCSystemMsg_GetPurchaseTrust_Request} message CGCSystemMsg_GetPurchaseTrust_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCSystemMsg_GetPurchaseTrust_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCSystemMsg_GetPurchaseTrust_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CGCSystemMsg_GetPurchaseTrust_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCSystemMsg_GetPurchaseTrust_Request} CGCSystemMsg_GetPurchaseTrust_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCSystemMsg_GetPurchaseTrust_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCSystemMsg_GetPurchaseTrust_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamid = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCSystemMsg_GetPurchaseTrust_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCSystemMsg_GetPurchaseTrust_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCSystemMsg_GetPurchaseTrust_Request} CGCSystemMsg_GetPurchaseTrust_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCSystemMsg_GetPurchaseTrust_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCSystemMsg_GetPurchaseTrust_Request message.
         * @function verify
         * @memberof CGCSystemMsg_GetPurchaseTrust_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCSystemMsg_GetPurchaseTrust_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CGCSystemMsg_GetPurchaseTrust_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCSystemMsg_GetPurchaseTrust_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCSystemMsg_GetPurchaseTrust_Request} CGCSystemMsg_GetPurchaseTrust_Request
         */
        CGCSystemMsg_GetPurchaseTrust_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCSystemMsg_GetPurchaseTrust_Request)
                return object;
            var message = new $root.CGCSystemMsg_GetPurchaseTrust_Request();
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CGCSystemMsg_GetPurchaseTrust_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCSystemMsg_GetPurchaseTrust_Request
         * @static
         * @param {CGCSystemMsg_GetPurchaseTrust_Request} message CGCSystemMsg_GetPurchaseTrust_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCSystemMsg_GetPurchaseTrust_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            return object;
        };
    
        /**
         * Converts this CGCSystemMsg_GetPurchaseTrust_Request to JSON.
         * @function toJSON
         * @memberof CGCSystemMsg_GetPurchaseTrust_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCSystemMsg_GetPurchaseTrust_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCSystemMsg_GetPurchaseTrust_Request
         * @function getTypeUrl
         * @memberof CGCSystemMsg_GetPurchaseTrust_Request
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCSystemMsg_GetPurchaseTrust_Request.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCSystemMsg_GetPurchaseTrust_Request";
        };
    
        return CGCSystemMsg_GetPurchaseTrust_Request;
    })();
    
    $root.CGCSystemMsg_GetPurchaseTrust_Response = (function() {
    
        /**
         * Properties of a CGCSystemMsg_GetPurchaseTrust_Response.
         * @exports ICGCSystemMsg_GetPurchaseTrust_Response
         * @interface ICGCSystemMsg_GetPurchaseTrust_Response
         * @property {boolean|null} [hasPriorPurchaseHistory] CGCSystemMsg_GetPurchaseTrust_Response hasPriorPurchaseHistory
         * @property {boolean|null} [hasNoRecentPasswordResets] CGCSystemMsg_GetPurchaseTrust_Response hasNoRecentPasswordResets
         * @property {boolean|null} [isWalletCashTrusted] CGCSystemMsg_GetPurchaseTrust_Response isWalletCashTrusted
         * @property {number|null} [timeAllTrusted] CGCSystemMsg_GetPurchaseTrust_Response timeAllTrusted
         */
    
        /**
         * Constructs a new CGCSystemMsg_GetPurchaseTrust_Response.
         * @exports CGCSystemMsg_GetPurchaseTrust_Response
         * @classdesc Represents a CGCSystemMsg_GetPurchaseTrust_Response.
         * @implements ICGCSystemMsg_GetPurchaseTrust_Response
         * @constructor
         * @param {ICGCSystemMsg_GetPurchaseTrust_Response=} [properties] Properties to set
         */
        function CGCSystemMsg_GetPurchaseTrust_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCSystemMsg_GetPurchaseTrust_Response hasPriorPurchaseHistory.
         * @member {boolean} hasPriorPurchaseHistory
         * @memberof CGCSystemMsg_GetPurchaseTrust_Response
         * @instance
         */
        CGCSystemMsg_GetPurchaseTrust_Response.prototype.hasPriorPurchaseHistory = false;
    
        /**
         * CGCSystemMsg_GetPurchaseTrust_Response hasNoRecentPasswordResets.
         * @member {boolean} hasNoRecentPasswordResets
         * @memberof CGCSystemMsg_GetPurchaseTrust_Response
         * @instance
         */
        CGCSystemMsg_GetPurchaseTrust_Response.prototype.hasNoRecentPasswordResets = false;
    
        /**
         * CGCSystemMsg_GetPurchaseTrust_Response isWalletCashTrusted.
         * @member {boolean} isWalletCashTrusted
         * @memberof CGCSystemMsg_GetPurchaseTrust_Response
         * @instance
         */
        CGCSystemMsg_GetPurchaseTrust_Response.prototype.isWalletCashTrusted = false;
    
        /**
         * CGCSystemMsg_GetPurchaseTrust_Response timeAllTrusted.
         * @member {number} timeAllTrusted
         * @memberof CGCSystemMsg_GetPurchaseTrust_Response
         * @instance
         */
        CGCSystemMsg_GetPurchaseTrust_Response.prototype.timeAllTrusted = 0;
    
        /**
         * Creates a new CGCSystemMsg_GetPurchaseTrust_Response instance using the specified properties.
         * @function create
         * @memberof CGCSystemMsg_GetPurchaseTrust_Response
         * @static
         * @param {ICGCSystemMsg_GetPurchaseTrust_Response=} [properties] Properties to set
         * @returns {CGCSystemMsg_GetPurchaseTrust_Response} CGCSystemMsg_GetPurchaseTrust_Response instance
         */
        CGCSystemMsg_GetPurchaseTrust_Response.create = function create(properties) {
            return new CGCSystemMsg_GetPurchaseTrust_Response(properties);
        };
    
        /**
         * Encodes the specified CGCSystemMsg_GetPurchaseTrust_Response message. Does not implicitly {@link CGCSystemMsg_GetPurchaseTrust_Response.verify|verify} messages.
         * @function encode
         * @memberof CGCSystemMsg_GetPurchaseTrust_Response
         * @static
         * @param {ICGCSystemMsg_GetPurchaseTrust_Response} message CGCSystemMsg_GetPurchaseTrust_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCSystemMsg_GetPurchaseTrust_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.hasPriorPurchaseHistory != null && Object.hasOwnProperty.call(message, "hasPriorPurchaseHistory"))
                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.hasPriorPurchaseHistory);
            if (message.hasNoRecentPasswordResets != null && Object.hasOwnProperty.call(message, "hasNoRecentPasswordResets"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.hasNoRecentPasswordResets);
            if (message.isWalletCashTrusted != null && Object.hasOwnProperty.call(message, "isWalletCashTrusted"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.isWalletCashTrusted);
            if (message.timeAllTrusted != null && Object.hasOwnProperty.call(message, "timeAllTrusted"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.timeAllTrusted);
            return writer;
        };
    
        /**
         * Encodes the specified CGCSystemMsg_GetPurchaseTrust_Response message, length delimited. Does not implicitly {@link CGCSystemMsg_GetPurchaseTrust_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCSystemMsg_GetPurchaseTrust_Response
         * @static
         * @param {ICGCSystemMsg_GetPurchaseTrust_Response} message CGCSystemMsg_GetPurchaseTrust_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCSystemMsg_GetPurchaseTrust_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCSystemMsg_GetPurchaseTrust_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CGCSystemMsg_GetPurchaseTrust_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCSystemMsg_GetPurchaseTrust_Response} CGCSystemMsg_GetPurchaseTrust_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCSystemMsg_GetPurchaseTrust_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCSystemMsg_GetPurchaseTrust_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.hasPriorPurchaseHistory = reader.bool();
                        break;
                    }
                case 2: {
                        message.hasNoRecentPasswordResets = reader.bool();
                        break;
                    }
                case 3: {
                        message.isWalletCashTrusted = reader.bool();
                        break;
                    }
                case 4: {
                        message.timeAllTrusted = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCSystemMsg_GetPurchaseTrust_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCSystemMsg_GetPurchaseTrust_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCSystemMsg_GetPurchaseTrust_Response} CGCSystemMsg_GetPurchaseTrust_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCSystemMsg_GetPurchaseTrust_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCSystemMsg_GetPurchaseTrust_Response message.
         * @function verify
         * @memberof CGCSystemMsg_GetPurchaseTrust_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCSystemMsg_GetPurchaseTrust_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.hasPriorPurchaseHistory != null && message.hasOwnProperty("hasPriorPurchaseHistory"))
                if (typeof message.hasPriorPurchaseHistory !== "boolean")
                    return "hasPriorPurchaseHistory: boolean expected";
            if (message.hasNoRecentPasswordResets != null && message.hasOwnProperty("hasNoRecentPasswordResets"))
                if (typeof message.hasNoRecentPasswordResets !== "boolean")
                    return "hasNoRecentPasswordResets: boolean expected";
            if (message.isWalletCashTrusted != null && message.hasOwnProperty("isWalletCashTrusted"))
                if (typeof message.isWalletCashTrusted !== "boolean")
                    return "isWalletCashTrusted: boolean expected";
            if (message.timeAllTrusted != null && message.hasOwnProperty("timeAllTrusted"))
                if (!$util.isInteger(message.timeAllTrusted))
                    return "timeAllTrusted: integer expected";
            return null;
        };
    
        /**
         * Creates a CGCSystemMsg_GetPurchaseTrust_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCSystemMsg_GetPurchaseTrust_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCSystemMsg_GetPurchaseTrust_Response} CGCSystemMsg_GetPurchaseTrust_Response
         */
        CGCSystemMsg_GetPurchaseTrust_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCSystemMsg_GetPurchaseTrust_Response)
                return object;
            var message = new $root.CGCSystemMsg_GetPurchaseTrust_Response();
            if (object.hasPriorPurchaseHistory != null)
                message.hasPriorPurchaseHistory = Boolean(object.hasPriorPurchaseHistory);
            if (object.hasNoRecentPasswordResets != null)
                message.hasNoRecentPasswordResets = Boolean(object.hasNoRecentPasswordResets);
            if (object.isWalletCashTrusted != null)
                message.isWalletCashTrusted = Boolean(object.isWalletCashTrusted);
            if (object.timeAllTrusted != null)
                message.timeAllTrusted = object.timeAllTrusted >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CGCSystemMsg_GetPurchaseTrust_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCSystemMsg_GetPurchaseTrust_Response
         * @static
         * @param {CGCSystemMsg_GetPurchaseTrust_Response} message CGCSystemMsg_GetPurchaseTrust_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCSystemMsg_GetPurchaseTrust_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.hasPriorPurchaseHistory = false;
                object.hasNoRecentPasswordResets = false;
                object.isWalletCashTrusted = false;
                object.timeAllTrusted = 0;
            }
            if (message.hasPriorPurchaseHistory != null && message.hasOwnProperty("hasPriorPurchaseHistory"))
                object.hasPriorPurchaseHistory = message.hasPriorPurchaseHistory;
            if (message.hasNoRecentPasswordResets != null && message.hasOwnProperty("hasNoRecentPasswordResets"))
                object.hasNoRecentPasswordResets = message.hasNoRecentPasswordResets;
            if (message.isWalletCashTrusted != null && message.hasOwnProperty("isWalletCashTrusted"))
                object.isWalletCashTrusted = message.isWalletCashTrusted;
            if (message.timeAllTrusted != null && message.hasOwnProperty("timeAllTrusted"))
                object.timeAllTrusted = message.timeAllTrusted;
            return object;
        };
    
        /**
         * Converts this CGCSystemMsg_GetPurchaseTrust_Response to JSON.
         * @function toJSON
         * @memberof CGCSystemMsg_GetPurchaseTrust_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCSystemMsg_GetPurchaseTrust_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCSystemMsg_GetPurchaseTrust_Response
         * @function getTypeUrl
         * @memberof CGCSystemMsg_GetPurchaseTrust_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCSystemMsg_GetPurchaseTrust_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCSystemMsg_GetPurchaseTrust_Response";
        };
    
        return CGCSystemMsg_GetPurchaseTrust_Response;
    })();
    
    $root.CMsgGCHAccountVacStatusChange = (function() {
    
        /**
         * Properties of a CMsgGCHAccountVacStatusChange.
         * @exports ICMsgGCHAccountVacStatusChange
         * @interface ICMsgGCHAccountVacStatusChange
         * @property {number|Long|null} [steamId] CMsgGCHAccountVacStatusChange steamId
         * @property {number|null} [appId] CMsgGCHAccountVacStatusChange appId
         * @property {number|null} [rtimeVacbanStarts] CMsgGCHAccountVacStatusChange rtimeVacbanStarts
         * @property {boolean|null} [isBannedNow] CMsgGCHAccountVacStatusChange isBannedNow
         * @property {boolean|null} [isBannedFuture] CMsgGCHAccountVacStatusChange isBannedFuture
         */
    
        /**
         * Constructs a new CMsgGCHAccountVacStatusChange.
         * @exports CMsgGCHAccountVacStatusChange
         * @classdesc Represents a CMsgGCHAccountVacStatusChange.
         * @implements ICMsgGCHAccountVacStatusChange
         * @constructor
         * @param {ICMsgGCHAccountVacStatusChange=} [properties] Properties to set
         */
        function CMsgGCHAccountVacStatusChange(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCHAccountVacStatusChange steamId.
         * @member {number|Long} steamId
         * @memberof CMsgGCHAccountVacStatusChange
         * @instance
         */
        CMsgGCHAccountVacStatusChange.prototype.steamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGCHAccountVacStatusChange appId.
         * @member {number} appId
         * @memberof CMsgGCHAccountVacStatusChange
         * @instance
         */
        CMsgGCHAccountVacStatusChange.prototype.appId = 0;
    
        /**
         * CMsgGCHAccountVacStatusChange rtimeVacbanStarts.
         * @member {number} rtimeVacbanStarts
         * @memberof CMsgGCHAccountVacStatusChange
         * @instance
         */
        CMsgGCHAccountVacStatusChange.prototype.rtimeVacbanStarts = 0;
    
        /**
         * CMsgGCHAccountVacStatusChange isBannedNow.
         * @member {boolean} isBannedNow
         * @memberof CMsgGCHAccountVacStatusChange
         * @instance
         */
        CMsgGCHAccountVacStatusChange.prototype.isBannedNow = false;
    
        /**
         * CMsgGCHAccountVacStatusChange isBannedFuture.
         * @member {boolean} isBannedFuture
         * @memberof CMsgGCHAccountVacStatusChange
         * @instance
         */
        CMsgGCHAccountVacStatusChange.prototype.isBannedFuture = false;
    
        /**
         * Creates a new CMsgGCHAccountVacStatusChange instance using the specified properties.
         * @function create
         * @memberof CMsgGCHAccountVacStatusChange
         * @static
         * @param {ICMsgGCHAccountVacStatusChange=} [properties] Properties to set
         * @returns {CMsgGCHAccountVacStatusChange} CMsgGCHAccountVacStatusChange instance
         */
        CMsgGCHAccountVacStatusChange.create = function create(properties) {
            return new CMsgGCHAccountVacStatusChange(properties);
        };
    
        /**
         * Encodes the specified CMsgGCHAccountVacStatusChange message. Does not implicitly {@link CMsgGCHAccountVacStatusChange.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCHAccountVacStatusChange
         * @static
         * @param {ICMsgGCHAccountVacStatusChange} message CMsgGCHAccountVacStatusChange message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCHAccountVacStatusChange.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamId != null && Object.hasOwnProperty.call(message, "steamId"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamId);
            if (message.appId != null && Object.hasOwnProperty.call(message, "appId"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.appId);
            if (message.rtimeVacbanStarts != null && Object.hasOwnProperty.call(message, "rtimeVacbanStarts"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.rtimeVacbanStarts);
            if (message.isBannedNow != null && Object.hasOwnProperty.call(message, "isBannedNow"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.isBannedNow);
            if (message.isBannedFuture != null && Object.hasOwnProperty.call(message, "isBannedFuture"))
                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.isBannedFuture);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCHAccountVacStatusChange message, length delimited. Does not implicitly {@link CMsgGCHAccountVacStatusChange.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCHAccountVacStatusChange
         * @static
         * @param {ICMsgGCHAccountVacStatusChange} message CMsgGCHAccountVacStatusChange message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCHAccountVacStatusChange.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCHAccountVacStatusChange message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCHAccountVacStatusChange
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCHAccountVacStatusChange} CMsgGCHAccountVacStatusChange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCHAccountVacStatusChange.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCHAccountVacStatusChange();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamId = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.appId = reader.uint32();
                        break;
                    }
                case 3: {
                        message.rtimeVacbanStarts = reader.uint32();
                        break;
                    }
                case 4: {
                        message.isBannedNow = reader.bool();
                        break;
                    }
                case 5: {
                        message.isBannedFuture = reader.bool();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCHAccountVacStatusChange message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCHAccountVacStatusChange
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCHAccountVacStatusChange} CMsgGCHAccountVacStatusChange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCHAccountVacStatusChange.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCHAccountVacStatusChange message.
         * @function verify
         * @memberof CMsgGCHAccountVacStatusChange
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCHAccountVacStatusChange.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (!$util.isInteger(message.steamId) && !(message.steamId && $util.isInteger(message.steamId.low) && $util.isInteger(message.steamId.high)))
                    return "steamId: integer|Long expected";
            if (message.appId != null && message.hasOwnProperty("appId"))
                if (!$util.isInteger(message.appId))
                    return "appId: integer expected";
            if (message.rtimeVacbanStarts != null && message.hasOwnProperty("rtimeVacbanStarts"))
                if (!$util.isInteger(message.rtimeVacbanStarts))
                    return "rtimeVacbanStarts: integer expected";
            if (message.isBannedNow != null && message.hasOwnProperty("isBannedNow"))
                if (typeof message.isBannedNow !== "boolean")
                    return "isBannedNow: boolean expected";
            if (message.isBannedFuture != null && message.hasOwnProperty("isBannedFuture"))
                if (typeof message.isBannedFuture !== "boolean")
                    return "isBannedFuture: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCHAccountVacStatusChange message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCHAccountVacStatusChange
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCHAccountVacStatusChange} CMsgGCHAccountVacStatusChange
         */
        CMsgGCHAccountVacStatusChange.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCHAccountVacStatusChange)
                return object;
            var message = new $root.CMsgGCHAccountVacStatusChange();
            if (object.steamId != null)
                if ($util.Long)
                    (message.steamId = $util.Long.fromValue(object.steamId)).unsigned = false;
                else if (typeof object.steamId === "string")
                    message.steamId = parseInt(object.steamId, 10);
                else if (typeof object.steamId === "number")
                    message.steamId = object.steamId;
                else if (typeof object.steamId === "object")
                    message.steamId = new $util.LongBits(object.steamId.low >>> 0, object.steamId.high >>> 0).toNumber();
            if (object.appId != null)
                message.appId = object.appId >>> 0;
            if (object.rtimeVacbanStarts != null)
                message.rtimeVacbanStarts = object.rtimeVacbanStarts >>> 0;
            if (object.isBannedNow != null)
                message.isBannedNow = Boolean(object.isBannedNow);
            if (object.isBannedFuture != null)
                message.isBannedFuture = Boolean(object.isBannedFuture);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCHAccountVacStatusChange message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCHAccountVacStatusChange
         * @static
         * @param {CMsgGCHAccountVacStatusChange} message CMsgGCHAccountVacStatusChange
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCHAccountVacStatusChange.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamId = options.longs === String ? "0" : 0;
                object.appId = 0;
                object.rtimeVacbanStarts = 0;
                object.isBannedNow = false;
                object.isBannedFuture = false;
            }
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (typeof message.steamId === "number")
                    object.steamId = options.longs === String ? String(message.steamId) : message.steamId;
                else
                    object.steamId = options.longs === String ? $util.Long.prototype.toString.call(message.steamId) : options.longs === Number ? new $util.LongBits(message.steamId.low >>> 0, message.steamId.high >>> 0).toNumber() : message.steamId;
            if (message.appId != null && message.hasOwnProperty("appId"))
                object.appId = message.appId;
            if (message.rtimeVacbanStarts != null && message.hasOwnProperty("rtimeVacbanStarts"))
                object.rtimeVacbanStarts = message.rtimeVacbanStarts;
            if (message.isBannedNow != null && message.hasOwnProperty("isBannedNow"))
                object.isBannedNow = message.isBannedNow;
            if (message.isBannedFuture != null && message.hasOwnProperty("isBannedFuture"))
                object.isBannedFuture = message.isBannedFuture;
            return object;
        };
    
        /**
         * Converts this CMsgGCHAccountVacStatusChange to JSON.
         * @function toJSON
         * @memberof CMsgGCHAccountVacStatusChange
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCHAccountVacStatusChange.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCHAccountVacStatusChange
         * @function getTypeUrl
         * @memberof CMsgGCHAccountVacStatusChange
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCHAccountVacStatusChange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCHAccountVacStatusChange";
        };
    
        return CMsgGCHAccountVacStatusChange;
    })();
    
    $root.CMsgGCGetPartnerAccountLink = (function() {
    
        /**
         * Properties of a CMsgGCGetPartnerAccountLink.
         * @exports ICMsgGCGetPartnerAccountLink
         * @interface ICMsgGCGetPartnerAccountLink
         * @property {number|Long|null} [steamid] CMsgGCGetPartnerAccountLink steamid
         */
    
        /**
         * Constructs a new CMsgGCGetPartnerAccountLink.
         * @exports CMsgGCGetPartnerAccountLink
         * @classdesc Represents a CMsgGCGetPartnerAccountLink.
         * @implements ICMsgGCGetPartnerAccountLink
         * @constructor
         * @param {ICMsgGCGetPartnerAccountLink=} [properties] Properties to set
         */
        function CMsgGCGetPartnerAccountLink(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCGetPartnerAccountLink steamid.
         * @member {number|Long} steamid
         * @memberof CMsgGCGetPartnerAccountLink
         * @instance
         */
        CMsgGCGetPartnerAccountLink.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgGCGetPartnerAccountLink instance using the specified properties.
         * @function create
         * @memberof CMsgGCGetPartnerAccountLink
         * @static
         * @param {ICMsgGCGetPartnerAccountLink=} [properties] Properties to set
         * @returns {CMsgGCGetPartnerAccountLink} CMsgGCGetPartnerAccountLink instance
         */
        CMsgGCGetPartnerAccountLink.create = function create(properties) {
            return new CMsgGCGetPartnerAccountLink(properties);
        };
    
        /**
         * Encodes the specified CMsgGCGetPartnerAccountLink message. Does not implicitly {@link CMsgGCGetPartnerAccountLink.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCGetPartnerAccountLink
         * @static
         * @param {ICMsgGCGetPartnerAccountLink} message CMsgGCGetPartnerAccountLink message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetPartnerAccountLink.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCGetPartnerAccountLink message, length delimited. Does not implicitly {@link CMsgGCGetPartnerAccountLink.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCGetPartnerAccountLink
         * @static
         * @param {ICMsgGCGetPartnerAccountLink} message CMsgGCGetPartnerAccountLink message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetPartnerAccountLink.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCGetPartnerAccountLink message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCGetPartnerAccountLink
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCGetPartnerAccountLink} CMsgGCGetPartnerAccountLink
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetPartnerAccountLink.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCGetPartnerAccountLink();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamid = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCGetPartnerAccountLink message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCGetPartnerAccountLink
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCGetPartnerAccountLink} CMsgGCGetPartnerAccountLink
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetPartnerAccountLink.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCGetPartnerAccountLink message.
         * @function verify
         * @memberof CMsgGCGetPartnerAccountLink
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCGetPartnerAccountLink.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCGetPartnerAccountLink message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCGetPartnerAccountLink
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCGetPartnerAccountLink} CMsgGCGetPartnerAccountLink
         */
        CMsgGCGetPartnerAccountLink.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCGetPartnerAccountLink)
                return object;
            var message = new $root.CMsgGCGetPartnerAccountLink();
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCGetPartnerAccountLink message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCGetPartnerAccountLink
         * @static
         * @param {CMsgGCGetPartnerAccountLink} message CMsgGCGetPartnerAccountLink
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCGetPartnerAccountLink.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            return object;
        };
    
        /**
         * Converts this CMsgGCGetPartnerAccountLink to JSON.
         * @function toJSON
         * @memberof CMsgGCGetPartnerAccountLink
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCGetPartnerAccountLink.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCGetPartnerAccountLink
         * @function getTypeUrl
         * @memberof CMsgGCGetPartnerAccountLink
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCGetPartnerAccountLink.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCGetPartnerAccountLink";
        };
    
        return CMsgGCGetPartnerAccountLink;
    })();
    
    $root.CMsgGCGetPartnerAccountLink_Response = (function() {
    
        /**
         * Properties of a CMsgGCGetPartnerAccountLink_Response.
         * @exports ICMsgGCGetPartnerAccountLink_Response
         * @interface ICMsgGCGetPartnerAccountLink_Response
         * @property {number|null} [pwid] CMsgGCGetPartnerAccountLink_Response pwid
         * @property {number|null} [nexonid] CMsgGCGetPartnerAccountLink_Response nexonid
         * @property {number|null} [ageclass] CMsgGCGetPartnerAccountLink_Response ageclass
         * @property {boolean|null} [idVerified] CMsgGCGetPartnerAccountLink_Response idVerified
         * @property {boolean|null} [isAdult] CMsgGCGetPartnerAccountLink_Response isAdult
         */
    
        /**
         * Constructs a new CMsgGCGetPartnerAccountLink_Response.
         * @exports CMsgGCGetPartnerAccountLink_Response
         * @classdesc Represents a CMsgGCGetPartnerAccountLink_Response.
         * @implements ICMsgGCGetPartnerAccountLink_Response
         * @constructor
         * @param {ICMsgGCGetPartnerAccountLink_Response=} [properties] Properties to set
         */
        function CMsgGCGetPartnerAccountLink_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCGetPartnerAccountLink_Response pwid.
         * @member {number} pwid
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @instance
         */
        CMsgGCGetPartnerAccountLink_Response.prototype.pwid = 0;
    
        /**
         * CMsgGCGetPartnerAccountLink_Response nexonid.
         * @member {number} nexonid
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @instance
         */
        CMsgGCGetPartnerAccountLink_Response.prototype.nexonid = 0;
    
        /**
         * CMsgGCGetPartnerAccountLink_Response ageclass.
         * @member {number} ageclass
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @instance
         */
        CMsgGCGetPartnerAccountLink_Response.prototype.ageclass = 0;
    
        /**
         * CMsgGCGetPartnerAccountLink_Response idVerified.
         * @member {boolean} idVerified
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @instance
         */
        CMsgGCGetPartnerAccountLink_Response.prototype.idVerified = true;
    
        /**
         * CMsgGCGetPartnerAccountLink_Response isAdult.
         * @member {boolean} isAdult
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @instance
         */
        CMsgGCGetPartnerAccountLink_Response.prototype.isAdult = false;
    
        /**
         * Creates a new CMsgGCGetPartnerAccountLink_Response instance using the specified properties.
         * @function create
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @static
         * @param {ICMsgGCGetPartnerAccountLink_Response=} [properties] Properties to set
         * @returns {CMsgGCGetPartnerAccountLink_Response} CMsgGCGetPartnerAccountLink_Response instance
         */
        CMsgGCGetPartnerAccountLink_Response.create = function create(properties) {
            return new CMsgGCGetPartnerAccountLink_Response(properties);
        };
    
        /**
         * Encodes the specified CMsgGCGetPartnerAccountLink_Response message. Does not implicitly {@link CMsgGCGetPartnerAccountLink_Response.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @static
         * @param {ICMsgGCGetPartnerAccountLink_Response} message CMsgGCGetPartnerAccountLink_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetPartnerAccountLink_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.pwid != null && Object.hasOwnProperty.call(message, "pwid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.pwid);
            if (message.nexonid != null && Object.hasOwnProperty.call(message, "nexonid"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.nexonid);
            if (message.ageclass != null && Object.hasOwnProperty.call(message, "ageclass"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.ageclass);
            if (message.idVerified != null && Object.hasOwnProperty.call(message, "idVerified"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.idVerified);
            if (message.isAdult != null && Object.hasOwnProperty.call(message, "isAdult"))
                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.isAdult);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCGetPartnerAccountLink_Response message, length delimited. Does not implicitly {@link CMsgGCGetPartnerAccountLink_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @static
         * @param {ICMsgGCGetPartnerAccountLink_Response} message CMsgGCGetPartnerAccountLink_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCGetPartnerAccountLink_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCGetPartnerAccountLink_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCGetPartnerAccountLink_Response} CMsgGCGetPartnerAccountLink_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetPartnerAccountLink_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCGetPartnerAccountLink_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.pwid = reader.uint32();
                        break;
                    }
                case 2: {
                        message.nexonid = reader.uint32();
                        break;
                    }
                case 3: {
                        message.ageclass = reader.int32();
                        break;
                    }
                case 4: {
                        message.idVerified = reader.bool();
                        break;
                    }
                case 5: {
                        message.isAdult = reader.bool();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCGetPartnerAccountLink_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCGetPartnerAccountLink_Response} CMsgGCGetPartnerAccountLink_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCGetPartnerAccountLink_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCGetPartnerAccountLink_Response message.
         * @function verify
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCGetPartnerAccountLink_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.pwid != null && message.hasOwnProperty("pwid"))
                if (!$util.isInteger(message.pwid))
                    return "pwid: integer expected";
            if (message.nexonid != null && message.hasOwnProperty("nexonid"))
                if (!$util.isInteger(message.nexonid))
                    return "nexonid: integer expected";
            if (message.ageclass != null && message.hasOwnProperty("ageclass"))
                if (!$util.isInteger(message.ageclass))
                    return "ageclass: integer expected";
            if (message.idVerified != null && message.hasOwnProperty("idVerified"))
                if (typeof message.idVerified !== "boolean")
                    return "idVerified: boolean expected";
            if (message.isAdult != null && message.hasOwnProperty("isAdult"))
                if (typeof message.isAdult !== "boolean")
                    return "isAdult: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCGetPartnerAccountLink_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCGetPartnerAccountLink_Response} CMsgGCGetPartnerAccountLink_Response
         */
        CMsgGCGetPartnerAccountLink_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCGetPartnerAccountLink_Response)
                return object;
            var message = new $root.CMsgGCGetPartnerAccountLink_Response();
            if (object.pwid != null)
                message.pwid = object.pwid >>> 0;
            if (object.nexonid != null)
                message.nexonid = object.nexonid >>> 0;
            if (object.ageclass != null)
                message.ageclass = object.ageclass | 0;
            if (object.idVerified != null)
                message.idVerified = Boolean(object.idVerified);
            if (object.isAdult != null)
                message.isAdult = Boolean(object.isAdult);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCGetPartnerAccountLink_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @static
         * @param {CMsgGCGetPartnerAccountLink_Response} message CMsgGCGetPartnerAccountLink_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCGetPartnerAccountLink_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.pwid = 0;
                object.nexonid = 0;
                object.ageclass = 0;
                object.idVerified = true;
                object.isAdult = false;
            }
            if (message.pwid != null && message.hasOwnProperty("pwid"))
                object.pwid = message.pwid;
            if (message.nexonid != null && message.hasOwnProperty("nexonid"))
                object.nexonid = message.nexonid;
            if (message.ageclass != null && message.hasOwnProperty("ageclass"))
                object.ageclass = message.ageclass;
            if (message.idVerified != null && message.hasOwnProperty("idVerified"))
                object.idVerified = message.idVerified;
            if (message.isAdult != null && message.hasOwnProperty("isAdult"))
                object.isAdult = message.isAdult;
            return object;
        };
    
        /**
         * Converts this CMsgGCGetPartnerAccountLink_Response to JSON.
         * @function toJSON
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCGetPartnerAccountLink_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCGetPartnerAccountLink_Response
         * @function getTypeUrl
         * @memberof CMsgGCGetPartnerAccountLink_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCGetPartnerAccountLink_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCGetPartnerAccountLink_Response";
        };
    
        return CMsgGCGetPartnerAccountLink_Response;
    })();
    
    $root.CMsgGCRoutingInfo = (function() {
    
        /**
         * Properties of a CMsgGCRoutingInfo.
         * @exports ICMsgGCRoutingInfo
         * @interface ICMsgGCRoutingInfo
         * @property {Array.<number>|null} [dirIndex] CMsgGCRoutingInfo dirIndex
         * @property {CMsgGCRoutingInfo.RoutingMethod|null} [method] CMsgGCRoutingInfo method
         * @property {CMsgGCRoutingInfo.RoutingMethod|null} [fallback] CMsgGCRoutingInfo fallback
         * @property {number|null} [protobufField] CMsgGCRoutingInfo protobufField
         * @property {string|null} [webapiParam] CMsgGCRoutingInfo webapiParam
         */
    
        /**
         * Constructs a new CMsgGCRoutingInfo.
         * @exports CMsgGCRoutingInfo
         * @classdesc Represents a CMsgGCRoutingInfo.
         * @implements ICMsgGCRoutingInfo
         * @constructor
         * @param {ICMsgGCRoutingInfo=} [properties] Properties to set
         */
        function CMsgGCRoutingInfo(properties) {
            this.dirIndex = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCRoutingInfo dirIndex.
         * @member {Array.<number>} dirIndex
         * @memberof CMsgGCRoutingInfo
         * @instance
         */
        CMsgGCRoutingInfo.prototype.dirIndex = $util.emptyArray;
    
        /**
         * CMsgGCRoutingInfo method.
         * @member {CMsgGCRoutingInfo.RoutingMethod} method
         * @memberof CMsgGCRoutingInfo
         * @instance
         */
        CMsgGCRoutingInfo.prototype.method = 0;
    
        /**
         * CMsgGCRoutingInfo fallback.
         * @member {CMsgGCRoutingInfo.RoutingMethod} fallback
         * @memberof CMsgGCRoutingInfo
         * @instance
         */
        CMsgGCRoutingInfo.prototype.fallback = 1;
    
        /**
         * CMsgGCRoutingInfo protobufField.
         * @member {number} protobufField
         * @memberof CMsgGCRoutingInfo
         * @instance
         */
        CMsgGCRoutingInfo.prototype.protobufField = 0;
    
        /**
         * CMsgGCRoutingInfo webapiParam.
         * @member {string} webapiParam
         * @memberof CMsgGCRoutingInfo
         * @instance
         */
        CMsgGCRoutingInfo.prototype.webapiParam = "";
    
        /**
         * Creates a new CMsgGCRoutingInfo instance using the specified properties.
         * @function create
         * @memberof CMsgGCRoutingInfo
         * @static
         * @param {ICMsgGCRoutingInfo=} [properties] Properties to set
         * @returns {CMsgGCRoutingInfo} CMsgGCRoutingInfo instance
         */
        CMsgGCRoutingInfo.create = function create(properties) {
            return new CMsgGCRoutingInfo(properties);
        };
    
        /**
         * Encodes the specified CMsgGCRoutingInfo message. Does not implicitly {@link CMsgGCRoutingInfo.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCRoutingInfo
         * @static
         * @param {ICMsgGCRoutingInfo} message CMsgGCRoutingInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCRoutingInfo.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.dirIndex != null && message.dirIndex.length)
                for (var i = 0; i < message.dirIndex.length; ++i)
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.dirIndex[i]);
            if (message.method != null && Object.hasOwnProperty.call(message, "method"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.method);
            if (message.fallback != null && Object.hasOwnProperty.call(message, "fallback"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.fallback);
            if (message.protobufField != null && Object.hasOwnProperty.call(message, "protobufField"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.protobufField);
            if (message.webapiParam != null && Object.hasOwnProperty.call(message, "webapiParam"))
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.webapiParam);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCRoutingInfo message, length delimited. Does not implicitly {@link CMsgGCRoutingInfo.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCRoutingInfo
         * @static
         * @param {ICMsgGCRoutingInfo} message CMsgGCRoutingInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCRoutingInfo.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCRoutingInfo message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCRoutingInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCRoutingInfo} CMsgGCRoutingInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCRoutingInfo.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCRoutingInfo();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.dirIndex && message.dirIndex.length))
                            message.dirIndex = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.dirIndex.push(reader.uint32());
                        } else
                            message.dirIndex.push(reader.uint32());
                        break;
                    }
                case 2: {
                        message.method = reader.int32();
                        break;
                    }
                case 3: {
                        message.fallback = reader.int32();
                        break;
                    }
                case 4: {
                        message.protobufField = reader.uint32();
                        break;
                    }
                case 5: {
                        message.webapiParam = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCRoutingInfo message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCRoutingInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCRoutingInfo} CMsgGCRoutingInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCRoutingInfo.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCRoutingInfo message.
         * @function verify
         * @memberof CMsgGCRoutingInfo
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCRoutingInfo.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.dirIndex != null && message.hasOwnProperty("dirIndex")) {
                if (!Array.isArray(message.dirIndex))
                    return "dirIndex: array expected";
                for (var i = 0; i < message.dirIndex.length; ++i)
                    if (!$util.isInteger(message.dirIndex[i]))
                        return "dirIndex: integer[] expected";
            }
            if (message.method != null && message.hasOwnProperty("method"))
                switch (message.method) {
                default:
                    return "method: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                    break;
                }
            if (message.fallback != null && message.hasOwnProperty("fallback"))
                switch (message.fallback) {
                default:
                    return "fallback: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                    break;
                }
            if (message.protobufField != null && message.hasOwnProperty("protobufField"))
                if (!$util.isInteger(message.protobufField))
                    return "protobufField: integer expected";
            if (message.webapiParam != null && message.hasOwnProperty("webapiParam"))
                if (!$util.isString(message.webapiParam))
                    return "webapiParam: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCRoutingInfo message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCRoutingInfo
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCRoutingInfo} CMsgGCRoutingInfo
         */
        CMsgGCRoutingInfo.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCRoutingInfo)
                return object;
            var message = new $root.CMsgGCRoutingInfo();
            if (object.dirIndex) {
                if (!Array.isArray(object.dirIndex))
                    throw TypeError(".CMsgGCRoutingInfo.dirIndex: array expected");
                message.dirIndex = [];
                for (var i = 0; i < object.dirIndex.length; ++i)
                    message.dirIndex[i] = object.dirIndex[i] >>> 0;
            }
            switch (object.method) {
            default:
                if (typeof object.method === "number") {
                    message.method = object.method;
                    break;
                }
                break;
            case "RANDOM":
            case 0:
                message.method = 0;
                break;
            case "DISCARD":
            case 1:
                message.method = 1;
                break;
            case "CLIENT_STEAMID":
            case 2:
                message.method = 2;
                break;
            case "PROTOBUF_FIELD_UINT64":
            case 3:
                message.method = 3;
                break;
            case "WEBAPI_PARAM_UINT64":
            case 4:
                message.method = 4;
                break;
            }
            switch (object.fallback) {
            case "RANDOM":
            case 0:
                message.fallback = 0;
                break;
            default:
                if (typeof object.fallback === "number") {
                    message.fallback = object.fallback;
                    break;
                }
                break;
            case "DISCARD":
            case 1:
                message.fallback = 1;
                break;
            case "CLIENT_STEAMID":
            case 2:
                message.fallback = 2;
                break;
            case "PROTOBUF_FIELD_UINT64":
            case 3:
                message.fallback = 3;
                break;
            case "WEBAPI_PARAM_UINT64":
            case 4:
                message.fallback = 4;
                break;
            }
            if (object.protobufField != null)
                message.protobufField = object.protobufField >>> 0;
            if (object.webapiParam != null)
                message.webapiParam = String(object.webapiParam);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCRoutingInfo message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCRoutingInfo
         * @static
         * @param {CMsgGCRoutingInfo} message CMsgGCRoutingInfo
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCRoutingInfo.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.dirIndex = [];
            if (options.defaults) {
                object.method = options.enums === String ? "RANDOM" : 0;
                object.fallback = options.enums === String ? "DISCARD" : 1;
                object.protobufField = 0;
                object.webapiParam = "";
            }
            if (message.dirIndex && message.dirIndex.length) {
                object.dirIndex = [];
                for (var j = 0; j < message.dirIndex.length; ++j)
                    object.dirIndex[j] = message.dirIndex[j];
            }
            if (message.method != null && message.hasOwnProperty("method"))
                object.method = options.enums === String ? $root.CMsgGCRoutingInfo.RoutingMethod[message.method] === undefined ? message.method : $root.CMsgGCRoutingInfo.RoutingMethod[message.method] : message.method;
            if (message.fallback != null && message.hasOwnProperty("fallback"))
                object.fallback = options.enums === String ? $root.CMsgGCRoutingInfo.RoutingMethod[message.fallback] === undefined ? message.fallback : $root.CMsgGCRoutingInfo.RoutingMethod[message.fallback] : message.fallback;
            if (message.protobufField != null && message.hasOwnProperty("protobufField"))
                object.protobufField = message.protobufField;
            if (message.webapiParam != null && message.hasOwnProperty("webapiParam"))
                object.webapiParam = message.webapiParam;
            return object;
        };
    
        /**
         * Converts this CMsgGCRoutingInfo to JSON.
         * @function toJSON
         * @memberof CMsgGCRoutingInfo
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCRoutingInfo.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCRoutingInfo
         * @function getTypeUrl
         * @memberof CMsgGCRoutingInfo
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCRoutingInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCRoutingInfo";
        };
    
        /**
         * RoutingMethod enum.
         * @name CMsgGCRoutingInfo.RoutingMethod
         * @enum {number}
         * @property {number} RANDOM=0 RANDOM value
         * @property {number} DISCARD=1 DISCARD value
         * @property {number} CLIENT_STEAMID=2 CLIENT_STEAMID value
         * @property {number} PROTOBUF_FIELD_UINT64=3 PROTOBUF_FIELD_UINT64 value
         * @property {number} WEBAPI_PARAM_UINT64=4 WEBAPI_PARAM_UINT64 value
         */
        CMsgGCRoutingInfo.RoutingMethod = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "RANDOM"] = 0;
            values[valuesById[1] = "DISCARD"] = 1;
            values[valuesById[2] = "CLIENT_STEAMID"] = 2;
            values[valuesById[3] = "PROTOBUF_FIELD_UINT64"] = 3;
            values[valuesById[4] = "WEBAPI_PARAM_UINT64"] = 4;
            return values;
        })();
    
        return CMsgGCRoutingInfo;
    })();
    
    $root.CMsgGCMsgMasterSetWebAPIRouting = (function() {
    
        /**
         * Properties of a CMsgGCMsgMasterSetWebAPIRouting.
         * @exports ICMsgGCMsgMasterSetWebAPIRouting
         * @interface ICMsgGCMsgMasterSetWebAPIRouting
         * @property {Array.<CMsgGCMsgMasterSetWebAPIRouting.IEntry>|null} [entries] CMsgGCMsgMasterSetWebAPIRouting entries
         */
    
        /**
         * Constructs a new CMsgGCMsgMasterSetWebAPIRouting.
         * @exports CMsgGCMsgMasterSetWebAPIRouting
         * @classdesc Represents a CMsgGCMsgMasterSetWebAPIRouting.
         * @implements ICMsgGCMsgMasterSetWebAPIRouting
         * @constructor
         * @param {ICMsgGCMsgMasterSetWebAPIRouting=} [properties] Properties to set
         */
        function CMsgGCMsgMasterSetWebAPIRouting(properties) {
            this.entries = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCMsgMasterSetWebAPIRouting entries.
         * @member {Array.<CMsgGCMsgMasterSetWebAPIRouting.IEntry>} entries
         * @memberof CMsgGCMsgMasterSetWebAPIRouting
         * @instance
         */
        CMsgGCMsgMasterSetWebAPIRouting.prototype.entries = $util.emptyArray;
    
        /**
         * Creates a new CMsgGCMsgMasterSetWebAPIRouting instance using the specified properties.
         * @function create
         * @memberof CMsgGCMsgMasterSetWebAPIRouting
         * @static
         * @param {ICMsgGCMsgMasterSetWebAPIRouting=} [properties] Properties to set
         * @returns {CMsgGCMsgMasterSetWebAPIRouting} CMsgGCMsgMasterSetWebAPIRouting instance
         */
        CMsgGCMsgMasterSetWebAPIRouting.create = function create(properties) {
            return new CMsgGCMsgMasterSetWebAPIRouting(properties);
        };
    
        /**
         * Encodes the specified CMsgGCMsgMasterSetWebAPIRouting message. Does not implicitly {@link CMsgGCMsgMasterSetWebAPIRouting.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCMsgMasterSetWebAPIRouting
         * @static
         * @param {ICMsgGCMsgMasterSetWebAPIRouting} message CMsgGCMsgMasterSetWebAPIRouting message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgMasterSetWebAPIRouting.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.entries != null && message.entries.length)
                for (var i = 0; i < message.entries.length; ++i)
                    $root.CMsgGCMsgMasterSetWebAPIRouting.Entry.encode(message.entries[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCMsgMasterSetWebAPIRouting message, length delimited. Does not implicitly {@link CMsgGCMsgMasterSetWebAPIRouting.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCMsgMasterSetWebAPIRouting
         * @static
         * @param {ICMsgGCMsgMasterSetWebAPIRouting} message CMsgGCMsgMasterSetWebAPIRouting message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgMasterSetWebAPIRouting.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCMsgMasterSetWebAPIRouting message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCMsgMasterSetWebAPIRouting
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCMsgMasterSetWebAPIRouting} CMsgGCMsgMasterSetWebAPIRouting
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgMasterSetWebAPIRouting.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCMsgMasterSetWebAPIRouting();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.entries && message.entries.length))
                            message.entries = [];
                        message.entries.push($root.CMsgGCMsgMasterSetWebAPIRouting.Entry.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCMsgMasterSetWebAPIRouting message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCMsgMasterSetWebAPIRouting
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCMsgMasterSetWebAPIRouting} CMsgGCMsgMasterSetWebAPIRouting
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgMasterSetWebAPIRouting.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCMsgMasterSetWebAPIRouting message.
         * @function verify
         * @memberof CMsgGCMsgMasterSetWebAPIRouting
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCMsgMasterSetWebAPIRouting.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.entries != null && message.hasOwnProperty("entries")) {
                if (!Array.isArray(message.entries))
                    return "entries: array expected";
                for (var i = 0; i < message.entries.length; ++i) {
                    var error = $root.CMsgGCMsgMasterSetWebAPIRouting.Entry.verify(message.entries[i]);
                    if (error)
                        return "entries." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCMsgMasterSetWebAPIRouting message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCMsgMasterSetWebAPIRouting
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCMsgMasterSetWebAPIRouting} CMsgGCMsgMasterSetWebAPIRouting
         */
        CMsgGCMsgMasterSetWebAPIRouting.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCMsgMasterSetWebAPIRouting)
                return object;
            var message = new $root.CMsgGCMsgMasterSetWebAPIRouting();
            if (object.entries) {
                if (!Array.isArray(object.entries))
                    throw TypeError(".CMsgGCMsgMasterSetWebAPIRouting.entries: array expected");
                message.entries = [];
                for (var i = 0; i < object.entries.length; ++i) {
                    if (typeof object.entries[i] !== "object")
                        throw TypeError(".CMsgGCMsgMasterSetWebAPIRouting.entries: object expected");
                    message.entries[i] = $root.CMsgGCMsgMasterSetWebAPIRouting.Entry.fromObject(object.entries[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCMsgMasterSetWebAPIRouting message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCMsgMasterSetWebAPIRouting
         * @static
         * @param {CMsgGCMsgMasterSetWebAPIRouting} message CMsgGCMsgMasterSetWebAPIRouting
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCMsgMasterSetWebAPIRouting.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.entries = [];
            if (message.entries && message.entries.length) {
                object.entries = [];
                for (var j = 0; j < message.entries.length; ++j)
                    object.entries[j] = $root.CMsgGCMsgMasterSetWebAPIRouting.Entry.toObject(message.entries[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgGCMsgMasterSetWebAPIRouting to JSON.
         * @function toJSON
         * @memberof CMsgGCMsgMasterSetWebAPIRouting
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCMsgMasterSetWebAPIRouting.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCMsgMasterSetWebAPIRouting
         * @function getTypeUrl
         * @memberof CMsgGCMsgMasterSetWebAPIRouting
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCMsgMasterSetWebAPIRouting.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCMsgMasterSetWebAPIRouting";
        };
    
        CMsgGCMsgMasterSetWebAPIRouting.Entry = (function() {
    
            /**
             * Properties of an Entry.
             * @memberof CMsgGCMsgMasterSetWebAPIRouting
             * @interface IEntry
             * @property {string|null} [interfaceName] Entry interfaceName
             * @property {string|null} [methodName] Entry methodName
             * @property {ICMsgGCRoutingInfo|null} [routing] Entry routing
             */
    
            /**
             * Constructs a new Entry.
             * @memberof CMsgGCMsgMasterSetWebAPIRouting
             * @classdesc Represents an Entry.
             * @implements IEntry
             * @constructor
             * @param {CMsgGCMsgMasterSetWebAPIRouting.IEntry=} [properties] Properties to set
             */
            function Entry(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Entry interfaceName.
             * @member {string} interfaceName
             * @memberof CMsgGCMsgMasterSetWebAPIRouting.Entry
             * @instance
             */
            Entry.prototype.interfaceName = "";
    
            /**
             * Entry methodName.
             * @member {string} methodName
             * @memberof CMsgGCMsgMasterSetWebAPIRouting.Entry
             * @instance
             */
            Entry.prototype.methodName = "";
    
            /**
             * Entry routing.
             * @member {ICMsgGCRoutingInfo|null|undefined} routing
             * @memberof CMsgGCMsgMasterSetWebAPIRouting.Entry
             * @instance
             */
            Entry.prototype.routing = null;
    
            /**
             * Creates a new Entry instance using the specified properties.
             * @function create
             * @memberof CMsgGCMsgMasterSetWebAPIRouting.Entry
             * @static
             * @param {CMsgGCMsgMasterSetWebAPIRouting.IEntry=} [properties] Properties to set
             * @returns {CMsgGCMsgMasterSetWebAPIRouting.Entry} Entry instance
             */
            Entry.create = function create(properties) {
                return new Entry(properties);
            };
    
            /**
             * Encodes the specified Entry message. Does not implicitly {@link CMsgGCMsgMasterSetWebAPIRouting.Entry.verify|verify} messages.
             * @function encode
             * @memberof CMsgGCMsgMasterSetWebAPIRouting.Entry
             * @static
             * @param {CMsgGCMsgMasterSetWebAPIRouting.IEntry} message Entry message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Entry.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.interfaceName != null && Object.hasOwnProperty.call(message, "interfaceName"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.interfaceName);
                if (message.methodName != null && Object.hasOwnProperty.call(message, "methodName"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.methodName);
                if (message.routing != null && Object.hasOwnProperty.call(message, "routing"))
                    $root.CMsgGCRoutingInfo.encode(message.routing, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                return writer;
            };
    
            /**
             * Encodes the specified Entry message, length delimited. Does not implicitly {@link CMsgGCMsgMasterSetWebAPIRouting.Entry.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgGCMsgMasterSetWebAPIRouting.Entry
             * @static
             * @param {CMsgGCMsgMasterSetWebAPIRouting.IEntry} message Entry message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Entry.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an Entry message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgGCMsgMasterSetWebAPIRouting.Entry
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgGCMsgMasterSetWebAPIRouting.Entry} Entry
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Entry.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCMsgMasterSetWebAPIRouting.Entry();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.interfaceName = reader.string();
                            break;
                        }
                    case 2: {
                            message.methodName = reader.string();
                            break;
                        }
                    case 3: {
                            message.routing = $root.CMsgGCRoutingInfo.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an Entry message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgGCMsgMasterSetWebAPIRouting.Entry
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgGCMsgMasterSetWebAPIRouting.Entry} Entry
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Entry.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an Entry message.
             * @function verify
             * @memberof CMsgGCMsgMasterSetWebAPIRouting.Entry
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Entry.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.interfaceName != null && message.hasOwnProperty("interfaceName"))
                    if (!$util.isString(message.interfaceName))
                        return "interfaceName: string expected";
                if (message.methodName != null && message.hasOwnProperty("methodName"))
                    if (!$util.isString(message.methodName))
                        return "methodName: string expected";
                if (message.routing != null && message.hasOwnProperty("routing")) {
                    var error = $root.CMsgGCRoutingInfo.verify(message.routing);
                    if (error)
                        return "routing." + error;
                }
                return null;
            };
    
            /**
             * Creates an Entry message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgGCMsgMasterSetWebAPIRouting.Entry
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgGCMsgMasterSetWebAPIRouting.Entry} Entry
             */
            Entry.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgGCMsgMasterSetWebAPIRouting.Entry)
                    return object;
                var message = new $root.CMsgGCMsgMasterSetWebAPIRouting.Entry();
                if (object.interfaceName != null)
                    message.interfaceName = String(object.interfaceName);
                if (object.methodName != null)
                    message.methodName = String(object.methodName);
                if (object.routing != null) {
                    if (typeof object.routing !== "object")
                        throw TypeError(".CMsgGCMsgMasterSetWebAPIRouting.Entry.routing: object expected");
                    message.routing = $root.CMsgGCRoutingInfo.fromObject(object.routing);
                }
                return message;
            };
    
            /**
             * Creates a plain object from an Entry message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgGCMsgMasterSetWebAPIRouting.Entry
             * @static
             * @param {CMsgGCMsgMasterSetWebAPIRouting.Entry} message Entry
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Entry.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.interfaceName = "";
                    object.methodName = "";
                    object.routing = null;
                }
                if (message.interfaceName != null && message.hasOwnProperty("interfaceName"))
                    object.interfaceName = message.interfaceName;
                if (message.methodName != null && message.hasOwnProperty("methodName"))
                    object.methodName = message.methodName;
                if (message.routing != null && message.hasOwnProperty("routing"))
                    object.routing = $root.CMsgGCRoutingInfo.toObject(message.routing, options);
                return object;
            };
    
            /**
             * Converts this Entry to JSON.
             * @function toJSON
             * @memberof CMsgGCMsgMasterSetWebAPIRouting.Entry
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Entry.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for Entry
             * @function getTypeUrl
             * @memberof CMsgGCMsgMasterSetWebAPIRouting.Entry
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Entry.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgGCMsgMasterSetWebAPIRouting.Entry";
            };
    
            return Entry;
        })();
    
        return CMsgGCMsgMasterSetWebAPIRouting;
    })();
    
    $root.CMsgGCMsgMasterSetClientMsgRouting = (function() {
    
        /**
         * Properties of a CMsgGCMsgMasterSetClientMsgRouting.
         * @exports ICMsgGCMsgMasterSetClientMsgRouting
         * @interface ICMsgGCMsgMasterSetClientMsgRouting
         * @property {Array.<CMsgGCMsgMasterSetClientMsgRouting.IEntry>|null} [entries] CMsgGCMsgMasterSetClientMsgRouting entries
         */
    
        /**
         * Constructs a new CMsgGCMsgMasterSetClientMsgRouting.
         * @exports CMsgGCMsgMasterSetClientMsgRouting
         * @classdesc Represents a CMsgGCMsgMasterSetClientMsgRouting.
         * @implements ICMsgGCMsgMasterSetClientMsgRouting
         * @constructor
         * @param {ICMsgGCMsgMasterSetClientMsgRouting=} [properties] Properties to set
         */
        function CMsgGCMsgMasterSetClientMsgRouting(properties) {
            this.entries = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCMsgMasterSetClientMsgRouting entries.
         * @member {Array.<CMsgGCMsgMasterSetClientMsgRouting.IEntry>} entries
         * @memberof CMsgGCMsgMasterSetClientMsgRouting
         * @instance
         */
        CMsgGCMsgMasterSetClientMsgRouting.prototype.entries = $util.emptyArray;
    
        /**
         * Creates a new CMsgGCMsgMasterSetClientMsgRouting instance using the specified properties.
         * @function create
         * @memberof CMsgGCMsgMasterSetClientMsgRouting
         * @static
         * @param {ICMsgGCMsgMasterSetClientMsgRouting=} [properties] Properties to set
         * @returns {CMsgGCMsgMasterSetClientMsgRouting} CMsgGCMsgMasterSetClientMsgRouting instance
         */
        CMsgGCMsgMasterSetClientMsgRouting.create = function create(properties) {
            return new CMsgGCMsgMasterSetClientMsgRouting(properties);
        };
    
        /**
         * Encodes the specified CMsgGCMsgMasterSetClientMsgRouting message. Does not implicitly {@link CMsgGCMsgMasterSetClientMsgRouting.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCMsgMasterSetClientMsgRouting
         * @static
         * @param {ICMsgGCMsgMasterSetClientMsgRouting} message CMsgGCMsgMasterSetClientMsgRouting message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgMasterSetClientMsgRouting.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.entries != null && message.entries.length)
                for (var i = 0; i < message.entries.length; ++i)
                    $root.CMsgGCMsgMasterSetClientMsgRouting.Entry.encode(message.entries[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCMsgMasterSetClientMsgRouting message, length delimited. Does not implicitly {@link CMsgGCMsgMasterSetClientMsgRouting.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCMsgMasterSetClientMsgRouting
         * @static
         * @param {ICMsgGCMsgMasterSetClientMsgRouting} message CMsgGCMsgMasterSetClientMsgRouting message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgMasterSetClientMsgRouting.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCMsgMasterSetClientMsgRouting message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCMsgMasterSetClientMsgRouting
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCMsgMasterSetClientMsgRouting} CMsgGCMsgMasterSetClientMsgRouting
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgMasterSetClientMsgRouting.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCMsgMasterSetClientMsgRouting();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.entries && message.entries.length))
                            message.entries = [];
                        message.entries.push($root.CMsgGCMsgMasterSetClientMsgRouting.Entry.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCMsgMasterSetClientMsgRouting message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCMsgMasterSetClientMsgRouting
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCMsgMasterSetClientMsgRouting} CMsgGCMsgMasterSetClientMsgRouting
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgMasterSetClientMsgRouting.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCMsgMasterSetClientMsgRouting message.
         * @function verify
         * @memberof CMsgGCMsgMasterSetClientMsgRouting
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCMsgMasterSetClientMsgRouting.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.entries != null && message.hasOwnProperty("entries")) {
                if (!Array.isArray(message.entries))
                    return "entries: array expected";
                for (var i = 0; i < message.entries.length; ++i) {
                    var error = $root.CMsgGCMsgMasterSetClientMsgRouting.Entry.verify(message.entries[i]);
                    if (error)
                        return "entries." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCMsgMasterSetClientMsgRouting message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCMsgMasterSetClientMsgRouting
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCMsgMasterSetClientMsgRouting} CMsgGCMsgMasterSetClientMsgRouting
         */
        CMsgGCMsgMasterSetClientMsgRouting.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCMsgMasterSetClientMsgRouting)
                return object;
            var message = new $root.CMsgGCMsgMasterSetClientMsgRouting();
            if (object.entries) {
                if (!Array.isArray(object.entries))
                    throw TypeError(".CMsgGCMsgMasterSetClientMsgRouting.entries: array expected");
                message.entries = [];
                for (var i = 0; i < object.entries.length; ++i) {
                    if (typeof object.entries[i] !== "object")
                        throw TypeError(".CMsgGCMsgMasterSetClientMsgRouting.entries: object expected");
                    message.entries[i] = $root.CMsgGCMsgMasterSetClientMsgRouting.Entry.fromObject(object.entries[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCMsgMasterSetClientMsgRouting message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCMsgMasterSetClientMsgRouting
         * @static
         * @param {CMsgGCMsgMasterSetClientMsgRouting} message CMsgGCMsgMasterSetClientMsgRouting
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCMsgMasterSetClientMsgRouting.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.entries = [];
            if (message.entries && message.entries.length) {
                object.entries = [];
                for (var j = 0; j < message.entries.length; ++j)
                    object.entries[j] = $root.CMsgGCMsgMasterSetClientMsgRouting.Entry.toObject(message.entries[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgGCMsgMasterSetClientMsgRouting to JSON.
         * @function toJSON
         * @memberof CMsgGCMsgMasterSetClientMsgRouting
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCMsgMasterSetClientMsgRouting.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCMsgMasterSetClientMsgRouting
         * @function getTypeUrl
         * @memberof CMsgGCMsgMasterSetClientMsgRouting
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCMsgMasterSetClientMsgRouting.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCMsgMasterSetClientMsgRouting";
        };
    
        CMsgGCMsgMasterSetClientMsgRouting.Entry = (function() {
    
            /**
             * Properties of an Entry.
             * @memberof CMsgGCMsgMasterSetClientMsgRouting
             * @interface IEntry
             * @property {number|null} [msgType] Entry msgType
             * @property {ICMsgGCRoutingInfo|null} [routing] Entry routing
             */
    
            /**
             * Constructs a new Entry.
             * @memberof CMsgGCMsgMasterSetClientMsgRouting
             * @classdesc Represents an Entry.
             * @implements IEntry
             * @constructor
             * @param {CMsgGCMsgMasterSetClientMsgRouting.IEntry=} [properties] Properties to set
             */
            function Entry(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Entry msgType.
             * @member {number} msgType
             * @memberof CMsgGCMsgMasterSetClientMsgRouting.Entry
             * @instance
             */
            Entry.prototype.msgType = 0;
    
            /**
             * Entry routing.
             * @member {ICMsgGCRoutingInfo|null|undefined} routing
             * @memberof CMsgGCMsgMasterSetClientMsgRouting.Entry
             * @instance
             */
            Entry.prototype.routing = null;
    
            /**
             * Creates a new Entry instance using the specified properties.
             * @function create
             * @memberof CMsgGCMsgMasterSetClientMsgRouting.Entry
             * @static
             * @param {CMsgGCMsgMasterSetClientMsgRouting.IEntry=} [properties] Properties to set
             * @returns {CMsgGCMsgMasterSetClientMsgRouting.Entry} Entry instance
             */
            Entry.create = function create(properties) {
                return new Entry(properties);
            };
    
            /**
             * Encodes the specified Entry message. Does not implicitly {@link CMsgGCMsgMasterSetClientMsgRouting.Entry.verify|verify} messages.
             * @function encode
             * @memberof CMsgGCMsgMasterSetClientMsgRouting.Entry
             * @static
             * @param {CMsgGCMsgMasterSetClientMsgRouting.IEntry} message Entry message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Entry.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.msgType != null && Object.hasOwnProperty.call(message, "msgType"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.msgType);
                if (message.routing != null && Object.hasOwnProperty.call(message, "routing"))
                    $root.CMsgGCRoutingInfo.encode(message.routing, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };
    
            /**
             * Encodes the specified Entry message, length delimited. Does not implicitly {@link CMsgGCMsgMasterSetClientMsgRouting.Entry.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgGCMsgMasterSetClientMsgRouting.Entry
             * @static
             * @param {CMsgGCMsgMasterSetClientMsgRouting.IEntry} message Entry message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Entry.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an Entry message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgGCMsgMasterSetClientMsgRouting.Entry
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgGCMsgMasterSetClientMsgRouting.Entry} Entry
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Entry.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCMsgMasterSetClientMsgRouting.Entry();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.msgType = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.routing = $root.CMsgGCRoutingInfo.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an Entry message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgGCMsgMasterSetClientMsgRouting.Entry
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgGCMsgMasterSetClientMsgRouting.Entry} Entry
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Entry.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an Entry message.
             * @function verify
             * @memberof CMsgGCMsgMasterSetClientMsgRouting.Entry
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Entry.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.msgType != null && message.hasOwnProperty("msgType"))
                    if (!$util.isInteger(message.msgType))
                        return "msgType: integer expected";
                if (message.routing != null && message.hasOwnProperty("routing")) {
                    var error = $root.CMsgGCRoutingInfo.verify(message.routing);
                    if (error)
                        return "routing." + error;
                }
                return null;
            };
    
            /**
             * Creates an Entry message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgGCMsgMasterSetClientMsgRouting.Entry
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgGCMsgMasterSetClientMsgRouting.Entry} Entry
             */
            Entry.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgGCMsgMasterSetClientMsgRouting.Entry)
                    return object;
                var message = new $root.CMsgGCMsgMasterSetClientMsgRouting.Entry();
                if (object.msgType != null)
                    message.msgType = object.msgType >>> 0;
                if (object.routing != null) {
                    if (typeof object.routing !== "object")
                        throw TypeError(".CMsgGCMsgMasterSetClientMsgRouting.Entry.routing: object expected");
                    message.routing = $root.CMsgGCRoutingInfo.fromObject(object.routing);
                }
                return message;
            };
    
            /**
             * Creates a plain object from an Entry message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgGCMsgMasterSetClientMsgRouting.Entry
             * @static
             * @param {CMsgGCMsgMasterSetClientMsgRouting.Entry} message Entry
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Entry.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.msgType = 0;
                    object.routing = null;
                }
                if (message.msgType != null && message.hasOwnProperty("msgType"))
                    object.msgType = message.msgType;
                if (message.routing != null && message.hasOwnProperty("routing"))
                    object.routing = $root.CMsgGCRoutingInfo.toObject(message.routing, options);
                return object;
            };
    
            /**
             * Converts this Entry to JSON.
             * @function toJSON
             * @memberof CMsgGCMsgMasterSetClientMsgRouting.Entry
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Entry.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for Entry
             * @function getTypeUrl
             * @memberof CMsgGCMsgMasterSetClientMsgRouting.Entry
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Entry.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgGCMsgMasterSetClientMsgRouting.Entry";
            };
    
            return Entry;
        })();
    
        return CMsgGCMsgMasterSetClientMsgRouting;
    })();
    
    $root.CMsgGCMsgMasterSetWebAPIRouting_Response = (function() {
    
        /**
         * Properties of a CMsgGCMsgMasterSetWebAPIRouting_Response.
         * @exports ICMsgGCMsgMasterSetWebAPIRouting_Response
         * @interface ICMsgGCMsgMasterSetWebAPIRouting_Response
         * @property {number|null} [eresult] CMsgGCMsgMasterSetWebAPIRouting_Response eresult
         */
    
        /**
         * Constructs a new CMsgGCMsgMasterSetWebAPIRouting_Response.
         * @exports CMsgGCMsgMasterSetWebAPIRouting_Response
         * @classdesc Represents a CMsgGCMsgMasterSetWebAPIRouting_Response.
         * @implements ICMsgGCMsgMasterSetWebAPIRouting_Response
         * @constructor
         * @param {ICMsgGCMsgMasterSetWebAPIRouting_Response=} [properties] Properties to set
         */
        function CMsgGCMsgMasterSetWebAPIRouting_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCMsgMasterSetWebAPIRouting_Response eresult.
         * @member {number} eresult
         * @memberof CMsgGCMsgMasterSetWebAPIRouting_Response
         * @instance
         */
        CMsgGCMsgMasterSetWebAPIRouting_Response.prototype.eresult = 2;
    
        /**
         * Creates a new CMsgGCMsgMasterSetWebAPIRouting_Response instance using the specified properties.
         * @function create
         * @memberof CMsgGCMsgMasterSetWebAPIRouting_Response
         * @static
         * @param {ICMsgGCMsgMasterSetWebAPIRouting_Response=} [properties] Properties to set
         * @returns {CMsgGCMsgMasterSetWebAPIRouting_Response} CMsgGCMsgMasterSetWebAPIRouting_Response instance
         */
        CMsgGCMsgMasterSetWebAPIRouting_Response.create = function create(properties) {
            return new CMsgGCMsgMasterSetWebAPIRouting_Response(properties);
        };
    
        /**
         * Encodes the specified CMsgGCMsgMasterSetWebAPIRouting_Response message. Does not implicitly {@link CMsgGCMsgMasterSetWebAPIRouting_Response.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCMsgMasterSetWebAPIRouting_Response
         * @static
         * @param {ICMsgGCMsgMasterSetWebAPIRouting_Response} message CMsgGCMsgMasterSetWebAPIRouting_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgMasterSetWebAPIRouting_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCMsgMasterSetWebAPIRouting_Response message, length delimited. Does not implicitly {@link CMsgGCMsgMasterSetWebAPIRouting_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCMsgMasterSetWebAPIRouting_Response
         * @static
         * @param {ICMsgGCMsgMasterSetWebAPIRouting_Response} message CMsgGCMsgMasterSetWebAPIRouting_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgMasterSetWebAPIRouting_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCMsgMasterSetWebAPIRouting_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCMsgMasterSetWebAPIRouting_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCMsgMasterSetWebAPIRouting_Response} CMsgGCMsgMasterSetWebAPIRouting_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgMasterSetWebAPIRouting_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCMsgMasterSetWebAPIRouting_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.eresult = reader.int32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCMsgMasterSetWebAPIRouting_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCMsgMasterSetWebAPIRouting_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCMsgMasterSetWebAPIRouting_Response} CMsgGCMsgMasterSetWebAPIRouting_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgMasterSetWebAPIRouting_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCMsgMasterSetWebAPIRouting_Response message.
         * @function verify
         * @memberof CMsgGCMsgMasterSetWebAPIRouting_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCMsgMasterSetWebAPIRouting_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCMsgMasterSetWebAPIRouting_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCMsgMasterSetWebAPIRouting_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCMsgMasterSetWebAPIRouting_Response} CMsgGCMsgMasterSetWebAPIRouting_Response
         */
        CMsgGCMsgMasterSetWebAPIRouting_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCMsgMasterSetWebAPIRouting_Response)
                return object;
            var message = new $root.CMsgGCMsgMasterSetWebAPIRouting_Response();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCMsgMasterSetWebAPIRouting_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCMsgMasterSetWebAPIRouting_Response
         * @static
         * @param {CMsgGCMsgMasterSetWebAPIRouting_Response} message CMsgGCMsgMasterSetWebAPIRouting_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCMsgMasterSetWebAPIRouting_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.eresult = 2;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            return object;
        };
    
        /**
         * Converts this CMsgGCMsgMasterSetWebAPIRouting_Response to JSON.
         * @function toJSON
         * @memberof CMsgGCMsgMasterSetWebAPIRouting_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCMsgMasterSetWebAPIRouting_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCMsgMasterSetWebAPIRouting_Response
         * @function getTypeUrl
         * @memberof CMsgGCMsgMasterSetWebAPIRouting_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCMsgMasterSetWebAPIRouting_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCMsgMasterSetWebAPIRouting_Response";
        };
    
        return CMsgGCMsgMasterSetWebAPIRouting_Response;
    })();
    
    $root.CMsgGCMsgMasterSetClientMsgRouting_Response = (function() {
    
        /**
         * Properties of a CMsgGCMsgMasterSetClientMsgRouting_Response.
         * @exports ICMsgGCMsgMasterSetClientMsgRouting_Response
         * @interface ICMsgGCMsgMasterSetClientMsgRouting_Response
         * @property {number|null} [eresult] CMsgGCMsgMasterSetClientMsgRouting_Response eresult
         */
    
        /**
         * Constructs a new CMsgGCMsgMasterSetClientMsgRouting_Response.
         * @exports CMsgGCMsgMasterSetClientMsgRouting_Response
         * @classdesc Represents a CMsgGCMsgMasterSetClientMsgRouting_Response.
         * @implements ICMsgGCMsgMasterSetClientMsgRouting_Response
         * @constructor
         * @param {ICMsgGCMsgMasterSetClientMsgRouting_Response=} [properties] Properties to set
         */
        function CMsgGCMsgMasterSetClientMsgRouting_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCMsgMasterSetClientMsgRouting_Response eresult.
         * @member {number} eresult
         * @memberof CMsgGCMsgMasterSetClientMsgRouting_Response
         * @instance
         */
        CMsgGCMsgMasterSetClientMsgRouting_Response.prototype.eresult = 2;
    
        /**
         * Creates a new CMsgGCMsgMasterSetClientMsgRouting_Response instance using the specified properties.
         * @function create
         * @memberof CMsgGCMsgMasterSetClientMsgRouting_Response
         * @static
         * @param {ICMsgGCMsgMasterSetClientMsgRouting_Response=} [properties] Properties to set
         * @returns {CMsgGCMsgMasterSetClientMsgRouting_Response} CMsgGCMsgMasterSetClientMsgRouting_Response instance
         */
        CMsgGCMsgMasterSetClientMsgRouting_Response.create = function create(properties) {
            return new CMsgGCMsgMasterSetClientMsgRouting_Response(properties);
        };
    
        /**
         * Encodes the specified CMsgGCMsgMasterSetClientMsgRouting_Response message. Does not implicitly {@link CMsgGCMsgMasterSetClientMsgRouting_Response.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCMsgMasterSetClientMsgRouting_Response
         * @static
         * @param {ICMsgGCMsgMasterSetClientMsgRouting_Response} message CMsgGCMsgMasterSetClientMsgRouting_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgMasterSetClientMsgRouting_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCMsgMasterSetClientMsgRouting_Response message, length delimited. Does not implicitly {@link CMsgGCMsgMasterSetClientMsgRouting_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCMsgMasterSetClientMsgRouting_Response
         * @static
         * @param {ICMsgGCMsgMasterSetClientMsgRouting_Response} message CMsgGCMsgMasterSetClientMsgRouting_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgMasterSetClientMsgRouting_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCMsgMasterSetClientMsgRouting_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCMsgMasterSetClientMsgRouting_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCMsgMasterSetClientMsgRouting_Response} CMsgGCMsgMasterSetClientMsgRouting_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgMasterSetClientMsgRouting_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCMsgMasterSetClientMsgRouting_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.eresult = reader.int32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCMsgMasterSetClientMsgRouting_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCMsgMasterSetClientMsgRouting_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCMsgMasterSetClientMsgRouting_Response} CMsgGCMsgMasterSetClientMsgRouting_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgMasterSetClientMsgRouting_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCMsgMasterSetClientMsgRouting_Response message.
         * @function verify
         * @memberof CMsgGCMsgMasterSetClientMsgRouting_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCMsgMasterSetClientMsgRouting_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCMsgMasterSetClientMsgRouting_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCMsgMasterSetClientMsgRouting_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCMsgMasterSetClientMsgRouting_Response} CMsgGCMsgMasterSetClientMsgRouting_Response
         */
        CMsgGCMsgMasterSetClientMsgRouting_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCMsgMasterSetClientMsgRouting_Response)
                return object;
            var message = new $root.CMsgGCMsgMasterSetClientMsgRouting_Response();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCMsgMasterSetClientMsgRouting_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCMsgMasterSetClientMsgRouting_Response
         * @static
         * @param {CMsgGCMsgMasterSetClientMsgRouting_Response} message CMsgGCMsgMasterSetClientMsgRouting_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCMsgMasterSetClientMsgRouting_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.eresult = 2;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            return object;
        };
    
        /**
         * Converts this CMsgGCMsgMasterSetClientMsgRouting_Response to JSON.
         * @function toJSON
         * @memberof CMsgGCMsgMasterSetClientMsgRouting_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCMsgMasterSetClientMsgRouting_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCMsgMasterSetClientMsgRouting_Response
         * @function getTypeUrl
         * @memberof CMsgGCMsgMasterSetClientMsgRouting_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCMsgMasterSetClientMsgRouting_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCMsgMasterSetClientMsgRouting_Response";
        };
    
        return CMsgGCMsgMasterSetClientMsgRouting_Response;
    })();
    
    $root.CMsgGCMsgSetOptions = (function() {
    
        /**
         * Properties of a CMsgGCMsgSetOptions.
         * @exports ICMsgGCMsgSetOptions
         * @interface ICMsgGCMsgSetOptions
         * @property {Array.<CMsgGCMsgSetOptions.Option>|null} [options] CMsgGCMsgSetOptions options
         * @property {Array.<CMsgGCMsgSetOptions.IMessageRange>|null} [clientMsgRanges] CMsgGCMsgSetOptions clientMsgRanges
         */
    
        /**
         * Constructs a new CMsgGCMsgSetOptions.
         * @exports CMsgGCMsgSetOptions
         * @classdesc Represents a CMsgGCMsgSetOptions.
         * @implements ICMsgGCMsgSetOptions
         * @constructor
         * @param {ICMsgGCMsgSetOptions=} [properties] Properties to set
         */
        function CMsgGCMsgSetOptions(properties) {
            this.options = [];
            this.clientMsgRanges = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCMsgSetOptions options.
         * @member {Array.<CMsgGCMsgSetOptions.Option>} options
         * @memberof CMsgGCMsgSetOptions
         * @instance
         */
        CMsgGCMsgSetOptions.prototype.options = $util.emptyArray;
    
        /**
         * CMsgGCMsgSetOptions clientMsgRanges.
         * @member {Array.<CMsgGCMsgSetOptions.IMessageRange>} clientMsgRanges
         * @memberof CMsgGCMsgSetOptions
         * @instance
         */
        CMsgGCMsgSetOptions.prototype.clientMsgRanges = $util.emptyArray;
    
        /**
         * Creates a new CMsgGCMsgSetOptions instance using the specified properties.
         * @function create
         * @memberof CMsgGCMsgSetOptions
         * @static
         * @param {ICMsgGCMsgSetOptions=} [properties] Properties to set
         * @returns {CMsgGCMsgSetOptions} CMsgGCMsgSetOptions instance
         */
        CMsgGCMsgSetOptions.create = function create(properties) {
            return new CMsgGCMsgSetOptions(properties);
        };
    
        /**
         * Encodes the specified CMsgGCMsgSetOptions message. Does not implicitly {@link CMsgGCMsgSetOptions.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCMsgSetOptions
         * @static
         * @param {ICMsgGCMsgSetOptions} message CMsgGCMsgSetOptions message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgSetOptions.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.options != null && message.options.length)
                for (var i = 0; i < message.options.length; ++i)
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.options[i]);
            if (message.clientMsgRanges != null && message.clientMsgRanges.length)
                for (var i = 0; i < message.clientMsgRanges.length; ++i)
                    $root.CMsgGCMsgSetOptions.MessageRange.encode(message.clientMsgRanges[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCMsgSetOptions message, length delimited. Does not implicitly {@link CMsgGCMsgSetOptions.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCMsgSetOptions
         * @static
         * @param {ICMsgGCMsgSetOptions} message CMsgGCMsgSetOptions message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMsgSetOptions.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCMsgSetOptions message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCMsgSetOptions
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCMsgSetOptions} CMsgGCMsgSetOptions
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgSetOptions.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCMsgSetOptions();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.options && message.options.length))
                            message.options = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.options.push(reader.int32());
                        } else
                            message.options.push(reader.int32());
                        break;
                    }
                case 2: {
                        if (!(message.clientMsgRanges && message.clientMsgRanges.length))
                            message.clientMsgRanges = [];
                        message.clientMsgRanges.push($root.CMsgGCMsgSetOptions.MessageRange.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCMsgSetOptions message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCMsgSetOptions
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCMsgSetOptions} CMsgGCMsgSetOptions
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMsgSetOptions.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCMsgSetOptions message.
         * @function verify
         * @memberof CMsgGCMsgSetOptions
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCMsgSetOptions.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.options != null && message.hasOwnProperty("options")) {
                if (!Array.isArray(message.options))
                    return "options: array expected";
                for (var i = 0; i < message.options.length; ++i)
                    switch (message.options[i]) {
                    default:
                        return "options: enum value[] expected";
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    }
            }
            if (message.clientMsgRanges != null && message.hasOwnProperty("clientMsgRanges")) {
                if (!Array.isArray(message.clientMsgRanges))
                    return "clientMsgRanges: array expected";
                for (var i = 0; i < message.clientMsgRanges.length; ++i) {
                    var error = $root.CMsgGCMsgSetOptions.MessageRange.verify(message.clientMsgRanges[i]);
                    if (error)
                        return "clientMsgRanges." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCMsgSetOptions message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCMsgSetOptions
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCMsgSetOptions} CMsgGCMsgSetOptions
         */
        CMsgGCMsgSetOptions.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCMsgSetOptions)
                return object;
            var message = new $root.CMsgGCMsgSetOptions();
            if (object.options) {
                if (!Array.isArray(object.options))
                    throw TypeError(".CMsgGCMsgSetOptions.options: array expected");
                message.options = [];
                for (var i = 0; i < object.options.length; ++i)
                    switch (object.options[i]) {
                    default:
                        if (typeof object.options[i] === "number") {
                            message.options[i] = object.options[i];
                            break;
                        }
                    case "NOTIFY_USER_SESSIONS":
                    case 0:
                        message.options[i] = 0;
                        break;
                    case "NOTIFY_SERVER_SESSIONS":
                    case 1:
                        message.options[i] = 1;
                        break;
                    case "NOTIFY_ACHIEVEMENTS":
                    case 2:
                        message.options[i] = 2;
                        break;
                    case "NOTIFY_VAC_ACTION":
                    case 3:
                        message.options[i] = 3;
                        break;
                    }
            }
            if (object.clientMsgRanges) {
                if (!Array.isArray(object.clientMsgRanges))
                    throw TypeError(".CMsgGCMsgSetOptions.clientMsgRanges: array expected");
                message.clientMsgRanges = [];
                for (var i = 0; i < object.clientMsgRanges.length; ++i) {
                    if (typeof object.clientMsgRanges[i] !== "object")
                        throw TypeError(".CMsgGCMsgSetOptions.clientMsgRanges: object expected");
                    message.clientMsgRanges[i] = $root.CMsgGCMsgSetOptions.MessageRange.fromObject(object.clientMsgRanges[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCMsgSetOptions message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCMsgSetOptions
         * @static
         * @param {CMsgGCMsgSetOptions} message CMsgGCMsgSetOptions
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCMsgSetOptions.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.options = [];
                object.clientMsgRanges = [];
            }
            if (message.options && message.options.length) {
                object.options = [];
                for (var j = 0; j < message.options.length; ++j)
                    object.options[j] = options.enums === String ? $root.CMsgGCMsgSetOptions.Option[message.options[j]] === undefined ? message.options[j] : $root.CMsgGCMsgSetOptions.Option[message.options[j]] : message.options[j];
            }
            if (message.clientMsgRanges && message.clientMsgRanges.length) {
                object.clientMsgRanges = [];
                for (var j = 0; j < message.clientMsgRanges.length; ++j)
                    object.clientMsgRanges[j] = $root.CMsgGCMsgSetOptions.MessageRange.toObject(message.clientMsgRanges[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgGCMsgSetOptions to JSON.
         * @function toJSON
         * @memberof CMsgGCMsgSetOptions
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCMsgSetOptions.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCMsgSetOptions
         * @function getTypeUrl
         * @memberof CMsgGCMsgSetOptions
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCMsgSetOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCMsgSetOptions";
        };
    
        CMsgGCMsgSetOptions.MessageRange = (function() {
    
            /**
             * Properties of a MessageRange.
             * @memberof CMsgGCMsgSetOptions
             * @interface IMessageRange
             * @property {number} low MessageRange low
             * @property {number} high MessageRange high
             */
    
            /**
             * Constructs a new MessageRange.
             * @memberof CMsgGCMsgSetOptions
             * @classdesc Represents a MessageRange.
             * @implements IMessageRange
             * @constructor
             * @param {CMsgGCMsgSetOptions.IMessageRange=} [properties] Properties to set
             */
            function MessageRange(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * MessageRange low.
             * @member {number} low
             * @memberof CMsgGCMsgSetOptions.MessageRange
             * @instance
             */
            MessageRange.prototype.low = 0;
    
            /**
             * MessageRange high.
             * @member {number} high
             * @memberof CMsgGCMsgSetOptions.MessageRange
             * @instance
             */
            MessageRange.prototype.high = 0;
    
            /**
             * Creates a new MessageRange instance using the specified properties.
             * @function create
             * @memberof CMsgGCMsgSetOptions.MessageRange
             * @static
             * @param {CMsgGCMsgSetOptions.IMessageRange=} [properties] Properties to set
             * @returns {CMsgGCMsgSetOptions.MessageRange} MessageRange instance
             */
            MessageRange.create = function create(properties) {
                return new MessageRange(properties);
            };
    
            /**
             * Encodes the specified MessageRange message. Does not implicitly {@link CMsgGCMsgSetOptions.MessageRange.verify|verify} messages.
             * @function encode
             * @memberof CMsgGCMsgSetOptions.MessageRange
             * @static
             * @param {CMsgGCMsgSetOptions.IMessageRange} message MessageRange message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MessageRange.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.low);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.high);
                return writer;
            };
    
            /**
             * Encodes the specified MessageRange message, length delimited. Does not implicitly {@link CMsgGCMsgSetOptions.MessageRange.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgGCMsgSetOptions.MessageRange
             * @static
             * @param {CMsgGCMsgSetOptions.IMessageRange} message MessageRange message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MessageRange.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a MessageRange message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgGCMsgSetOptions.MessageRange
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgGCMsgSetOptions.MessageRange} MessageRange
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MessageRange.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCMsgSetOptions.MessageRange();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.low = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.high = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("low"))
                    throw $util.ProtocolError("missing required 'low'", { instance: message });
                if (!message.hasOwnProperty("high"))
                    throw $util.ProtocolError("missing required 'high'", { instance: message });
                return message;
            };
    
            /**
             * Decodes a MessageRange message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgGCMsgSetOptions.MessageRange
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgGCMsgSetOptions.MessageRange} MessageRange
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MessageRange.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a MessageRange message.
             * @function verify
             * @memberof CMsgGCMsgSetOptions.MessageRange
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MessageRange.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.low))
                    return "low: integer expected";
                if (!$util.isInteger(message.high))
                    return "high: integer expected";
                return null;
            };
    
            /**
             * Creates a MessageRange message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgGCMsgSetOptions.MessageRange
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgGCMsgSetOptions.MessageRange} MessageRange
             */
            MessageRange.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgGCMsgSetOptions.MessageRange)
                    return object;
                var message = new $root.CMsgGCMsgSetOptions.MessageRange();
                if (object.low != null)
                    message.low = object.low >>> 0;
                if (object.high != null)
                    message.high = object.high >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a MessageRange message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgGCMsgSetOptions.MessageRange
             * @static
             * @param {CMsgGCMsgSetOptions.MessageRange} message MessageRange
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MessageRange.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.low = 0;
                    object.high = 0;
                }
                if (message.low != null && message.hasOwnProperty("low"))
                    object.low = message.low;
                if (message.high != null && message.hasOwnProperty("high"))
                    object.high = message.high;
                return object;
            };
    
            /**
             * Converts this MessageRange to JSON.
             * @function toJSON
             * @memberof CMsgGCMsgSetOptions.MessageRange
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MessageRange.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for MessageRange
             * @function getTypeUrl
             * @memberof CMsgGCMsgSetOptions.MessageRange
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            MessageRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgGCMsgSetOptions.MessageRange";
            };
    
            return MessageRange;
        })();
    
        /**
         * Option enum.
         * @name CMsgGCMsgSetOptions.Option
         * @enum {number}
         * @property {number} NOTIFY_USER_SESSIONS=0 NOTIFY_USER_SESSIONS value
         * @property {number} NOTIFY_SERVER_SESSIONS=1 NOTIFY_SERVER_SESSIONS value
         * @property {number} NOTIFY_ACHIEVEMENTS=2 NOTIFY_ACHIEVEMENTS value
         * @property {number} NOTIFY_VAC_ACTION=3 NOTIFY_VAC_ACTION value
         */
        CMsgGCMsgSetOptions.Option = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "NOTIFY_USER_SESSIONS"] = 0;
            values[valuesById[1] = "NOTIFY_SERVER_SESSIONS"] = 1;
            values[valuesById[2] = "NOTIFY_ACHIEVEMENTS"] = 2;
            values[valuesById[3] = "NOTIFY_VAC_ACTION"] = 3;
            return values;
        })();
    
        return CMsgGCMsgSetOptions;
    })();
    
    $root.CMsgGCHUpdateSession = (function() {
    
        /**
         * Properties of a CMsgGCHUpdateSession.
         * @exports ICMsgGCHUpdateSession
         * @interface ICMsgGCHUpdateSession
         * @property {number|Long|null} [steamId] CMsgGCHUpdateSession steamId
         * @property {number|null} [appId] CMsgGCHUpdateSession appId
         * @property {boolean|null} [online] CMsgGCHUpdateSession online
         * @property {number|Long|null} [serverSteamId] CMsgGCHUpdateSession serverSteamId
         * @property {number|null} [serverAddr] CMsgGCHUpdateSession serverAddr
         * @property {number|null} [serverPort] CMsgGCHUpdateSession serverPort
         * @property {number|null} [osType] CMsgGCHUpdateSession osType
         * @property {number|null} [clientAddr] CMsgGCHUpdateSession clientAddr
         * @property {Array.<CMsgGCHUpdateSession.IExtraField>|null} [extraFields] CMsgGCHUpdateSession extraFields
         * @property {number|Long|null} [ownerId] CMsgGCHUpdateSession ownerId
         * @property {number|null} [cmSessionSysid] CMsgGCHUpdateSession cmSessionSysid
         * @property {number|null} [cmSessionIdentifier] CMsgGCHUpdateSession cmSessionIdentifier
         * @property {Array.<number>|null} [depotIds] CMsgGCHUpdateSession depotIds
         */
    
        /**
         * Constructs a new CMsgGCHUpdateSession.
         * @exports CMsgGCHUpdateSession
         * @classdesc Represents a CMsgGCHUpdateSession.
         * @implements ICMsgGCHUpdateSession
         * @constructor
         * @param {ICMsgGCHUpdateSession=} [properties] Properties to set
         */
        function CMsgGCHUpdateSession(properties) {
            this.extraFields = [];
            this.depotIds = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCHUpdateSession steamId.
         * @member {number|Long} steamId
         * @memberof CMsgGCHUpdateSession
         * @instance
         */
        CMsgGCHUpdateSession.prototype.steamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGCHUpdateSession appId.
         * @member {number} appId
         * @memberof CMsgGCHUpdateSession
         * @instance
         */
        CMsgGCHUpdateSession.prototype.appId = 0;
    
        /**
         * CMsgGCHUpdateSession online.
         * @member {boolean} online
         * @memberof CMsgGCHUpdateSession
         * @instance
         */
        CMsgGCHUpdateSession.prototype.online = false;
    
        /**
         * CMsgGCHUpdateSession serverSteamId.
         * @member {number|Long} serverSteamId
         * @memberof CMsgGCHUpdateSession
         * @instance
         */
        CMsgGCHUpdateSession.prototype.serverSteamId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGCHUpdateSession serverAddr.
         * @member {number} serverAddr
         * @memberof CMsgGCHUpdateSession
         * @instance
         */
        CMsgGCHUpdateSession.prototype.serverAddr = 0;
    
        /**
         * CMsgGCHUpdateSession serverPort.
         * @member {number} serverPort
         * @memberof CMsgGCHUpdateSession
         * @instance
         */
        CMsgGCHUpdateSession.prototype.serverPort = 0;
    
        /**
         * CMsgGCHUpdateSession osType.
         * @member {number} osType
         * @memberof CMsgGCHUpdateSession
         * @instance
         */
        CMsgGCHUpdateSession.prototype.osType = 0;
    
        /**
         * CMsgGCHUpdateSession clientAddr.
         * @member {number} clientAddr
         * @memberof CMsgGCHUpdateSession
         * @instance
         */
        CMsgGCHUpdateSession.prototype.clientAddr = 0;
    
        /**
         * CMsgGCHUpdateSession extraFields.
         * @member {Array.<CMsgGCHUpdateSession.IExtraField>} extraFields
         * @memberof CMsgGCHUpdateSession
         * @instance
         */
        CMsgGCHUpdateSession.prototype.extraFields = $util.emptyArray;
    
        /**
         * CMsgGCHUpdateSession ownerId.
         * @member {number|Long} ownerId
         * @memberof CMsgGCHUpdateSession
         * @instance
         */
        CMsgGCHUpdateSession.prototype.ownerId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGCHUpdateSession cmSessionSysid.
         * @member {number} cmSessionSysid
         * @memberof CMsgGCHUpdateSession
         * @instance
         */
        CMsgGCHUpdateSession.prototype.cmSessionSysid = 0;
    
        /**
         * CMsgGCHUpdateSession cmSessionIdentifier.
         * @member {number} cmSessionIdentifier
         * @memberof CMsgGCHUpdateSession
         * @instance
         */
        CMsgGCHUpdateSession.prototype.cmSessionIdentifier = 0;
    
        /**
         * CMsgGCHUpdateSession depotIds.
         * @member {Array.<number>} depotIds
         * @memberof CMsgGCHUpdateSession
         * @instance
         */
        CMsgGCHUpdateSession.prototype.depotIds = $util.emptyArray;
    
        /**
         * Creates a new CMsgGCHUpdateSession instance using the specified properties.
         * @function create
         * @memberof CMsgGCHUpdateSession
         * @static
         * @param {ICMsgGCHUpdateSession=} [properties] Properties to set
         * @returns {CMsgGCHUpdateSession} CMsgGCHUpdateSession instance
         */
        CMsgGCHUpdateSession.create = function create(properties) {
            return new CMsgGCHUpdateSession(properties);
        };
    
        /**
         * Encodes the specified CMsgGCHUpdateSession message. Does not implicitly {@link CMsgGCHUpdateSession.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCHUpdateSession
         * @static
         * @param {ICMsgGCHUpdateSession} message CMsgGCHUpdateSession message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCHUpdateSession.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamId != null && Object.hasOwnProperty.call(message, "steamId"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamId);
            if (message.appId != null && Object.hasOwnProperty.call(message, "appId"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.appId);
            if (message.online != null && Object.hasOwnProperty.call(message, "online"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.online);
            if (message.serverSteamId != null && Object.hasOwnProperty.call(message, "serverSteamId"))
                writer.uint32(/* id 4, wireType 1 =*/33).fixed64(message.serverSteamId);
            if (message.serverAddr != null && Object.hasOwnProperty.call(message, "serverAddr"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.serverAddr);
            if (message.serverPort != null && Object.hasOwnProperty.call(message, "serverPort"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.serverPort);
            if (message.osType != null && Object.hasOwnProperty.call(message, "osType"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.osType);
            if (message.clientAddr != null && Object.hasOwnProperty.call(message, "clientAddr"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.clientAddr);
            if (message.extraFields != null && message.extraFields.length)
                for (var i = 0; i < message.extraFields.length; ++i)
                    $root.CMsgGCHUpdateSession.ExtraField.encode(message.extraFields[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
            if (message.ownerId != null && Object.hasOwnProperty.call(message, "ownerId"))
                writer.uint32(/* id 10, wireType 1 =*/81).fixed64(message.ownerId);
            if (message.cmSessionSysid != null && Object.hasOwnProperty.call(message, "cmSessionSysid"))
                writer.uint32(/* id 11, wireType 0 =*/88).uint32(message.cmSessionSysid);
            if (message.cmSessionIdentifier != null && Object.hasOwnProperty.call(message, "cmSessionIdentifier"))
                writer.uint32(/* id 12, wireType 0 =*/96).uint32(message.cmSessionIdentifier);
            if (message.depotIds != null && message.depotIds.length)
                for (var i = 0; i < message.depotIds.length; ++i)
                    writer.uint32(/* id 13, wireType 0 =*/104).uint32(message.depotIds[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCHUpdateSession message, length delimited. Does not implicitly {@link CMsgGCHUpdateSession.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCHUpdateSession
         * @static
         * @param {ICMsgGCHUpdateSession} message CMsgGCHUpdateSession message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCHUpdateSession.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCHUpdateSession message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCHUpdateSession
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCHUpdateSession} CMsgGCHUpdateSession
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCHUpdateSession.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCHUpdateSession();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamId = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.appId = reader.uint32();
                        break;
                    }
                case 3: {
                        message.online = reader.bool();
                        break;
                    }
                case 4: {
                        message.serverSteamId = reader.fixed64();
                        break;
                    }
                case 5: {
                        message.serverAddr = reader.uint32();
                        break;
                    }
                case 6: {
                        message.serverPort = reader.uint32();
                        break;
                    }
                case 7: {
                        message.osType = reader.uint32();
                        break;
                    }
                case 8: {
                        message.clientAddr = reader.uint32();
                        break;
                    }
                case 9: {
                        if (!(message.extraFields && message.extraFields.length))
                            message.extraFields = [];
                        message.extraFields.push($root.CMsgGCHUpdateSession.ExtraField.decode(reader, reader.uint32()));
                        break;
                    }
                case 10: {
                        message.ownerId = reader.fixed64();
                        break;
                    }
                case 11: {
                        message.cmSessionSysid = reader.uint32();
                        break;
                    }
                case 12: {
                        message.cmSessionIdentifier = reader.uint32();
                        break;
                    }
                case 13: {
                        if (!(message.depotIds && message.depotIds.length))
                            message.depotIds = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.depotIds.push(reader.uint32());
                        } else
                            message.depotIds.push(reader.uint32());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCHUpdateSession message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCHUpdateSession
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCHUpdateSession} CMsgGCHUpdateSession
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCHUpdateSession.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCHUpdateSession message.
         * @function verify
         * @memberof CMsgGCHUpdateSession
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCHUpdateSession.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (!$util.isInteger(message.steamId) && !(message.steamId && $util.isInteger(message.steamId.low) && $util.isInteger(message.steamId.high)))
                    return "steamId: integer|Long expected";
            if (message.appId != null && message.hasOwnProperty("appId"))
                if (!$util.isInteger(message.appId))
                    return "appId: integer expected";
            if (message.online != null && message.hasOwnProperty("online"))
                if (typeof message.online !== "boolean")
                    return "online: boolean expected";
            if (message.serverSteamId != null && message.hasOwnProperty("serverSteamId"))
                if (!$util.isInteger(message.serverSteamId) && !(message.serverSteamId && $util.isInteger(message.serverSteamId.low) && $util.isInteger(message.serverSteamId.high)))
                    return "serverSteamId: integer|Long expected";
            if (message.serverAddr != null && message.hasOwnProperty("serverAddr"))
                if (!$util.isInteger(message.serverAddr))
                    return "serverAddr: integer expected";
            if (message.serverPort != null && message.hasOwnProperty("serverPort"))
                if (!$util.isInteger(message.serverPort))
                    return "serverPort: integer expected";
            if (message.osType != null && message.hasOwnProperty("osType"))
                if (!$util.isInteger(message.osType))
                    return "osType: integer expected";
            if (message.clientAddr != null && message.hasOwnProperty("clientAddr"))
                if (!$util.isInteger(message.clientAddr))
                    return "clientAddr: integer expected";
            if (message.extraFields != null && message.hasOwnProperty("extraFields")) {
                if (!Array.isArray(message.extraFields))
                    return "extraFields: array expected";
                for (var i = 0; i < message.extraFields.length; ++i) {
                    var error = $root.CMsgGCHUpdateSession.ExtraField.verify(message.extraFields[i]);
                    if (error)
                        return "extraFields." + error;
                }
            }
            if (message.ownerId != null && message.hasOwnProperty("ownerId"))
                if (!$util.isInteger(message.ownerId) && !(message.ownerId && $util.isInteger(message.ownerId.low) && $util.isInteger(message.ownerId.high)))
                    return "ownerId: integer|Long expected";
            if (message.cmSessionSysid != null && message.hasOwnProperty("cmSessionSysid"))
                if (!$util.isInteger(message.cmSessionSysid))
                    return "cmSessionSysid: integer expected";
            if (message.cmSessionIdentifier != null && message.hasOwnProperty("cmSessionIdentifier"))
                if (!$util.isInteger(message.cmSessionIdentifier))
                    return "cmSessionIdentifier: integer expected";
            if (message.depotIds != null && message.hasOwnProperty("depotIds")) {
                if (!Array.isArray(message.depotIds))
                    return "depotIds: array expected";
                for (var i = 0; i < message.depotIds.length; ++i)
                    if (!$util.isInteger(message.depotIds[i]))
                        return "depotIds: integer[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCHUpdateSession message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCHUpdateSession
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCHUpdateSession} CMsgGCHUpdateSession
         */
        CMsgGCHUpdateSession.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCHUpdateSession)
                return object;
            var message = new $root.CMsgGCHUpdateSession();
            if (object.steamId != null)
                if ($util.Long)
                    (message.steamId = $util.Long.fromValue(object.steamId)).unsigned = false;
                else if (typeof object.steamId === "string")
                    message.steamId = parseInt(object.steamId, 10);
                else if (typeof object.steamId === "number")
                    message.steamId = object.steamId;
                else if (typeof object.steamId === "object")
                    message.steamId = new $util.LongBits(object.steamId.low >>> 0, object.steamId.high >>> 0).toNumber();
            if (object.appId != null)
                message.appId = object.appId >>> 0;
            if (object.online != null)
                message.online = Boolean(object.online);
            if (object.serverSteamId != null)
                if ($util.Long)
                    (message.serverSteamId = $util.Long.fromValue(object.serverSteamId)).unsigned = false;
                else if (typeof object.serverSteamId === "string")
                    message.serverSteamId = parseInt(object.serverSteamId, 10);
                else if (typeof object.serverSteamId === "number")
                    message.serverSteamId = object.serverSteamId;
                else if (typeof object.serverSteamId === "object")
                    message.serverSteamId = new $util.LongBits(object.serverSteamId.low >>> 0, object.serverSteamId.high >>> 0).toNumber();
            if (object.serverAddr != null)
                message.serverAddr = object.serverAddr >>> 0;
            if (object.serverPort != null)
                message.serverPort = object.serverPort >>> 0;
            if (object.osType != null)
                message.osType = object.osType >>> 0;
            if (object.clientAddr != null)
                message.clientAddr = object.clientAddr >>> 0;
            if (object.extraFields) {
                if (!Array.isArray(object.extraFields))
                    throw TypeError(".CMsgGCHUpdateSession.extraFields: array expected");
                message.extraFields = [];
                for (var i = 0; i < object.extraFields.length; ++i) {
                    if (typeof object.extraFields[i] !== "object")
                        throw TypeError(".CMsgGCHUpdateSession.extraFields: object expected");
                    message.extraFields[i] = $root.CMsgGCHUpdateSession.ExtraField.fromObject(object.extraFields[i]);
                }
            }
            if (object.ownerId != null)
                if ($util.Long)
                    (message.ownerId = $util.Long.fromValue(object.ownerId)).unsigned = false;
                else if (typeof object.ownerId === "string")
                    message.ownerId = parseInt(object.ownerId, 10);
                else if (typeof object.ownerId === "number")
                    message.ownerId = object.ownerId;
                else if (typeof object.ownerId === "object")
                    message.ownerId = new $util.LongBits(object.ownerId.low >>> 0, object.ownerId.high >>> 0).toNumber();
            if (object.cmSessionSysid != null)
                message.cmSessionSysid = object.cmSessionSysid >>> 0;
            if (object.cmSessionIdentifier != null)
                message.cmSessionIdentifier = object.cmSessionIdentifier >>> 0;
            if (object.depotIds) {
                if (!Array.isArray(object.depotIds))
                    throw TypeError(".CMsgGCHUpdateSession.depotIds: array expected");
                message.depotIds = [];
                for (var i = 0; i < object.depotIds.length; ++i)
                    message.depotIds[i] = object.depotIds[i] >>> 0;
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCHUpdateSession message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCHUpdateSession
         * @static
         * @param {CMsgGCHUpdateSession} message CMsgGCHUpdateSession
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCHUpdateSession.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.extraFields = [];
                object.depotIds = [];
            }
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamId = options.longs === String ? "0" : 0;
                object.appId = 0;
                object.online = false;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.serverSteamId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.serverSteamId = options.longs === String ? "0" : 0;
                object.serverAddr = 0;
                object.serverPort = 0;
                object.osType = 0;
                object.clientAddr = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.ownerId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.ownerId = options.longs === String ? "0" : 0;
                object.cmSessionSysid = 0;
                object.cmSessionIdentifier = 0;
            }
            if (message.steamId != null && message.hasOwnProperty("steamId"))
                if (typeof message.steamId === "number")
                    object.steamId = options.longs === String ? String(message.steamId) : message.steamId;
                else
                    object.steamId = options.longs === String ? $util.Long.prototype.toString.call(message.steamId) : options.longs === Number ? new $util.LongBits(message.steamId.low >>> 0, message.steamId.high >>> 0).toNumber() : message.steamId;
            if (message.appId != null && message.hasOwnProperty("appId"))
                object.appId = message.appId;
            if (message.online != null && message.hasOwnProperty("online"))
                object.online = message.online;
            if (message.serverSteamId != null && message.hasOwnProperty("serverSteamId"))
                if (typeof message.serverSteamId === "number")
                    object.serverSteamId = options.longs === String ? String(message.serverSteamId) : message.serverSteamId;
                else
                    object.serverSteamId = options.longs === String ? $util.Long.prototype.toString.call(message.serverSteamId) : options.longs === Number ? new $util.LongBits(message.serverSteamId.low >>> 0, message.serverSteamId.high >>> 0).toNumber() : message.serverSteamId;
            if (message.serverAddr != null && message.hasOwnProperty("serverAddr"))
                object.serverAddr = message.serverAddr;
            if (message.serverPort != null && message.hasOwnProperty("serverPort"))
                object.serverPort = message.serverPort;
            if (message.osType != null && message.hasOwnProperty("osType"))
                object.osType = message.osType;
            if (message.clientAddr != null && message.hasOwnProperty("clientAddr"))
                object.clientAddr = message.clientAddr;
            if (message.extraFields && message.extraFields.length) {
                object.extraFields = [];
                for (var j = 0; j < message.extraFields.length; ++j)
                    object.extraFields[j] = $root.CMsgGCHUpdateSession.ExtraField.toObject(message.extraFields[j], options);
            }
            if (message.ownerId != null && message.hasOwnProperty("ownerId"))
                if (typeof message.ownerId === "number")
                    object.ownerId = options.longs === String ? String(message.ownerId) : message.ownerId;
                else
                    object.ownerId = options.longs === String ? $util.Long.prototype.toString.call(message.ownerId) : options.longs === Number ? new $util.LongBits(message.ownerId.low >>> 0, message.ownerId.high >>> 0).toNumber() : message.ownerId;
            if (message.cmSessionSysid != null && message.hasOwnProperty("cmSessionSysid"))
                object.cmSessionSysid = message.cmSessionSysid;
            if (message.cmSessionIdentifier != null && message.hasOwnProperty("cmSessionIdentifier"))
                object.cmSessionIdentifier = message.cmSessionIdentifier;
            if (message.depotIds && message.depotIds.length) {
                object.depotIds = [];
                for (var j = 0; j < message.depotIds.length; ++j)
                    object.depotIds[j] = message.depotIds[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgGCHUpdateSession to JSON.
         * @function toJSON
         * @memberof CMsgGCHUpdateSession
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCHUpdateSession.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCHUpdateSession
         * @function getTypeUrl
         * @memberof CMsgGCHUpdateSession
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCHUpdateSession.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCHUpdateSession";
        };
    
        CMsgGCHUpdateSession.ExtraField = (function() {
    
            /**
             * Properties of an ExtraField.
             * @memberof CMsgGCHUpdateSession
             * @interface IExtraField
             * @property {string|null} [name] ExtraField name
             * @property {string|null} [value] ExtraField value
             */
    
            /**
             * Constructs a new ExtraField.
             * @memberof CMsgGCHUpdateSession
             * @classdesc Represents an ExtraField.
             * @implements IExtraField
             * @constructor
             * @param {CMsgGCHUpdateSession.IExtraField=} [properties] Properties to set
             */
            function ExtraField(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * ExtraField name.
             * @member {string} name
             * @memberof CMsgGCHUpdateSession.ExtraField
             * @instance
             */
            ExtraField.prototype.name = "";
    
            /**
             * ExtraField value.
             * @member {string} value
             * @memberof CMsgGCHUpdateSession.ExtraField
             * @instance
             */
            ExtraField.prototype.value = "";
    
            /**
             * Creates a new ExtraField instance using the specified properties.
             * @function create
             * @memberof CMsgGCHUpdateSession.ExtraField
             * @static
             * @param {CMsgGCHUpdateSession.IExtraField=} [properties] Properties to set
             * @returns {CMsgGCHUpdateSession.ExtraField} ExtraField instance
             */
            ExtraField.create = function create(properties) {
                return new ExtraField(properties);
            };
    
            /**
             * Encodes the specified ExtraField message. Does not implicitly {@link CMsgGCHUpdateSession.ExtraField.verify|verify} messages.
             * @function encode
             * @memberof CMsgGCHUpdateSession.ExtraField
             * @static
             * @param {CMsgGCHUpdateSession.IExtraField} message ExtraField message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ExtraField.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
                return writer;
            };
    
            /**
             * Encodes the specified ExtraField message, length delimited. Does not implicitly {@link CMsgGCHUpdateSession.ExtraField.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgGCHUpdateSession.ExtraField
             * @static
             * @param {CMsgGCHUpdateSession.IExtraField} message ExtraField message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ExtraField.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an ExtraField message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgGCHUpdateSession.ExtraField
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgGCHUpdateSession.ExtraField} ExtraField
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ExtraField.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCHUpdateSession.ExtraField();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.name = reader.string();
                            break;
                        }
                    case 2: {
                            message.value = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an ExtraField message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgGCHUpdateSession.ExtraField
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgGCHUpdateSession.ExtraField} ExtraField
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ExtraField.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an ExtraField message.
             * @function verify
             * @memberof CMsgGCHUpdateSession.ExtraField
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ExtraField.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.name != null && message.hasOwnProperty("name"))
                    if (!$util.isString(message.name))
                        return "name: string expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (!$util.isString(message.value))
                        return "value: string expected";
                return null;
            };
    
            /**
             * Creates an ExtraField message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgGCHUpdateSession.ExtraField
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgGCHUpdateSession.ExtraField} ExtraField
             */
            ExtraField.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgGCHUpdateSession.ExtraField)
                    return object;
                var message = new $root.CMsgGCHUpdateSession.ExtraField();
                if (object.name != null)
                    message.name = String(object.name);
                if (object.value != null)
                    message.value = String(object.value);
                return message;
            };
    
            /**
             * Creates a plain object from an ExtraField message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgGCHUpdateSession.ExtraField
             * @static
             * @param {CMsgGCHUpdateSession.ExtraField} message ExtraField
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ExtraField.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.name = "";
                    object.value = "";
                }
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = message.value;
                return object;
            };
    
            /**
             * Converts this ExtraField to JSON.
             * @function toJSON
             * @memberof CMsgGCHUpdateSession.ExtraField
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ExtraField.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for ExtraField
             * @function getTypeUrl
             * @memberof CMsgGCHUpdateSession.ExtraField
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ExtraField.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgGCHUpdateSession.ExtraField";
            };
    
            return ExtraField;
        })();
    
        return CMsgGCHUpdateSession;
    })();
    
    $root.CMsgNotificationOfSuspiciousActivity = (function() {
    
        /**
         * Properties of a CMsgNotificationOfSuspiciousActivity.
         * @exports ICMsgNotificationOfSuspiciousActivity
         * @interface ICMsgNotificationOfSuspiciousActivity
         * @property {number|Long|null} [steamid] CMsgNotificationOfSuspiciousActivity steamid
         * @property {number|null} [appid] CMsgNotificationOfSuspiciousActivity appid
         * @property {CMsgNotificationOfSuspiciousActivity.IMultipleGameInstances|null} [multipleInstances] CMsgNotificationOfSuspiciousActivity multipleInstances
         */
    
        /**
         * Constructs a new CMsgNotificationOfSuspiciousActivity.
         * @exports CMsgNotificationOfSuspiciousActivity
         * @classdesc Represents a CMsgNotificationOfSuspiciousActivity.
         * @implements ICMsgNotificationOfSuspiciousActivity
         * @constructor
         * @param {ICMsgNotificationOfSuspiciousActivity=} [properties] Properties to set
         */
        function CMsgNotificationOfSuspiciousActivity(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgNotificationOfSuspiciousActivity steamid.
         * @member {number|Long} steamid
         * @memberof CMsgNotificationOfSuspiciousActivity
         * @instance
         */
        CMsgNotificationOfSuspiciousActivity.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgNotificationOfSuspiciousActivity appid.
         * @member {number} appid
         * @memberof CMsgNotificationOfSuspiciousActivity
         * @instance
         */
        CMsgNotificationOfSuspiciousActivity.prototype.appid = 0;
    
        /**
         * CMsgNotificationOfSuspiciousActivity multipleInstances.
         * @member {CMsgNotificationOfSuspiciousActivity.IMultipleGameInstances|null|undefined} multipleInstances
         * @memberof CMsgNotificationOfSuspiciousActivity
         * @instance
         */
        CMsgNotificationOfSuspiciousActivity.prototype.multipleInstances = null;
    
        /**
         * Creates a new CMsgNotificationOfSuspiciousActivity instance using the specified properties.
         * @function create
         * @memberof CMsgNotificationOfSuspiciousActivity
         * @static
         * @param {ICMsgNotificationOfSuspiciousActivity=} [properties] Properties to set
         * @returns {CMsgNotificationOfSuspiciousActivity} CMsgNotificationOfSuspiciousActivity instance
         */
        CMsgNotificationOfSuspiciousActivity.create = function create(properties) {
            return new CMsgNotificationOfSuspiciousActivity(properties);
        };
    
        /**
         * Encodes the specified CMsgNotificationOfSuspiciousActivity message. Does not implicitly {@link CMsgNotificationOfSuspiciousActivity.verify|verify} messages.
         * @function encode
         * @memberof CMsgNotificationOfSuspiciousActivity
         * @static
         * @param {ICMsgNotificationOfSuspiciousActivity} message CMsgNotificationOfSuspiciousActivity message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgNotificationOfSuspiciousActivity.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.appid);
            if (message.multipleInstances != null && Object.hasOwnProperty.call(message, "multipleInstances"))
                $root.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.encode(message.multipleInstances, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgNotificationOfSuspiciousActivity message, length delimited. Does not implicitly {@link CMsgNotificationOfSuspiciousActivity.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgNotificationOfSuspiciousActivity
         * @static
         * @param {ICMsgNotificationOfSuspiciousActivity} message CMsgNotificationOfSuspiciousActivity message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgNotificationOfSuspiciousActivity.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgNotificationOfSuspiciousActivity message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgNotificationOfSuspiciousActivity
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgNotificationOfSuspiciousActivity} CMsgNotificationOfSuspiciousActivity
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgNotificationOfSuspiciousActivity.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgNotificationOfSuspiciousActivity();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.steamid = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.appid = reader.uint32();
                        break;
                    }
                case 3: {
                        message.multipleInstances = $root.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.decode(reader, reader.uint32());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgNotificationOfSuspiciousActivity message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgNotificationOfSuspiciousActivity
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgNotificationOfSuspiciousActivity} CMsgNotificationOfSuspiciousActivity
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgNotificationOfSuspiciousActivity.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgNotificationOfSuspiciousActivity message.
         * @function verify
         * @memberof CMsgNotificationOfSuspiciousActivity
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgNotificationOfSuspiciousActivity.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.multipleInstances != null && message.hasOwnProperty("multipleInstances")) {
                var error = $root.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.verify(message.multipleInstances);
                if (error)
                    return "multipleInstances." + error;
            }
            return null;
        };
    
        /**
         * Creates a CMsgNotificationOfSuspiciousActivity message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgNotificationOfSuspiciousActivity
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgNotificationOfSuspiciousActivity} CMsgNotificationOfSuspiciousActivity
         */
        CMsgNotificationOfSuspiciousActivity.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgNotificationOfSuspiciousActivity)
                return object;
            var message = new $root.CMsgNotificationOfSuspiciousActivity();
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.multipleInstances != null) {
                if (typeof object.multipleInstances !== "object")
                    throw TypeError(".CMsgNotificationOfSuspiciousActivity.multipleInstances: object expected");
                message.multipleInstances = $root.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.fromObject(object.multipleInstances);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgNotificationOfSuspiciousActivity message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgNotificationOfSuspiciousActivity
         * @static
         * @param {CMsgNotificationOfSuspiciousActivity} message CMsgNotificationOfSuspiciousActivity
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgNotificationOfSuspiciousActivity.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
                object.appid = 0;
                object.multipleInstances = null;
            }
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.multipleInstances != null && message.hasOwnProperty("multipleInstances"))
                object.multipleInstances = $root.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.toObject(message.multipleInstances, options);
            return object;
        };
    
        /**
         * Converts this CMsgNotificationOfSuspiciousActivity to JSON.
         * @function toJSON
         * @memberof CMsgNotificationOfSuspiciousActivity
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgNotificationOfSuspiciousActivity.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgNotificationOfSuspiciousActivity
         * @function getTypeUrl
         * @memberof CMsgNotificationOfSuspiciousActivity
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgNotificationOfSuspiciousActivity.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgNotificationOfSuspiciousActivity";
        };
    
        CMsgNotificationOfSuspiciousActivity.MultipleGameInstances = (function() {
    
            /**
             * Properties of a MultipleGameInstances.
             * @memberof CMsgNotificationOfSuspiciousActivity
             * @interface IMultipleGameInstances
             * @property {number|null} [appInstanceCount] MultipleGameInstances appInstanceCount
             * @property {Array.<number|Long>|null} [otherSteamids] MultipleGameInstances otherSteamids
             */
    
            /**
             * Constructs a new MultipleGameInstances.
             * @memberof CMsgNotificationOfSuspiciousActivity
             * @classdesc Represents a MultipleGameInstances.
             * @implements IMultipleGameInstances
             * @constructor
             * @param {CMsgNotificationOfSuspiciousActivity.IMultipleGameInstances=} [properties] Properties to set
             */
            function MultipleGameInstances(properties) {
                this.otherSteamids = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * MultipleGameInstances appInstanceCount.
             * @member {number} appInstanceCount
             * @memberof CMsgNotificationOfSuspiciousActivity.MultipleGameInstances
             * @instance
             */
            MultipleGameInstances.prototype.appInstanceCount = 0;
    
            /**
             * MultipleGameInstances otherSteamids.
             * @member {Array.<number|Long>} otherSteamids
             * @memberof CMsgNotificationOfSuspiciousActivity.MultipleGameInstances
             * @instance
             */
            MultipleGameInstances.prototype.otherSteamids = $util.emptyArray;
    
            /**
             * Creates a new MultipleGameInstances instance using the specified properties.
             * @function create
             * @memberof CMsgNotificationOfSuspiciousActivity.MultipleGameInstances
             * @static
             * @param {CMsgNotificationOfSuspiciousActivity.IMultipleGameInstances=} [properties] Properties to set
             * @returns {CMsgNotificationOfSuspiciousActivity.MultipleGameInstances} MultipleGameInstances instance
             */
            MultipleGameInstances.create = function create(properties) {
                return new MultipleGameInstances(properties);
            };
    
            /**
             * Encodes the specified MultipleGameInstances message. Does not implicitly {@link CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.verify|verify} messages.
             * @function encode
             * @memberof CMsgNotificationOfSuspiciousActivity.MultipleGameInstances
             * @static
             * @param {CMsgNotificationOfSuspiciousActivity.IMultipleGameInstances} message MultipleGameInstances message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MultipleGameInstances.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.appInstanceCount != null && Object.hasOwnProperty.call(message, "appInstanceCount"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appInstanceCount);
                if (message.otherSteamids != null && message.otherSteamids.length)
                    for (var i = 0; i < message.otherSteamids.length; ++i)
                        writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.otherSteamids[i]);
                return writer;
            };
    
            /**
             * Encodes the specified MultipleGameInstances message, length delimited. Does not implicitly {@link CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgNotificationOfSuspiciousActivity.MultipleGameInstances
             * @static
             * @param {CMsgNotificationOfSuspiciousActivity.IMultipleGameInstances} message MultipleGameInstances message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MultipleGameInstances.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a MultipleGameInstances message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgNotificationOfSuspiciousActivity.MultipleGameInstances
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgNotificationOfSuspiciousActivity.MultipleGameInstances} MultipleGameInstances
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MultipleGameInstances.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.appInstanceCount = reader.uint32();
                            break;
                        }
                    case 2: {
                            if (!(message.otherSteamids && message.otherSteamids.length))
                                message.otherSteamids = [];
                            if ((tag & 7) === 2) {
                                var end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.otherSteamids.push(reader.fixed64());
                            } else
                                message.otherSteamids.push(reader.fixed64());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a MultipleGameInstances message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgNotificationOfSuspiciousActivity.MultipleGameInstances
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgNotificationOfSuspiciousActivity.MultipleGameInstances} MultipleGameInstances
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MultipleGameInstances.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a MultipleGameInstances message.
             * @function verify
             * @memberof CMsgNotificationOfSuspiciousActivity.MultipleGameInstances
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MultipleGameInstances.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.appInstanceCount != null && message.hasOwnProperty("appInstanceCount"))
                    if (!$util.isInteger(message.appInstanceCount))
                        return "appInstanceCount: integer expected";
                if (message.otherSteamids != null && message.hasOwnProperty("otherSteamids")) {
                    if (!Array.isArray(message.otherSteamids))
                        return "otherSteamids: array expected";
                    for (var i = 0; i < message.otherSteamids.length; ++i)
                        if (!$util.isInteger(message.otherSteamids[i]) && !(message.otherSteamids[i] && $util.isInteger(message.otherSteamids[i].low) && $util.isInteger(message.otherSteamids[i].high)))
                            return "otherSteamids: integer|Long[] expected";
                }
                return null;
            };
    
            /**
             * Creates a MultipleGameInstances message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgNotificationOfSuspiciousActivity.MultipleGameInstances
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgNotificationOfSuspiciousActivity.MultipleGameInstances} MultipleGameInstances
             */
            MultipleGameInstances.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
                    return object;
                var message = new $root.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances();
                if (object.appInstanceCount != null)
                    message.appInstanceCount = object.appInstanceCount >>> 0;
                if (object.otherSteamids) {
                    if (!Array.isArray(object.otherSteamids))
                        throw TypeError(".CMsgNotificationOfSuspiciousActivity.MultipleGameInstances.otherSteamids: array expected");
                    message.otherSteamids = [];
                    for (var i = 0; i < object.otherSteamids.length; ++i)
                        if ($util.Long)
                            (message.otherSteamids[i] = $util.Long.fromValue(object.otherSteamids[i])).unsigned = false;
                        else if (typeof object.otherSteamids[i] === "string")
                            message.otherSteamids[i] = parseInt(object.otherSteamids[i], 10);
                        else if (typeof object.otherSteamids[i] === "number")
                            message.otherSteamids[i] = object.otherSteamids[i];
                        else if (typeof object.otherSteamids[i] === "object")
                            message.otherSteamids[i] = new $util.LongBits(object.otherSteamids[i].low >>> 0, object.otherSteamids[i].high >>> 0).toNumber();
                }
                return message;
            };
    
            /**
             * Creates a plain object from a MultipleGameInstances message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgNotificationOfSuspiciousActivity.MultipleGameInstances
             * @static
             * @param {CMsgNotificationOfSuspiciousActivity.MultipleGameInstances} message MultipleGameInstances
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MultipleGameInstances.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.otherSteamids = [];
                if (options.defaults)
                    object.appInstanceCount = 0;
                if (message.appInstanceCount != null && message.hasOwnProperty("appInstanceCount"))
                    object.appInstanceCount = message.appInstanceCount;
                if (message.otherSteamids && message.otherSteamids.length) {
                    object.otherSteamids = [];
                    for (var j = 0; j < message.otherSteamids.length; ++j)
                        if (typeof message.otherSteamids[j] === "number")
                            object.otherSteamids[j] = options.longs === String ? String(message.otherSteamids[j]) : message.otherSteamids[j];
                        else
                            object.otherSteamids[j] = options.longs === String ? $util.Long.prototype.toString.call(message.otherSteamids[j]) : options.longs === Number ? new $util.LongBits(message.otherSteamids[j].low >>> 0, message.otherSteamids[j].high >>> 0).toNumber() : message.otherSteamids[j];
                }
                return object;
            };
    
            /**
             * Converts this MultipleGameInstances to JSON.
             * @function toJSON
             * @memberof CMsgNotificationOfSuspiciousActivity.MultipleGameInstances
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MultipleGameInstances.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for MultipleGameInstances
             * @function getTypeUrl
             * @memberof CMsgNotificationOfSuspiciousActivity.MultipleGameInstances
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            MultipleGameInstances.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgNotificationOfSuspiciousActivity.MultipleGameInstances";
            };
    
            return MultipleGameInstances;
        })();
    
        return CMsgNotificationOfSuspiciousActivity;
    })();
    
    $root.CMsgDPPartnerMicroTxns = (function() {
    
        /**
         * Properties of a CMsgDPPartnerMicroTxns.
         * @exports ICMsgDPPartnerMicroTxns
         * @interface ICMsgDPPartnerMicroTxns
         * @property {number|null} [appid] CMsgDPPartnerMicroTxns appid
         * @property {string|null} [gcName] CMsgDPPartnerMicroTxns gcName
         * @property {CMsgDPPartnerMicroTxns.IPartnerInfo|null} [partner] CMsgDPPartnerMicroTxns partner
         * @property {Array.<CMsgDPPartnerMicroTxns.IPartnerMicroTxn>|null} [transactions] CMsgDPPartnerMicroTxns transactions
         */
    
        /**
         * Constructs a new CMsgDPPartnerMicroTxns.
         * @exports CMsgDPPartnerMicroTxns
         * @classdesc Represents a CMsgDPPartnerMicroTxns.
         * @implements ICMsgDPPartnerMicroTxns
         * @constructor
         * @param {ICMsgDPPartnerMicroTxns=} [properties] Properties to set
         */
        function CMsgDPPartnerMicroTxns(properties) {
            this.transactions = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgDPPartnerMicroTxns appid.
         * @member {number} appid
         * @memberof CMsgDPPartnerMicroTxns
         * @instance
         */
        CMsgDPPartnerMicroTxns.prototype.appid = 0;
    
        /**
         * CMsgDPPartnerMicroTxns gcName.
         * @member {string} gcName
         * @memberof CMsgDPPartnerMicroTxns
         * @instance
         */
        CMsgDPPartnerMicroTxns.prototype.gcName = "";
    
        /**
         * CMsgDPPartnerMicroTxns partner.
         * @member {CMsgDPPartnerMicroTxns.IPartnerInfo|null|undefined} partner
         * @memberof CMsgDPPartnerMicroTxns
         * @instance
         */
        CMsgDPPartnerMicroTxns.prototype.partner = null;
    
        /**
         * CMsgDPPartnerMicroTxns transactions.
         * @member {Array.<CMsgDPPartnerMicroTxns.IPartnerMicroTxn>} transactions
         * @memberof CMsgDPPartnerMicroTxns
         * @instance
         */
        CMsgDPPartnerMicroTxns.prototype.transactions = $util.emptyArray;
    
        /**
         * Creates a new CMsgDPPartnerMicroTxns instance using the specified properties.
         * @function create
         * @memberof CMsgDPPartnerMicroTxns
         * @static
         * @param {ICMsgDPPartnerMicroTxns=} [properties] Properties to set
         * @returns {CMsgDPPartnerMicroTxns} CMsgDPPartnerMicroTxns instance
         */
        CMsgDPPartnerMicroTxns.create = function create(properties) {
            return new CMsgDPPartnerMicroTxns(properties);
        };
    
        /**
         * Encodes the specified CMsgDPPartnerMicroTxns message. Does not implicitly {@link CMsgDPPartnerMicroTxns.verify|verify} messages.
         * @function encode
         * @memberof CMsgDPPartnerMicroTxns
         * @static
         * @param {ICMsgDPPartnerMicroTxns} message CMsgDPPartnerMicroTxns message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgDPPartnerMicroTxns.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
            if (message.gcName != null && Object.hasOwnProperty.call(message, "gcName"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.gcName);
            if (message.partner != null && Object.hasOwnProperty.call(message, "partner"))
                $root.CMsgDPPartnerMicroTxns.PartnerInfo.encode(message.partner, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            if (message.transactions != null && message.transactions.length)
                for (var i = 0; i < message.transactions.length; ++i)
                    $root.CMsgDPPartnerMicroTxns.PartnerMicroTxn.encode(message.transactions[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgDPPartnerMicroTxns message, length delimited. Does not implicitly {@link CMsgDPPartnerMicroTxns.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgDPPartnerMicroTxns
         * @static
         * @param {ICMsgDPPartnerMicroTxns} message CMsgDPPartnerMicroTxns message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgDPPartnerMicroTxns.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgDPPartnerMicroTxns message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgDPPartnerMicroTxns
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgDPPartnerMicroTxns} CMsgDPPartnerMicroTxns
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgDPPartnerMicroTxns.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgDPPartnerMicroTxns();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.appid = reader.uint32();
                        break;
                    }
                case 2: {
                        message.gcName = reader.string();
                        break;
                    }
                case 3: {
                        message.partner = $root.CMsgDPPartnerMicroTxns.PartnerInfo.decode(reader, reader.uint32());
                        break;
                    }
                case 4: {
                        if (!(message.transactions && message.transactions.length))
                            message.transactions = [];
                        message.transactions.push($root.CMsgDPPartnerMicroTxns.PartnerMicroTxn.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgDPPartnerMicroTxns message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgDPPartnerMicroTxns
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgDPPartnerMicroTxns} CMsgDPPartnerMicroTxns
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgDPPartnerMicroTxns.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgDPPartnerMicroTxns message.
         * @function verify
         * @memberof CMsgDPPartnerMicroTxns
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgDPPartnerMicroTxns.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.gcName != null && message.hasOwnProperty("gcName"))
                if (!$util.isString(message.gcName))
                    return "gcName: string expected";
            if (message.partner != null && message.hasOwnProperty("partner")) {
                var error = $root.CMsgDPPartnerMicroTxns.PartnerInfo.verify(message.partner);
                if (error)
                    return "partner." + error;
            }
            if (message.transactions != null && message.hasOwnProperty("transactions")) {
                if (!Array.isArray(message.transactions))
                    return "transactions: array expected";
                for (var i = 0; i < message.transactions.length; ++i) {
                    var error = $root.CMsgDPPartnerMicroTxns.PartnerMicroTxn.verify(message.transactions[i]);
                    if (error)
                        return "transactions." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgDPPartnerMicroTxns message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgDPPartnerMicroTxns
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgDPPartnerMicroTxns} CMsgDPPartnerMicroTxns
         */
        CMsgDPPartnerMicroTxns.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgDPPartnerMicroTxns)
                return object;
            var message = new $root.CMsgDPPartnerMicroTxns();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.gcName != null)
                message.gcName = String(object.gcName);
            if (object.partner != null) {
                if (typeof object.partner !== "object")
                    throw TypeError(".CMsgDPPartnerMicroTxns.partner: object expected");
                message.partner = $root.CMsgDPPartnerMicroTxns.PartnerInfo.fromObject(object.partner);
            }
            if (object.transactions) {
                if (!Array.isArray(object.transactions))
                    throw TypeError(".CMsgDPPartnerMicroTxns.transactions: array expected");
                message.transactions = [];
                for (var i = 0; i < object.transactions.length; ++i) {
                    if (typeof object.transactions[i] !== "object")
                        throw TypeError(".CMsgDPPartnerMicroTxns.transactions: object expected");
                    message.transactions[i] = $root.CMsgDPPartnerMicroTxns.PartnerMicroTxn.fromObject(object.transactions[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgDPPartnerMicroTxns message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgDPPartnerMicroTxns
         * @static
         * @param {CMsgDPPartnerMicroTxns} message CMsgDPPartnerMicroTxns
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgDPPartnerMicroTxns.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.transactions = [];
            if (options.defaults) {
                object.appid = 0;
                object.gcName = "";
                object.partner = null;
            }
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.gcName != null && message.hasOwnProperty("gcName"))
                object.gcName = message.gcName;
            if (message.partner != null && message.hasOwnProperty("partner"))
                object.partner = $root.CMsgDPPartnerMicroTxns.PartnerInfo.toObject(message.partner, options);
            if (message.transactions && message.transactions.length) {
                object.transactions = [];
                for (var j = 0; j < message.transactions.length; ++j)
                    object.transactions[j] = $root.CMsgDPPartnerMicroTxns.PartnerMicroTxn.toObject(message.transactions[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgDPPartnerMicroTxns to JSON.
         * @function toJSON
         * @memberof CMsgDPPartnerMicroTxns
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgDPPartnerMicroTxns.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgDPPartnerMicroTxns
         * @function getTypeUrl
         * @memberof CMsgDPPartnerMicroTxns
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgDPPartnerMicroTxns.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgDPPartnerMicroTxns";
        };
    
        CMsgDPPartnerMicroTxns.PartnerMicroTxn = (function() {
    
            /**
             * Properties of a PartnerMicroTxn.
             * @memberof CMsgDPPartnerMicroTxns
             * @interface IPartnerMicroTxn
             * @property {number|null} [initTime] PartnerMicroTxn initTime
             * @property {number|null} [lastUpdateTime] PartnerMicroTxn lastUpdateTime
             * @property {number|Long|null} [txnId] PartnerMicroTxn txnId
             * @property {number|null} [accountId] PartnerMicroTxn accountId
             * @property {number|null} [lineItem] PartnerMicroTxn lineItem
             * @property {number|Long|null} [itemId] PartnerMicroTxn itemId
             * @property {number|null} [defIndex] PartnerMicroTxn defIndex
             * @property {number|Long|null} [price] PartnerMicroTxn price
             * @property {number|Long|null} [tax] PartnerMicroTxn tax
             * @property {number|Long|null} [priceUsd] PartnerMicroTxn priceUsd
             * @property {number|Long|null} [taxUsd] PartnerMicroTxn taxUsd
             * @property {number|null} [purchaseType] PartnerMicroTxn purchaseType
             * @property {number|null} [steamTxnType] PartnerMicroTxn steamTxnType
             * @property {string|null} [countryCode] PartnerMicroTxn countryCode
             * @property {string|null} [regionCode] PartnerMicroTxn regionCode
             * @property {number|null} [quantity] PartnerMicroTxn quantity
             * @property {number|Long|null} [refTransId] PartnerMicroTxn refTransId
             */
    
            /**
             * Constructs a new PartnerMicroTxn.
             * @memberof CMsgDPPartnerMicroTxns
             * @classdesc Represents a PartnerMicroTxn.
             * @implements IPartnerMicroTxn
             * @constructor
             * @param {CMsgDPPartnerMicroTxns.IPartnerMicroTxn=} [properties] Properties to set
             */
            function PartnerMicroTxn(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * PartnerMicroTxn initTime.
             * @member {number} initTime
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.initTime = 0;
    
            /**
             * PartnerMicroTxn lastUpdateTime.
             * @member {number} lastUpdateTime
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.lastUpdateTime = 0;
    
            /**
             * PartnerMicroTxn txnId.
             * @member {number|Long} txnId
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.txnId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * PartnerMicroTxn accountId.
             * @member {number} accountId
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.accountId = 0;
    
            /**
             * PartnerMicroTxn lineItem.
             * @member {number} lineItem
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.lineItem = 0;
    
            /**
             * PartnerMicroTxn itemId.
             * @member {number|Long} itemId
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.itemId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * PartnerMicroTxn defIndex.
             * @member {number} defIndex
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.defIndex = 0;
    
            /**
             * PartnerMicroTxn price.
             * @member {number|Long} price
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.price = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * PartnerMicroTxn tax.
             * @member {number|Long} tax
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.tax = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * PartnerMicroTxn priceUsd.
             * @member {number|Long} priceUsd
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.priceUsd = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * PartnerMicroTxn taxUsd.
             * @member {number|Long} taxUsd
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.taxUsd = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * PartnerMicroTxn purchaseType.
             * @member {number} purchaseType
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.purchaseType = 0;
    
            /**
             * PartnerMicroTxn steamTxnType.
             * @member {number} steamTxnType
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.steamTxnType = 0;
    
            /**
             * PartnerMicroTxn countryCode.
             * @member {string} countryCode
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.countryCode = "";
    
            /**
             * PartnerMicroTxn regionCode.
             * @member {string} regionCode
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.regionCode = "";
    
            /**
             * PartnerMicroTxn quantity.
             * @member {number} quantity
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.quantity = 0;
    
            /**
             * PartnerMicroTxn refTransId.
             * @member {number|Long} refTransId
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             */
            PartnerMicroTxn.prototype.refTransId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Creates a new PartnerMicroTxn instance using the specified properties.
             * @function create
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @static
             * @param {CMsgDPPartnerMicroTxns.IPartnerMicroTxn=} [properties] Properties to set
             * @returns {CMsgDPPartnerMicroTxns.PartnerMicroTxn} PartnerMicroTxn instance
             */
            PartnerMicroTxn.create = function create(properties) {
                return new PartnerMicroTxn(properties);
            };
    
            /**
             * Encodes the specified PartnerMicroTxn message. Does not implicitly {@link CMsgDPPartnerMicroTxns.PartnerMicroTxn.verify|verify} messages.
             * @function encode
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @static
             * @param {CMsgDPPartnerMicroTxns.IPartnerMicroTxn} message PartnerMicroTxn message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PartnerMicroTxn.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.initTime != null && Object.hasOwnProperty.call(message, "initTime"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.initTime);
                if (message.lastUpdateTime != null && Object.hasOwnProperty.call(message, "lastUpdateTime"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.lastUpdateTime);
                if (message.txnId != null && Object.hasOwnProperty.call(message, "txnId"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.txnId);
                if (message.accountId != null && Object.hasOwnProperty.call(message, "accountId"))
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.accountId);
                if (message.lineItem != null && Object.hasOwnProperty.call(message, "lineItem"))
                    writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.lineItem);
                if (message.itemId != null && Object.hasOwnProperty.call(message, "itemId"))
                    writer.uint32(/* id 6, wireType 0 =*/48).uint64(message.itemId);
                if (message.defIndex != null && Object.hasOwnProperty.call(message, "defIndex"))
                    writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.defIndex);
                if (message.price != null && Object.hasOwnProperty.call(message, "price"))
                    writer.uint32(/* id 8, wireType 0 =*/64).uint64(message.price);
                if (message.tax != null && Object.hasOwnProperty.call(message, "tax"))
                    writer.uint32(/* id 9, wireType 0 =*/72).uint64(message.tax);
                if (message.priceUsd != null && Object.hasOwnProperty.call(message, "priceUsd"))
                    writer.uint32(/* id 10, wireType 0 =*/80).uint64(message.priceUsd);
                if (message.taxUsd != null && Object.hasOwnProperty.call(message, "taxUsd"))
                    writer.uint32(/* id 11, wireType 0 =*/88).uint64(message.taxUsd);
                if (message.purchaseType != null && Object.hasOwnProperty.call(message, "purchaseType"))
                    writer.uint32(/* id 12, wireType 0 =*/96).uint32(message.purchaseType);
                if (message.steamTxnType != null && Object.hasOwnProperty.call(message, "steamTxnType"))
                    writer.uint32(/* id 13, wireType 0 =*/104).uint32(message.steamTxnType);
                if (message.countryCode != null && Object.hasOwnProperty.call(message, "countryCode"))
                    writer.uint32(/* id 14, wireType 2 =*/114).string(message.countryCode);
                if (message.regionCode != null && Object.hasOwnProperty.call(message, "regionCode"))
                    writer.uint32(/* id 15, wireType 2 =*/122).string(message.regionCode);
                if (message.quantity != null && Object.hasOwnProperty.call(message, "quantity"))
                    writer.uint32(/* id 16, wireType 0 =*/128).int32(message.quantity);
                if (message.refTransId != null && Object.hasOwnProperty.call(message, "refTransId"))
                    writer.uint32(/* id 17, wireType 0 =*/136).uint64(message.refTransId);
                return writer;
            };
    
            /**
             * Encodes the specified PartnerMicroTxn message, length delimited. Does not implicitly {@link CMsgDPPartnerMicroTxns.PartnerMicroTxn.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @static
             * @param {CMsgDPPartnerMicroTxns.IPartnerMicroTxn} message PartnerMicroTxn message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PartnerMicroTxn.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a PartnerMicroTxn message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgDPPartnerMicroTxns.PartnerMicroTxn} PartnerMicroTxn
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PartnerMicroTxn.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgDPPartnerMicroTxns.PartnerMicroTxn();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.initTime = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.lastUpdateTime = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.txnId = reader.uint64();
                            break;
                        }
                    case 4: {
                            message.accountId = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.lineItem = reader.uint32();
                            break;
                        }
                    case 6: {
                            message.itemId = reader.uint64();
                            break;
                        }
                    case 7: {
                            message.defIndex = reader.uint32();
                            break;
                        }
                    case 8: {
                            message.price = reader.uint64();
                            break;
                        }
                    case 9: {
                            message.tax = reader.uint64();
                            break;
                        }
                    case 10: {
                            message.priceUsd = reader.uint64();
                            break;
                        }
                    case 11: {
                            message.taxUsd = reader.uint64();
                            break;
                        }
                    case 12: {
                            message.purchaseType = reader.uint32();
                            break;
                        }
                    case 13: {
                            message.steamTxnType = reader.uint32();
                            break;
                        }
                    case 14: {
                            message.countryCode = reader.string();
                            break;
                        }
                    case 15: {
                            message.regionCode = reader.string();
                            break;
                        }
                    case 16: {
                            message.quantity = reader.int32();
                            break;
                        }
                    case 17: {
                            message.refTransId = reader.uint64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a PartnerMicroTxn message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgDPPartnerMicroTxns.PartnerMicroTxn} PartnerMicroTxn
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PartnerMicroTxn.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a PartnerMicroTxn message.
             * @function verify
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            PartnerMicroTxn.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.initTime != null && message.hasOwnProperty("initTime"))
                    if (!$util.isInteger(message.initTime))
                        return "initTime: integer expected";
                if (message.lastUpdateTime != null && message.hasOwnProperty("lastUpdateTime"))
                    if (!$util.isInteger(message.lastUpdateTime))
                        return "lastUpdateTime: integer expected";
                if (message.txnId != null && message.hasOwnProperty("txnId"))
                    if (!$util.isInteger(message.txnId) && !(message.txnId && $util.isInteger(message.txnId.low) && $util.isInteger(message.txnId.high)))
                        return "txnId: integer|Long expected";
                if (message.accountId != null && message.hasOwnProperty("accountId"))
                    if (!$util.isInteger(message.accountId))
                        return "accountId: integer expected";
                if (message.lineItem != null && message.hasOwnProperty("lineItem"))
                    if (!$util.isInteger(message.lineItem))
                        return "lineItem: integer expected";
                if (message.itemId != null && message.hasOwnProperty("itemId"))
                    if (!$util.isInteger(message.itemId) && !(message.itemId && $util.isInteger(message.itemId.low) && $util.isInteger(message.itemId.high)))
                        return "itemId: integer|Long expected";
                if (message.defIndex != null && message.hasOwnProperty("defIndex"))
                    if (!$util.isInteger(message.defIndex))
                        return "defIndex: integer expected";
                if (message.price != null && message.hasOwnProperty("price"))
                    if (!$util.isInteger(message.price) && !(message.price && $util.isInteger(message.price.low) && $util.isInteger(message.price.high)))
                        return "price: integer|Long expected";
                if (message.tax != null && message.hasOwnProperty("tax"))
                    if (!$util.isInteger(message.tax) && !(message.tax && $util.isInteger(message.tax.low) && $util.isInteger(message.tax.high)))
                        return "tax: integer|Long expected";
                if (message.priceUsd != null && message.hasOwnProperty("priceUsd"))
                    if (!$util.isInteger(message.priceUsd) && !(message.priceUsd && $util.isInteger(message.priceUsd.low) && $util.isInteger(message.priceUsd.high)))
                        return "priceUsd: integer|Long expected";
                if (message.taxUsd != null && message.hasOwnProperty("taxUsd"))
                    if (!$util.isInteger(message.taxUsd) && !(message.taxUsd && $util.isInteger(message.taxUsd.low) && $util.isInteger(message.taxUsd.high)))
                        return "taxUsd: integer|Long expected";
                if (message.purchaseType != null && message.hasOwnProperty("purchaseType"))
                    if (!$util.isInteger(message.purchaseType))
                        return "purchaseType: integer expected";
                if (message.steamTxnType != null && message.hasOwnProperty("steamTxnType"))
                    if (!$util.isInteger(message.steamTxnType))
                        return "steamTxnType: integer expected";
                if (message.countryCode != null && message.hasOwnProperty("countryCode"))
                    if (!$util.isString(message.countryCode))
                        return "countryCode: string expected";
                if (message.regionCode != null && message.hasOwnProperty("regionCode"))
                    if (!$util.isString(message.regionCode))
                        return "regionCode: string expected";
                if (message.quantity != null && message.hasOwnProperty("quantity"))
                    if (!$util.isInteger(message.quantity))
                        return "quantity: integer expected";
                if (message.refTransId != null && message.hasOwnProperty("refTransId"))
                    if (!$util.isInteger(message.refTransId) && !(message.refTransId && $util.isInteger(message.refTransId.low) && $util.isInteger(message.refTransId.high)))
                        return "refTransId: integer|Long expected";
                return null;
            };
    
            /**
             * Creates a PartnerMicroTxn message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgDPPartnerMicroTxns.PartnerMicroTxn} PartnerMicroTxn
             */
            PartnerMicroTxn.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgDPPartnerMicroTxns.PartnerMicroTxn)
                    return object;
                var message = new $root.CMsgDPPartnerMicroTxns.PartnerMicroTxn();
                if (object.initTime != null)
                    message.initTime = object.initTime >>> 0;
                if (object.lastUpdateTime != null)
                    message.lastUpdateTime = object.lastUpdateTime >>> 0;
                if (object.txnId != null)
                    if ($util.Long)
                        (message.txnId = $util.Long.fromValue(object.txnId)).unsigned = true;
                    else if (typeof object.txnId === "string")
                        message.txnId = parseInt(object.txnId, 10);
                    else if (typeof object.txnId === "number")
                        message.txnId = object.txnId;
                    else if (typeof object.txnId === "object")
                        message.txnId = new $util.LongBits(object.txnId.low >>> 0, object.txnId.high >>> 0).toNumber(true);
                if (object.accountId != null)
                    message.accountId = object.accountId >>> 0;
                if (object.lineItem != null)
                    message.lineItem = object.lineItem >>> 0;
                if (object.itemId != null)
                    if ($util.Long)
                        (message.itemId = $util.Long.fromValue(object.itemId)).unsigned = true;
                    else if (typeof object.itemId === "string")
                        message.itemId = parseInt(object.itemId, 10);
                    else if (typeof object.itemId === "number")
                        message.itemId = object.itemId;
                    else if (typeof object.itemId === "object")
                        message.itemId = new $util.LongBits(object.itemId.low >>> 0, object.itemId.high >>> 0).toNumber(true);
                if (object.defIndex != null)
                    message.defIndex = object.defIndex >>> 0;
                if (object.price != null)
                    if ($util.Long)
                        (message.price = $util.Long.fromValue(object.price)).unsigned = true;
                    else if (typeof object.price === "string")
                        message.price = parseInt(object.price, 10);
                    else if (typeof object.price === "number")
                        message.price = object.price;
                    else if (typeof object.price === "object")
                        message.price = new $util.LongBits(object.price.low >>> 0, object.price.high >>> 0).toNumber(true);
                if (object.tax != null)
                    if ($util.Long)
                        (message.tax = $util.Long.fromValue(object.tax)).unsigned = true;
                    else if (typeof object.tax === "string")
                        message.tax = parseInt(object.tax, 10);
                    else if (typeof object.tax === "number")
                        message.tax = object.tax;
                    else if (typeof object.tax === "object")
                        message.tax = new $util.LongBits(object.tax.low >>> 0, object.tax.high >>> 0).toNumber(true);
                if (object.priceUsd != null)
                    if ($util.Long)
                        (message.priceUsd = $util.Long.fromValue(object.priceUsd)).unsigned = true;
                    else if (typeof object.priceUsd === "string")
                        message.priceUsd = parseInt(object.priceUsd, 10);
                    else if (typeof object.priceUsd === "number")
                        message.priceUsd = object.priceUsd;
                    else if (typeof object.priceUsd === "object")
                        message.priceUsd = new $util.LongBits(object.priceUsd.low >>> 0, object.priceUsd.high >>> 0).toNumber(true);
                if (object.taxUsd != null)
                    if ($util.Long)
                        (message.taxUsd = $util.Long.fromValue(object.taxUsd)).unsigned = true;
                    else if (typeof object.taxUsd === "string")
                        message.taxUsd = parseInt(object.taxUsd, 10);
                    else if (typeof object.taxUsd === "number")
                        message.taxUsd = object.taxUsd;
                    else if (typeof object.taxUsd === "object")
                        message.taxUsd = new $util.LongBits(object.taxUsd.low >>> 0, object.taxUsd.high >>> 0).toNumber(true);
                if (object.purchaseType != null)
                    message.purchaseType = object.purchaseType >>> 0;
                if (object.steamTxnType != null)
                    message.steamTxnType = object.steamTxnType >>> 0;
                if (object.countryCode != null)
                    message.countryCode = String(object.countryCode);
                if (object.regionCode != null)
                    message.regionCode = String(object.regionCode);
                if (object.quantity != null)
                    message.quantity = object.quantity | 0;
                if (object.refTransId != null)
                    if ($util.Long)
                        (message.refTransId = $util.Long.fromValue(object.refTransId)).unsigned = true;
                    else if (typeof object.refTransId === "string")
                        message.refTransId = parseInt(object.refTransId, 10);
                    else if (typeof object.refTransId === "number")
                        message.refTransId = object.refTransId;
                    else if (typeof object.refTransId === "object")
                        message.refTransId = new $util.LongBits(object.refTransId.low >>> 0, object.refTransId.high >>> 0).toNumber(true);
                return message;
            };
    
            /**
             * Creates a plain object from a PartnerMicroTxn message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @static
             * @param {CMsgDPPartnerMicroTxns.PartnerMicroTxn} message PartnerMicroTxn
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            PartnerMicroTxn.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.initTime = 0;
                    object.lastUpdateTime = 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.txnId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.txnId = options.longs === String ? "0" : 0;
                    object.accountId = 0;
                    object.lineItem = 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.itemId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.itemId = options.longs === String ? "0" : 0;
                    object.defIndex = 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.price = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.price = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.tax = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.tax = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.priceUsd = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.priceUsd = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.taxUsd = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.taxUsd = options.longs === String ? "0" : 0;
                    object.purchaseType = 0;
                    object.steamTxnType = 0;
                    object.countryCode = "";
                    object.regionCode = "";
                    object.quantity = 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.refTransId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.refTransId = options.longs === String ? "0" : 0;
                }
                if (message.initTime != null && message.hasOwnProperty("initTime"))
                    object.initTime = message.initTime;
                if (message.lastUpdateTime != null && message.hasOwnProperty("lastUpdateTime"))
                    object.lastUpdateTime = message.lastUpdateTime;
                if (message.txnId != null && message.hasOwnProperty("txnId"))
                    if (typeof message.txnId === "number")
                        object.txnId = options.longs === String ? String(message.txnId) : message.txnId;
                    else
                        object.txnId = options.longs === String ? $util.Long.prototype.toString.call(message.txnId) : options.longs === Number ? new $util.LongBits(message.txnId.low >>> 0, message.txnId.high >>> 0).toNumber(true) : message.txnId;
                if (message.accountId != null && message.hasOwnProperty("accountId"))
                    object.accountId = message.accountId;
                if (message.lineItem != null && message.hasOwnProperty("lineItem"))
                    object.lineItem = message.lineItem;
                if (message.itemId != null && message.hasOwnProperty("itemId"))
                    if (typeof message.itemId === "number")
                        object.itemId = options.longs === String ? String(message.itemId) : message.itemId;
                    else
                        object.itemId = options.longs === String ? $util.Long.prototype.toString.call(message.itemId) : options.longs === Number ? new $util.LongBits(message.itemId.low >>> 0, message.itemId.high >>> 0).toNumber(true) : message.itemId;
                if (message.defIndex != null && message.hasOwnProperty("defIndex"))
                    object.defIndex = message.defIndex;
                if (message.price != null && message.hasOwnProperty("price"))
                    if (typeof message.price === "number")
                        object.price = options.longs === String ? String(message.price) : message.price;
                    else
                        object.price = options.longs === String ? $util.Long.prototype.toString.call(message.price) : options.longs === Number ? new $util.LongBits(message.price.low >>> 0, message.price.high >>> 0).toNumber(true) : message.price;
                if (message.tax != null && message.hasOwnProperty("tax"))
                    if (typeof message.tax === "number")
                        object.tax = options.longs === String ? String(message.tax) : message.tax;
                    else
                        object.tax = options.longs === String ? $util.Long.prototype.toString.call(message.tax) : options.longs === Number ? new $util.LongBits(message.tax.low >>> 0, message.tax.high >>> 0).toNumber(true) : message.tax;
                if (message.priceUsd != null && message.hasOwnProperty("priceUsd"))
                    if (typeof message.priceUsd === "number")
                        object.priceUsd = options.longs === String ? String(message.priceUsd) : message.priceUsd;
                    else
                        object.priceUsd = options.longs === String ? $util.Long.prototype.toString.call(message.priceUsd) : options.longs === Number ? new $util.LongBits(message.priceUsd.low >>> 0, message.priceUsd.high >>> 0).toNumber(true) : message.priceUsd;
                if (message.taxUsd != null && message.hasOwnProperty("taxUsd"))
                    if (typeof message.taxUsd === "number")
                        object.taxUsd = options.longs === String ? String(message.taxUsd) : message.taxUsd;
                    else
                        object.taxUsd = options.longs === String ? $util.Long.prototype.toString.call(message.taxUsd) : options.longs === Number ? new $util.LongBits(message.taxUsd.low >>> 0, message.taxUsd.high >>> 0).toNumber(true) : message.taxUsd;
                if (message.purchaseType != null && message.hasOwnProperty("purchaseType"))
                    object.purchaseType = message.purchaseType;
                if (message.steamTxnType != null && message.hasOwnProperty("steamTxnType"))
                    object.steamTxnType = message.steamTxnType;
                if (message.countryCode != null && message.hasOwnProperty("countryCode"))
                    object.countryCode = message.countryCode;
                if (message.regionCode != null && message.hasOwnProperty("regionCode"))
                    object.regionCode = message.regionCode;
                if (message.quantity != null && message.hasOwnProperty("quantity"))
                    object.quantity = message.quantity;
                if (message.refTransId != null && message.hasOwnProperty("refTransId"))
                    if (typeof message.refTransId === "number")
                        object.refTransId = options.longs === String ? String(message.refTransId) : message.refTransId;
                    else
                        object.refTransId = options.longs === String ? $util.Long.prototype.toString.call(message.refTransId) : options.longs === Number ? new $util.LongBits(message.refTransId.low >>> 0, message.refTransId.high >>> 0).toNumber(true) : message.refTransId;
                return object;
            };
    
            /**
             * Converts this PartnerMicroTxn to JSON.
             * @function toJSON
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            PartnerMicroTxn.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for PartnerMicroTxn
             * @function getTypeUrl
             * @memberof CMsgDPPartnerMicroTxns.PartnerMicroTxn
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            PartnerMicroTxn.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgDPPartnerMicroTxns.PartnerMicroTxn";
            };
    
            return PartnerMicroTxn;
        })();
    
        CMsgDPPartnerMicroTxns.PartnerInfo = (function() {
    
            /**
             * Properties of a PartnerInfo.
             * @memberof CMsgDPPartnerMicroTxns
             * @interface IPartnerInfo
             * @property {number|null} [partnerId] PartnerInfo partnerId
             * @property {string|null} [partnerName] PartnerInfo partnerName
             * @property {string|null} [currencyCode] PartnerInfo currencyCode
             * @property {string|null} [currencyName] PartnerInfo currencyName
             */
    
            /**
             * Constructs a new PartnerInfo.
             * @memberof CMsgDPPartnerMicroTxns
             * @classdesc Represents a PartnerInfo.
             * @implements IPartnerInfo
             * @constructor
             * @param {CMsgDPPartnerMicroTxns.IPartnerInfo=} [properties] Properties to set
             */
            function PartnerInfo(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * PartnerInfo partnerId.
             * @member {number} partnerId
             * @memberof CMsgDPPartnerMicroTxns.PartnerInfo
             * @instance
             */
            PartnerInfo.prototype.partnerId = 0;
    
            /**
             * PartnerInfo partnerName.
             * @member {string} partnerName
             * @memberof CMsgDPPartnerMicroTxns.PartnerInfo
             * @instance
             */
            PartnerInfo.prototype.partnerName = "";
    
            /**
             * PartnerInfo currencyCode.
             * @member {string} currencyCode
             * @memberof CMsgDPPartnerMicroTxns.PartnerInfo
             * @instance
             */
            PartnerInfo.prototype.currencyCode = "";
    
            /**
             * PartnerInfo currencyName.
             * @member {string} currencyName
             * @memberof CMsgDPPartnerMicroTxns.PartnerInfo
             * @instance
             */
            PartnerInfo.prototype.currencyName = "";
    
            /**
             * Creates a new PartnerInfo instance using the specified properties.
             * @function create
             * @memberof CMsgDPPartnerMicroTxns.PartnerInfo
             * @static
             * @param {CMsgDPPartnerMicroTxns.IPartnerInfo=} [properties] Properties to set
             * @returns {CMsgDPPartnerMicroTxns.PartnerInfo} PartnerInfo instance
             */
            PartnerInfo.create = function create(properties) {
                return new PartnerInfo(properties);
            };
    
            /**
             * Encodes the specified PartnerInfo message. Does not implicitly {@link CMsgDPPartnerMicroTxns.PartnerInfo.verify|verify} messages.
             * @function encode
             * @memberof CMsgDPPartnerMicroTxns.PartnerInfo
             * @static
             * @param {CMsgDPPartnerMicroTxns.IPartnerInfo} message PartnerInfo message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PartnerInfo.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.partnerId != null && Object.hasOwnProperty.call(message, "partnerId"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.partnerId);
                if (message.partnerName != null && Object.hasOwnProperty.call(message, "partnerName"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.partnerName);
                if (message.currencyCode != null && Object.hasOwnProperty.call(message, "currencyCode"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.currencyCode);
                if (message.currencyName != null && Object.hasOwnProperty.call(message, "currencyName"))
                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.currencyName);
                return writer;
            };
    
            /**
             * Encodes the specified PartnerInfo message, length delimited. Does not implicitly {@link CMsgDPPartnerMicroTxns.PartnerInfo.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgDPPartnerMicroTxns.PartnerInfo
             * @static
             * @param {CMsgDPPartnerMicroTxns.IPartnerInfo} message PartnerInfo message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PartnerInfo.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a PartnerInfo message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgDPPartnerMicroTxns.PartnerInfo
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgDPPartnerMicroTxns.PartnerInfo} PartnerInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PartnerInfo.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgDPPartnerMicroTxns.PartnerInfo();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.partnerId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.partnerName = reader.string();
                            break;
                        }
                    case 3: {
                            message.currencyCode = reader.string();
                            break;
                        }
                    case 4: {
                            message.currencyName = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a PartnerInfo message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgDPPartnerMicroTxns.PartnerInfo
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgDPPartnerMicroTxns.PartnerInfo} PartnerInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PartnerInfo.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a PartnerInfo message.
             * @function verify
             * @memberof CMsgDPPartnerMicroTxns.PartnerInfo
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            PartnerInfo.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.partnerId != null && message.hasOwnProperty("partnerId"))
                    if (!$util.isInteger(message.partnerId))
                        return "partnerId: integer expected";
                if (message.partnerName != null && message.hasOwnProperty("partnerName"))
                    if (!$util.isString(message.partnerName))
                        return "partnerName: string expected";
                if (message.currencyCode != null && message.hasOwnProperty("currencyCode"))
                    if (!$util.isString(message.currencyCode))
                        return "currencyCode: string expected";
                if (message.currencyName != null && message.hasOwnProperty("currencyName"))
                    if (!$util.isString(message.currencyName))
                        return "currencyName: string expected";
                return null;
            };
    
            /**
             * Creates a PartnerInfo message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgDPPartnerMicroTxns.PartnerInfo
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgDPPartnerMicroTxns.PartnerInfo} PartnerInfo
             */
            PartnerInfo.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgDPPartnerMicroTxns.PartnerInfo)
                    return object;
                var message = new $root.CMsgDPPartnerMicroTxns.PartnerInfo();
                if (object.partnerId != null)
                    message.partnerId = object.partnerId >>> 0;
                if (object.partnerName != null)
                    message.partnerName = String(object.partnerName);
                if (object.currencyCode != null)
                    message.currencyCode = String(object.currencyCode);
                if (object.currencyName != null)
                    message.currencyName = String(object.currencyName);
                return message;
            };
    
            /**
             * Creates a plain object from a PartnerInfo message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgDPPartnerMicroTxns.PartnerInfo
             * @static
             * @param {CMsgDPPartnerMicroTxns.PartnerInfo} message PartnerInfo
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            PartnerInfo.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.partnerId = 0;
                    object.partnerName = "";
                    object.currencyCode = "";
                    object.currencyName = "";
                }
                if (message.partnerId != null && message.hasOwnProperty("partnerId"))
                    object.partnerId = message.partnerId;
                if (message.partnerName != null && message.hasOwnProperty("partnerName"))
                    object.partnerName = message.partnerName;
                if (message.currencyCode != null && message.hasOwnProperty("currencyCode"))
                    object.currencyCode = message.currencyCode;
                if (message.currencyName != null && message.hasOwnProperty("currencyName"))
                    object.currencyName = message.currencyName;
                return object;
            };
    
            /**
             * Converts this PartnerInfo to JSON.
             * @function toJSON
             * @memberof CMsgDPPartnerMicroTxns.PartnerInfo
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            PartnerInfo.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for PartnerInfo
             * @function getTypeUrl
             * @memberof CMsgDPPartnerMicroTxns.PartnerInfo
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            PartnerInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgDPPartnerMicroTxns.PartnerInfo";
            };
    
            return PartnerInfo;
        })();
    
        return CMsgDPPartnerMicroTxns;
    })();
    
    $root.CMsgDPPartnerMicroTxnsResponse = (function() {
    
        /**
         * Properties of a CMsgDPPartnerMicroTxnsResponse.
         * @exports ICMsgDPPartnerMicroTxnsResponse
         * @interface ICMsgDPPartnerMicroTxnsResponse
         * @property {number|null} [eresult] CMsgDPPartnerMicroTxnsResponse eresult
         * @property {CMsgDPPartnerMicroTxnsResponse.EErrorCode|null} [eerrorcode] CMsgDPPartnerMicroTxnsResponse eerrorcode
         */
    
        /**
         * Constructs a new CMsgDPPartnerMicroTxnsResponse.
         * @exports CMsgDPPartnerMicroTxnsResponse
         * @classdesc Represents a CMsgDPPartnerMicroTxnsResponse.
         * @implements ICMsgDPPartnerMicroTxnsResponse
         * @constructor
         * @param {ICMsgDPPartnerMicroTxnsResponse=} [properties] Properties to set
         */
        function CMsgDPPartnerMicroTxnsResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgDPPartnerMicroTxnsResponse eresult.
         * @member {number} eresult
         * @memberof CMsgDPPartnerMicroTxnsResponse
         * @instance
         */
        CMsgDPPartnerMicroTxnsResponse.prototype.eresult = 2;
    
        /**
         * CMsgDPPartnerMicroTxnsResponse eerrorcode.
         * @member {CMsgDPPartnerMicroTxnsResponse.EErrorCode} eerrorcode
         * @memberof CMsgDPPartnerMicroTxnsResponse
         * @instance
         */
        CMsgDPPartnerMicroTxnsResponse.prototype.eerrorcode = 0;
    
        /**
         * Creates a new CMsgDPPartnerMicroTxnsResponse instance using the specified properties.
         * @function create
         * @memberof CMsgDPPartnerMicroTxnsResponse
         * @static
         * @param {ICMsgDPPartnerMicroTxnsResponse=} [properties] Properties to set
         * @returns {CMsgDPPartnerMicroTxnsResponse} CMsgDPPartnerMicroTxnsResponse instance
         */
        CMsgDPPartnerMicroTxnsResponse.create = function create(properties) {
            return new CMsgDPPartnerMicroTxnsResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgDPPartnerMicroTxnsResponse message. Does not implicitly {@link CMsgDPPartnerMicroTxnsResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgDPPartnerMicroTxnsResponse
         * @static
         * @param {ICMsgDPPartnerMicroTxnsResponse} message CMsgDPPartnerMicroTxnsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgDPPartnerMicroTxnsResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.eresult);
            if (message.eerrorcode != null && Object.hasOwnProperty.call(message, "eerrorcode"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.eerrorcode);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgDPPartnerMicroTxnsResponse message, length delimited. Does not implicitly {@link CMsgDPPartnerMicroTxnsResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgDPPartnerMicroTxnsResponse
         * @static
         * @param {ICMsgDPPartnerMicroTxnsResponse} message CMsgDPPartnerMicroTxnsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgDPPartnerMicroTxnsResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgDPPartnerMicroTxnsResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgDPPartnerMicroTxnsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgDPPartnerMicroTxnsResponse} CMsgDPPartnerMicroTxnsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgDPPartnerMicroTxnsResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgDPPartnerMicroTxnsResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.eresult = reader.uint32();
                        break;
                    }
                case 2: {
                        message.eerrorcode = reader.int32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgDPPartnerMicroTxnsResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgDPPartnerMicroTxnsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgDPPartnerMicroTxnsResponse} CMsgDPPartnerMicroTxnsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgDPPartnerMicroTxnsResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgDPPartnerMicroTxnsResponse message.
         * @function verify
         * @memberof CMsgDPPartnerMicroTxnsResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgDPPartnerMicroTxnsResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.eerrorcode != null && message.hasOwnProperty("eerrorcode"))
                switch (message.eerrorcode) {
                default:
                    return "eerrorcode: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 7:
                case 8:
                case 9:
                    break;
                }
            return null;
        };
    
        /**
         * Creates a CMsgDPPartnerMicroTxnsResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgDPPartnerMicroTxnsResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgDPPartnerMicroTxnsResponse} CMsgDPPartnerMicroTxnsResponse
         */
        CMsgDPPartnerMicroTxnsResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgDPPartnerMicroTxnsResponse)
                return object;
            var message = new $root.CMsgDPPartnerMicroTxnsResponse();
            if (object.eresult != null)
                message.eresult = object.eresult >>> 0;
            switch (object.eerrorcode) {
            default:
                if (typeof object.eerrorcode === "number") {
                    message.eerrorcode = object.eerrorcode;
                    break;
                }
                break;
            case "k_MsgValid":
            case 0:
                message.eerrorcode = 0;
                break;
            case "k_MsgInvalidAppID":
            case 1:
                message.eerrorcode = 1;
                break;
            case "k_MsgInvalidPartnerInfo":
            case 2:
                message.eerrorcode = 2;
                break;
            case "k_MsgNoTransactions":
            case 3:
                message.eerrorcode = 3;
                break;
            case "k_MsgSQLFailure":
            case 4:
                message.eerrorcode = 4;
                break;
            case "k_MsgPartnerInfoDiscrepancy":
            case 5:
                message.eerrorcode = 5;
                break;
            case "k_MsgTransactionInsertFailed":
            case 7:
                message.eerrorcode = 7;
                break;
            case "k_MsgAlreadyRunning":
            case 8:
                message.eerrorcode = 8;
                break;
            case "k_MsgInvalidTransactionData":
            case 9:
                message.eerrorcode = 9;
                break;
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgDPPartnerMicroTxnsResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgDPPartnerMicroTxnsResponse
         * @static
         * @param {CMsgDPPartnerMicroTxnsResponse} message CMsgDPPartnerMicroTxnsResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgDPPartnerMicroTxnsResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.eerrorcode = options.enums === String ? "k_MsgValid" : 0;
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.eerrorcode != null && message.hasOwnProperty("eerrorcode"))
                object.eerrorcode = options.enums === String ? $root.CMsgDPPartnerMicroTxnsResponse.EErrorCode[message.eerrorcode] === undefined ? message.eerrorcode : $root.CMsgDPPartnerMicroTxnsResponse.EErrorCode[message.eerrorcode] : message.eerrorcode;
            return object;
        };
    
        /**
         * Converts this CMsgDPPartnerMicroTxnsResponse to JSON.
         * @function toJSON
         * @memberof CMsgDPPartnerMicroTxnsResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgDPPartnerMicroTxnsResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgDPPartnerMicroTxnsResponse
         * @function getTypeUrl
         * @memberof CMsgDPPartnerMicroTxnsResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgDPPartnerMicroTxnsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgDPPartnerMicroTxnsResponse";
        };
    
        /**
         * EErrorCode enum.
         * @name CMsgDPPartnerMicroTxnsResponse.EErrorCode
         * @enum {number}
         * @property {number} k_MsgValid=0 k_MsgValid value
         * @property {number} k_MsgInvalidAppID=1 k_MsgInvalidAppID value
         * @property {number} k_MsgInvalidPartnerInfo=2 k_MsgInvalidPartnerInfo value
         * @property {number} k_MsgNoTransactions=3 k_MsgNoTransactions value
         * @property {number} k_MsgSQLFailure=4 k_MsgSQLFailure value
         * @property {number} k_MsgPartnerInfoDiscrepancy=5 k_MsgPartnerInfoDiscrepancy value
         * @property {number} k_MsgTransactionInsertFailed=7 k_MsgTransactionInsertFailed value
         * @property {number} k_MsgAlreadyRunning=8 k_MsgAlreadyRunning value
         * @property {number} k_MsgInvalidTransactionData=9 k_MsgInvalidTransactionData value
         */
        CMsgDPPartnerMicroTxnsResponse.EErrorCode = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "k_MsgValid"] = 0;
            values[valuesById[1] = "k_MsgInvalidAppID"] = 1;
            values[valuesById[2] = "k_MsgInvalidPartnerInfo"] = 2;
            values[valuesById[3] = "k_MsgNoTransactions"] = 3;
            values[valuesById[4] = "k_MsgSQLFailure"] = 4;
            values[valuesById[5] = "k_MsgPartnerInfoDiscrepancy"] = 5;
            values[valuesById[7] = "k_MsgTransactionInsertFailed"] = 7;
            values[valuesById[8] = "k_MsgAlreadyRunning"] = 8;
            values[valuesById[9] = "k_MsgInvalidTransactionData"] = 9;
            return values;
        })();
    
        return CMsgDPPartnerMicroTxnsResponse;
    })();
    
    $root.CChinaAgreementSessions_StartAgreementSessionInGame_Request = (function() {
    
        /**
         * Properties of a CChinaAgreementSessions_StartAgreementSessionInGame_Request.
         * @exports ICChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @interface ICChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @property {number|null} [appid] CChinaAgreementSessions_StartAgreementSessionInGame_Request appid
         * @property {number|Long|null} [steamid] CChinaAgreementSessions_StartAgreementSessionInGame_Request steamid
         * @property {string|null} [clientIpaddress] CChinaAgreementSessions_StartAgreementSessionInGame_Request clientIpaddress
         */
    
        /**
         * Constructs a new CChinaAgreementSessions_StartAgreementSessionInGame_Request.
         * @exports CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @classdesc Represents a CChinaAgreementSessions_StartAgreementSessionInGame_Request.
         * @implements ICChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @constructor
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Request=} [properties] Properties to set
         */
        function CChinaAgreementSessions_StartAgreementSessionInGame_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChinaAgreementSessions_StartAgreementSessionInGame_Request appid.
         * @member {number} appid
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @instance
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.prototype.appid = 0;
    
        /**
         * CChinaAgreementSessions_StartAgreementSessionInGame_Request steamid.
         * @member {number|Long} steamid
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @instance
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CChinaAgreementSessions_StartAgreementSessionInGame_Request clientIpaddress.
         * @member {string} clientIpaddress
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @instance
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.prototype.clientIpaddress = "";
    
        /**
         * Creates a new CChinaAgreementSessions_StartAgreementSessionInGame_Request instance using the specified properties.
         * @function create
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Request=} [properties] Properties to set
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Request} CChinaAgreementSessions_StartAgreementSessionInGame_Request instance
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.create = function create(properties) {
            return new CChinaAgreementSessions_StartAgreementSessionInGame_Request(properties);
        };
    
        /**
         * Encodes the specified CChinaAgreementSessions_StartAgreementSessionInGame_Request message. Does not implicitly {@link CChinaAgreementSessions_StartAgreementSessionInGame_Request.verify|verify} messages.
         * @function encode
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Request} message CChinaAgreementSessions_StartAgreementSessionInGame_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
            if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steamid);
            if (message.clientIpaddress != null && Object.hasOwnProperty.call(message, "clientIpaddress"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.clientIpaddress);
            return writer;
        };
    
        /**
         * Encodes the specified CChinaAgreementSessions_StartAgreementSessionInGame_Request message, length delimited. Does not implicitly {@link CChinaAgreementSessions_StartAgreementSessionInGame_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Request} message CChinaAgreementSessions_StartAgreementSessionInGame_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChinaAgreementSessions_StartAgreementSessionInGame_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Request} CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChinaAgreementSessions_StartAgreementSessionInGame_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.appid = reader.uint32();
                        break;
                    }
                case 2: {
                        message.steamid = reader.fixed64();
                        break;
                    }
                case 3: {
                        message.clientIpaddress = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChinaAgreementSessions_StartAgreementSessionInGame_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Request} CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChinaAgreementSessions_StartAgreementSessionInGame_Request message.
         * @function verify
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.clientIpaddress != null && message.hasOwnProperty("clientIpaddress"))
                if (!$util.isString(message.clientIpaddress))
                    return "clientIpaddress: string expected";
            return null;
        };
    
        /**
         * Creates a CChinaAgreementSessions_StartAgreementSessionInGame_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Request} CChinaAgreementSessions_StartAgreementSessionInGame_Request
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChinaAgreementSessions_StartAgreementSessionInGame_Request)
                return object;
            var message = new $root.CChinaAgreementSessions_StartAgreementSessionInGame_Request();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.clientIpaddress != null)
                message.clientIpaddress = String(object.clientIpaddress);
            return message;
        };
    
        /**
         * Creates a plain object from a CChinaAgreementSessions_StartAgreementSessionInGame_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {CChinaAgreementSessions_StartAgreementSessionInGame_Request} message CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.appid = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
                object.clientIpaddress = "";
            }
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.clientIpaddress != null && message.hasOwnProperty("clientIpaddress"))
                object.clientIpaddress = message.clientIpaddress;
            return object;
        };
    
        /**
         * Converts this CChinaAgreementSessions_StartAgreementSessionInGame_Request to JSON.
         * @function toJSON
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @function getTypeUrl
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CChinaAgreementSessions_StartAgreementSessionInGame_Request";
        };
    
        return CChinaAgreementSessions_StartAgreementSessionInGame_Request;
    })();
    
    $root.CChinaAgreementSessions_StartAgreementSessionInGame_Response = (function() {
    
        /**
         * Properties of a CChinaAgreementSessions_StartAgreementSessionInGame_Response.
         * @exports ICChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @interface ICChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @property {string|null} [agreementUrl] CChinaAgreementSessions_StartAgreementSessionInGame_Response agreementUrl
         */
    
        /**
         * Constructs a new CChinaAgreementSessions_StartAgreementSessionInGame_Response.
         * @exports CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @classdesc Represents a CChinaAgreementSessions_StartAgreementSessionInGame_Response.
         * @implements ICChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @constructor
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Response=} [properties] Properties to set
         */
        function CChinaAgreementSessions_StartAgreementSessionInGame_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChinaAgreementSessions_StartAgreementSessionInGame_Response agreementUrl.
         * @member {string} agreementUrl
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @instance
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.prototype.agreementUrl = "";
    
        /**
         * Creates a new CChinaAgreementSessions_StartAgreementSessionInGame_Response instance using the specified properties.
         * @function create
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Response=} [properties] Properties to set
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Response} CChinaAgreementSessions_StartAgreementSessionInGame_Response instance
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.create = function create(properties) {
            return new CChinaAgreementSessions_StartAgreementSessionInGame_Response(properties);
        };
    
        /**
         * Encodes the specified CChinaAgreementSessions_StartAgreementSessionInGame_Response message. Does not implicitly {@link CChinaAgreementSessions_StartAgreementSessionInGame_Response.verify|verify} messages.
         * @function encode
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Response} message CChinaAgreementSessions_StartAgreementSessionInGame_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.agreementUrl != null && Object.hasOwnProperty.call(message, "agreementUrl"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.agreementUrl);
            return writer;
        };
    
        /**
         * Encodes the specified CChinaAgreementSessions_StartAgreementSessionInGame_Response message, length delimited. Does not implicitly {@link CChinaAgreementSessions_StartAgreementSessionInGame_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Response} message CChinaAgreementSessions_StartAgreementSessionInGame_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChinaAgreementSessions_StartAgreementSessionInGame_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Response} CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChinaAgreementSessions_StartAgreementSessionInGame_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1: {
                        message.agreementUrl = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChinaAgreementSessions_StartAgreementSessionInGame_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Response} CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChinaAgreementSessions_StartAgreementSessionInGame_Response message.
         * @function verify
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.agreementUrl != null && message.hasOwnProperty("agreementUrl"))
                if (!$util.isString(message.agreementUrl))
                    return "agreementUrl: string expected";
            return null;
        };
    
        /**
         * Creates a CChinaAgreementSessions_StartAgreementSessionInGame_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Response} CChinaAgreementSessions_StartAgreementSessionInGame_Response
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChinaAgreementSessions_StartAgreementSessionInGame_Response)
                return object;
            var message = new $root.CChinaAgreementSessions_StartAgreementSessionInGame_Response();
            if (object.agreementUrl != null)
                message.agreementUrl = String(object.agreementUrl);
            return message;
        };
    
        /**
         * Creates a plain object from a CChinaAgreementSessions_StartAgreementSessionInGame_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {CChinaAgreementSessions_StartAgreementSessionInGame_Response} message CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.agreementUrl = "";
            if (message.agreementUrl != null && message.hasOwnProperty("agreementUrl"))
                object.agreementUrl = message.agreementUrl;
            return object;
        };
    
        /**
         * Converts this CChinaAgreementSessions_StartAgreementSessionInGame_Response to JSON.
         * @function toJSON
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @function getTypeUrl
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CChinaAgreementSessions_StartAgreementSessionInGame_Response";
        };
    
        return CChinaAgreementSessions_StartAgreementSessionInGame_Response;
    })();
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.file && message.file.length))
                                    message.file = [];
                                message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorSet";
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && Object.hasOwnProperty.call(message, "sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message["package"] = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.dependency && message.dependency.length))
                                    message.dependency = [];
                                message.dependency.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.publicDependency && message.publicDependency.length))
                                    message.publicDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.publicDependency.push(reader.int32());
                                } else
                                    message.publicDependency.push(reader.int32());
                                break;
                            }
                        case 11: {
                                if (!(message.weakDependency && message.weakDependency.length))
                                    message.weakDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.weakDependency.push(reader.int32());
                                } else
                                    message.weakDependency.push(reader.int32());
                                break;
                            }
                        case 4: {
                                if (!(message.messageType && message.messageType.length))
                                    message.messageType = [];
                                message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.service && message.service.length))
                                    message.service = [];
                                message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                                break;
                            }
                        case 12: {
                                message.syntax = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorProto";
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.field && message.field.length))
                                    message.field = [];
                                message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                if (!(message.nestedType && message.nestedType.length))
                                    message.nestedType = [];
                                message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.extensionRange && message.extensionRange.length))
                                    message.extensionRange = [];
                                message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                if (!(message.oneofDecl && message.oneofDecl.length))
                                    message.oneofDecl = [];
                                message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 10: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DescriptorProto";
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ExtensionRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ExtensionRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ExtensionRange";
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ReservedRange";
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && Object.hasOwnProperty.call(message, "typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && Object.hasOwnProperty.call(message, "defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && Object.hasOwnProperty.call(message, "oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && Object.hasOwnProperty.call(message, "jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.number = reader.int32();
                                break;
                            }
                        case 4: {
                                message.label = reader.int32();
                                break;
                            }
                        case 5: {
                                message.type = reader.int32();
                                break;
                            }
                        case 6: {
                                message.typeName = reader.string();
                                break;
                            }
                        case 2: {
                                message.extendee = reader.string();
                                break;
                            }
                        case 7: {
                                message.defaultValue = reader.string();
                                break;
                            }
                        case 9: {
                                message.oneofIndex = reader.int32();
                                break;
                            }
                        case 10: {
                                message.jsonName = reader.string();
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    default:
                        if (typeof object.label === "number") {
                            message.label = object.label;
                            break;
                        }
                        break;
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    default:
                        if (typeof object.type === "number") {
                            message.type = object.type;
                            break;
                        }
                        break;
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] === undefined ? message.label : $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] === undefined ? message.type : $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldDescriptorProto";
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofDescriptorProto";
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.value && message.value.length))
                                    message.value = [];
                                message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.value = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto";
                };
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.number = reader.int32();
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueDescriptorProto";
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.method && message.method.length))
                                    message.method = [];
                                message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceDescriptorProto";
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && Object.hasOwnProperty.call(message, "inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && Object.hasOwnProperty.call(message, "outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && Object.hasOwnProperty.call(message, "clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && Object.hasOwnProperty.call(message, "serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.inputType = reader.string();
                                break;
                            }
                        case 3: {
                                message.outputType = reader.string();
                                break;
                            }
                        case 4: {
                                message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.clientStreaming = reader.bool();
                                break;
                            }
                        case 6: {
                                message.serverStreaming = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodDescriptorProto";
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = false;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && Object.hasOwnProperty.call(message, "javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && Object.hasOwnProperty.call(message, "javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && Object.hasOwnProperty.call(message, "optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && Object.hasOwnProperty.call(message, "javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && Object.hasOwnProperty.call(message, "goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && Object.hasOwnProperty.call(message, "ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && Object.hasOwnProperty.call(message, "javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && Object.hasOwnProperty.call(message, "pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && Object.hasOwnProperty.call(message, "javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && Object.hasOwnProperty.call(message, "javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && Object.hasOwnProperty.call(message, "ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && Object.hasOwnProperty.call(message, "objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && Object.hasOwnProperty.call(message, "csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.javaPackage = reader.string();
                                break;
                            }
                        case 8: {
                                message.javaOuterClassname = reader.string();
                                break;
                            }
                        case 10: {
                                message.javaMultipleFiles = reader.bool();
                                break;
                            }
                        case 20: {
                                message.javaGenerateEqualsAndHash = reader.bool();
                                break;
                            }
                        case 27: {
                                message.javaStringCheckUtf8 = reader.bool();
                                break;
                            }
                        case 9: {
                                message.optimizeFor = reader.int32();
                                break;
                            }
                        case 11: {
                                message.goPackage = reader.string();
                                break;
                            }
                        case 16: {
                                message.ccGenericServices = reader.bool();
                                break;
                            }
                        case 17: {
                                message.javaGenericServices = reader.bool();
                                break;
                            }
                        case 18: {
                                message.pyGenericServices = reader.bool();
                                break;
                            }
                        case 23: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 31: {
                                message.ccEnableArenas = reader.bool();
                                break;
                            }
                        case 36: {
                                message.objcClassPrefix = reader.string();
                                break;
                            }
                        case 37: {
                                message.csharpNamespace = reader.string();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    default:
                        if (typeof object.optimizeFor === "number") {
                            message.optimizeFor = object.optimizeFor;
                            break;
                        }
                        break;
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = false;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] === undefined ? message.optimizeFor : $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileOptions";
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 * @property {number|null} [".msgpoolSoftLimit"] MessageOptions .msgpoolSoftLimit
                 * @property {number|null} [".msgpoolHardLimit"] MessageOptions .msgpoolHardLimit
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MessageOptions .msgpoolSoftLimit.
                 * @member {number} .msgpoolSoftLimit
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".msgpoolSoftLimit"] = 32;
    
                /**
                 * MessageOptions .msgpoolHardLimit.
                 * @member {number} .msgpoolHardLimit
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".msgpoolHardLimit"] = 384;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && Object.hasOwnProperty.call(message, "messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && Object.hasOwnProperty.call(message, "noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && Object.hasOwnProperty.call(message, "mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".msgpoolSoftLimit"] != null && Object.hasOwnProperty.call(message, ".msgpoolSoftLimit"))
                        writer.uint32(/* id 60000, wireType 0 =*/480000).int32(message[".msgpoolSoftLimit"]);
                    if (message[".msgpoolHardLimit"] != null && Object.hasOwnProperty.call(message, ".msgpoolHardLimit"))
                        writer.uint32(/* id 60001, wireType 0 =*/480008).int32(message[".msgpoolHardLimit"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.messageSetWireFormat = reader.bool();
                                break;
                            }
                        case 2: {
                                message.noStandardDescriptorAccessor = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 7: {
                                message.mapEntry = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 60000: {
                                message[".msgpoolSoftLimit"] = reader.int32();
                                break;
                            }
                        case 60001: {
                                message[".msgpoolHardLimit"] = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".msgpoolSoftLimit"] != null && message.hasOwnProperty(".msgpoolSoftLimit"))
                        if (!$util.isInteger(message[".msgpoolSoftLimit"]))
                            return ".msgpoolSoftLimit: integer expected";
                    if (message[".msgpoolHardLimit"] != null && message.hasOwnProperty(".msgpoolHardLimit"))
                        if (!$util.isInteger(message[".msgpoolHardLimit"]))
                            return ".msgpoolHardLimit: integer expected";
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".msgpoolSoftLimit"] != null)
                        message[".msgpoolSoftLimit"] = object[".msgpoolSoftLimit"] | 0;
                    if (object[".msgpoolHardLimit"] != null)
                        message[".msgpoolHardLimit"] = object[".msgpoolHardLimit"] | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                        object[".msgpoolSoftLimit"] = 32;
                        object[".msgpoolHardLimit"] = 384;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".msgpoolSoftLimit"] != null && message.hasOwnProperty(".msgpoolSoftLimit"))
                        object[".msgpoolSoftLimit"] = message[".msgpoolSoftLimit"];
                    if (message[".msgpoolHardLimit"] != null && message.hasOwnProperty(".msgpoolHardLimit"))
                        object[".msgpoolHardLimit"] = message[".msgpoolHardLimit"];
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MessageOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MessageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MessageOptions";
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 * @property {boolean|null} [".keyField"] FieldOptions .keyField
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FieldOptions .keyField.
                 * @member {boolean} .keyField
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".keyField"] = false;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".keyField"] != null && Object.hasOwnProperty.call(message, ".keyField"))
                        writer.uint32(/* id 60000, wireType 0 =*/480000).bool(message[".keyField"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.ctype = reader.int32();
                                break;
                            }
                        case 2: {
                                message.packed = reader.bool();
                                break;
                            }
                        case 6: {
                                message.jstype = reader.int32();
                                break;
                            }
                        case 5: {
                                message.lazy = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 10: {
                                message.weak = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 60000: {
                                message[".keyField"] = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".keyField"] != null && message.hasOwnProperty(".keyField"))
                        if (typeof message[".keyField"] !== "boolean")
                            return ".keyField: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    default:
                        if (typeof object.ctype === "number") {
                            message.ctype = object.ctype;
                            break;
                        }
                        break;
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    default:
                        if (typeof object.jstype === "number") {
                            message.jstype = object.jstype;
                            break;
                        }
                        break;
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".keyField"] != null)
                        message[".keyField"] = Boolean(object[".keyField"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object[".keyField"] = false;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] === undefined ? message.ctype : $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] === undefined ? message.jstype : $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".keyField"] != null && message.hasOwnProperty(".keyField"))
                        object[".keyField"] = message[".keyField"];
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldOptions";
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofOptions";
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && Object.hasOwnProperty.call(message, "allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                message.allowAlias = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumOptions";
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueOptions";
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceOptions";
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodOptions";
                };
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && Object.hasOwnProperty.call(message, "identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && Object.hasOwnProperty.call(message, "positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && Object.hasOwnProperty.call(message, "negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && Object.hasOwnProperty.call(message, "aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.name && message.name.length))
                                    message.name = [];
                                message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.identifierValue = reader.string();
                                break;
                            }
                        case 4: {
                                message.positiveIntValue = reader.uint64();
                                break;
                            }
                        case 5: {
                                message.negativeIntValue = reader.int64();
                                break;
                            }
                        case 6: {
                                message.doubleValue = reader.double();
                                break;
                            }
                        case 7: {
                                message.stringValue = reader.bytes();
                                break;
                            }
                        case 8: {
                                message.aggregateValue = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length >= 0)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UninterpretedOption
                 * @function getTypeUrl
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UninterpretedOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UninterpretedOption";
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.namePart = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.isExtension = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NamePart
                     * @function getTypeUrl
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NamePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.UninterpretedOption.NamePart";
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.location && message.location.length))
                                    message.location = [];
                                message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for SourceCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SourceCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.SourceCodeInfo";
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && Object.hasOwnProperty.call(message, "leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && Object.hasOwnProperty.call(message, "trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    if (!(message.span && message.span.length))
                                        message.span = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.span.push(reader.int32());
                                    } else
                                        message.span.push(reader.int32());
                                    break;
                                }
                            case 3: {
                                    message.leadingComments = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.trailingComments = reader.string();
                                    break;
                                }
                            case 6: {
                                    if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                        message.leadingDetachedComments = [];
                                    message.leadingDetachedComments.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Location
                     * @function getTypeUrl
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.SourceCodeInfo.Location";
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.annotation && message.annotation.length))
                                    message.annotation = [];
                                message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GeneratedCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GeneratedCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo";
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && Object.hasOwnProperty.call(message, "sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    message.sourceFile = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.begin = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Annotation
                     * @function getTypeUrl
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Annotation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo.Annotation";
                    };
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            return protobuf;
        })();
    
        return google;
    })();

    return $root;
});
